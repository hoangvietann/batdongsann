/******/ (() => { // webpackBootstrap
    /******/ 	var __webpack_modules__ = ({

        /***/ "./node_modules/@fullcalendar/common/main.js":
        /*!***************************************************!*\
  !*** ./node_modules/@fullcalendar/common/main.js ***!
  \***************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   BASE_OPTION_DEFAULTS: () => (/* binding */ BASE_OPTION_DEFAULTS),
                /* harmony export */   BASE_OPTION_REFINERS: () => (/* binding */ BASE_OPTION_REFINERS),
                /* harmony export */   BaseComponent: () => (/* binding */ BaseComponent),
                /* harmony export */   BgEvent: () => (/* binding */ BgEvent),
                /* harmony export */   CalendarApi: () => (/* binding */ CalendarApi),
                /* harmony export */   CalendarContent: () => (/* binding */ CalendarContent),
                /* harmony export */   CalendarDataManager: () => (/* binding */ CalendarDataManager),
                /* harmony export */   CalendarDataProvider: () => (/* binding */ CalendarDataProvider),
                /* harmony export */   CalendarRoot: () => (/* binding */ CalendarRoot),
                /* harmony export */   Component: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.Component),
                /* harmony export */   ContentHook: () => (/* binding */ ContentHook),
                /* harmony export */   CustomContentRenderContext: () => (/* binding */ CustomContentRenderContext),
                /* harmony export */   DateComponent: () => (/* binding */ DateComponent),
                /* harmony export */   DateEnv: () => (/* binding */ DateEnv),
                /* harmony export */   DateProfileGenerator: () => (/* binding */ DateProfileGenerator),
                /* harmony export */   DayCellContent: () => (/* binding */ DayCellContent),
                /* harmony export */   DayCellRoot: () => (/* binding */ DayCellRoot),
                /* harmony export */   DayHeader: () => (/* binding */ DayHeader),
                /* harmony export */   DaySeriesModel: () => (/* binding */ DaySeriesModel),
                /* harmony export */   DayTableModel: () => (/* binding */ DayTableModel),
                /* harmony export */   DelayedRunner: () => (/* binding */ DelayedRunner),
                /* harmony export */   ElementDragging: () => (/* binding */ ElementDragging),
                /* harmony export */   ElementScrollController: () => (/* binding */ ElementScrollController),
                /* harmony export */   Emitter: () => (/* binding */ Emitter),
                /* harmony export */   EventApi: () => (/* binding */ EventApi),
                /* harmony export */   EventRoot: () => (/* binding */ EventRoot),
                /* harmony export */   EventSourceApi: () => (/* binding */ EventSourceApi),
                /* harmony export */   Fragment: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.Fragment),
                /* harmony export */   Interaction: () => (/* binding */ Interaction),
                /* harmony export */   MoreLinkRoot: () => (/* binding */ MoreLinkRoot),
                /* harmony export */   MountHook: () => (/* binding */ MountHook),
                /* harmony export */   NamedTimeZoneImpl: () => (/* binding */ NamedTimeZoneImpl),
                /* harmony export */   NowIndicatorRoot: () => (/* binding */ NowIndicatorRoot),
                /* harmony export */   NowTimer: () => (/* binding */ NowTimer),
                /* harmony export */   PositionCache: () => (/* binding */ PositionCache),
                /* harmony export */   RefMap: () => (/* binding */ RefMap),
                /* harmony export */   RenderHook: () => (/* binding */ RenderHook),
                /* harmony export */   ScrollController: () => (/* binding */ ScrollController),
                /* harmony export */   ScrollResponder: () => (/* binding */ ScrollResponder),
                /* harmony export */   Scroller: () => (/* binding */ Scroller),
                /* harmony export */   SegHierarchy: () => (/* binding */ SegHierarchy),
                /* harmony export */   SimpleScrollGrid: () => (/* binding */ SimpleScrollGrid),
                /* harmony export */   Slicer: () => (/* binding */ Slicer),
                /* harmony export */   Splitter: () => (/* binding */ Splitter),
                /* harmony export */   StandardEvent: () => (/* binding */ StandardEvent),
                /* harmony export */   TableDateCell: () => (/* binding */ TableDateCell),
                /* harmony export */   TableDowCell: () => (/* binding */ TableDowCell),
                /* harmony export */   Theme: () => (/* binding */ Theme),
                /* harmony export */   ViewApi: () => (/* binding */ ViewApi),
                /* harmony export */   ViewContextType: () => (/* binding */ ViewContextType),
                /* harmony export */   ViewRoot: () => (/* binding */ ViewRoot),
                /* harmony export */   WeekNumberRoot: () => (/* binding */ WeekNumberRoot),
                /* harmony export */   WindowScrollController: () => (/* binding */ WindowScrollController),
                /* harmony export */   addDays: () => (/* binding */ addDays),
                /* harmony export */   addDurations: () => (/* binding */ addDurations),
                /* harmony export */   addMs: () => (/* binding */ addMs),
                /* harmony export */   addWeeks: () => (/* binding */ addWeeks),
                /* harmony export */   allowContextMenu: () => (/* binding */ allowContextMenu),
                /* harmony export */   allowSelection: () => (/* binding */ allowSelection),
                /* harmony export */   applyMutationToEventStore: () => (/* binding */ applyMutationToEventStore),
                /* harmony export */   applyStyle: () => (/* binding */ applyStyle),
                /* harmony export */   applyStyleProp: () => (/* binding */ applyStyleProp),
                /* harmony export */   asCleanDays: () => (/* binding */ asCleanDays),
                /* harmony export */   asRoughMinutes: () => (/* binding */ asRoughMinutes),
                /* harmony export */   asRoughMs: () => (/* binding */ asRoughMs),
                /* harmony export */   asRoughSeconds: () => (/* binding */ asRoughSeconds),
                /* harmony export */   binarySearch: () => (/* binding */ binarySearch),
                /* harmony export */   buildClassNameNormalizer: () => (/* binding */ buildClassNameNormalizer),
                /* harmony export */   buildEntryKey: () => (/* binding */ buildEntryKey),
                /* harmony export */   buildEventApis: () => (/* binding */ buildEventApis),
                /* harmony export */   buildEventRangeKey: () => (/* binding */ buildEventRangeKey),
                /* harmony export */   buildHashFromArray: () => (/* binding */ buildHashFromArray),
                /* harmony export */   buildIsoString: () => (/* binding */ buildIsoString),
                /* harmony export */   buildNavLinkAttrs: () => (/* binding */ buildNavLinkAttrs),
                /* harmony export */   buildSegCompareObj: () => (/* binding */ buildSegCompareObj),
                /* harmony export */   buildSegTimeText: () => (/* binding */ buildSegTimeText),
                /* harmony export */   collectFromHash: () => (/* binding */ collectFromHash),
                /* harmony export */   combineEventUis: () => (/* binding */ combineEventUis),
                /* harmony export */   compareByFieldSpec: () => (/* binding */ compareByFieldSpec),
                /* harmony export */   compareByFieldSpecs: () => (/* binding */ compareByFieldSpecs),
                /* harmony export */   compareNumbers: () => (/* binding */ compareNumbers),
                /* harmony export */   compareObjs: () => (/* binding */ compareObjs),
                /* harmony export */   computeEarliestSegStart: () => (/* binding */ computeEarliestSegStart),
                /* harmony export */   computeEdges: () => (/* binding */ computeEdges),
                /* harmony export */   computeFallbackHeaderFormat: () => (/* binding */ computeFallbackHeaderFormat),
                /* harmony export */   computeHeightAndMargins: () => (/* binding */ computeHeightAndMargins),
                /* harmony export */   computeInnerRect: () => (/* binding */ computeInnerRect),
                /* harmony export */   computeRect: () => (/* binding */ computeRect),
                /* harmony export */   computeSegDraggable: () => (/* binding */ computeSegDraggable),
                /* harmony export */   computeSegEndResizable: () => (/* binding */ computeSegEndResizable),
                /* harmony export */   computeSegStartResizable: () => (/* binding */ computeSegStartResizable),
                /* harmony export */   computeShrinkWidth: () => (/* binding */ computeShrinkWidth),
                /* harmony export */   computeSmallestCellWidth: () => (/* binding */ computeSmallestCellWidth),
                /* harmony export */   computeVisibleDayRange: () => (/* binding */ computeVisibleDayRange),
                /* harmony export */   config: () => (/* binding */ config),
                /* harmony export */   constrainPoint: () => (/* binding */ constrainPoint),
                /* harmony export */   createAriaClickAttrs: () => (/* binding */ createAriaClickAttrs),
                /* harmony export */   createContext: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createContext),
                /* harmony export */   createDuration: () => (/* binding */ createDuration),
                /* harmony export */   createElement: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement),
                /* harmony export */   createEmptyEventStore: () => (/* binding */ createEmptyEventStore),
                /* harmony export */   createEventInstance: () => (/* binding */ createEventInstance),
                /* harmony export */   createEventUi: () => (/* binding */ createEventUi),
                /* harmony export */   createFormatter: () => (/* binding */ createFormatter),
                /* harmony export */   createPlugin: () => (/* binding */ createPlugin),
                /* harmony export */   createPortal: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createPortal),
                /* harmony export */   createRef: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createRef),
                /* harmony export */   diffDates: () => (/* binding */ diffDates),
                /* harmony export */   diffDayAndTime: () => (/* binding */ diffDayAndTime),
                /* harmony export */   diffDays: () => (/* binding */ diffDays),
                /* harmony export */   diffPoints: () => (/* binding */ diffPoints),
                /* harmony export */   diffWeeks: () => (/* binding */ diffWeeks),
                /* harmony export */   diffWholeDays: () => (/* binding */ diffWholeDays),
                /* harmony export */   diffWholeWeeks: () => (/* binding */ diffWholeWeeks),
                /* harmony export */   disableCursor: () => (/* binding */ disableCursor),
                /* harmony export */   elementClosest: () => (/* binding */ elementClosest),
                /* harmony export */   elementMatches: () => (/* binding */ elementMatches),
                /* harmony export */   enableCursor: () => (/* binding */ enableCursor),
                /* harmony export */   eventTupleToStore: () => (/* binding */ eventTupleToStore),
                /* harmony export */   filterEventStoreDefs: () => (/* binding */ filterEventStoreDefs),
                /* harmony export */   filterHash: () => (/* binding */ filterHash),
                /* harmony export */   findDirectChildren: () => (/* binding */ findDirectChildren),
                /* harmony export */   findElements: () => (/* binding */ findElements),
                /* harmony export */   flexibleCompare: () => (/* binding */ flexibleCompare),
                /* harmony export */   flushSync: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.flushSync),
                /* harmony export */   formatDate: () => (/* binding */ formatDate),
                /* harmony export */   formatDayString: () => (/* binding */ formatDayString),
                /* harmony export */   formatIsoTimeString: () => (/* binding */ formatIsoTimeString),
                /* harmony export */   formatRange: () => (/* binding */ formatRange),
                /* harmony export */   getAllowYScrolling: () => (/* binding */ getAllowYScrolling),
                /* harmony export */   getCanVGrowWithinCell: () => (/* binding */ getCanVGrowWithinCell),
                /* harmony export */   getClippingParents: () => (/* binding */ getClippingParents),
                /* harmony export */   getDateMeta: () => (/* binding */ getDateMeta),
                /* harmony export */   getDayClassNames: () => (/* binding */ getDayClassNames),
                /* harmony export */   getDefaultEventEnd: () => (/* binding */ getDefaultEventEnd),
                /* harmony export */   getElRoot: () => (/* binding */ getElRoot),
                /* harmony export */   getElSeg: () => (/* binding */ getElSeg),
                /* harmony export */   getEntrySpanEnd: () => (/* binding */ getEntrySpanEnd),
                /* harmony export */   getEventClassNames: () => (/* binding */ getEventClassNames),
                /* harmony export */   getEventTargetViaRoot: () => (/* binding */ getEventTargetViaRoot),
                /* harmony export */   getIsRtlScrollbarOnLeft: () => (/* binding */ getIsRtlScrollbarOnLeft),
                /* harmony export */   getRectCenter: () => (/* binding */ getRectCenter),
                /* harmony export */   getRelevantEvents: () => (/* binding */ getRelevantEvents),
                /* harmony export */   getScrollGridClassNames: () => (/* binding */ getScrollGridClassNames),
                /* harmony export */   getScrollbarWidths: () => (/* binding */ getScrollbarWidths),
                /* harmony export */   getSectionClassNames: () => (/* binding */ getSectionClassNames),
                /* harmony export */   getSectionHasLiquidHeight: () => (/* binding */ getSectionHasLiquidHeight),
                /* harmony export */   getSegAnchorAttrs: () => (/* binding */ getSegAnchorAttrs),
                /* harmony export */   getSegMeta: () => (/* binding */ getSegMeta),
                /* harmony export */   getSlotClassNames: () => (/* binding */ getSlotClassNames),
                /* harmony export */   getStickyFooterScrollbar: () => (/* binding */ getStickyFooterScrollbar),
                /* harmony export */   getStickyHeaderDates: () => (/* binding */ getStickyHeaderDates),
                /* harmony export */   getUnequalProps: () => (/* binding */ getUnequalProps),
                /* harmony export */   getUniqueDomId: () => (/* binding */ getUniqueDomId),
                /* harmony export */   globalLocales: () => (/* binding */ globalLocales),
                /* harmony export */   globalPlugins: () => (/* binding */ globalPlugins),
                /* harmony export */   greatestDurationDenominator: () => (/* binding */ greatestDurationDenominator),
                /* harmony export */   groupIntersectingEntries: () => (/* binding */ groupIntersectingEntries),
                /* harmony export */   guid: () => (/* binding */ guid),
                /* harmony export */   hasBgRendering: () => (/* binding */ hasBgRendering),
                /* harmony export */   hasShrinkWidth: () => (/* binding */ hasShrinkWidth),
                /* harmony export */   identity: () => (/* binding */ identity),
                /* harmony export */   interactionSettingsStore: () => (/* binding */ interactionSettingsStore),
                /* harmony export */   interactionSettingsToStore: () => (/* binding */ interactionSettingsToStore),
                /* harmony export */   intersectRanges: () => (/* binding */ intersectRanges),
                /* harmony export */   intersectRects: () => (/* binding */ intersectRects),
                /* harmony export */   intersectSpans: () => (/* binding */ intersectSpans),
                /* harmony export */   isArraysEqual: () => (/* binding */ isArraysEqual),
                /* harmony export */   isColPropsEqual: () => (/* binding */ isColPropsEqual),
                /* harmony export */   isDateSelectionValid: () => (/* binding */ isDateSelectionValid),
                /* harmony export */   isDateSpansEqual: () => (/* binding */ isDateSpansEqual),
                /* harmony export */   isInt: () => (/* binding */ isInt),
                /* harmony export */   isInteractionValid: () => (/* binding */ isInteractionValid),
                /* harmony export */   isMultiDayRange: () => (/* binding */ isMultiDayRange),
                /* harmony export */   isPropsEqual: () => (/* binding */ isPropsEqual),
                /* harmony export */   isPropsValid: () => (/* binding */ isPropsValid),
                /* harmony export */   isValidDate: () => (/* binding */ isValidDate),
                /* harmony export */   joinSpans: () => (/* binding */ joinSpans),
                /* harmony export */   listenBySelector: () => (/* binding */ listenBySelector),
                /* harmony export */   mapHash: () => (/* binding */ mapHash),
                /* harmony export */   memoize: () => (/* binding */ memoize),
                /* harmony export */   memoizeArraylike: () => (/* binding */ memoizeArraylike),
                /* harmony export */   memoizeHashlike: () => (/* binding */ memoizeHashlike),
                /* harmony export */   memoizeObjArg: () => (/* binding */ memoizeObjArg),
                /* harmony export */   mergeEventStores: () => (/* binding */ mergeEventStores),
                /* harmony export */   multiplyDuration: () => (/* binding */ multiplyDuration),
                /* harmony export */   padStart: () => (/* binding */ padStart),
                /* harmony export */   parseBusinessHours: () => (/* binding */ parseBusinessHours),
                /* harmony export */   parseClassNames: () => (/* binding */ parseClassNames),
                /* harmony export */   parseDragMeta: () => (/* binding */ parseDragMeta),
                /* harmony export */   parseEventDef: () => (/* binding */ parseEventDef),
                /* harmony export */   parseFieldSpecs: () => (/* binding */ parseFieldSpecs),
                /* harmony export */   parseMarker: () => (/* binding */ parse),
                /* harmony export */   pointInsideRect: () => (/* binding */ pointInsideRect),
                /* harmony export */   preventContextMenu: () => (/* binding */ preventContextMenu),
                /* harmony export */   preventDefault: () => (/* binding */ preventDefault),
                /* harmony export */   preventSelection: () => (/* binding */ preventSelection),
                /* harmony export */   rangeContainsMarker: () => (/* binding */ rangeContainsMarker),
                /* harmony export */   rangeContainsRange: () => (/* binding */ rangeContainsRange),
                /* harmony export */   rangesEqual: () => (/* binding */ rangesEqual),
                /* harmony export */   rangesIntersect: () => (/* binding */ rangesIntersect),
                /* harmony export */   refineEventDef: () => (/* binding */ refineEventDef),
                /* harmony export */   refineProps: () => (/* binding */ refineProps),
                /* harmony export */   removeElement: () => (/* binding */ removeElement),
                /* harmony export */   removeExact: () => (/* binding */ removeExact),
                /* harmony export */   render: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.render),
                /* harmony export */   renderChunkContent: () => (/* binding */ renderChunkContent),
                /* harmony export */   renderFill: () => (/* binding */ renderFill),
                /* harmony export */   renderMicroColGroup: () => (/* binding */ renderMicroColGroup),
                /* harmony export */   renderScrollShim: () => (/* binding */ renderScrollShim),
                /* harmony export */   requestJson: () => (/* binding */ requestJson),
                /* harmony export */   sanitizeShrinkWidth: () => (/* binding */ sanitizeShrinkWidth),
                /* harmony export */   setElSeg: () => (/* binding */ setElSeg),
                /* harmony export */   setRef: () => (/* binding */ setRef),
                /* harmony export */   sliceEventStore: () => (/* binding */ sliceEventStore),
                /* harmony export */   sliceEvents: () => (/* binding */ sliceEvents),
                /* harmony export */   sortEventSegs: () => (/* binding */ sortEventSegs),
                /* harmony export */   startOfDay: () => (/* binding */ startOfDay),
                /* harmony export */   translateRect: () => (/* binding */ translateRect),
                /* harmony export */   triggerDateSelect: () => (/* binding */ triggerDateSelect),
                /* harmony export */   unmountComponentAtNode: () => (/* reexport safe */ _vdom_js__WEBPACK_IMPORTED_MODULE_1__.unmountComponentAtNode),
                /* harmony export */   unpromisify: () => (/* binding */ unpromisify),
                /* harmony export */   version: () => (/* binding */ version),
                /* harmony export */   whenTransitionDone: () => (/* binding */ whenTransitionDone),
                /* harmony export */   wholeDivideDurations: () => (/* binding */ wholeDivideDurations)
                /* harmony export */ });
            /* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.css */ "./node_modules/@fullcalendar/common/main.css");
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
            /* harmony import */ var _vdom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vdom.js */ "./node_modules/@fullcalendar/common/vdom.js");
            /*!
FullCalendar v5.11.5
Docs & License: https://fullcalendar.io/
(c) 2022 Adam Shaw
*/






// no public types yet. when there are, export from:
// import {} from './api-type-deps'
            var EventSourceApi = /** @class */ (function () {
                function EventSourceApi(context, internalEventSource) {
                    this.context = context;
                    this.internalEventSource = internalEventSource;
                }
                EventSourceApi.prototype.remove = function () {
                    this.context.dispatch({
                        type: 'REMOVE_EVENT_SOURCE',
                        sourceId: this.internalEventSource.sourceId,
                    });
                };
                EventSourceApi.prototype.refetch = function () {
                    this.context.dispatch({
                        type: 'FETCH_EVENT_SOURCES',
                        sourceIds: [this.internalEventSource.sourceId],
                        isRefetch: true,
                    });
                };
                Object.defineProperty(EventSourceApi.prototype, "id", {
                    get: function () {
                        return this.internalEventSource.publicId;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventSourceApi.prototype, "url", {
                    get: function () {
                        return this.internalEventSource.meta.url;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventSourceApi.prototype, "format", {
                    get: function () {
                        return this.internalEventSource.meta.format; // TODO: bad. not guaranteed
                    },
                    enumerable: false,
                    configurable: true
                });
                return EventSourceApi;
            }());

            function removeElement(el) {
                if (el.parentNode) {
                    el.parentNode.removeChild(el);
                }
            }
// Querying
// ----------------------------------------------------------------------------------------------------------------
            function elementClosest(el, selector) {
                if (el.closest) {
                    return el.closest(selector);
                    // really bad fallback for IE
                    // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest
                }
                if (!document.documentElement.contains(el)) {
                    return null;
                }
                do {
                    if (elementMatches(el, selector)) {
                        return el;
                    }
                    el = (el.parentElement || el.parentNode);
                } while (el !== null && el.nodeType === 1);
                return null;
            }
            function elementMatches(el, selector) {
                var method = el.matches || el.matchesSelector || el.msMatchesSelector;
                return method.call(el, selector);
            }
// accepts multiple subject els
// returns a real array. good for methods like forEach
// TODO: accept the document
            function findElements(container, selector) {
                var containers = container instanceof HTMLElement ? [container] : container;
                var allMatches = [];
                for (var i = 0; i < containers.length; i += 1) {
                    var matches = containers[i].querySelectorAll(selector);
                    for (var j = 0; j < matches.length; j += 1) {
                        allMatches.push(matches[j]);
                    }
                }
                return allMatches;
            }
// accepts multiple subject els
// only queries direct child elements // TODO: rename to findDirectChildren!
            function findDirectChildren(parent, selector) {
                var parents = parent instanceof HTMLElement ? [parent] : parent;
                var allMatches = [];
                for (var i = 0; i < parents.length; i += 1) {
                    var childNodes = parents[i].children; // only ever elements
                    for (var j = 0; j < childNodes.length; j += 1) {
                        var childNode = childNodes[j];
                        if (!selector || elementMatches(childNode, selector)) {
                            allMatches.push(childNode);
                        }
                    }
                }
                return allMatches;
            }
// Style
// ----------------------------------------------------------------------------------------------------------------
            var PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;
            function applyStyle(el, props) {
                for (var propName in props) {
                    applyStyleProp(el, propName, props[propName]);
                }
            }
            function applyStyleProp(el, name, val) {
                if (val == null) {
                    el.style[name] = '';
                }
                else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {
                    el.style[name] = val + "px";
                }
                else {
                    el.style[name] = val;
                }
            }
// Event Handling
// ----------------------------------------------------------------------------------------------------------------
// if intercepting bubbled events at the document/window/body level,
// and want to see originating element (the 'target'), use this util instead
// of `ev.target` because it goes within web-component boundaries.
            function getEventTargetViaRoot(ev) {
                var _a, _b;
                return (_b = (_a = ev.composedPath) === null || _a === void 0 ? void 0 : _a.call(ev)[0]) !== null && _b !== void 0 ? _b : ev.target;
            }
// Shadow DOM consuderations
// ----------------------------------------------------------------------------------------------------------------
            function getElRoot(el) {
                return el.getRootNode ? el.getRootNode() : document;
            }
// Unique ID for DOM attribute
            var guid$1 = 0;
            function getUniqueDomId() {
                guid$1 += 1;
                return 'fc-dom-' + guid$1;
            }

// Stops a mouse/touch event from doing it's native browser action
            function preventDefault(ev) {
                ev.preventDefault();
            }
// Event Delegation
// ----------------------------------------------------------------------------------------------------------------
            function buildDelegationHandler(selector, handler) {
                return function (ev) {
                    var matchedChild = elementClosest(ev.target, selector);
                    if (matchedChild) {
                        handler.call(matchedChild, ev, matchedChild);
                    }
                };
            }
            function listenBySelector(container, eventType, selector, handler) {
                var attachedHandler = buildDelegationHandler(selector, handler);
                container.addEventListener(eventType, attachedHandler);
                return function () {
                    container.removeEventListener(eventType, attachedHandler);
                };
            }
            function listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {
                var currentMatchedChild;
                return listenBySelector(container, 'mouseover', selector, function (mouseOverEv, matchedChild) {
                    if (matchedChild !== currentMatchedChild) {
                        currentMatchedChild = matchedChild;
                        onMouseEnter(mouseOverEv, matchedChild);
                        var realOnMouseLeave_1 = function (mouseLeaveEv) {
                            currentMatchedChild = null;
                            onMouseLeave(mouseLeaveEv, matchedChild);
                            matchedChild.removeEventListener('mouseleave', realOnMouseLeave_1);
                        };
                        // listen to the next mouseleave, and then unattach
                        matchedChild.addEventListener('mouseleave', realOnMouseLeave_1);
                    }
                });
            }
// Animation
// ----------------------------------------------------------------------------------------------------------------
            var transitionEventNames = [
                'webkitTransitionEnd',
                'otransitionend',
                'oTransitionEnd',
                'msTransitionEnd',
                'transitionend',
            ];
// triggered only when the next single subsequent transition finishes
            function whenTransitionDone(el, callback) {
                var realCallback = function (ev) {
                    callback(ev);
                    transitionEventNames.forEach(function (eventName) {
                        el.removeEventListener(eventName, realCallback);
                    });
                };
                transitionEventNames.forEach(function (eventName) {
                    el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes
                });
            }
// ARIA workarounds
// ----------------------------------------------------------------------------------------------------------------
            function createAriaClickAttrs(handler) {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ onClick: handler }, createAriaKeyboardAttrs(handler));
            }
            function createAriaKeyboardAttrs(handler) {
                return {
                    tabIndex: 0,
                    onKeyDown: function (ev) {
                        if (ev.key === 'Enter' || ev.key === ' ') {
                            handler(ev);
                            ev.preventDefault(); // if space, don't scroll down page
                        }
                    },
                };
            }

            var guidNumber = 0;
            function guid() {
                guidNumber += 1;
                return String(guidNumber);
            }
            /* FullCalendar-specific DOM Utilities
----------------------------------------------------------------------------------------------------------------------*/
// Make the mouse cursor express that an event is not allowed in the current area
            function disableCursor() {
                document.body.classList.add('fc-not-allowed');
            }
// Returns the mouse cursor to its original look
            function enableCursor() {
                document.body.classList.remove('fc-not-allowed');
            }
            /* Selection
----------------------------------------------------------------------------------------------------------------------*/
            function preventSelection(el) {
                el.classList.add('fc-unselectable');
                el.addEventListener('selectstart', preventDefault);
            }
            function allowSelection(el) {
                el.classList.remove('fc-unselectable');
                el.removeEventListener('selectstart', preventDefault);
            }
            /* Context Menu
----------------------------------------------------------------------------------------------------------------------*/
            function preventContextMenu(el) {
                el.addEventListener('contextmenu', preventDefault);
            }
            function allowContextMenu(el) {
                el.removeEventListener('contextmenu', preventDefault);
            }
            function parseFieldSpecs(input) {
                var specs = [];
                var tokens = [];
                var i;
                var token;
                if (typeof input === 'string') {
                    tokens = input.split(/\s*,\s*/);
                }
                else if (typeof input === 'function') {
                    tokens = [input];
                }
                else if (Array.isArray(input)) {
                    tokens = input;
                }
                for (i = 0; i < tokens.length; i += 1) {
                    token = tokens[i];
                    if (typeof token === 'string') {
                        specs.push(token.charAt(0) === '-' ?
                            { field: token.substring(1), order: -1 } :
                            { field: token, order: 1 });
                    }
                    else if (typeof token === 'function') {
                        specs.push({ func: token });
                    }
                }
                return specs;
            }
            function compareByFieldSpecs(obj0, obj1, fieldSpecs) {
                var i;
                var cmp;
                for (i = 0; i < fieldSpecs.length; i += 1) {
                    cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);
                    if (cmp) {
                        return cmp;
                    }
                }
                return 0;
            }
            function compareByFieldSpec(obj0, obj1, fieldSpec) {
                if (fieldSpec.func) {
                    return fieldSpec.func(obj0, obj1);
                }
                return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field])
                    * (fieldSpec.order || 1);
            }
            function flexibleCompare(a, b) {
                if (!a && !b) {
                    return 0;
                }
                if (b == null) {
                    return -1;
                }
                if (a == null) {
                    return 1;
                }
                if (typeof a === 'string' || typeof b === 'string') {
                    return String(a).localeCompare(String(b));
                }
                return a - b;
            }
            /* String Utilities
----------------------------------------------------------------------------------------------------------------------*/
            function padStart(val, len) {
                var s = String(val);
                return '000'.substr(0, len - s.length) + s;
            }
            function formatWithOrdinals(formatter, args, fallbackText) {
                if (typeof formatter === 'function') {
                    return formatter.apply(void 0, args);
                }
                if (typeof formatter === 'string') { // non-blank string
                    return args.reduce(function (str, arg, index) { return (str.replace('$' + index, arg || '')); }, formatter);
                }
                return fallbackText;
            }
            /* Number Utilities
----------------------------------------------------------------------------------------------------------------------*/
            function compareNumbers(a, b) {
                return a - b;
            }
            function isInt(n) {
                return n % 1 === 0;
            }
            /* FC-specific DOM dimension stuff
----------------------------------------------------------------------------------------------------------------------*/
            function computeSmallestCellWidth(cellEl) {
                var allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame');
                var contentWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-cushion');
                if (!allWidthEl) {
                    throw new Error('needs fc-scrollgrid-shrink-frame className'); // TODO: use const
                }
                if (!contentWidthEl) {
                    throw new Error('needs fc-scrollgrid-shrink-cushion className');
                }
                return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width + // the cell padding+border
                    contentWidthEl.getBoundingClientRect().width;
            }

            var DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
// Adding
            function addWeeks(m, n) {
                var a = dateToUtcArray(m);
                a[2] += n * 7;
                return arrayToUtcDate(a);
            }
            function addDays(m, n) {
                var a = dateToUtcArray(m);
                a[2] += n;
                return arrayToUtcDate(a);
            }
            function addMs(m, n) {
                var a = dateToUtcArray(m);
                a[6] += n;
                return arrayToUtcDate(a);
            }
// Diffing (all return floats)
// TODO: why not use ranges?
            function diffWeeks(m0, m1) {
                return diffDays(m0, m1) / 7;
            }
            function diffDays(m0, m1) {
                return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);
            }
            function diffHours(m0, m1) {
                return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);
            }
            function diffMinutes(m0, m1) {
                return (m1.valueOf() - m0.valueOf()) / (1000 * 60);
            }
            function diffSeconds(m0, m1) {
                return (m1.valueOf() - m0.valueOf()) / 1000;
            }
            function diffDayAndTime(m0, m1) {
                var m0day = startOfDay(m0);
                var m1day = startOfDay(m1);
                return {
                    years: 0,
                    months: 0,
                    days: Math.round(diffDays(m0day, m1day)),
                    milliseconds: (m1.valueOf() - m1day.valueOf()) - (m0.valueOf() - m0day.valueOf()),
                };
            }
// Diffing Whole Units
            function diffWholeWeeks(m0, m1) {
                var d = diffWholeDays(m0, m1);
                if (d !== null && d % 7 === 0) {
                    return d / 7;
                }
                return null;
            }
            function diffWholeDays(m0, m1) {
                if (timeAsMs(m0) === timeAsMs(m1)) {
                    return Math.round(diffDays(m0, m1));
                }
                return null;
            }
// Start-Of
            function startOfDay(m) {
                return arrayToUtcDate([
                    m.getUTCFullYear(),
                    m.getUTCMonth(),
                    m.getUTCDate(),
                ]);
            }
            function startOfHour(m) {
                return arrayToUtcDate([
                    m.getUTCFullYear(),
                    m.getUTCMonth(),
                    m.getUTCDate(),
                    m.getUTCHours(),
                ]);
            }
            function startOfMinute(m) {
                return arrayToUtcDate([
                    m.getUTCFullYear(),
                    m.getUTCMonth(),
                    m.getUTCDate(),
                    m.getUTCHours(),
                    m.getUTCMinutes(),
                ]);
            }
            function startOfSecond(m) {
                return arrayToUtcDate([
                    m.getUTCFullYear(),
                    m.getUTCMonth(),
                    m.getUTCDate(),
                    m.getUTCHours(),
                    m.getUTCMinutes(),
                    m.getUTCSeconds(),
                ]);
            }
// Week Computation
            function weekOfYear(marker, dow, doy) {
                var y = marker.getUTCFullYear();
                var w = weekOfGivenYear(marker, y, dow, doy);
                if (w < 1) {
                    return weekOfGivenYear(marker, y - 1, dow, doy);
                }
                var nextW = weekOfGivenYear(marker, y + 1, dow, doy);
                if (nextW >= 1) {
                    return Math.min(w, nextW);
                }
                return w;
            }
            function weekOfGivenYear(marker, year, dow, doy) {
                var firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);
                var dayStart = startOfDay(marker);
                var days = Math.round(diffDays(firstWeekStart, dayStart));
                return Math.floor(days / 7) + 1; // zero-indexed
            }
// start-of-first-week - start-of-year
            function firstWeekOffset(year, dow, doy) {
                // first-week day -- which january is always in the first week (4 for iso, 1 for other)
                var fwd = 7 + dow - doy;
                // first-week day local weekday -- which local weekday is fwd
                var fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;
                return -fwdlw + fwd - 1;
            }
// Array Conversion
            function dateToLocalArray(date) {
                return [
                    date.getFullYear(),
                    date.getMonth(),
                    date.getDate(),
                    date.getHours(),
                    date.getMinutes(),
                    date.getSeconds(),
                    date.getMilliseconds(),
                ];
            }
            function arrayToLocalDate(a) {
                return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2], // day of month
                    a[3] || 0, a[4] || 0, a[5] || 0);
            }
            function dateToUtcArray(date) {
                return [
                    date.getUTCFullYear(),
                    date.getUTCMonth(),
                    date.getUTCDate(),
                    date.getUTCHours(),
                    date.getUTCMinutes(),
                    date.getUTCSeconds(),
                    date.getUTCMilliseconds(),
                ];
            }
            function arrayToUtcDate(a) {
                // according to web standards (and Safari), a month index is required.
                // massage if only given a year.
                if (a.length === 1) {
                    a = a.concat([0]);
                }
                return new Date(Date.UTC.apply(Date, a));
            }
// Other Utils
            function isValidDate(m) {
                return !isNaN(m.valueOf());
            }
            function timeAsMs(m) {
                return m.getUTCHours() * 1000 * 60 * 60 +
                    m.getUTCMinutes() * 1000 * 60 +
                    m.getUTCSeconds() * 1000 +
                    m.getUTCMilliseconds();
            }

            function createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {
                return {
                    instanceId: guid(),
                    defId: defId,
                    range: range,
                    forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,
                    forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo,
                };
            }

            var hasOwnProperty = Object.prototype.hasOwnProperty;
// Merges an array of objects into a single object.
// The second argument allows for an array of property names who's object values will be merged together.
            function mergeProps(propObjs, complexPropsMap) {
                var dest = {};
                if (complexPropsMap) {
                    for (var name_1 in complexPropsMap) {
                        var complexObjs = [];
                        // collect the trailing object values, stopping when a non-object is discovered
                        for (var i = propObjs.length - 1; i >= 0; i -= 1) {
                            var val = propObjs[i][name_1];
                            if (typeof val === 'object' && val) { // non-null object
                                complexObjs.unshift(val);
                            }
                            else if (val !== undefined) {
                                dest[name_1] = val; // if there were no objects, this value will be used
                                break;
                            }
                        }
                        // if the trailing values were objects, use the merged value
                        if (complexObjs.length) {
                            dest[name_1] = mergeProps(complexObjs);
                        }
                    }
                }
                // copy values into the destination, going from last to first
                for (var i = propObjs.length - 1; i >= 0; i -= 1) {
                    var props = propObjs[i];
                    for (var name_2 in props) {
                        if (!(name_2 in dest)) { // if already assigned by previous props or complex props, don't reassign
                            dest[name_2] = props[name_2];
                        }
                    }
                }
                return dest;
            }
            function filterHash(hash, func) {
                var filtered = {};
                for (var key in hash) {
                    if (func(hash[key], key)) {
                        filtered[key] = hash[key];
                    }
                }
                return filtered;
            }
            function mapHash(hash, func) {
                var newHash = {};
                for (var key in hash) {
                    newHash[key] = func(hash[key], key);
                }
                return newHash;
            }
            function arrayToHash(a) {
                var hash = {};
                for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
                    var item = a_1[_i];
                    hash[item] = true;
                }
                return hash;
            }
            function buildHashFromArray(a, func) {
                var hash = {};
                for (var i = 0; i < a.length; i += 1) {
                    var tuple = func(a[i], i);
                    hash[tuple[0]] = tuple[1];
                }
                return hash;
            }
            function hashValuesToArray(obj) {
                var a = [];
                for (var key in obj) {
                    a.push(obj[key]);
                }
                return a;
            }
            function isPropsEqual(obj0, obj1) {
                if (obj0 === obj1) {
                    return true;
                }
                for (var key in obj0) {
                    if (hasOwnProperty.call(obj0, key)) {
                        if (!(key in obj1)) {
                            return false;
                        }
                    }
                }
                for (var key in obj1) {
                    if (hasOwnProperty.call(obj1, key)) {
                        if (obj0[key] !== obj1[key]) {
                            return false;
                        }
                    }
                }
                return true;
            }
            function getUnequalProps(obj0, obj1) {
                var keys = [];
                for (var key in obj0) {
                    if (hasOwnProperty.call(obj0, key)) {
                        if (!(key in obj1)) {
                            keys.push(key);
                        }
                    }
                }
                for (var key in obj1) {
                    if (hasOwnProperty.call(obj1, key)) {
                        if (obj0[key] !== obj1[key]) {
                            keys.push(key);
                        }
                    }
                }
                return keys;
            }
            function compareObjs(oldProps, newProps, equalityFuncs) {
                if (equalityFuncs === void 0) { equalityFuncs = {}; }
                if (oldProps === newProps) {
                    return true;
                }
                for (var key in newProps) {
                    if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])) ;
                    else {
                        return false;
                    }
                }
                // check for props that were omitted in the new
                for (var key in oldProps) {
                    if (!(key in newProps)) {
                        return false;
                    }
                }
                return true;
            }
            /*
assumed "true" equality for handler names like "onReceiveSomething"
*/
            function isObjValsEqual(val0, val1, comparator) {
                if (val0 === val1 || comparator === true) {
                    return true;
                }
                if (comparator) {
                    return comparator(val0, val1);
                }
                return false;
            }
            function collectFromHash(hash, startIndex, endIndex, step) {
                if (startIndex === void 0) { startIndex = 0; }
                if (step === void 0) { step = 1; }
                var res = [];
                if (endIndex == null) {
                    endIndex = Object.keys(hash).length;
                }
                for (var i = startIndex; i < endIndex; i += step) {
                    var val = hash[i];
                    if (val !== undefined) { // will disregard undefined for sparse arrays
                        res.push(val);
                    }
                }
                return res;
            }

            function parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {
                for (var i = 0; i < recurringTypes.length; i += 1) {
                    var parsed = recurringTypes[i].parse(refined, dateEnv);
                    if (parsed) {
                        var allDay = refined.allDay;
                        if (allDay == null) {
                            allDay = defaultAllDay;
                            if (allDay == null) {
                                allDay = parsed.allDayGuess;
                                if (allDay == null) {
                                    allDay = false;
                                }
                            }
                        }
                        return {
                            allDay: allDay,
                            duration: parsed.duration,
                            typeData: parsed.typeData,
                            typeId: i,
                        };
                    }
                }
                return null;
            }
            function expandRecurring(eventStore, framingRange, context) {
                var dateEnv = context.dateEnv, pluginHooks = context.pluginHooks, options = context.options;
                var defs = eventStore.defs, instances = eventStore.instances;
                // remove existing recurring instances
                // TODO: bad. always expand events as a second step
                instances = filterHash(instances, function (instance) { return !defs[instance.defId].recurringDef; });
                for (var defId in defs) {
                    var def = defs[defId];
                    if (def.recurringDef) {
                        var duration = def.recurringDef.duration;
                        if (!duration) {
                            duration = def.allDay ?
                                options.defaultAllDayEventDuration :
                                options.defaultTimedEventDuration;
                        }
                        var starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes);
                        for (var _i = 0, starts_1 = starts; _i < starts_1.length; _i++) {
                            var start = starts_1[_i];
                            var instance = createEventInstance(defId, {
                                start: start,
                                end: dateEnv.add(start, duration),
                            });
                            instances[instance.instanceId] = instance;
                        }
                    }
                }
                return { defs: defs, instances: instances };
            }
            /*
Event MUST have a recurringDef
*/
            function expandRecurringRanges(eventDef, duration, framingRange, dateEnv, recurringTypes) {
                var typeDef = recurringTypes[eventDef.recurringDef.typeId];
                var markers = typeDef.expand(eventDef.recurringDef.typeData, {
                    start: dateEnv.subtract(framingRange.start, duration),
                    end: framingRange.end,
                }, dateEnv);
                // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to
                if (eventDef.allDay) {
                    markers = markers.map(startOfDay);
                }
                return markers;
            }

            var INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];
            var PARSE_RE = /^(-?)(?:(\d+)\.)?(\d+):(\d\d)(?::(\d\d)(?:\.(\d\d\d))?)?/;
// Parsing and Creation
            function createDuration(input, unit) {
                var _a;
                if (typeof input === 'string') {
                    return parseString(input);
                }
                if (typeof input === 'object' && input) { // non-null object
                    return parseObject(input);
                }
                if (typeof input === 'number') {
                    return parseObject((_a = {}, _a[unit || 'milliseconds'] = input, _a));
                }
                return null;
            }
            function parseString(s) {
                var m = PARSE_RE.exec(s);
                if (m) {
                    var sign = m[1] ? -1 : 1;
                    return {
                        years: 0,
                        months: 0,
                        days: sign * (m[2] ? parseInt(m[2], 10) : 0),
                        milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours
                            (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes
                            (m[5] ? parseInt(m[5], 10) : 0) * 1000 + // seconds
                            (m[6] ? parseInt(m[6], 10) : 0) // ms
                        ),
                    };
                }
                return null;
            }
            function parseObject(obj) {
                var duration = {
                    years: obj.years || obj.year || 0,
                    months: obj.months || obj.month || 0,
                    days: obj.days || obj.day || 0,
                    milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours
                        (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes
                        (obj.seconds || obj.second || 0) * 1000 + // seconds
                        (obj.milliseconds || obj.millisecond || obj.ms || 0), // ms
                };
                var weeks = obj.weeks || obj.week;
                if (weeks) {
                    duration.days += weeks * 7;
                    duration.specifiedWeeks = true;
                }
                return duration;
            }
// Equality
            function durationsEqual(d0, d1) {
                return d0.years === d1.years &&
                    d0.months === d1.months &&
                    d0.days === d1.days &&
                    d0.milliseconds === d1.milliseconds;
            }
            function asCleanDays(dur) {
                if (!dur.years && !dur.months && !dur.milliseconds) {
                    return dur.days;
                }
                return 0;
            }
// Simple Math
            function addDurations(d0, d1) {
                return {
                    years: d0.years + d1.years,
                    months: d0.months + d1.months,
                    days: d0.days + d1.days,
                    milliseconds: d0.milliseconds + d1.milliseconds,
                };
            }
            function subtractDurations(d1, d0) {
                return {
                    years: d1.years - d0.years,
                    months: d1.months - d0.months,
                    days: d1.days - d0.days,
                    milliseconds: d1.milliseconds - d0.milliseconds,
                };
            }
            function multiplyDuration(d, n) {
                return {
                    years: d.years * n,
                    months: d.months * n,
                    days: d.days * n,
                    milliseconds: d.milliseconds * n,
                };
            }
// Conversions
// "Rough" because they are based on average-case Gregorian months/years
            function asRoughYears(dur) {
                return asRoughDays(dur) / 365;
            }
            function asRoughMonths(dur) {
                return asRoughDays(dur) / 30;
            }
            function asRoughDays(dur) {
                return asRoughMs(dur) / 864e5;
            }
            function asRoughMinutes(dur) {
                return asRoughMs(dur) / (1000 * 60);
            }
            function asRoughSeconds(dur) {
                return asRoughMs(dur) / 1000;
            }
            function asRoughMs(dur) {
                return dur.years * (365 * 864e5) +
                    dur.months * (30 * 864e5) +
                    dur.days * 864e5 +
                    dur.milliseconds;
            }
// Advanced Math
            function wholeDivideDurations(numerator, denominator) {
                var res = null;
                for (var i = 0; i < INTERNAL_UNITS.length; i += 1) {
                    var unit = INTERNAL_UNITS[i];
                    if (denominator[unit]) {
                        var localRes = numerator[unit] / denominator[unit];
                        if (!isInt(localRes) || (res !== null && res !== localRes)) {
                            return null;
                        }
                        res = localRes;
                    }
                    else if (numerator[unit]) {
                        // needs to divide by something but can't!
                        return null;
                    }
                }
                return res;
            }
            function greatestDurationDenominator(dur) {
                var ms = dur.milliseconds;
                if (ms) {
                    if (ms % 1000 !== 0) {
                        return { unit: 'millisecond', value: ms };
                    }
                    if (ms % (1000 * 60) !== 0) {
                        return { unit: 'second', value: ms / 1000 };
                    }
                    if (ms % (1000 * 60 * 60) !== 0) {
                        return { unit: 'minute', value: ms / (1000 * 60) };
                    }
                    if (ms) {
                        return { unit: 'hour', value: ms / (1000 * 60 * 60) };
                    }
                }
                if (dur.days) {
                    if (dur.specifiedWeeks && dur.days % 7 === 0) {
                        return { unit: 'week', value: dur.days / 7 };
                    }
                    return { unit: 'day', value: dur.days };
                }
                if (dur.months) {
                    return { unit: 'month', value: dur.months };
                }
                if (dur.years) {
                    return { unit: 'year', value: dur.years };
                }
                return { unit: 'millisecond', value: 0 };
            }

// timeZoneOffset is in minutes
            function buildIsoString(marker, timeZoneOffset, stripZeroTime) {
                if (stripZeroTime === void 0) { stripZeroTime = false; }
                var s = marker.toISOString();
                s = s.replace('.000', '');
                if (stripZeroTime) {
                    s = s.replace('T00:00:00Z', '');
                }
                if (s.length > 10) { // time part wasn't stripped, can add timezone info
                    if (timeZoneOffset == null) {
                        s = s.replace('Z', '');
                    }
                    else if (timeZoneOffset !== 0) {
                        s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));
                    }
                    // otherwise, its UTC-0 and we want to keep the Z
                }
                return s;
            }
// formats the date, but with no time part
// TODO: somehow merge with buildIsoString and stripZeroTime
// TODO: rename. omit "string"
            function formatDayString(marker) {
                return marker.toISOString().replace(/T.*$/, '');
            }
// TODO: use Date::toISOString and use everything after the T?
            function formatIsoTimeString(marker) {
                return padStart(marker.getUTCHours(), 2) + ':' +
                    padStart(marker.getUTCMinutes(), 2) + ':' +
                    padStart(marker.getUTCSeconds(), 2);
            }
            function formatTimeZoneOffset(minutes, doIso) {
                if (doIso === void 0) { doIso = false; }
                var sign = minutes < 0 ? '-' : '+';
                var abs = Math.abs(minutes);
                var hours = Math.floor(abs / 60);
                var mins = Math.round(abs % 60);
                if (doIso) {
                    return sign + padStart(hours, 2) + ":" + padStart(mins, 2);
                }
                return "GMT" + sign + hours + (mins ? ":" + padStart(mins, 2) : '');
            }

// TODO: new util arrayify?
            function removeExact(array, exactVal) {
                var removeCnt = 0;
                var i = 0;
                while (i < array.length) {
                    if (array[i] === exactVal) {
                        array.splice(i, 1);
                        removeCnt += 1;
                    }
                    else {
                        i += 1;
                    }
                }
                return removeCnt;
            }
            function isArraysEqual(a0, a1, equalityFunc) {
                if (a0 === a1) {
                    return true;
                }
                var len = a0.length;
                var i;
                if (len !== a1.length) { // not array? or not same length?
                    return false;
                }
                for (i = 0; i < len; i += 1) {
                    if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {
                        return false;
                    }
                }
                return true;
            }

            function memoize(workerFunc, resEquality, teardownFunc) {
                var currentArgs;
                var currentRes;
                return function () {
                    var newArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        newArgs[_i] = arguments[_i];
                    }
                    if (!currentArgs) {
                        currentRes = workerFunc.apply(this, newArgs);
                    }
                    else if (!isArraysEqual(currentArgs, newArgs)) {
                        if (teardownFunc) {
                            teardownFunc(currentRes);
                        }
                        var res = workerFunc.apply(this, newArgs);
                        if (!resEquality || !resEquality(res, currentRes)) {
                            currentRes = res;
                        }
                    }
                    currentArgs = newArgs;
                    return currentRes;
                };
            }
            function memoizeObjArg(workerFunc, resEquality, teardownFunc) {
                var _this = this;
                var currentArg;
                var currentRes;
                return function (newArg) {
                    if (!currentArg) {
                        currentRes = workerFunc.call(_this, newArg);
                    }
                    else if (!isPropsEqual(currentArg, newArg)) {
                        if (teardownFunc) {
                            teardownFunc(currentRes);
                        }
                        var res = workerFunc.call(_this, newArg);
                        if (!resEquality || !resEquality(res, currentRes)) {
                            currentRes = res;
                        }
                    }
                    currentArg = newArg;
                    return currentRes;
                };
            }
            function memoizeArraylike(// used at all?
                workerFunc, resEquality, teardownFunc) {
                var _this = this;
                var currentArgSets = [];
                var currentResults = [];
                return function (newArgSets) {
                    var currentLen = currentArgSets.length;
                    var newLen = newArgSets.length;
                    var i = 0;
                    for (; i < currentLen; i += 1) {
                        if (!newArgSets[i]) { // one of the old sets no longer exists
                            if (teardownFunc) {
                                teardownFunc(currentResults[i]);
                            }
                        }
                        else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {
                            if (teardownFunc) {
                                teardownFunc(currentResults[i]);
                            }
                            var res = workerFunc.apply(_this, newArgSets[i]);
                            if (!resEquality || !resEquality(res, currentResults[i])) {
                                currentResults[i] = res;
                            }
                        }
                    }
                    for (; i < newLen; i += 1) {
                        currentResults[i] = workerFunc.apply(_this, newArgSets[i]);
                    }
                    currentArgSets = newArgSets;
                    currentResults.splice(newLen); // remove excess
                    return currentResults;
                };
            }
            function memoizeHashlike(workerFunc, resEquality, teardownFunc) {
                var _this = this;
                var currentArgHash = {};
                var currentResHash = {};
                return function (newArgHash) {
                    var newResHash = {};
                    for (var key in newArgHash) {
                        if (!currentResHash[key]) {
                            newResHash[key] = workerFunc.apply(_this, newArgHash[key]);
                        }
                        else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {
                            if (teardownFunc) {
                                teardownFunc(currentResHash[key]);
                            }
                            var res = workerFunc.apply(_this, newArgHash[key]);
                            newResHash[key] = (resEquality && resEquality(res, currentResHash[key]))
                                ? currentResHash[key]
                                : res;
                        }
                        else {
                            newResHash[key] = currentResHash[key];
                        }
                    }
                    currentArgHash = newArgHash;
                    currentResHash = newResHash;
                    return newResHash;
                };
            }

            var EXTENDED_SETTINGS_AND_SEVERITIES = {
                week: 3,
                separator: 0,
                omitZeroMinute: 0,
                meridiem: 0,
                omitCommas: 0,
            };
            var STANDARD_DATE_PROP_SEVERITIES = {
                timeZoneName: 7,
                era: 6,
                year: 5,
                month: 4,
                day: 2,
                weekday: 2,
                hour: 1,
                minute: 1,
                second: 1,
            };
            var MERIDIEM_RE = /\s*([ap])\.?m\.?/i; // eats up leading spaces too
            var COMMA_RE = /,/g; // we need re for globalness
            var MULTI_SPACE_RE = /\s+/g;
            var LTR_RE = /\u200e/g; // control character
            var UTC_RE = /UTC|GMT/;
            var NativeFormatter = /** @class */ (function () {
                function NativeFormatter(formatSettings) {
                    var standardDateProps = {};
                    var extendedSettings = {};
                    var severity = 0;
                    for (var name_1 in formatSettings) {
                        if (name_1 in EXTENDED_SETTINGS_AND_SEVERITIES) {
                            extendedSettings[name_1] = formatSettings[name_1];
                            severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name_1], severity);
                        }
                        else {
                            standardDateProps[name_1] = formatSettings[name_1];
                            if (name_1 in STANDARD_DATE_PROP_SEVERITIES) { // TODO: what about hour12? no severity
                                severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name_1], severity);
                            }
                        }
                    }
                    this.standardDateProps = standardDateProps;
                    this.extendedSettings = extendedSettings;
                    this.severity = severity;
                    this.buildFormattingFunc = memoize(buildFormattingFunc);
                }
                NativeFormatter.prototype.format = function (date, context) {
                    return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);
                };
                NativeFormatter.prototype.formatRange = function (start, end, context, betterDefaultSeparator) {
                    var _a = this, standardDateProps = _a.standardDateProps, extendedSettings = _a.extendedSettings;
                    var diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);
                    if (!diffSeverity) {
                        return this.format(start, context);
                    }
                    var biggestUnitForPartial = diffSeverity;
                    if (biggestUnitForPartial > 1 && // the two dates are different in a way that's larger scale than time
                        (standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') &&
                        (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') &&
                        (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {
                        biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time
                    }
                    var full0 = this.format(start, context);
                    var full1 = this.format(end, context);
                    if (full0 === full1) {
                        return full0;
                    }
                    var partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);
                    var partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);
                    var partial0 = partialFormattingFunc(start);
                    var partial1 = partialFormattingFunc(end);
                    var insertion = findCommonInsertion(full0, partial0, full1, partial1);
                    var separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || '';
                    if (insertion) {
                        return insertion.before + partial0 + separator + partial1 + insertion.after;
                    }
                    return full0 + separator + full1;
                };
                NativeFormatter.prototype.getLargestUnit = function () {
                    switch (this.severity) {
                        case 7:
                        case 6:
                        case 5:
                            return 'year';
                        case 4:
                            return 'month';
                        case 3:
                            return 'week';
                        case 2:
                            return 'day';
                        default:
                            return 'time'; // really?
                    }
                };
                return NativeFormatter;
            }());
            function buildFormattingFunc(standardDateProps, extendedSettings, context) {
                var standardDatePropCnt = Object.keys(standardDateProps).length;
                if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {
                    return function (date) { return (formatTimeZoneOffset(date.timeZoneOffset)); };
                }
                if (standardDatePropCnt === 0 && extendedSettings.week) {
                    return function (date) { return (formatWeekNumber(context.computeWeekNumber(date.marker), context.weekText, context.weekTextLong, context.locale, extendedSettings.week)); };
                }
                return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);
            }
            function buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {
                standardDateProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, standardDateProps); // copy
                extendedSettings = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, extendedSettings); // copy
                sanitizeSettings(standardDateProps, extendedSettings);
                standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers
                var normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);
                var zeroFormat; // needed?
                if (extendedSettings.omitZeroMinute) {
                    var zeroProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, standardDateProps);
                    delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings
                    zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);
                }
                return function (date) {
                    var marker = date.marker;
                    var format;
                    if (zeroFormat && !marker.getUTCMinutes()) {
                        format = zeroFormat;
                    }
                    else {
                        format = normalFormat;
                    }
                    var s = format.format(marker);
                    return postProcess(s, date, standardDateProps, extendedSettings, context);
                };
            }
            function sanitizeSettings(standardDateProps, extendedSettings) {
                // deal with a browser inconsistency where formatting the timezone
                // requires that the hour/minute be present.
                if (standardDateProps.timeZoneName) {
                    if (!standardDateProps.hour) {
                        standardDateProps.hour = '2-digit';
                    }
                    if (!standardDateProps.minute) {
                        standardDateProps.minute = '2-digit';
                    }
                }
                // only support short timezone names
                if (standardDateProps.timeZoneName === 'long') {
                    standardDateProps.timeZoneName = 'short';
                }
                // if requesting to display seconds, MUST display minutes
                if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {
                    delete extendedSettings.omitZeroMinute;
                }
            }
            function postProcess(s, date, standardDateProps, extendedSettings, context) {
                s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes
                if (standardDateProps.timeZoneName === 'short') {
                    s = injectTzoStr(s, (context.timeZone === 'UTC' || date.timeZoneOffset == null) ?
                        'UTC' : // important to normalize for IE, which does "GMT"
                        formatTimeZoneOffset(date.timeZoneOffset));
                }
                if (extendedSettings.omitCommas) {
                    s = s.replace(COMMA_RE, '').trim();
                }
                if (extendedSettings.omitZeroMinute) {
                    s = s.replace(':00', ''); // zeroFormat doesn't always achieve this
                }
                // ^ do anything that might create adjacent spaces before this point,
                // because MERIDIEM_RE likes to eat up loading spaces
                if (extendedSettings.meridiem === false) {
                    s = s.replace(MERIDIEM_RE, '').trim();
                }
                else if (extendedSettings.meridiem === 'narrow') { // a/p
                    s = s.replace(MERIDIEM_RE, function (m0, m1) { return m1.toLocaleLowerCase(); });
                }
                else if (extendedSettings.meridiem === 'short') { // am/pm
                    s = s.replace(MERIDIEM_RE, function (m0, m1) { return m1.toLocaleLowerCase() + "m"; });
                }
                else if (extendedSettings.meridiem === 'lowercase') { // other meridiem transformers already converted to lowercase
                    s = s.replace(MERIDIEM_RE, function (m0) { return m0.toLocaleLowerCase(); });
                }
                s = s.replace(MULTI_SPACE_RE, ' ');
                s = s.trim();
                return s;
            }
            function injectTzoStr(s, tzoStr) {
                var replaced = false;
                s = s.replace(UTC_RE, function () {
                    replaced = true;
                    return tzoStr;
                });
                // IE11 doesn't include UTC/GMT in the original string, so append to end
                if (!replaced) {
                    s += " " + tzoStr;
                }
                return s;
            }
            function formatWeekNumber(num, weekText, weekTextLong, locale, display) {
                var parts = [];
                if (display === 'long') {
                    parts.push(weekTextLong);
                }
                else if (display === 'short' || display === 'narrow') {
                    parts.push(weekText);
                }
                if (display === 'long' || display === 'short') {
                    parts.push(' ');
                }
                parts.push(locale.simpleNumberFormat.format(num));
                if (locale.options.direction === 'rtl') { // TODO: use control characters instead?
                    parts.reverse();
                }
                return parts.join('');
            }
// Range Formatting Utils
// 0 = exactly the same
// 1 = different by time
// and bigger
            function computeMarkerDiffSeverity(d0, d1, ca) {
                if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {
                    return 5;
                }
                if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {
                    return 4;
                }
                if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {
                    return 2;
                }
                if (timeAsMs(d0) !== timeAsMs(d1)) {
                    return 1;
                }
                return 0;
            }
            function computePartialFormattingOptions(options, biggestUnit) {
                var partialOptions = {};
                for (var name_2 in options) {
                    if (!(name_2 in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)
                        STANDARD_DATE_PROP_SEVERITIES[name_2] <= biggestUnit) {
                        partialOptions[name_2] = options[name_2];
                    }
                }
                return partialOptions;
            }
            function findCommonInsertion(full0, partial0, full1, partial1) {
                var i0 = 0;
                while (i0 < full0.length) {
                    var found0 = full0.indexOf(partial0, i0);
                    if (found0 === -1) {
                        break;
                    }
                    var before0 = full0.substr(0, found0);
                    i0 = found0 + partial0.length;
                    var after0 = full0.substr(i0);
                    var i1 = 0;
                    while (i1 < full1.length) {
                        var found1 = full1.indexOf(partial1, i1);
                        if (found1 === -1) {
                            break;
                        }
                        var before1 = full1.substr(0, found1);
                        i1 = found1 + partial1.length;
                        var after1 = full1.substr(i1);
                        if (before0 === before1 && after0 === after1) {
                            return {
                                before: before0,
                                after: after0,
                            };
                        }
                    }
                }
                return null;
            }

            function expandZonedMarker(dateInfo, calendarSystem) {
                var a = calendarSystem.markerToArray(dateInfo.marker);
                return {
                    marker: dateInfo.marker,
                    timeZoneOffset: dateInfo.timeZoneOffset,
                    array: a,
                    year: a[0],
                    month: a[1],
                    day: a[2],
                    hour: a[3],
                    minute: a[4],
                    second: a[5],
                    millisecond: a[6],
                };
            }

            function createVerboseFormattingArg(start, end, context, betterDefaultSeparator) {
                var startInfo = expandZonedMarker(start, context.calendarSystem);
                var endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;
                return {
                    date: startInfo,
                    start: startInfo,
                    end: endInfo,
                    timeZone: context.timeZone,
                    localeCodes: context.locale.codes,
                    defaultSeparator: betterDefaultSeparator || context.defaultSeparator,
                };
            }

            /*
TODO: fix the terminology of "formatter" vs "formatting func"
*/
            /*
At the time of instantiation, this object does not know which cmd-formatting system it will use.
It receives this at the time of formatting, as a setting.
*/
            var CmdFormatter = /** @class */ (function () {
                function CmdFormatter(cmdStr) {
                    this.cmdStr = cmdStr;
                }
                CmdFormatter.prototype.format = function (date, context, betterDefaultSeparator) {
                    return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
                };
                CmdFormatter.prototype.formatRange = function (start, end, context, betterDefaultSeparator) {
                    return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
                };
                return CmdFormatter;
            }());

            var FuncFormatter = /** @class */ (function () {
                function FuncFormatter(func) {
                    this.func = func;
                }
                FuncFormatter.prototype.format = function (date, context, betterDefaultSeparator) {
                    return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
                };
                FuncFormatter.prototype.formatRange = function (start, end, context, betterDefaultSeparator) {
                    return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
                };
                return FuncFormatter;
            }());

            function createFormatter(input) {
                if (typeof input === 'object' && input) { // non-null object
                    return new NativeFormatter(input);
                }
                if (typeof input === 'string') {
                    return new CmdFormatter(input);
                }
                if (typeof input === 'function') {
                    return new FuncFormatter(input);
                }
                return null;
            }

// base options
// ------------
            var BASE_OPTION_REFINERS = {
                navLinkDayClick: identity,
                navLinkWeekClick: identity,
                duration: createDuration,
                bootstrapFontAwesome: identity,
                buttonIcons: identity,
                customButtons: identity,
                defaultAllDayEventDuration: createDuration,
                defaultTimedEventDuration: createDuration,
                nextDayThreshold: createDuration,
                scrollTime: createDuration,
                scrollTimeReset: Boolean,
                slotMinTime: createDuration,
                slotMaxTime: createDuration,
                dayPopoverFormat: createFormatter,
                slotDuration: createDuration,
                snapDuration: createDuration,
                headerToolbar: identity,
                footerToolbar: identity,
                defaultRangeSeparator: String,
                titleRangeSeparator: String,
                forceEventDuration: Boolean,
                dayHeaders: Boolean,
                dayHeaderFormat: createFormatter,
                dayHeaderClassNames: identity,
                dayHeaderContent: identity,
                dayHeaderDidMount: identity,
                dayHeaderWillUnmount: identity,
                dayCellClassNames: identity,
                dayCellContent: identity,
                dayCellDidMount: identity,
                dayCellWillUnmount: identity,
                initialView: String,
                aspectRatio: Number,
                weekends: Boolean,
                weekNumberCalculation: identity,
                weekNumbers: Boolean,
                weekNumberClassNames: identity,
                weekNumberContent: identity,
                weekNumberDidMount: identity,
                weekNumberWillUnmount: identity,
                editable: Boolean,
                viewClassNames: identity,
                viewDidMount: identity,
                viewWillUnmount: identity,
                nowIndicator: Boolean,
                nowIndicatorClassNames: identity,
                nowIndicatorContent: identity,
                nowIndicatorDidMount: identity,
                nowIndicatorWillUnmount: identity,
                showNonCurrentDates: Boolean,
                lazyFetching: Boolean,
                startParam: String,
                endParam: String,
                timeZoneParam: String,
                timeZone: String,
                locales: identity,
                locale: identity,
                themeSystem: String,
                dragRevertDuration: Number,
                dragScroll: Boolean,
                allDayMaintainDuration: Boolean,
                unselectAuto: Boolean,
                dropAccept: identity,
                eventOrder: parseFieldSpecs,
                eventOrderStrict: Boolean,
                handleWindowResize: Boolean,
                windowResizeDelay: Number,
                longPressDelay: Number,
                eventDragMinDistance: Number,
                expandRows: Boolean,
                height: identity,
                contentHeight: identity,
                direction: String,
                weekNumberFormat: createFormatter,
                eventResizableFromStart: Boolean,
                displayEventTime: Boolean,
                displayEventEnd: Boolean,
                weekText: String,
                weekTextLong: String,
                progressiveEventRendering: Boolean,
                businessHours: identity,
                initialDate: identity,
                now: identity,
                eventDataTransform: identity,
                stickyHeaderDates: identity,
                stickyFooterScrollbar: identity,
                viewHeight: identity,
                defaultAllDay: Boolean,
                eventSourceFailure: identity,
                eventSourceSuccess: identity,
                eventDisplay: String,
                eventStartEditable: Boolean,
                eventDurationEditable: Boolean,
                eventOverlap: identity,
                eventConstraint: identity,
                eventAllow: identity,
                eventBackgroundColor: String,
                eventBorderColor: String,
                eventTextColor: String,
                eventColor: String,
                eventClassNames: identity,
                eventContent: identity,
                eventDidMount: identity,
                eventWillUnmount: identity,
                selectConstraint: identity,
                selectOverlap: identity,
                selectAllow: identity,
                droppable: Boolean,
                unselectCancel: String,
                slotLabelFormat: identity,
                slotLaneClassNames: identity,
                slotLaneContent: identity,
                slotLaneDidMount: identity,
                slotLaneWillUnmount: identity,
                slotLabelClassNames: identity,
                slotLabelContent: identity,
                slotLabelDidMount: identity,
                slotLabelWillUnmount: identity,
                dayMaxEvents: identity,
                dayMaxEventRows: identity,
                dayMinWidth: Number,
                slotLabelInterval: createDuration,
                allDayText: String,
                allDayClassNames: identity,
                allDayContent: identity,
                allDayDidMount: identity,
                allDayWillUnmount: identity,
                slotMinWidth: Number,
                navLinks: Boolean,
                eventTimeFormat: createFormatter,
                rerenderDelay: Number,
                moreLinkText: identity,
                moreLinkHint: identity,
                selectMinDistance: Number,
                selectable: Boolean,
                selectLongPressDelay: Number,
                eventLongPressDelay: Number,
                selectMirror: Boolean,
                eventMaxStack: Number,
                eventMinHeight: Number,
                eventMinWidth: Number,
                eventShortHeight: Number,
                slotEventOverlap: Boolean,
                plugins: identity,
                firstDay: Number,
                dayCount: Number,
                dateAlignment: String,
                dateIncrement: createDuration,
                hiddenDays: identity,
                monthMode: Boolean,
                fixedWeekCount: Boolean,
                validRange: identity,
                visibleRange: identity,
                titleFormat: identity,
                eventInteractive: Boolean,
                // only used by list-view, but languages define the value, so we need it in base options
                noEventsText: String,
                viewHint: identity,
                navLinkHint: identity,
                closeHint: String,
                timeHint: String,
                eventHint: String,
                moreLinkClick: identity,
                moreLinkClassNames: identity,
                moreLinkContent: identity,
                moreLinkDidMount: identity,
                moreLinkWillUnmount: identity,
            };
// do NOT give a type here. need `typeof BASE_OPTION_DEFAULTS` to give real results.
// raw values.
            var BASE_OPTION_DEFAULTS = {
                eventDisplay: 'auto',
                defaultRangeSeparator: ' - ',
                titleRangeSeparator: ' \u2013 ',
                defaultTimedEventDuration: '01:00:00',
                defaultAllDayEventDuration: { day: 1 },
                forceEventDuration: false,
                nextDayThreshold: '00:00:00',
                dayHeaders: true,
                initialView: '',
                aspectRatio: 1.35,
                headerToolbar: {
                    start: 'title',
                    center: '',
                    end: 'today prev,next',
                },
                weekends: true,
                weekNumbers: false,
                weekNumberCalculation: 'local',
                editable: false,
                nowIndicator: false,
                scrollTime: '06:00:00',
                scrollTimeReset: true,
                slotMinTime: '00:00:00',
                slotMaxTime: '24:00:00',
                showNonCurrentDates: true,
                lazyFetching: true,
                startParam: 'start',
                endParam: 'end',
                timeZoneParam: 'timeZone',
                timeZone: 'local',
                locales: [],
                locale: '',
                themeSystem: 'standard',
                dragRevertDuration: 500,
                dragScroll: true,
                allDayMaintainDuration: false,
                unselectAuto: true,
                dropAccept: '*',
                eventOrder: 'start,-duration,allDay,title',
                dayPopoverFormat: { month: 'long', day: 'numeric', year: 'numeric' },
                handleWindowResize: true,
                windowResizeDelay: 100,
                longPressDelay: 1000,
                eventDragMinDistance: 5,
                expandRows: false,
                navLinks: false,
                selectable: false,
                eventMinHeight: 15,
                eventMinWidth: 30,
                eventShortHeight: 30,
            };
// calendar listeners
// ------------------
            var CALENDAR_LISTENER_REFINERS = {
                datesSet: identity,
                eventsSet: identity,
                eventAdd: identity,
                eventChange: identity,
                eventRemove: identity,
                windowResize: identity,
                eventClick: identity,
                eventMouseEnter: identity,
                eventMouseLeave: identity,
                select: identity,
                unselect: identity,
                loading: identity,
                // internal
                _unmount: identity,
                _beforeprint: identity,
                _afterprint: identity,
                _noEventDrop: identity,
                _noEventResize: identity,
                _resize: identity,
                _scrollRequest: identity,
            };
// calendar-specific options
// -------------------------
            var CALENDAR_OPTION_REFINERS = {
                buttonText: identity,
                buttonHints: identity,
                views: identity,
                plugins: identity,
                initialEvents: identity,
                events: identity,
                eventSources: identity,
            };
            var COMPLEX_OPTION_COMPARATORS = {
                headerToolbar: isMaybeObjectsEqual,
                footerToolbar: isMaybeObjectsEqual,
                buttonText: isMaybeObjectsEqual,
                buttonHints: isMaybeObjectsEqual,
                buttonIcons: isMaybeObjectsEqual,
                dateIncrement: isMaybeObjectsEqual,
            };
            function isMaybeObjectsEqual(a, b) {
                if (typeof a === 'object' && typeof b === 'object' && a && b) { // both non-null objects
                    return isPropsEqual(a, b);
                }
                return a === b;
            }
// view-specific options
// ---------------------
            var VIEW_OPTION_REFINERS = {
                type: String,
                component: identity,
                buttonText: String,
                buttonTextKey: String,
                dateProfileGeneratorClass: identity,
                usesMinMaxTime: Boolean,
                classNames: identity,
                content: identity,
                didMount: identity,
                willUnmount: identity,
            };
// util funcs
// ----------------------------------------------------------------------------------------------------
            function mergeRawOptions(optionSets) {
                return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS);
            }
            function refineProps(input, refiners) {
                var refined = {};
                var extra = {};
                for (var propName in refiners) {
                    if (propName in input) {
                        refined[propName] = refiners[propName](input[propName]);
                    }
                }
                for (var propName in input) {
                    if (!(propName in refiners)) {
                        extra[propName] = input[propName];
                    }
                }
                return { refined: refined, extra: extra };
            }
            function identity(raw) {
                return raw;
            }

            function parseEvents(rawEvents, eventSource, context, allowOpenRange) {
                var eventStore = createEmptyEventStore();
                var eventRefiners = buildEventRefiners(context);
                for (var _i = 0, rawEvents_1 = rawEvents; _i < rawEvents_1.length; _i++) {
                    var rawEvent = rawEvents_1[_i];
                    var tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners);
                    if (tuple) {
                        eventTupleToStore(tuple, eventStore);
                    }
                }
                return eventStore;
            }
            function eventTupleToStore(tuple, eventStore) {
                if (eventStore === void 0) { eventStore = createEmptyEventStore(); }
                eventStore.defs[tuple.def.defId] = tuple.def;
                if (tuple.instance) {
                    eventStore.instances[tuple.instance.instanceId] = tuple.instance;
                }
                return eventStore;
            }
// retrieves events that have the same groupId as the instance specified by `instanceId`
// or they are the same as the instance.
// why might instanceId not be in the store? an event from another calendar?
            function getRelevantEvents(eventStore, instanceId) {
                var instance = eventStore.instances[instanceId];
                if (instance) {
                    var def_1 = eventStore.defs[instance.defId];
                    // get events/instances with same group
                    var newStore = filterEventStoreDefs(eventStore, function (lookDef) { return isEventDefsGrouped(def_1, lookDef); });
                    // add the original
                    // TODO: wish we could use eventTupleToStore or something like it
                    newStore.defs[def_1.defId] = def_1;
                    newStore.instances[instance.instanceId] = instance;
                    return newStore;
                }
                return createEmptyEventStore();
            }
            function isEventDefsGrouped(def0, def1) {
                return Boolean(def0.groupId && def0.groupId === def1.groupId);
            }
            function createEmptyEventStore() {
                return { defs: {}, instances: {} };
            }
            function mergeEventStores(store0, store1) {
                return {
                    defs: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, store0.defs), store1.defs),
                    instances: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, store0.instances), store1.instances),
                };
            }
            function filterEventStoreDefs(eventStore, filterFunc) {
                var defs = filterHash(eventStore.defs, filterFunc);
                var instances = filterHash(eventStore.instances, function (instance) { return (defs[instance.defId] // still exists?
                ); });
                return { defs: defs, instances: instances };
            }
            function excludeSubEventStore(master, sub) {
                var defs = master.defs, instances = master.instances;
                var filteredDefs = {};
                var filteredInstances = {};
                for (var defId in defs) {
                    if (!sub.defs[defId]) { // not explicitly excluded
                        filteredDefs[defId] = defs[defId];
                    }
                }
                for (var instanceId in instances) {
                    if (!sub.instances[instanceId] && // not explicitly excluded
                        filteredDefs[instances[instanceId].defId] // def wasn't filtered away
                    ) {
                        filteredInstances[instanceId] = instances[instanceId];
                    }
                }
                return {
                    defs: filteredDefs,
                    instances: filteredInstances,
                };
            }

            function normalizeConstraint(input, context) {
                if (Array.isArray(input)) {
                    return parseEvents(input, null, context, true); // allowOpenRange=true
                }
                if (typeof input === 'object' && input) { // non-null object
                    return parseEvents([input], null, context, true); // allowOpenRange=true
                }
                if (input != null) {
                    return String(input);
                }
                return null;
            }

            function parseClassNames(raw) {
                if (Array.isArray(raw)) {
                    return raw;
                }
                if (typeof raw === 'string') {
                    return raw.split(/\s+/);
                }
                return [];
            }

// TODO: better called "EventSettings" or "EventConfig"
// TODO: move this file into structs
// TODO: separate constraint/overlap/allow, because selection uses only that, not other props
            var EVENT_UI_REFINERS = {
                display: String,
                editable: Boolean,
                startEditable: Boolean,
                durationEditable: Boolean,
                constraint: identity,
                overlap: identity,
                allow: identity,
                className: parseClassNames,
                classNames: parseClassNames,
                color: String,
                backgroundColor: String,
                borderColor: String,
                textColor: String,
            };
            var EMPTY_EVENT_UI = {
                display: null,
                startEditable: null,
                durationEditable: null,
                constraints: [],
                overlap: null,
                allows: [],
                backgroundColor: '',
                borderColor: '',
                textColor: '',
                classNames: [],
            };
            function createEventUi(refined, context) {
                var constraint = normalizeConstraint(refined.constraint, context);
                return {
                    display: refined.display || null,
                    startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,
                    durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,
                    constraints: constraint != null ? [constraint] : [],
                    overlap: refined.overlap != null ? refined.overlap : null,
                    allows: refined.allow != null ? [refined.allow] : [],
                    backgroundColor: refined.backgroundColor || refined.color || '',
                    borderColor: refined.borderColor || refined.color || '',
                    textColor: refined.textColor || '',
                    classNames: (refined.className || []).concat(refined.classNames || []), // join singular and plural
                };
            }
// TODO: prevent against problems with <2 args!
            function combineEventUis(uis) {
                return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);
            }
            function combineTwoEventUis(item0, item1) {
                return {
                    display: item1.display != null ? item1.display : item0.display,
                    startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,
                    durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,
                    constraints: item0.constraints.concat(item1.constraints),
                    overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,
                    allows: item0.allows.concat(item1.allows),
                    backgroundColor: item1.backgroundColor || item0.backgroundColor,
                    borderColor: item1.borderColor || item0.borderColor,
                    textColor: item1.textColor || item0.textColor,
                    classNames: item0.classNames.concat(item1.classNames),
                };
            }

            var EVENT_NON_DATE_REFINERS = {
                id: String,
                groupId: String,
                title: String,
                url: String,
                interactive: Boolean,
            };
            var EVENT_DATE_REFINERS = {
                start: identity,
                end: identity,
                date: identity,
                allDay: Boolean,
            };
            var EVENT_REFINERS = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS), { extendedProps: identity });
            function parseEvent(raw, eventSource, context, allowOpenRange, refiners) {
                if (refiners === void 0) { refiners = buildEventRefiners(context); }
                var _a = refineEventDef(raw, context, refiners), refined = _a.refined, extra = _a.extra;
                var defaultAllDay = computeIsDefaultAllDay(eventSource, context);
                var recurringRes = parseRecurring(refined, defaultAllDay, context.dateEnv, context.pluginHooks.recurringTypes);
                if (recurringRes) {
                    var def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', recurringRes.allDay, Boolean(recurringRes.duration), context);
                    def.recurringDef = {
                        typeId: recurringRes.typeId,
                        typeData: recurringRes.typeData,
                        duration: recurringRes.duration,
                    };
                    return { def: def, instance: null };
                }
                var singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange);
                if (singleRes) {
                    var def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', singleRes.allDay, singleRes.hasEnd, context);
                    var instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);
                    return { def: def, instance: instance };
                }
                return null;
            }
            function refineEventDef(raw, context, refiners) {
                if (refiners === void 0) { refiners = buildEventRefiners(context); }
                return refineProps(raw, refiners);
            }
            function buildEventRefiners(context) {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, EVENT_UI_REFINERS), EVENT_REFINERS), context.pluginHooks.eventRefiners);
            }
            /*
Will NOT populate extendedProps with the leftover properties.
Will NOT populate date-related props.
*/
            function parseEventDef(refined, extra, sourceId, allDay, hasEnd, context) {
                var def = {
                    title: refined.title || '',
                    groupId: refined.groupId || '',
                    publicId: refined.id || '',
                    url: refined.url || '',
                    recurringDef: null,
                    defId: guid(),
                    sourceId: sourceId,
                    allDay: allDay,
                    hasEnd: hasEnd,
                    interactive: refined.interactive,
                    ui: createEventUi(refined, context),
                    extendedProps: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, (refined.extendedProps || {})), extra),
                };
                for (var _i = 0, _a = context.pluginHooks.eventDefMemberAdders; _i < _a.length; _i++) {
                    var memberAdder = _a[_i];
                    (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(def, memberAdder(refined));
                }
                // help out EventApi from having user modify props
                Object.freeze(def.ui.classNames);
                Object.freeze(def.extendedProps);
                return def;
            }
            function parseSingle(refined, defaultAllDay, context, allowOpenRange) {
                var allDay = refined.allDay;
                var startMeta;
                var startMarker = null;
                var hasEnd = false;
                var endMeta;
                var endMarker = null;
                var startInput = refined.start != null ? refined.start : refined.date;
                startMeta = context.dateEnv.createMarkerMeta(startInput);
                if (startMeta) {
                    startMarker = startMeta.marker;
                }
                else if (!allowOpenRange) {
                    return null;
                }
                if (refined.end != null) {
                    endMeta = context.dateEnv.createMarkerMeta(refined.end);
                }
                if (allDay == null) {
                    if (defaultAllDay != null) {
                        allDay = defaultAllDay;
                    }
                    else {
                        // fall back to the date props LAST
                        allDay = (!startMeta || startMeta.isTimeUnspecified) &&
                            (!endMeta || endMeta.isTimeUnspecified);
                    }
                }
                if (allDay && startMarker) {
                    startMarker = startOfDay(startMarker);
                }
                if (endMeta) {
                    endMarker = endMeta.marker;
                    if (allDay) {
                        endMarker = startOfDay(endMarker);
                    }
                    if (startMarker && endMarker <= startMarker) {
                        endMarker = null;
                    }
                }
                if (endMarker) {
                    hasEnd = true;
                }
                else if (!allowOpenRange) {
                    hasEnd = context.options.forceEventDuration || false;
                    endMarker = context.dateEnv.add(startMarker, allDay ?
                        context.options.defaultAllDayEventDuration :
                        context.options.defaultTimedEventDuration);
                }
                return {
                    allDay: allDay,
                    hasEnd: hasEnd,
                    range: { start: startMarker, end: endMarker },
                    forcedStartTzo: startMeta ? startMeta.forcedTzo : null,
                    forcedEndTzo: endMeta ? endMeta.forcedTzo : null,
                };
            }
            function computeIsDefaultAllDay(eventSource, context) {
                var res = null;
                if (eventSource) {
                    res = eventSource.defaultAllDay;
                }
                if (res == null) {
                    res = context.options.defaultAllDay;
                }
                return res;
            }

            /* Date stuff that doesn't belong in datelib core
----------------------------------------------------------------------------------------------------------------------*/
// given a timed range, computes an all-day range that has the same exact duration,
// but whose start time is aligned with the start of the day.
            function computeAlignedDayRange(timedRange) {
                var dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;
                var start = startOfDay(timedRange.start);
                var end = addDays(start, dayCnt);
                return { start: start, end: end };
            }
// given a timed range, computes an all-day range based on how for the end date bleeds into the next day
// TODO: give nextDayThreshold a default arg
            function computeVisibleDayRange(timedRange, nextDayThreshold) {
                if (nextDayThreshold === void 0) { nextDayThreshold = createDuration(0); }
                var startDay = null;
                var endDay = null;
                if (timedRange.end) {
                    endDay = startOfDay(timedRange.end);
                    var endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into `endDay`
                    // If the end time is actually inclusively part of the next day and is equal to or
                    // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.
                    // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.
                    if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {
                        endDay = addDays(endDay, 1);
                    }
                }
                if (timedRange.start) {
                    startDay = startOfDay(timedRange.start); // the beginning of the day the range starts
                    // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.
                    if (endDay && endDay <= startDay) {
                        endDay = addDays(startDay, 1);
                    }
                }
                return { start: startDay, end: endDay };
            }
// spans from one day into another?
            function isMultiDayRange(range) {
                var visibleRange = computeVisibleDayRange(range);
                return diffDays(visibleRange.start, visibleRange.end) > 1;
            }
            function diffDates(date0, date1, dateEnv, largeUnit) {
                if (largeUnit === 'year') {
                    return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');
                }
                if (largeUnit === 'month') {
                    return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');
                }
                return diffDayAndTime(date0, date1); // returns a duration
            }

            function parseRange(input, dateEnv) {
                var start = null;
                var end = null;
                if (input.start) {
                    start = dateEnv.createMarker(input.start);
                }
                if (input.end) {
                    end = dateEnv.createMarker(input.end);
                }
                if (!start && !end) {
                    return null;
                }
                if (start && end && end < start) {
                    return null;
                }
                return { start: start, end: end };
            }
// SIDE-EFFECT: will mutate ranges.
// Will return a new array result.
            function invertRanges(ranges, constraintRange) {
                var invertedRanges = [];
                var start = constraintRange.start; // the end of the previous range. the start of the new range
                var i;
                var dateRange;
                // ranges need to be in order. required for our date-walking algorithm
                ranges.sort(compareRanges);
                for (i = 0; i < ranges.length; i += 1) {
                    dateRange = ranges[i];
                    // add the span of time before the event (if there is any)
                    if (dateRange.start > start) { // compare millisecond time (skip any ambig logic)
                        invertedRanges.push({ start: start, end: dateRange.start });
                    }
                    if (dateRange.end > start) {
                        start = dateRange.end;
                    }
                }
                // add the span of time after the last event (if there is any)
                if (start < constraintRange.end) { // compare millisecond time (skip any ambig logic)
                    invertedRanges.push({ start: start, end: constraintRange.end });
                }
                return invertedRanges;
            }
            function compareRanges(range0, range1) {
                return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first
            }
            function intersectRanges(range0, range1) {
                var start = range0.start, end = range0.end;
                var newRange = null;
                if (range1.start !== null) {
                    if (start === null) {
                        start = range1.start;
                    }
                    else {
                        start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));
                    }
                }
                if (range1.end != null) {
                    if (end === null) {
                        end = range1.end;
                    }
                    else {
                        end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));
                    }
                }
                if (start === null || end === null || start < end) {
                    newRange = { start: start, end: end };
                }
                return newRange;
            }
            function rangesEqual(range0, range1) {
                return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) &&
                    (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());
            }
            function rangesIntersect(range0, range1) {
                return (range0.end === null || range1.start === null || range0.end > range1.start) &&
                    (range0.start === null || range1.end === null || range0.start < range1.end);
            }
            function rangeContainsRange(outerRange, innerRange) {
                return (outerRange.start === null || (innerRange.start !== null && innerRange.start >= outerRange.start)) &&
                    (outerRange.end === null || (innerRange.end !== null && innerRange.end <= outerRange.end));
            }
            function rangeContainsMarker(range, date) {
                return (range.start === null || date >= range.start) &&
                    (range.end === null || date < range.end);
            }
// If the given date is not within the given range, move it inside.
// (If it's past the end, make it one millisecond before the end).
            function constrainMarkerToRange(date, range) {
                if (range.start != null && date < range.start) {
                    return range.start;
                }
                if (range.end != null && date >= range.end) {
                    return new Date(range.end.valueOf() - 1);
                }
                return date;
            }

            /*
Specifying nextDayThreshold signals that all-day ranges should be sliced.
*/
            function sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {
                var inverseBgByGroupId = {};
                var inverseBgByDefId = {};
                var defByGroupId = {};
                var bgRanges = [];
                var fgRanges = [];
                var eventUis = compileEventUis(eventStore.defs, eventUiBases);
                for (var defId in eventStore.defs) {
                    var def = eventStore.defs[defId];
                    var ui = eventUis[def.defId];
                    if (ui.display === 'inverse-background') {
                        if (def.groupId) {
                            inverseBgByGroupId[def.groupId] = [];
                            if (!defByGroupId[def.groupId]) {
                                defByGroupId[def.groupId] = def;
                            }
                        }
                        else {
                            inverseBgByDefId[defId] = [];
                        }
                    }
                }
                for (var instanceId in eventStore.instances) {
                    var instance = eventStore.instances[instanceId];
                    var def = eventStore.defs[instance.defId];
                    var ui = eventUis[def.defId];
                    var origRange = instance.range;
                    var normalRange = (!def.allDay && nextDayThreshold) ?
                        computeVisibleDayRange(origRange, nextDayThreshold) :
                        origRange;
                    var slicedRange = intersectRanges(normalRange, framingRange);
                    if (slicedRange) {
                        if (ui.display === 'inverse-background') {
                            if (def.groupId) {
                                inverseBgByGroupId[def.groupId].push(slicedRange);
                            }
                            else {
                                inverseBgByDefId[instance.defId].push(slicedRange);
                            }
                        }
                        else if (ui.display !== 'none') {
                            (ui.display === 'background' ? bgRanges : fgRanges).push({
                                def: def,
                                ui: ui,
                                instance: instance,
                                range: slicedRange,
                                isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),
                                isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf(),
                            });
                        }
                    }
                }
                for (var groupId in inverseBgByGroupId) { // BY GROUP
                    var ranges = inverseBgByGroupId[groupId];
                    var invertedRanges = invertRanges(ranges, framingRange);
                    for (var _i = 0, invertedRanges_1 = invertedRanges; _i < invertedRanges_1.length; _i++) {
                        var invertedRange = invertedRanges_1[_i];
                        var def = defByGroupId[groupId];
                        var ui = eventUis[def.defId];
                        bgRanges.push({
                            def: def,
                            ui: ui,
                            instance: null,
                            range: invertedRange,
                            isStart: false,
                            isEnd: false,
                        });
                    }
                }
                for (var defId in inverseBgByDefId) {
                    var ranges = inverseBgByDefId[defId];
                    var invertedRanges = invertRanges(ranges, framingRange);
                    for (var _a = 0, invertedRanges_2 = invertedRanges; _a < invertedRanges_2.length; _a++) {
                        var invertedRange = invertedRanges_2[_a];
                        bgRanges.push({
                            def: eventStore.defs[defId],
                            ui: eventUis[defId],
                            instance: null,
                            range: invertedRange,
                            isStart: false,
                            isEnd: false,
                        });
                    }
                }
                return { bg: bgRanges, fg: fgRanges };
            }
            function hasBgRendering(def) {
                return def.ui.display === 'background' || def.ui.display === 'inverse-background';
            }
            function setElSeg(el, seg) {
                el.fcSeg = seg;
            }
            function getElSeg(el) {
                return el.fcSeg ||
                    el.parentNode.fcSeg || // for the harness
                    null;
            }
// event ui computation
            function compileEventUis(eventDefs, eventUiBases) {
                return mapHash(eventDefs, function (eventDef) { return compileEventUi(eventDef, eventUiBases); });
            }
            function compileEventUi(eventDef, eventUiBases) {
                var uis = [];
                if (eventUiBases['']) {
                    uis.push(eventUiBases['']);
                }
                if (eventUiBases[eventDef.defId]) {
                    uis.push(eventUiBases[eventDef.defId]);
                }
                uis.push(eventDef.ui);
                return combineEventUis(uis);
            }
            function sortEventSegs(segs, eventOrderSpecs) {
                var objs = segs.map(buildSegCompareObj);
                objs.sort(function (obj0, obj1) { return compareByFieldSpecs(obj0, obj1, eventOrderSpecs); });
                return objs.map(function (c) { return c._seg; });
            }
// returns a object with all primitive props that can be compared
            function buildSegCompareObj(seg) {
                var eventRange = seg.eventRange;
                var eventDef = eventRange.def;
                var range = eventRange.instance ? eventRange.instance.range : eventRange.range;
                var start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events
                var end = range.end ? range.end.valueOf() : 0; // "
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventDef.extendedProps), eventDef), { id: eventDef.publicId, start: start,
                    end: end, duration: end - start, allDay: Number(eventDef.allDay), _seg: seg });
            }
            function computeSegDraggable(seg, context) {
                var pluginHooks = context.pluginHooks;
                var transformers = pluginHooks.isDraggableTransformers;
                var _a = seg.eventRange, def = _a.def, ui = _a.ui;
                var val = ui.startEditable;
                for (var _i = 0, transformers_1 = transformers; _i < transformers_1.length; _i++) {
                    var transformer = transformers_1[_i];
                    val = transformer(val, def, ui, context);
                }
                return val;
            }
            function computeSegStartResizable(seg, context) {
                return seg.isStart && seg.eventRange.ui.durationEditable && context.options.eventResizableFromStart;
            }
            function computeSegEndResizable(seg, context) {
                return seg.isEnd && seg.eventRange.ui.durationEditable;
            }
            function buildSegTimeText(seg, timeFormat, context, defaultDisplayEventTime, // defaults to true
                                      defaultDisplayEventEnd, // defaults to true
                                      startOverride, endOverride) {
                var dateEnv = context.dateEnv, options = context.options;
                var displayEventTime = options.displayEventTime, displayEventEnd = options.displayEventEnd;
                var eventDef = seg.eventRange.def;
                var eventInstance = seg.eventRange.instance;
                if (displayEventTime == null) {
                    displayEventTime = defaultDisplayEventTime !== false;
                }
                if (displayEventEnd == null) {
                    displayEventEnd = defaultDisplayEventEnd !== false;
                }
                var wholeEventStart = eventInstance.range.start;
                var wholeEventEnd = eventInstance.range.end;
                var segStart = startOverride || seg.start || seg.eventRange.range.start;
                var segEnd = endOverride || seg.end || seg.eventRange.range.end;
                var isStartDay = startOfDay(wholeEventStart).valueOf() === startOfDay(segStart).valueOf();
                var isEndDay = startOfDay(addMs(wholeEventEnd, -1)).valueOf() === startOfDay(addMs(segEnd, -1)).valueOf();
                if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {
                    segStart = isStartDay ? wholeEventStart : segStart;
                    segEnd = isEndDay ? wholeEventEnd : segEnd;
                    if (displayEventEnd && eventDef.hasEnd) {
                        return dateEnv.formatRange(segStart, segEnd, timeFormat, {
                            forcedStartTzo: startOverride ? null : eventInstance.forcedStartTzo,
                            forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo,
                        });
                    }
                    return dateEnv.format(segStart, timeFormat, {
                        forcedTzo: startOverride ? null : eventInstance.forcedStartTzo, // nooooo, same
                    });
                }
                return '';
            }
            function getSegMeta(seg, todayRange, nowDate) {
                var segRange = seg.eventRange.range;
                return {
                    isPast: segRange.end < (nowDate || todayRange.start),
                    isFuture: segRange.start >= (nowDate || todayRange.end),
                    isToday: todayRange && rangeContainsMarker(todayRange, segRange.start),
                };
            }
            function getEventClassNames(props) {
                var classNames = ['fc-event'];
                if (props.isMirror) {
                    classNames.push('fc-event-mirror');
                }
                if (props.isDraggable) {
                    classNames.push('fc-event-draggable');
                }
                if (props.isStartResizable || props.isEndResizable) {
                    classNames.push('fc-event-resizable');
                }
                if (props.isDragging) {
                    classNames.push('fc-event-dragging');
                }
                if (props.isResizing) {
                    classNames.push('fc-event-resizing');
                }
                if (props.isSelected) {
                    classNames.push('fc-event-selected');
                }
                if (props.isStart) {
                    classNames.push('fc-event-start');
                }
                if (props.isEnd) {
                    classNames.push('fc-event-end');
                }
                if (props.isPast) {
                    classNames.push('fc-event-past');
                }
                if (props.isToday) {
                    classNames.push('fc-event-today');
                }
                if (props.isFuture) {
                    classNames.push('fc-event-future');
                }
                return classNames;
            }
            function buildEventRangeKey(eventRange) {
                return eventRange.instance
                    ? eventRange.instance.instanceId
                    : eventRange.def.defId + ":" + eventRange.range.start.toISOString();
                // inverse-background events don't have specific instances. TODO: better solution
            }
            function getSegAnchorAttrs(seg, context) {
                var _a = seg.eventRange, def = _a.def, instance = _a.instance;
                var url = def.url;
                if (url) {
                    return { href: url };
                }
                var emitter = context.emitter, options = context.options;
                var eventInteractive = options.eventInteractive;
                if (eventInteractive == null) {
                    eventInteractive = def.interactive;
                    if (eventInteractive == null) {
                        eventInteractive = Boolean(emitter.hasHandlers('eventClick'));
                    }
                }
                // mock what happens in EventClicking
                if (eventInteractive) {
                    // only attach keyboard-related handlers because click handler is already done in EventClicking
                    return createAriaKeyboardAttrs(function (ev) {
                        emitter.trigger('eventClick', {
                            el: ev.target,
                            event: new EventApi(context, def, instance),
                            jsEvent: ev,
                            view: context.viewApi,
                        });
                    });
                }
                return {};
            }

            var STANDARD_PROPS = {
                start: identity,
                end: identity,
                allDay: Boolean,
            };
            function parseDateSpan(raw, dateEnv, defaultDuration) {
                var span = parseOpenDateSpan(raw, dateEnv);
                var range = span.range;
                if (!range.start) {
                    return null;
                }
                if (!range.end) {
                    if (defaultDuration == null) {
                        return null;
                    }
                    range.end = dateEnv.add(range.start, defaultDuration);
                }
                return span;
            }
            /*
TODO: somehow combine with parseRange?
Will return null if the start/end props were present but parsed invalidly.
*/
            function parseOpenDateSpan(raw, dateEnv) {
                var _a = refineProps(raw, STANDARD_PROPS), standardProps = _a.refined, extra = _a.extra;
                var startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;
                var endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;
                var allDay = standardProps.allDay;
                if (allDay == null) {
                    allDay = (startMeta && startMeta.isTimeUnspecified) &&
                        (!endMeta || endMeta.isTimeUnspecified);
                }
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ range: {
                        start: startMeta ? startMeta.marker : null,
                        end: endMeta ? endMeta.marker : null,
                    }, allDay: allDay }, extra);
            }
            function isDateSpansEqual(span0, span1) {
                return rangesEqual(span0.range, span1.range) &&
                    span0.allDay === span1.allDay &&
                    isSpanPropsEqual(span0, span1);
            }
// the NON-DATE-RELATED props
            function isSpanPropsEqual(span0, span1) {
                for (var propName in span1) {
                    if (propName !== 'range' && propName !== 'allDay') {
                        if (span0[propName] !== span1[propName]) {
                            return false;
                        }
                    }
                }
                // are there any props that span0 has that span1 DOESN'T have?
                // both have range/allDay, so no need to special-case.
                for (var propName in span0) {
                    if (!(propName in span1)) {
                        return false;
                    }
                }
                return true;
            }
            function buildDateSpanApi(span, dateEnv) {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, buildRangeApi(span.range, dateEnv, span.allDay)), { allDay: span.allDay });
            }
            function buildRangeApiWithTimeZone(range, dateEnv, omitTime) {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, buildRangeApi(range, dateEnv, omitTime)), { timeZone: dateEnv.timeZone });
            }
            function buildRangeApi(range, dateEnv, omitTime) {
                return {
                    start: dateEnv.toDate(range.start),
                    end: dateEnv.toDate(range.end),
                    startStr: dateEnv.formatIso(range.start, { omitTime: omitTime }),
                    endStr: dateEnv.formatIso(range.end, { omitTime: omitTime }),
                };
            }
            function fabricateEventRange(dateSpan, eventUiBases, context) {
                var res = refineEventDef({ editable: false }, context);
                var def = parseEventDef(res.refined, res.extra, '', // sourceId
                    dateSpan.allDay, true, // hasEnd
                    context);
                return {
                    def: def,
                    ui: compileEventUi(def, eventUiBases),
                    instance: createEventInstance(def.defId, dateSpan.range),
                    range: dateSpan.range,
                    isStart: true,
                    isEnd: true,
                };
            }

            function triggerDateSelect(selection, pev, context) {
                context.emitter.trigger('select', (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, buildDateSpanApiWithContext(selection, context)), { jsEvent: pev ? pev.origEvent : null, view: context.viewApi || context.calendarApi.view }));
            }
            function triggerDateUnselect(pev, context) {
                context.emitter.trigger('unselect', {
                    jsEvent: pev ? pev.origEvent : null,
                    view: context.viewApi || context.calendarApi.view,
                });
            }
            function buildDateSpanApiWithContext(dateSpan, context) {
                var props = {};
                for (var _i = 0, _a = context.pluginHooks.dateSpanTransforms; _i < _a.length; _i++) {
                    var transform = _a[_i];
                    (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(props, transform(dateSpan, context));
                }
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(props, buildDateSpanApi(dateSpan, context.dateEnv));
                return props;
            }
// Given an event's allDay status and start date, return what its fallback end date should be.
// TODO: rename to computeDefaultEventEnd
            function getDefaultEventEnd(allDay, marker, context) {
                var dateEnv = context.dateEnv, options = context.options;
                var end = marker;
                if (allDay) {
                    end = startOfDay(end);
                    end = dateEnv.add(end, options.defaultAllDayEventDuration);
                }
                else {
                    end = dateEnv.add(end, options.defaultTimedEventDuration);
                }
                return end;
            }

// applies the mutation to ALL defs/instances within the event store
            function applyMutationToEventStore(eventStore, eventConfigBase, mutation, context) {
                var eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);
                var dest = createEmptyEventStore();
                for (var defId in eventStore.defs) {
                    var def = eventStore.defs[defId];
                    dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context);
                }
                for (var instanceId in eventStore.instances) {
                    var instance = eventStore.instances[instanceId];
                    var def = dest.defs[instance.defId]; // important to grab the newly modified def
                    dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context);
                }
                return dest;
            }
            function applyMutationToEventDef(eventDef, eventConfig, mutation, context) {
                var standardProps = mutation.standardProps || {};
                // if hasEnd has not been specified, guess a good value based on deltas.
                // if duration will change, there's no way the default duration will persist,
                // and thus, we need to mark the event as having a real end
                if (standardProps.hasEnd == null &&
                    eventConfig.durationEditable &&
                    (mutation.startDelta || mutation.endDelta)) {
                    standardProps.hasEnd = true; // TODO: is this mutation okay?
                }
                var copy = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventDef), standardProps), { ui: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventDef.ui), standardProps.ui) });
                if (mutation.extendedProps) {
                    copy.extendedProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, copy.extendedProps), mutation.extendedProps);
                }
                for (var _i = 0, _a = context.pluginHooks.eventDefMutationAppliers; _i < _a.length; _i++) {
                    var applier = _a[_i];
                    applier(copy, mutation, context);
                }
                if (!copy.hasEnd && context.options.forceEventDuration) {
                    copy.hasEnd = true;
                }
                return copy;
            }
            function applyMutationToEventInstance(eventInstance, eventDef, // must first be modified by applyMutationToEventDef
                                                  eventConfig, mutation, context) {
                var dateEnv = context.dateEnv;
                var forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;
                var clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;
                var copy = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventInstance);
                if (forceAllDay) {
                    copy.range = computeAlignedDayRange(copy.range);
                }
                if (mutation.datesDelta && eventConfig.startEditable) {
                    copy.range = {
                        start: dateEnv.add(copy.range.start, mutation.datesDelta),
                        end: dateEnv.add(copy.range.end, mutation.datesDelta),
                    };
                }
                if (mutation.startDelta && eventConfig.durationEditable) {
                    copy.range = {
                        start: dateEnv.add(copy.range.start, mutation.startDelta),
                        end: copy.range.end,
                    };
                }
                if (mutation.endDelta && eventConfig.durationEditable) {
                    copy.range = {
                        start: copy.range.start,
                        end: dateEnv.add(copy.range.end, mutation.endDelta),
                    };
                }
                if (clearEnd) {
                    copy.range = {
                        start: copy.range.start,
                        end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context),
                    };
                }
                // in case event was all-day but the supplied deltas were not
                // better util for this?
                if (eventDef.allDay) {
                    copy.range = {
                        start: startOfDay(copy.range.start),
                        end: startOfDay(copy.range.end),
                    };
                }
                // handle invalid durations
                if (copy.range.end < copy.range.start) {
                    copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context);
                }
                return copy;
            }

// no public types yet. when there are, export from:
// import {} from './api-type-deps'
            var ViewApi = /** @class */ (function () {
                function ViewApi(type, getCurrentData, dateEnv) {
                    this.type = type;
                    this.getCurrentData = getCurrentData;
                    this.dateEnv = dateEnv;
                }
                Object.defineProperty(ViewApi.prototype, "calendar", {
                    get: function () {
                        return this.getCurrentData().calendarApi;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(ViewApi.prototype, "title", {
                    get: function () {
                        return this.getCurrentData().viewTitle;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(ViewApi.prototype, "activeStart", {
                    get: function () {
                        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(ViewApi.prototype, "activeEnd", {
                    get: function () {
                        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(ViewApi.prototype, "currentStart", {
                    get: function () {
                        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(ViewApi.prototype, "currentEnd", {
                    get: function () {
                        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);
                    },
                    enumerable: false,
                    configurable: true
                });
                ViewApi.prototype.getOption = function (name) {
                    return this.getCurrentData().options[name]; // are the view-specific options
                };
                return ViewApi;
            }());

            var EVENT_SOURCE_REFINERS = {
                id: String,
                defaultAllDay: Boolean,
                url: String,
                format: String,
                events: identity,
                eventDataTransform: identity,
                // for any network-related sources
                success: identity,
                failure: identity,
            };
            function parseEventSource(raw, context, refiners) {
                if (refiners === void 0) { refiners = buildEventSourceRefiners(context); }
                var rawObj;
                if (typeof raw === 'string') {
                    rawObj = { url: raw };
                }
                else if (typeof raw === 'function' || Array.isArray(raw)) {
                    rawObj = { events: raw };
                }
                else if (typeof raw === 'object' && raw) { // not null
                    rawObj = raw;
                }
                if (rawObj) {
                    var _a = refineProps(rawObj, refiners), refined = _a.refined, extra = _a.extra;
                    var metaRes = buildEventSourceMeta(refined, context);
                    if (metaRes) {
                        return {
                            _raw: raw,
                            isFetching: false,
                            latestFetchId: '',
                            fetchRange: null,
                            defaultAllDay: refined.defaultAllDay,
                            eventDataTransform: refined.eventDataTransform,
                            success: refined.success,
                            failure: refined.failure,
                            publicId: refined.id || '',
                            sourceId: guid(),
                            sourceDefId: metaRes.sourceDefId,
                            meta: metaRes.meta,
                            ui: createEventUi(refined, context),
                            extendedProps: extra,
                        };
                    }
                }
                return null;
            }
            function buildEventSourceRefiners(context) {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS), context.pluginHooks.eventSourceRefiners);
            }
            function buildEventSourceMeta(raw, context) {
                var defs = context.pluginHooks.eventSourceDefs;
                for (var i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence
                    var def = defs[i];
                    var meta = def.parseMeta(raw);
                    if (meta) {
                        return { sourceDefId: i, meta: meta };
                    }
                }
                return null;
            }

            function reduceCurrentDate(currentDate, action) {
                switch (action.type) {
                    case 'CHANGE_DATE':
                        return action.dateMarker;
                    default:
                        return currentDate;
                }
            }
            function getInitialDate(options, dateEnv) {
                var initialDateInput = options.initialDate;
                // compute the initial ambig-timezone date
                if (initialDateInput != null) {
                    return dateEnv.createMarker(initialDateInput);
                }
                return getNow(options.now, dateEnv); // getNow already returns unzoned
            }
            function getNow(nowInput, dateEnv) {
                if (typeof nowInput === 'function') {
                    nowInput = nowInput();
                }
                if (nowInput == null) {
                    return dateEnv.createNowMarker();
                }
                return dateEnv.createMarker(nowInput);
            }

            var CalendarApi = /** @class */ (function () {
                function CalendarApi() {
                }
                CalendarApi.prototype.getCurrentData = function () {
                    return this.currentDataManager.getCurrentData();
                };
                CalendarApi.prototype.dispatch = function (action) {
                    return this.currentDataManager.dispatch(action);
                };
                Object.defineProperty(CalendarApi.prototype, "view", {
                    get: function () { return this.getCurrentData().viewApi; } // for public API
                    ,
                    enumerable: false,
                    configurable: true
                });
                CalendarApi.prototype.batchRendering = function (callback) {
                    callback();
                };
                CalendarApi.prototype.updateSize = function () {
                    this.trigger('_resize', true);
                };
                // Options
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.setOption = function (name, val) {
                    this.dispatch({
                        type: 'SET_OPTION',
                        optionName: name,
                        rawOptionValue: val,
                    });
                };
                CalendarApi.prototype.getOption = function (name) {
                    return this.currentDataManager.currentCalendarOptionsInput[name];
                };
                CalendarApi.prototype.getAvailableLocaleCodes = function () {
                    return Object.keys(this.getCurrentData().availableRawLocales);
                };
                // Trigger
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.on = function (handlerName, handler) {
                    var currentDataManager = this.currentDataManager;
                    if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {
                        currentDataManager.emitter.on(handlerName, handler);
                    }
                    else {
                        console.warn("Unknown listener name '" + handlerName + "'");
                    }
                };
                CalendarApi.prototype.off = function (handlerName, handler) {
                    this.currentDataManager.emitter.off(handlerName, handler);
                };
                // not meant for public use
                CalendarApi.prototype.trigger = function (handlerName) {
                    var _a;
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    (_a = this.currentDataManager.emitter).trigger.apply(_a, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([handlerName], args));
                };
                // View
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.changeView = function (viewType, dateOrRange) {
                    var _this = this;
                    this.batchRendering(function () {
                        _this.unselect();
                        if (dateOrRange) {
                            if (dateOrRange.start && dateOrRange.end) { // a range
                                _this.dispatch({
                                    type: 'CHANGE_VIEW_TYPE',
                                    viewType: viewType,
                                });
                                _this.dispatch({
                                    type: 'SET_OPTION',
                                    optionName: 'visibleRange',
                                    rawOptionValue: dateOrRange,
                                });
                            }
                            else {
                                var dateEnv = _this.getCurrentData().dateEnv;
                                _this.dispatch({
                                    type: 'CHANGE_VIEW_TYPE',
                                    viewType: viewType,
                                    dateMarker: dateEnv.createMarker(dateOrRange),
                                });
                            }
                        }
                        else {
                            _this.dispatch({
                                type: 'CHANGE_VIEW_TYPE',
                                viewType: viewType,
                            });
                        }
                    });
                };
                // Forces navigation to a view for the given date.
                // `viewType` can be a specific view name or a generic one like "week" or "day".
                // needs to change
                CalendarApi.prototype.zoomTo = function (dateMarker, viewType) {
                    var state = this.getCurrentData();
                    var spec;
                    viewType = viewType || 'day'; // day is default zoom
                    spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType);
                    this.unselect();
                    if (spec) {
                        this.dispatch({
                            type: 'CHANGE_VIEW_TYPE',
                            viewType: spec.type,
                            dateMarker: dateMarker,
                        });
                    }
                    else {
                        this.dispatch({
                            type: 'CHANGE_DATE',
                            dateMarker: dateMarker,
                        });
                    }
                };
                // Given a duration singular unit, like "week" or "day", finds a matching view spec.
                // Preference is given to views that have corresponding buttons.
                CalendarApi.prototype.getUnitViewSpec = function (unit) {
                    var _a = this.getCurrentData(), viewSpecs = _a.viewSpecs, toolbarConfig = _a.toolbarConfig;
                    var viewTypes = [].concat(toolbarConfig.header ? toolbarConfig.header.viewsWithButtons : [], toolbarConfig.footer ? toolbarConfig.footer.viewsWithButtons : []);
                    var i;
                    var spec;
                    for (var viewType in viewSpecs) {
                        viewTypes.push(viewType);
                    }
                    for (i = 0; i < viewTypes.length; i += 1) {
                        spec = viewSpecs[viewTypes[i]];
                        if (spec) {
                            if (spec.singleUnit === unit) {
                                return spec;
                            }
                        }
                    }
                    return null;
                };
                // Current Date
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.prev = function () {
                    this.unselect();
                    this.dispatch({ type: 'PREV' });
                };
                CalendarApi.prototype.next = function () {
                    this.unselect();
                    this.dispatch({ type: 'NEXT' });
                };
                CalendarApi.prototype.prevYear = function () {
                    var state = this.getCurrentData();
                    this.unselect();
                    this.dispatch({
                        type: 'CHANGE_DATE',
                        dateMarker: state.dateEnv.addYears(state.currentDate, -1),
                    });
                };
                CalendarApi.prototype.nextYear = function () {
                    var state = this.getCurrentData();
                    this.unselect();
                    this.dispatch({
                        type: 'CHANGE_DATE',
                        dateMarker: state.dateEnv.addYears(state.currentDate, 1),
                    });
                };
                CalendarApi.prototype.today = function () {
                    var state = this.getCurrentData();
                    this.unselect();
                    this.dispatch({
                        type: 'CHANGE_DATE',
                        dateMarker: getNow(state.calendarOptions.now, state.dateEnv),
                    });
                };
                CalendarApi.prototype.gotoDate = function (zonedDateInput) {
                    var state = this.getCurrentData();
                    this.unselect();
                    this.dispatch({
                        type: 'CHANGE_DATE',
                        dateMarker: state.dateEnv.createMarker(zonedDateInput),
                    });
                };
                CalendarApi.prototype.incrementDate = function (deltaInput) {
                    var state = this.getCurrentData();
                    var delta = createDuration(deltaInput);
                    if (delta) { // else, warn about invalid input?
                        this.unselect();
                        this.dispatch({
                            type: 'CHANGE_DATE',
                            dateMarker: state.dateEnv.add(state.currentDate, delta),
                        });
                    }
                };
                // for external API
                CalendarApi.prototype.getDate = function () {
                    var state = this.getCurrentData();
                    return state.dateEnv.toDate(state.currentDate);
                };
                // Date Formatting Utils
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.formatDate = function (d, formatter) {
                    var dateEnv = this.getCurrentData().dateEnv;
                    return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));
                };
                // `settings` is for formatter AND isEndExclusive
                CalendarApi.prototype.formatRange = function (d0, d1, settings) {
                    var dateEnv = this.getCurrentData().dateEnv;
                    return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings), settings);
                };
                CalendarApi.prototype.formatIso = function (d, omitTime) {
                    var dateEnv = this.getCurrentData().dateEnv;
                    return dateEnv.formatIso(dateEnv.createMarker(d), { omitTime: omitTime });
                };
                // Date Selection / Event Selection / DayClick
                // -----------------------------------------------------------------------------------------------------------------
                // this public method receives start/end dates in any format, with any timezone
                // NOTE: args were changed from v3
                CalendarApi.prototype.select = function (dateOrObj, endDate) {
                    var selectionInput;
                    if (endDate == null) {
                        if (dateOrObj.start != null) {
                            selectionInput = dateOrObj;
                        }
                        else {
                            selectionInput = {
                                start: dateOrObj,
                                end: null,
                            };
                        }
                    }
                    else {
                        selectionInput = {
                            start: dateOrObj,
                            end: endDate,
                        };
                    }
                    var state = this.getCurrentData();
                    var selection = parseDateSpan(selectionInput, state.dateEnv, createDuration({ days: 1 }));
                    if (selection) { // throw parse error otherwise?
                        this.dispatch({ type: 'SELECT_DATES', selection: selection });
                        triggerDateSelect(selection, null, state);
                    }
                };
                // public method
                CalendarApi.prototype.unselect = function (pev) {
                    var state = this.getCurrentData();
                    if (state.dateSelection) {
                        this.dispatch({ type: 'UNSELECT_DATES' });
                        triggerDateUnselect(pev, state);
                    }
                };
                // Public Events API
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.addEvent = function (eventInput, sourceInput) {
                    if (eventInput instanceof EventApi) {
                        var def = eventInput._def;
                        var instance = eventInput._instance;
                        var currentData = this.getCurrentData();
                        // not already present? don't want to add an old snapshot
                        if (!currentData.eventStore.defs[def.defId]) {
                            this.dispatch({
                                type: 'ADD_EVENTS',
                                eventStore: eventTupleToStore({ def: def, instance: instance }), // TODO: better util for two args?
                            });
                            this.triggerEventAdd(eventInput);
                        }
                        return eventInput;
                    }
                    var state = this.getCurrentData();
                    var eventSource;
                    if (sourceInput instanceof EventSourceApi) {
                        eventSource = sourceInput.internalEventSource;
                    }
                    else if (typeof sourceInput === 'boolean') {
                        if (sourceInput) { // true. part of the first event source
                            eventSource = hashValuesToArray(state.eventSources)[0];
                        }
                    }
                    else if (sourceInput != null) { // an ID. accepts a number too
                        var sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function
                        if (!sourceApi) {
                            console.warn("Could not find an event source with ID \"" + sourceInput + "\""); // TODO: test
                            return null;
                        }
                        eventSource = sourceApi.internalEventSource;
                    }
                    var tuple = parseEvent(eventInput, eventSource, state, false);
                    if (tuple) {
                        var newEventApi = new EventApi(state, tuple.def, tuple.def.recurringDef ? null : tuple.instance);
                        this.dispatch({
                            type: 'ADD_EVENTS',
                            eventStore: eventTupleToStore(tuple),
                        });
                        this.triggerEventAdd(newEventApi);
                        return newEventApi;
                    }
                    return null;
                };
                CalendarApi.prototype.triggerEventAdd = function (eventApi) {
                    var _this = this;
                    var emitter = this.getCurrentData().emitter;
                    emitter.trigger('eventAdd', {
                        event: eventApi,
                        relatedEvents: [],
                        revert: function () {
                            _this.dispatch({
                                type: 'REMOVE_EVENTS',
                                eventStore: eventApiToStore(eventApi),
                            });
                        },
                    });
                };
                // TODO: optimize
                CalendarApi.prototype.getEventById = function (id) {
                    var state = this.getCurrentData();
                    var _a = state.eventStore, defs = _a.defs, instances = _a.instances;
                    id = String(id);
                    for (var defId in defs) {
                        var def = defs[defId];
                        if (def.publicId === id) {
                            if (def.recurringDef) {
                                return new EventApi(state, def, null);
                            }
                            for (var instanceId in instances) {
                                var instance = instances[instanceId];
                                if (instance.defId === def.defId) {
                                    return new EventApi(state, def, instance);
                                }
                            }
                        }
                    }
                    return null;
                };
                CalendarApi.prototype.getEvents = function () {
                    var currentData = this.getCurrentData();
                    return buildEventApis(currentData.eventStore, currentData);
                };
                CalendarApi.prototype.removeAllEvents = function () {
                    this.dispatch({ type: 'REMOVE_ALL_EVENTS' });
                };
                // Public Event Sources API
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.getEventSources = function () {
                    var state = this.getCurrentData();
                    var sourceHash = state.eventSources;
                    var sourceApis = [];
                    for (var internalId in sourceHash) {
                        sourceApis.push(new EventSourceApi(state, sourceHash[internalId]));
                    }
                    return sourceApis;
                };
                CalendarApi.prototype.getEventSourceById = function (id) {
                    var state = this.getCurrentData();
                    var sourceHash = state.eventSources;
                    id = String(id);
                    for (var sourceId in sourceHash) {
                        if (sourceHash[sourceId].publicId === id) {
                            return new EventSourceApi(state, sourceHash[sourceId]);
                        }
                    }
                    return null;
                };
                CalendarApi.prototype.addEventSource = function (sourceInput) {
                    var state = this.getCurrentData();
                    if (sourceInput instanceof EventSourceApi) {
                        // not already present? don't want to add an old snapshot
                        if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {
                            this.dispatch({
                                type: 'ADD_EVENT_SOURCES',
                                sources: [sourceInput.internalEventSource],
                            });
                        }
                        return sourceInput;
                    }
                    var eventSource = parseEventSource(sourceInput, state);
                    if (eventSource) { // TODO: error otherwise?
                        this.dispatch({ type: 'ADD_EVENT_SOURCES', sources: [eventSource] });
                        return new EventSourceApi(state, eventSource);
                    }
                    return null;
                };
                CalendarApi.prototype.removeAllEventSources = function () {
                    this.dispatch({ type: 'REMOVE_ALL_EVENT_SOURCES' });
                };
                CalendarApi.prototype.refetchEvents = function () {
                    this.dispatch({ type: 'FETCH_EVENT_SOURCES', isRefetch: true });
                };
                // Scroll
                // -----------------------------------------------------------------------------------------------------------------
                CalendarApi.prototype.scrollToTime = function (timeInput) {
                    var time = createDuration(timeInput);
                    if (time) {
                        this.trigger('_scrollRequest', { time: time });
                    }
                };
                return CalendarApi;
            }());

            var EventApi = /** @class */ (function () {
                // instance will be null if expressing a recurring event that has no current instances,
                // OR if trying to validate an incoming external event that has no dates assigned
                function EventApi(context, def, instance) {
                    this._context = context;
                    this._def = def;
                    this._instance = instance || null;
                }
                /*
    TODO: make event struct more responsible for this
    */
                EventApi.prototype.setProp = function (name, val) {
                    var _a, _b;
                    if (name in EVENT_DATE_REFINERS) {
                        console.warn('Could not set date-related prop \'name\'. Use one of the date-related methods instead.');
                        // TODO: make proper aliasing system?
                    }
                    else if (name === 'id') {
                        val = EVENT_NON_DATE_REFINERS[name](val);
                        this.mutate({
                            standardProps: { publicId: val }, // hardcoded internal name
                        });
                    }
                    else if (name in EVENT_NON_DATE_REFINERS) {
                        val = EVENT_NON_DATE_REFINERS[name](val);
                        this.mutate({
                            standardProps: (_a = {}, _a[name] = val, _a),
                        });
                    }
                    else if (name in EVENT_UI_REFINERS) {
                        var ui = EVENT_UI_REFINERS[name](val);
                        if (name === 'color') {
                            ui = { backgroundColor: val, borderColor: val };
                        }
                        else if (name === 'editable') {
                            ui = { startEditable: val, durationEditable: val };
                        }
                        else {
                            ui = (_b = {}, _b[name] = val, _b);
                        }
                        this.mutate({
                            standardProps: { ui: ui },
                        });
                    }
                    else {
                        console.warn("Could not set prop '" + name + "'. Use setExtendedProp instead.");
                    }
                };
                EventApi.prototype.setExtendedProp = function (name, val) {
                    var _a;
                    this.mutate({
                        extendedProps: (_a = {}, _a[name] = val, _a),
                    });
                };
                EventApi.prototype.setStart = function (startInput, options) {
                    if (options === void 0) { options = {}; }
                    var dateEnv = this._context.dateEnv;
                    var start = dateEnv.createMarker(startInput);
                    if (start && this._instance) { // TODO: warning if parsed bad
                        var instanceRange = this._instance.range;
                        var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?
                        if (options.maintainDuration) {
                            this.mutate({ datesDelta: startDelta });
                        }
                        else {
                            this.mutate({ startDelta: startDelta });
                        }
                    }
                };
                EventApi.prototype.setEnd = function (endInput, options) {
                    if (options === void 0) { options = {}; }
                    var dateEnv = this._context.dateEnv;
                    var end;
                    if (endInput != null) {
                        end = dateEnv.createMarker(endInput);
                        if (!end) {
                            return; // TODO: warning if parsed bad
                        }
                    }
                    if (this._instance) {
                        if (end) {
                            var endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);
                            this.mutate({ endDelta: endDelta });
                        }
                        else {
                            this.mutate({ standardProps: { hasEnd: false } });
                        }
                    }
                };
                EventApi.prototype.setDates = function (startInput, endInput, options) {
                    if (options === void 0) { options = {}; }
                    var dateEnv = this._context.dateEnv;
                    var standardProps = { allDay: options.allDay };
                    var start = dateEnv.createMarker(startInput);
                    var end;
                    if (!start) {
                        return; // TODO: warning if parsed bad
                    }
                    if (endInput != null) {
                        end = dateEnv.createMarker(endInput);
                        if (!end) { // TODO: warning if parsed bad
                            return;
                        }
                    }
                    if (this._instance) {
                        var instanceRange = this._instance.range;
                        // when computing the diff for an event being converted to all-day,
                        // compute diff off of the all-day values the way event-mutation does.
                        if (options.allDay === true) {
                            instanceRange = computeAlignedDayRange(instanceRange);
                        }
                        var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);
                        if (end) {
                            var endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);
                            if (durationsEqual(startDelta, endDelta)) {
                                this.mutate({ datesDelta: startDelta, standardProps: standardProps });
                            }
                            else {
                                this.mutate({ startDelta: startDelta, endDelta: endDelta, standardProps: standardProps });
                            }
                        }
                        else { // means "clear the end"
                            standardProps.hasEnd = false;
                            this.mutate({ datesDelta: startDelta, standardProps: standardProps });
                        }
                    }
                };
                EventApi.prototype.moveStart = function (deltaInput) {
                    var delta = createDuration(deltaInput);
                    if (delta) { // TODO: warning if parsed bad
                        this.mutate({ startDelta: delta });
                    }
                };
                EventApi.prototype.moveEnd = function (deltaInput) {
                    var delta = createDuration(deltaInput);
                    if (delta) { // TODO: warning if parsed bad
                        this.mutate({ endDelta: delta });
                    }
                };
                EventApi.prototype.moveDates = function (deltaInput) {
                    var delta = createDuration(deltaInput);
                    if (delta) { // TODO: warning if parsed bad
                        this.mutate({ datesDelta: delta });
                    }
                };
                EventApi.prototype.setAllDay = function (allDay, options) {
                    if (options === void 0) { options = {}; }
                    var standardProps = { allDay: allDay };
                    var maintainDuration = options.maintainDuration;
                    if (maintainDuration == null) {
                        maintainDuration = this._context.options.allDayMaintainDuration;
                    }
                    if (this._def.allDay !== allDay) {
                        standardProps.hasEnd = maintainDuration;
                    }
                    this.mutate({ standardProps: standardProps });
                };
                EventApi.prototype.formatRange = function (formatInput) {
                    var dateEnv = this._context.dateEnv;
                    var instance = this._instance;
                    var formatter = createFormatter(formatInput);
                    if (this._def.hasEnd) {
                        return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {
                            forcedStartTzo: instance.forcedStartTzo,
                            forcedEndTzo: instance.forcedEndTzo,
                        });
                    }
                    return dateEnv.format(instance.range.start, formatter, {
                        forcedTzo: instance.forcedStartTzo,
                    });
                };
                EventApi.prototype.mutate = function (mutation) {
                    var instance = this._instance;
                    if (instance) {
                        var def = this._def;
                        var context_1 = this._context;
                        var eventStore_1 = context_1.getCurrentData().eventStore;
                        var relevantEvents = getRelevantEvents(eventStore_1, instance.instanceId);
                        var eventConfigBase = {
                            '': {
                                display: '',
                                startEditable: true,
                                durationEditable: true,
                                constraints: [],
                                overlap: null,
                                allows: [],
                                backgroundColor: '',
                                borderColor: '',
                                textColor: '',
                                classNames: [],
                            },
                        };
                        relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context_1);
                        var oldEvent = new EventApi(context_1, def, instance); // snapshot
                        this._def = relevantEvents.defs[def.defId];
                        this._instance = relevantEvents.instances[instance.instanceId];
                        context_1.dispatch({
                            type: 'MERGE_EVENTS',
                            eventStore: relevantEvents,
                        });
                        context_1.emitter.trigger('eventChange', {
                            oldEvent: oldEvent,
                            event: this,
                            relatedEvents: buildEventApis(relevantEvents, context_1, instance),
                            revert: function () {
                                context_1.dispatch({
                                    type: 'RESET_EVENTS',
                                    eventStore: eventStore_1,
                                });
                            },
                        });
                    }
                };
                EventApi.prototype.remove = function () {
                    var context = this._context;
                    var asStore = eventApiToStore(this);
                    context.dispatch({
                        type: 'REMOVE_EVENTS',
                        eventStore: asStore,
                    });
                    context.emitter.trigger('eventRemove', {
                        event: this,
                        relatedEvents: [],
                        revert: function () {
                            context.dispatch({
                                type: 'MERGE_EVENTS',
                                eventStore: asStore,
                            });
                        },
                    });
                };
                Object.defineProperty(EventApi.prototype, "source", {
                    get: function () {
                        var sourceId = this._def.sourceId;
                        if (sourceId) {
                            return new EventSourceApi(this._context, this._context.getCurrentData().eventSources[sourceId]);
                        }
                        return null;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "start", {
                    get: function () {
                        return this._instance ?
                            this._context.dateEnv.toDate(this._instance.range.start) :
                            null;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "end", {
                    get: function () {
                        return (this._instance && this._def.hasEnd) ?
                            this._context.dateEnv.toDate(this._instance.range.end) :
                            null;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "startStr", {
                    get: function () {
                        var instance = this._instance;
                        if (instance) {
                            return this._context.dateEnv.formatIso(instance.range.start, {
                                omitTime: this._def.allDay,
                                forcedTzo: instance.forcedStartTzo,
                            });
                        }
                        return '';
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "endStr", {
                    get: function () {
                        var instance = this._instance;
                        if (instance && this._def.hasEnd) {
                            return this._context.dateEnv.formatIso(instance.range.end, {
                                omitTime: this._def.allDay,
                                forcedTzo: instance.forcedEndTzo,
                            });
                        }
                        return '';
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "id", {
                    // computable props that all access the def
                    // TODO: find a TypeScript-compatible way to do this at scale
                    get: function () { return this._def.publicId; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "groupId", {
                    get: function () { return this._def.groupId; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "allDay", {
                    get: function () { return this._def.allDay; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "title", {
                    get: function () { return this._def.title; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "url", {
                    get: function () { return this._def.url; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "display", {
                    get: function () { return this._def.ui.display || 'auto'; } // bad. just normalize the type earlier
                    ,
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "startEditable", {
                    get: function () { return this._def.ui.startEditable; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "durationEditable", {
                    get: function () { return this._def.ui.durationEditable; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "constraint", {
                    get: function () { return this._def.ui.constraints[0] || null; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "overlap", {
                    get: function () { return this._def.ui.overlap; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "allow", {
                    get: function () { return this._def.ui.allows[0] || null; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "backgroundColor", {
                    get: function () { return this._def.ui.backgroundColor; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "borderColor", {
                    get: function () { return this._def.ui.borderColor; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "textColor", {
                    get: function () { return this._def.ui.textColor; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "classNames", {
                    // NOTE: user can't modify these because Object.freeze was called in event-def parsing
                    get: function () { return this._def.ui.classNames; },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(EventApi.prototype, "extendedProps", {
                    get: function () { return this._def.extendedProps; },
                    enumerable: false,
                    configurable: true
                });
                EventApi.prototype.toPlainObject = function (settings) {
                    if (settings === void 0) { settings = {}; }
                    var def = this._def;
                    var ui = def.ui;
                    var _a = this, startStr = _a.startStr, endStr = _a.endStr;
                    var res = {};
                    if (def.title) {
                        res.title = def.title;
                    }
                    if (startStr) {
                        res.start = startStr;
                    }
                    if (endStr) {
                        res.end = endStr;
                    }
                    if (def.publicId) {
                        res.id = def.publicId;
                    }
                    if (def.groupId) {
                        res.groupId = def.groupId;
                    }
                    if (def.url) {
                        res.url = def.url;
                    }
                    if (ui.display && ui.display !== 'auto') {
                        res.display = ui.display;
                    }
                    // TODO: what about recurring-event properties???
                    // TODO: include startEditable/durationEditable/constraint/overlap/allow
                    if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {
                        res.color = ui.backgroundColor;
                    }
                    else {
                        if (ui.backgroundColor) {
                            res.backgroundColor = ui.backgroundColor;
                        }
                        if (ui.borderColor) {
                            res.borderColor = ui.borderColor;
                        }
                    }
                    if (ui.textColor) {
                        res.textColor = ui.textColor;
                    }
                    if (ui.classNames.length) {
                        res.classNames = ui.classNames;
                    }
                    if (Object.keys(def.extendedProps).length) {
                        if (settings.collapseExtendedProps) {
                            (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(res, def.extendedProps);
                        }
                        else {
                            res.extendedProps = def.extendedProps;
                        }
                    }
                    return res;
                };
                EventApi.prototype.toJSON = function () {
                    return this.toPlainObject();
                };
                return EventApi;
            }());
            function eventApiToStore(eventApi) {
                var _a, _b;
                var def = eventApi._def;
                var instance = eventApi._instance;
                return {
                    defs: (_a = {}, _a[def.defId] = def, _a),
                    instances: instance
                        ? (_b = {}, _b[instance.instanceId] = instance, _b) : {},
                };
            }
            function buildEventApis(eventStore, context, excludeInstance) {
                var defs = eventStore.defs, instances = eventStore.instances;
                var eventApis = [];
                var excludeInstanceId = excludeInstance ? excludeInstance.instanceId : '';
                for (var id in instances) {
                    var instance = instances[id];
                    var def = defs[instance.defId];
                    if (instance.instanceId !== excludeInstanceId) {
                        eventApis.push(new EventApi(context, def, instance));
                    }
                }
                return eventApis;
            }

            var calendarSystemClassMap = {};
            function registerCalendarSystem(name, theClass) {
                calendarSystemClassMap[name] = theClass;
            }
            function createCalendarSystem(name) {
                return new calendarSystemClassMap[name]();
            }
            var GregorianCalendarSystem = /** @class */ (function () {
                function GregorianCalendarSystem() {
                }
                GregorianCalendarSystem.prototype.getMarkerYear = function (d) {
                    return d.getUTCFullYear();
                };
                GregorianCalendarSystem.prototype.getMarkerMonth = function (d) {
                    return d.getUTCMonth();
                };
                GregorianCalendarSystem.prototype.getMarkerDay = function (d) {
                    return d.getUTCDate();
                };
                GregorianCalendarSystem.prototype.arrayToMarker = function (arr) {
                    return arrayToUtcDate(arr);
                };
                GregorianCalendarSystem.prototype.markerToArray = function (marker) {
                    return dateToUtcArray(marker);
                };
                return GregorianCalendarSystem;
            }());
            registerCalendarSystem('gregory', GregorianCalendarSystem);

            var ISO_RE = /^\s*(\d{4})(-?(\d{2})(-?(\d{2})([T ](\d{2}):?(\d{2})(:?(\d{2})(\.(\d+))?)?(Z|(([-+])(\d{2})(:?(\d{2}))?))?)?)?)?$/;
            function parse(str) {
                var m = ISO_RE.exec(str);
                if (m) {
                    var marker = new Date(Date.UTC(Number(m[1]), m[3] ? Number(m[3]) - 1 : 0, Number(m[5] || 1), Number(m[7] || 0), Number(m[8] || 0), Number(m[10] || 0), m[12] ? Number("0." + m[12]) * 1000 : 0));
                    if (isValidDate(marker)) {
                        var timeZoneOffset = null;
                        if (m[13]) {
                            timeZoneOffset = (m[15] === '-' ? -1 : 1) * (Number(m[16] || 0) * 60 +
                                Number(m[18] || 0));
                        }
                        return {
                            marker: marker,
                            isTimeUnspecified: !m[6],
                            timeZoneOffset: timeZoneOffset,
                        };
                    }
                }
                return null;
            }

            var DateEnv = /** @class */ (function () {
                function DateEnv(settings) {
                    var timeZone = this.timeZone = settings.timeZone;
                    var isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';
                    if (settings.namedTimeZoneImpl && isNamedTimeZone) {
                        this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);
                    }
                    this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);
                    this.calendarSystem = createCalendarSystem(settings.calendarSystem);
                    this.locale = settings.locale;
                    this.weekDow = settings.locale.week.dow;
                    this.weekDoy = settings.locale.week.doy;
                    if (settings.weekNumberCalculation === 'ISO') {
                        this.weekDow = 1;
                        this.weekDoy = 4;
                    }
                    if (typeof settings.firstDay === 'number') {
                        this.weekDow = settings.firstDay;
                    }
                    if (typeof settings.weekNumberCalculation === 'function') {
                        this.weekNumberFunc = settings.weekNumberCalculation;
                    }
                    this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText;
                    this.weekTextLong = (settings.weekTextLong != null ? settings.weekTextLong : settings.locale.options.weekTextLong) || this.weekText;
                    this.cmdFormatter = settings.cmdFormatter;
                    this.defaultSeparator = settings.defaultSeparator;
                }
                // Creating / Parsing
                DateEnv.prototype.createMarker = function (input) {
                    var meta = this.createMarkerMeta(input);
                    if (meta === null) {
                        return null;
                    }
                    return meta.marker;
                };
                DateEnv.prototype.createNowMarker = function () {
                    if (this.canComputeOffset) {
                        return this.timestampToMarker(new Date().valueOf());
                    }
                    // if we can't compute the current date val for a timezone,
                    // better to give the current local date vals than UTC
                    return arrayToUtcDate(dateToLocalArray(new Date()));
                };
                DateEnv.prototype.createMarkerMeta = function (input) {
                    if (typeof input === 'string') {
                        return this.parse(input);
                    }
                    var marker = null;
                    if (typeof input === 'number') {
                        marker = this.timestampToMarker(input);
                    }
                    else if (input instanceof Date) {
                        input = input.valueOf();
                        if (!isNaN(input)) {
                            marker = this.timestampToMarker(input);
                        }
                    }
                    else if (Array.isArray(input)) {
                        marker = arrayToUtcDate(input);
                    }
                    if (marker === null || !isValidDate(marker)) {
                        return null;
                    }
                    return { marker: marker, isTimeUnspecified: false, forcedTzo: null };
                };
                DateEnv.prototype.parse = function (s) {
                    var parts = parse(s);
                    if (parts === null) {
                        return null;
                    }
                    var marker = parts.marker;
                    var forcedTzo = null;
                    if (parts.timeZoneOffset !== null) {
                        if (this.canComputeOffset) {
                            marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);
                        }
                        else {
                            forcedTzo = parts.timeZoneOffset;
                        }
                    }
                    return { marker: marker, isTimeUnspecified: parts.isTimeUnspecified, forcedTzo: forcedTzo };
                };
                // Accessors
                DateEnv.prototype.getYear = function (marker) {
                    return this.calendarSystem.getMarkerYear(marker);
                };
                DateEnv.prototype.getMonth = function (marker) {
                    return this.calendarSystem.getMarkerMonth(marker);
                };
                // Adding / Subtracting
                DateEnv.prototype.add = function (marker, dur) {
                    var a = this.calendarSystem.markerToArray(marker);
                    a[0] += dur.years;
                    a[1] += dur.months;
                    a[2] += dur.days;
                    a[6] += dur.milliseconds;
                    return this.calendarSystem.arrayToMarker(a);
                };
                DateEnv.prototype.subtract = function (marker, dur) {
                    var a = this.calendarSystem.markerToArray(marker);
                    a[0] -= dur.years;
                    a[1] -= dur.months;
                    a[2] -= dur.days;
                    a[6] -= dur.milliseconds;
                    return this.calendarSystem.arrayToMarker(a);
                };
                DateEnv.prototype.addYears = function (marker, n) {
                    var a = this.calendarSystem.markerToArray(marker);
                    a[0] += n;
                    return this.calendarSystem.arrayToMarker(a);
                };
                DateEnv.prototype.addMonths = function (marker, n) {
                    var a = this.calendarSystem.markerToArray(marker);
                    a[1] += n;
                    return this.calendarSystem.arrayToMarker(a);
                };
                // Diffing Whole Units
                DateEnv.prototype.diffWholeYears = function (m0, m1) {
                    var calendarSystem = this.calendarSystem;
                    if (timeAsMs(m0) === timeAsMs(m1) &&
                        calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) &&
                        calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {
                        return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);
                    }
                    return null;
                };
                DateEnv.prototype.diffWholeMonths = function (m0, m1) {
                    var calendarSystem = this.calendarSystem;
                    if (timeAsMs(m0) === timeAsMs(m1) &&
                        calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {
                        return (calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0)) +
                            (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;
                    }
                    return null;
                };
                // Range / Duration
                DateEnv.prototype.greatestWholeUnit = function (m0, m1) {
                    var n = this.diffWholeYears(m0, m1);
                    if (n !== null) {
                        return { unit: 'year', value: n };
                    }
                    n = this.diffWholeMonths(m0, m1);
                    if (n !== null) {
                        return { unit: 'month', value: n };
                    }
                    n = diffWholeWeeks(m0, m1);
                    if (n !== null) {
                        return { unit: 'week', value: n };
                    }
                    n = diffWholeDays(m0, m1);
                    if (n !== null) {
                        return { unit: 'day', value: n };
                    }
                    n = diffHours(m0, m1);
                    if (isInt(n)) {
                        return { unit: 'hour', value: n };
                    }
                    n = diffMinutes(m0, m1);
                    if (isInt(n)) {
                        return { unit: 'minute', value: n };
                    }
                    n = diffSeconds(m0, m1);
                    if (isInt(n)) {
                        return { unit: 'second', value: n };
                    }
                    return { unit: 'millisecond', value: m1.valueOf() - m0.valueOf() };
                };
                DateEnv.prototype.countDurationsBetween = function (m0, m1, d) {
                    // TODO: can use greatestWholeUnit
                    var diff;
                    if (d.years) {
                        diff = this.diffWholeYears(m0, m1);
                        if (diff !== null) {
                            return diff / asRoughYears(d);
                        }
                    }
                    if (d.months) {
                        diff = this.diffWholeMonths(m0, m1);
                        if (diff !== null) {
                            return diff / asRoughMonths(d);
                        }
                    }
                    if (d.days) {
                        diff = diffWholeDays(m0, m1);
                        if (diff !== null) {
                            return diff / asRoughDays(d);
                        }
                    }
                    return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);
                };
                // Start-Of
                // these DON'T return zoned-dates. only UTC start-of dates
                DateEnv.prototype.startOf = function (m, unit) {
                    if (unit === 'year') {
                        return this.startOfYear(m);
                    }
                    if (unit === 'month') {
                        return this.startOfMonth(m);
                    }
                    if (unit === 'week') {
                        return this.startOfWeek(m);
                    }
                    if (unit === 'day') {
                        return startOfDay(m);
                    }
                    if (unit === 'hour') {
                        return startOfHour(m);
                    }
                    if (unit === 'minute') {
                        return startOfMinute(m);
                    }
                    if (unit === 'second') {
                        return startOfSecond(m);
                    }
                    return null;
                };
                DateEnv.prototype.startOfYear = function (m) {
                    return this.calendarSystem.arrayToMarker([
                        this.calendarSystem.getMarkerYear(m),
                    ]);
                };
                DateEnv.prototype.startOfMonth = function (m) {
                    return this.calendarSystem.arrayToMarker([
                        this.calendarSystem.getMarkerYear(m),
                        this.calendarSystem.getMarkerMonth(m),
                    ]);
                };
                DateEnv.prototype.startOfWeek = function (m) {
                    return this.calendarSystem.arrayToMarker([
                        this.calendarSystem.getMarkerYear(m),
                        this.calendarSystem.getMarkerMonth(m),
                        m.getUTCDate() - ((m.getUTCDay() - this.weekDow + 7) % 7),
                    ]);
                };
                // Week Number
                DateEnv.prototype.computeWeekNumber = function (marker) {
                    if (this.weekNumberFunc) {
                        return this.weekNumberFunc(this.toDate(marker));
                    }
                    return weekOfYear(marker, this.weekDow, this.weekDoy);
                };
                // TODO: choke on timeZoneName: long
                DateEnv.prototype.format = function (marker, formatter, dateOptions) {
                    if (dateOptions === void 0) { dateOptions = {}; }
                    return formatter.format({
                        marker: marker,
                        timeZoneOffset: dateOptions.forcedTzo != null ?
                            dateOptions.forcedTzo :
                            this.offsetForMarker(marker),
                    }, this);
                };
                DateEnv.prototype.formatRange = function (start, end, formatter, dateOptions) {
                    if (dateOptions === void 0) { dateOptions = {}; }
                    if (dateOptions.isEndExclusive) {
                        end = addMs(end, -1);
                    }
                    return formatter.formatRange({
                        marker: start,
                        timeZoneOffset: dateOptions.forcedStartTzo != null ?
                            dateOptions.forcedStartTzo :
                            this.offsetForMarker(start),
                    }, {
                        marker: end,
                        timeZoneOffset: dateOptions.forcedEndTzo != null ?
                            dateOptions.forcedEndTzo :
                            this.offsetForMarker(end),
                    }, this, dateOptions.defaultSeparator);
                };
                /*
    DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,
    might as well use buildIsoString or some other util directly
    */
                DateEnv.prototype.formatIso = function (marker, extraOptions) {
                    if (extraOptions === void 0) { extraOptions = {}; }
                    var timeZoneOffset = null;
                    if (!extraOptions.omitTimeZoneOffset) {
                        if (extraOptions.forcedTzo != null) {
                            timeZoneOffset = extraOptions.forcedTzo;
                        }
                        else {
                            timeZoneOffset = this.offsetForMarker(marker);
                        }
                    }
                    return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);
                };
                // TimeZone
                DateEnv.prototype.timestampToMarker = function (ms) {
                    if (this.timeZone === 'local') {
                        return arrayToUtcDate(dateToLocalArray(new Date(ms)));
                    }
                    if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {
                        return new Date(ms);
                    }
                    return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));
                };
                DateEnv.prototype.offsetForMarker = function (m) {
                    if (this.timeZone === 'local') {
                        return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert "inverse" offset to "normal" offset
                    }
                    if (this.timeZone === 'UTC') {
                        return 0;
                    }
                    if (this.namedTimeZoneImpl) {
                        return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));
                    }
                    return null;
                };
                // Conversion
                DateEnv.prototype.toDate = function (m, forcedTzo) {
                    if (this.timeZone === 'local') {
                        return arrayToLocalDate(dateToUtcArray(m));
                    }
                    if (this.timeZone === 'UTC') {
                        return new Date(m.valueOf()); // make sure it's a copy
                    }
                    if (!this.namedTimeZoneImpl) {
                        return new Date(m.valueOf() - (forcedTzo || 0));
                    }
                    return new Date(m.valueOf() -
                        this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60);
                };
                return DateEnv;
            }());

            var globalLocales = [];

            var MINIMAL_RAW_EN_LOCALE = {
                code: 'en',
                week: {
                    dow: 0,
                    doy: 4, // 4 days need to be within the year to be considered the first week
                },
                direction: 'ltr',
                buttonText: {
                    prev: 'prev',
                    next: 'next',
                    prevYear: 'prev year',
                    nextYear: 'next year',
                    year: 'year',
                    today: 'today',
                    month: 'month',
                    week: 'week',
                    day: 'day',
                    list: 'list',
                },
                weekText: 'W',
                weekTextLong: 'Week',
                closeHint: 'Close',
                timeHint: 'Time',
                eventHint: 'Event',
                allDayText: 'all-day',
                moreLinkText: 'more',
                noEventsText: 'No events to display',
            };
            var RAW_EN_LOCALE = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, MINIMAL_RAW_EN_LOCALE), {
                // Includes things we don't want other locales to inherit,
                // things that derive from other translatable strings.
                buttonHints: {
                    prev: 'Previous $0',
                    next: 'Next $0',
                    today: function (buttonText, unit) {
                        return (unit === 'day')
                            ? 'Today'
                            : "This " + buttonText;
                    },
                }, viewHint: '$0 view', navLinkHint: 'Go to $0', moreLinkHint: function (eventCnt) {
                    return "Show " + eventCnt + " more event" + (eventCnt === 1 ? '' : 's');
                } });
            function organizeRawLocales(explicitRawLocales) {
                var defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';
                var allRawLocales = globalLocales.concat(explicitRawLocales);
                var rawLocaleMap = {
                    en: RAW_EN_LOCALE,
                };
                for (var _i = 0, allRawLocales_1 = allRawLocales; _i < allRawLocales_1.length; _i++) {
                    var rawLocale = allRawLocales_1[_i];
                    rawLocaleMap[rawLocale.code] = rawLocale;
                }
                return {
                    map: rawLocaleMap,
                    defaultCode: defaultCode,
                };
            }
            function buildLocale(inputSingular, available) {
                if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {
                    return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);
                }
                return queryLocale(inputSingular, available);
            }
            function queryLocale(codeArg, available) {
                var codes = [].concat(codeArg || []); // will convert to array
                var raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;
                return parseLocale(codeArg, codes, raw);
            }
            function queryRawLocale(codes, available) {
                for (var i = 0; i < codes.length; i += 1) {
                    var parts = codes[i].toLocaleLowerCase().split('-');
                    for (var j = parts.length; j > 0; j -= 1) {
                        var simpleId = parts.slice(0, j).join('-');
                        if (available[simpleId]) {
                            return available[simpleId];
                        }
                    }
                }
                return null;
            }
            function parseLocale(codeArg, codes, raw) {
                var merged = mergeProps([MINIMAL_RAW_EN_LOCALE, raw], ['buttonText']);
                delete merged.code; // don't want this part of the options
                var week = merged.week;
                delete merged.week;
                return {
                    codeArg: codeArg,
                    codes: codes,
                    week: week,
                    simpleNumberFormat: new Intl.NumberFormat(codeArg),
                    options: merged,
                };
            }

            function formatDate(dateInput, options) {
                if (options === void 0) { options = {}; }
                var dateEnv = buildDateEnv$1(options);
                var formatter = createFormatter(options);
                var dateMeta = dateEnv.createMarkerMeta(dateInput);
                if (!dateMeta) { // TODO: warning?
                    return '';
                }
                return dateEnv.format(dateMeta.marker, formatter, {
                    forcedTzo: dateMeta.forcedTzo,
                });
            }
            function formatRange(startInput, endInput, options) {
                var dateEnv = buildDateEnv$1(typeof options === 'object' && options ? options : {}); // pass in if non-null object
                var formatter = createFormatter(options);
                var startMeta = dateEnv.createMarkerMeta(startInput);
                var endMeta = dateEnv.createMarkerMeta(endInput);
                if (!startMeta || !endMeta) { // TODO: warning?
                    return '';
                }
                return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {
                    forcedStartTzo: startMeta.forcedTzo,
                    forcedEndTzo: endMeta.forcedTzo,
                    isEndExclusive: options.isEndExclusive,
                    defaultSeparator: BASE_OPTION_DEFAULTS.defaultRangeSeparator,
                });
            }
// TODO: more DRY and optimized
            function buildDateEnv$1(settings) {
                var locale = buildLocale(settings.locale || 'en', organizeRawLocales([]).map); // TODO: don't hardcode 'en' everywhere
                return new DateEnv((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ timeZone: BASE_OPTION_DEFAULTS.timeZone, calendarSystem: 'gregory' }, settings), { locale: locale }));
            }

            var DEF_DEFAULTS = {
                startTime: '09:00',
                endTime: '17:00',
                daysOfWeek: [1, 2, 3, 4, 5],
                display: 'inverse-background',
                classNames: 'fc-non-business',
                groupId: '_businessHours', // so multiple defs get grouped
            };
            /*
TODO: pass around as EventDefHash!!!
*/
            function parseBusinessHours(input, context) {
                return parseEvents(refineInputs(input), null, context);
            }
            function refineInputs(input) {
                var rawDefs;
                if (input === true) {
                    rawDefs = [{}]; // will get DEF_DEFAULTS verbatim
                }
                else if (Array.isArray(input)) {
                    // if specifying an array, every sub-definition NEEDS a day-of-week
                    rawDefs = input.filter(function (rawDef) { return rawDef.daysOfWeek; });
                }
                else if (typeof input === 'object' && input) { // non-null object
                    rawDefs = [input];
                }
                else { // is probably false
                    rawDefs = [];
                }
                rawDefs = rawDefs.map(function (rawDef) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, DEF_DEFAULTS), rawDef)); });
                return rawDefs;
            }

            function pointInsideRect(point, rect) {
                return point.left >= rect.left &&
                    point.left < rect.right &&
                    point.top >= rect.top &&
                    point.top < rect.bottom;
            }
// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false
            function intersectRects(rect1, rect2) {
                var res = {
                    left: Math.max(rect1.left, rect2.left),
                    right: Math.min(rect1.right, rect2.right),
                    top: Math.max(rect1.top, rect2.top),
                    bottom: Math.min(rect1.bottom, rect2.bottom),
                };
                if (res.left < res.right && res.top < res.bottom) {
                    return res;
                }
                return false;
            }
            function translateRect(rect, deltaX, deltaY) {
                return {
                    left: rect.left + deltaX,
                    right: rect.right + deltaX,
                    top: rect.top + deltaY,
                    bottom: rect.bottom + deltaY,
                };
            }
// Returns a new point that will have been moved to reside within the given rectangle
            function constrainPoint(point, rect) {
                return {
                    left: Math.min(Math.max(point.left, rect.left), rect.right),
                    top: Math.min(Math.max(point.top, rect.top), rect.bottom),
                };
            }
// Returns a point that is the center of the given rectangle
            function getRectCenter(rect) {
                return {
                    left: (rect.left + rect.right) / 2,
                    top: (rect.top + rect.bottom) / 2,
                };
            }
// Subtracts point2's coordinates from point1's coordinates, returning a delta
            function diffPoints(point1, point2) {
                return {
                    left: point1.left - point2.left,
                    top: point1.top - point2.top,
                };
            }

            var canVGrowWithinCell;
            function getCanVGrowWithinCell() {
                if (canVGrowWithinCell == null) {
                    canVGrowWithinCell = computeCanVGrowWithinCell();
                }
                return canVGrowWithinCell;
            }
            function computeCanVGrowWithinCell() {
                // for SSR, because this function is call immediately at top-level
                // TODO: just make this logic execute top-level, immediately, instead of doing lazily
                if (typeof document === 'undefined') {
                    return true;
                }
                var el = document.createElement('div');
                el.style.position = 'absolute';
                el.style.top = '0px';
                el.style.left = '0px';
                el.innerHTML = '<table><tr><td><div></div></td></tr></table>';
                el.querySelector('table').style.height = '100px';
                el.querySelector('div').style.height = '100%';
                document.body.appendChild(el);
                var div = el.querySelector('div');
                var possible = div.offsetHeight > 0;
                document.body.removeChild(el);
                return possible;
            }

            var EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere
            var Splitter = /** @class */ (function () {
                function Splitter() {
                    this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);
                    this.splitDateSelection = memoize(this._splitDateSpan);
                    this.splitEventStore = memoize(this._splitEventStore);
                    this.splitIndividualUi = memoize(this._splitIndividualUi);
                    this.splitEventDrag = memoize(this._splitInteraction);
                    this.splitEventResize = memoize(this._splitInteraction);
                    this.eventUiBuilders = {}; // TODO: typescript protection
                }
                Splitter.prototype.splitProps = function (props) {
                    var _this = this;
                    var keyInfos = this.getKeyInfo(props);
                    var defKeys = this.getKeysForEventDefs(props.eventStore);
                    var dateSelections = this.splitDateSelection(props.dateSelection);
                    var individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*
                    var eventStores = this.splitEventStore(props.eventStore, defKeys);
                    var eventDrags = this.splitEventDrag(props.eventDrag);
                    var eventResizes = this.splitEventResize(props.eventResize);
                    var splitProps = {};
                    this.eventUiBuilders = mapHash(keyInfos, function (info, key) { return _this.eventUiBuilders[key] || memoize(buildEventUiForKey); });
                    for (var key in keyInfos) {
                        var keyInfo = keyInfos[key];
                        var eventStore = eventStores[key] || EMPTY_EVENT_STORE;
                        var buildEventUi = this.eventUiBuilders[key];
                        splitProps[key] = {
                            businessHours: keyInfo.businessHours || props.businessHours,
                            dateSelection: dateSelections[key] || null,
                            eventStore: eventStore,
                            eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),
                            eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',
                            eventDrag: eventDrags[key] || null,
                            eventResize: eventResizes[key] || null,
                        };
                    }
                    return splitProps;
                };
                Splitter.prototype._splitDateSpan = function (dateSpan) {
                    var dateSpans = {};
                    if (dateSpan) {
                        var keys = this.getKeysForDateSpan(dateSpan);
                        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                            var key = keys_1[_i];
                            dateSpans[key] = dateSpan;
                        }
                    }
                    return dateSpans;
                };
                Splitter.prototype._getKeysForEventDefs = function (eventStore) {
                    var _this = this;
                    return mapHash(eventStore.defs, function (eventDef) { return _this.getKeysForEventDef(eventDef); });
                };
                Splitter.prototype._splitEventStore = function (eventStore, defKeys) {
                    var defs = eventStore.defs, instances = eventStore.instances;
                    var splitStores = {};
                    for (var defId in defs) {
                        for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
                            var key = _a[_i];
                            if (!splitStores[key]) {
                                splitStores[key] = createEmptyEventStore();
                            }
                            splitStores[key].defs[defId] = defs[defId];
                        }
                    }
                    for (var instanceId in instances) {
                        var instance = instances[instanceId];
                        for (var _b = 0, _c = defKeys[instance.defId]; _b < _c.length; _b++) {
                            var key = _c[_b];
                            if (splitStores[key]) { // must have already been created
                                splitStores[key].instances[instanceId] = instance;
                            }
                        }
                    }
                    return splitStores;
                };
                Splitter.prototype._splitIndividualUi = function (eventUiBases, defKeys) {
                    var splitHashes = {};
                    for (var defId in eventUiBases) {
                        if (defId) { // not the '' key
                            for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
                                var key = _a[_i];
                                if (!splitHashes[key]) {
                                    splitHashes[key] = {};
                                }
                                splitHashes[key][defId] = eventUiBases[defId];
                            }
                        }
                    }
                    return splitHashes;
                };
                Splitter.prototype._splitInteraction = function (interaction) {
                    var splitStates = {};
                    if (interaction) {
                        var affectedStores_1 = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents));
                        // can't rely on defKeys because event data is mutated
                        var mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);
                        var mutatedStores_1 = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);
                        var populate = function (key) {
                            if (!splitStates[key]) {
                                splitStates[key] = {
                                    affectedEvents: affectedStores_1[key] || EMPTY_EVENT_STORE,
                                    mutatedEvents: mutatedStores_1[key] || EMPTY_EVENT_STORE,
                                    isEvent: interaction.isEvent,
                                };
                            }
                        };
                        for (var key in affectedStores_1) {
                            populate(key);
                        }
                        for (var key in mutatedStores_1) {
                            populate(key);
                        }
                    }
                    return splitStates;
                };
                return Splitter;
            }());
            function buildEventUiForKey(allUi, eventUiForKey, individualUi) {
                var baseParts = [];
                if (allUi) {
                    baseParts.push(allUi);
                }
                if (eventUiForKey) {
                    baseParts.push(eventUiForKey);
                }
                var stuff = {
                    '': combineEventUis(baseParts),
                };
                if (individualUi) {
                    (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(stuff, individualUi);
                }
                return stuff;
            }

            function getDateMeta(date, todayRange, nowDate, dateProfile) {
                return {
                    dow: date.getUTCDay(),
                    isDisabled: Boolean(dateProfile && !rangeContainsMarker(dateProfile.activeRange, date)),
                    isOther: Boolean(dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)),
                    isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),
                    isPast: Boolean(nowDate ? (date < nowDate) : todayRange ? (date < todayRange.start) : false),
                    isFuture: Boolean(nowDate ? (date > nowDate) : todayRange ? (date >= todayRange.end) : false),
                };
            }
            function getDayClassNames(meta, theme) {
                var classNames = [
                    'fc-day',
                    "fc-day-" + DAY_IDS[meta.dow],
                ];
                if (meta.isDisabled) {
                    classNames.push('fc-day-disabled');
                }
                else {
                    if (meta.isToday) {
                        classNames.push('fc-day-today');
                        classNames.push(theme.getClass('today'));
                    }
                    if (meta.isPast) {
                        classNames.push('fc-day-past');
                    }
                    if (meta.isFuture) {
                        classNames.push('fc-day-future');
                    }
                    if (meta.isOther) {
                        classNames.push('fc-day-other');
                    }
                }
                return classNames;
            }
            function getSlotClassNames(meta, theme) {
                var classNames = [
                    'fc-slot',
                    "fc-slot-" + DAY_IDS[meta.dow],
                ];
                if (meta.isDisabled) {
                    classNames.push('fc-slot-disabled');
                }
                else {
                    if (meta.isToday) {
                        classNames.push('fc-slot-today');
                        classNames.push(theme.getClass('today'));
                    }
                    if (meta.isPast) {
                        classNames.push('fc-slot-past');
                    }
                    if (meta.isFuture) {
                        classNames.push('fc-slot-future');
                    }
                }
                return classNames;
            }

            var DAY_FORMAT = createFormatter({ year: 'numeric', month: 'long', day: 'numeric' });
            var WEEK_FORMAT = createFormatter({ week: 'long' });
            function buildNavLinkAttrs(context, dateMarker, viewType, isTabbable) {
                if (viewType === void 0) { viewType = 'day'; }
                if (isTabbable === void 0) { isTabbable = true; }
                var dateEnv = context.dateEnv, options = context.options, calendarApi = context.calendarApi;
                var dateStr = dateEnv.format(dateMarker, viewType === 'week' ? WEEK_FORMAT : DAY_FORMAT);
                if (options.navLinks) {
                    var zonedDate = dateEnv.toDate(dateMarker);
                    var handleInteraction = function (ev) {
                        var customAction = viewType === 'day' ? options.navLinkDayClick :
                            viewType === 'week' ? options.navLinkWeekClick : null;
                        if (typeof customAction === 'function') {
                            customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev);
                        }
                        else {
                            if (typeof customAction === 'string') {
                                viewType = customAction;
                            }
                            calendarApi.zoomTo(dateMarker, viewType);
                        }
                    };
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ title: formatWithOrdinals(options.navLinkHint, [dateStr, zonedDate], dateStr), 'data-navlink': '' }, (isTabbable
                        ? createAriaClickAttrs(handleInteraction)
                        : { onClick: handleInteraction }));
                }
                return { 'aria-label': dateStr };
            }

            var _isRtlScrollbarOnLeft = null;
            function getIsRtlScrollbarOnLeft() {
                if (_isRtlScrollbarOnLeft === null) {
                    _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();
                }
                return _isRtlScrollbarOnLeft;
            }
            function computeIsRtlScrollbarOnLeft() {
                var outerEl = document.createElement('div');
                applyStyle(outerEl, {
                    position: 'absolute',
                    top: -1000,
                    left: 0,
                    border: 0,
                    padding: 0,
                    overflow: 'scroll',
                    direction: 'rtl',
                });
                outerEl.innerHTML = '<div></div>';
                document.body.appendChild(outerEl);
                var innerEl = outerEl.firstChild;
                var res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;
                removeElement(outerEl);
                return res;
            }

            var _scrollbarWidths;
            function getScrollbarWidths() {
                if (!_scrollbarWidths) {
                    _scrollbarWidths = computeScrollbarWidths();
                }
                return _scrollbarWidths;
            }
            function computeScrollbarWidths() {
                var el = document.createElement('div');
                el.style.overflow = 'scroll';
                el.style.position = 'absolute';
                el.style.top = '-9999px';
                el.style.left = '-9999px';
                document.body.appendChild(el);
                var res = computeScrollbarWidthsForEl(el);
                document.body.removeChild(el);
                return res;
            }
// WARNING: will include border
            function computeScrollbarWidthsForEl(el) {
                return {
                    x: el.offsetHeight - el.clientHeight,
                    y: el.offsetWidth - el.clientWidth,
                };
            }

            function computeEdges(el, getPadding) {
                if (getPadding === void 0) { getPadding = false; }
                var computedStyle = window.getComputedStyle(el);
                var borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;
                var borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;
                var borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;
                var borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;
                var badScrollbarWidths = computeScrollbarWidthsForEl(el); // includes border!
                var scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight;
                var scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom;
                var res = {
                    borderLeft: borderLeft,
                    borderRight: borderRight,
                    borderTop: borderTop,
                    borderBottom: borderBottom,
                    scrollbarBottom: scrollbarBottom,
                    scrollbarLeft: 0,
                    scrollbarRight: 0,
                };
                if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') { // is the scrollbar on the left side?
                    res.scrollbarLeft = scrollbarLeftRight;
                }
                else {
                    res.scrollbarRight = scrollbarLeftRight;
                }
                if (getPadding) {
                    res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;
                    res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;
                    res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;
                    res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;
                }
                return res;
            }
            function computeInnerRect(el, goWithinPadding, doFromWindowViewport) {
                if (goWithinPadding === void 0) { goWithinPadding = false; }
                var outerRect = doFromWindowViewport ? el.getBoundingClientRect() : computeRect(el);
                var edges = computeEdges(el, goWithinPadding);
                var res = {
                    left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,
                    right: outerRect.right - edges.borderRight - edges.scrollbarRight,
                    top: outerRect.top + edges.borderTop,
                    bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom,
                };
                if (goWithinPadding) {
                    res.left += edges.paddingLeft;
                    res.right -= edges.paddingRight;
                    res.top += edges.paddingTop;
                    res.bottom -= edges.paddingBottom;
                }
                return res;
            }
            function computeRect(el) {
                var rect = el.getBoundingClientRect();
                return {
                    left: rect.left + window.pageXOffset,
                    top: rect.top + window.pageYOffset,
                    right: rect.right + window.pageXOffset,
                    bottom: rect.bottom + window.pageYOffset,
                };
            }
            function computeClippedClientRect(el) {
                var clippingParents = getClippingParents(el);
                var rect = el.getBoundingClientRect();
                for (var _i = 0, clippingParents_1 = clippingParents; _i < clippingParents_1.length; _i++) {
                    var clippingParent = clippingParents_1[_i];
                    var intersection = intersectRects(rect, clippingParent.getBoundingClientRect());
                    if (intersection) {
                        rect = intersection;
                    }
                    else {
                        return null;
                    }
                }
                return rect;
            }
            function computeHeightAndMargins(el) {
                return el.getBoundingClientRect().height + computeVMargins(el);
            }
            function computeVMargins(el) {
                var computed = window.getComputedStyle(el);
                return parseInt(computed.marginTop, 10) +
                    parseInt(computed.marginBottom, 10);
            }
// does not return window
            function getClippingParents(el) {
                var parents = [];
                while (el instanceof HTMLElement) { // will stop when gets to document or null
                    var computedStyle = window.getComputedStyle(el);
                    if (computedStyle.position === 'fixed') {
                        break;
                    }
                    if ((/(auto|scroll)/).test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {
                        parents.push(el);
                    }
                    el = el.parentNode;
                }
                return parents;
            }

// given a function that resolves a result asynchronously.
// the function can either call passed-in success and failure callbacks,
// or it can return a promise.
// if you need to pass additional params to func, bind them first.
            function unpromisify(func, success, failure) {
                // guard against success/failure callbacks being called more than once
                // and guard against a promise AND callback being used together.
                var isResolved = false;
                var wrappedSuccess = function () {
                    if (!isResolved) {
                        isResolved = true;
                        success.apply(this, arguments); // eslint-disable-line prefer-rest-params
                    }
                };
                var wrappedFailure = function () {
                    if (!isResolved) {
                        isResolved = true;
                        if (failure) {
                            failure.apply(this, arguments); // eslint-disable-line prefer-rest-params
                        }
                    }
                };
                var res = func(wrappedSuccess, wrappedFailure);
                if (res && typeof res.then === 'function') {
                    res.then(wrappedSuccess, wrappedFailure);
                }
            }

            var Emitter = /** @class */ (function () {
                function Emitter() {
                    this.handlers = {};
                    this.thisContext = null;
                }
                Emitter.prototype.setThisContext = function (thisContext) {
                    this.thisContext = thisContext;
                };
                Emitter.prototype.setOptions = function (options) {
                    this.options = options;
                };
                Emitter.prototype.on = function (type, handler) {
                    addToHash(this.handlers, type, handler);
                };
                Emitter.prototype.off = function (type, handler) {
                    removeFromHash(this.handlers, type, handler);
                };
                Emitter.prototype.trigger = function (type) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) {
                        args[_i - 1] = arguments[_i];
                    }
                    var attachedHandlers = this.handlers[type] || [];
                    var optionHandler = this.options && this.options[type];
                    var handlers = [].concat(optionHandler || [], attachedHandlers);
                    for (var _a = 0, handlers_1 = handlers; _a < handlers_1.length; _a++) {
                        var handler = handlers_1[_a];
                        handler.apply(this.thisContext, args);
                    }
                };
                Emitter.prototype.hasHandlers = function (type) {
                    return Boolean((this.handlers[type] && this.handlers[type].length) ||
                        (this.options && this.options[type]));
                };
                return Emitter;
            }());
            function addToHash(hash, type, handler) {
                (hash[type] || (hash[type] = []))
                    .push(handler);
            }
            function removeFromHash(hash, type, handler) {
                if (handler) {
                    if (hash[type]) {
                        hash[type] = hash[type].filter(function (func) { return func !== handler; });
                    }
                }
                else {
                    delete hash[type]; // remove all handler funcs for this type
                }
            }

            /*
Records offset information for a set of elements, relative to an origin element.
Can record the left/right OR the top/bottom OR both.
Provides methods for querying the cache by position.
*/
            var PositionCache = /** @class */ (function () {
                function PositionCache(originEl, els, isHorizontal, isVertical) {
                    this.els = els;
                    var originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left
                    if (isHorizontal) {
                        this.buildElHorizontals(originClientRect.left);
                    }
                    if (isVertical) {
                        this.buildElVerticals(originClientRect.top);
                    }
                }
                // Populates the left/right internal coordinate arrays
                PositionCache.prototype.buildElHorizontals = function (originClientLeft) {
                    var lefts = [];
                    var rights = [];
                    for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
                        var el = _a[_i];
                        var rect = el.getBoundingClientRect();
                        lefts.push(rect.left - originClientLeft);
                        rights.push(rect.right - originClientLeft);
                    }
                    this.lefts = lefts;
                    this.rights = rights;
                };
                // Populates the top/bottom internal coordinate arrays
                PositionCache.prototype.buildElVerticals = function (originClientTop) {
                    var tops = [];
                    var bottoms = [];
                    for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
                        var el = _a[_i];
                        var rect = el.getBoundingClientRect();
                        tops.push(rect.top - originClientTop);
                        bottoms.push(rect.bottom - originClientTop);
                    }
                    this.tops = tops;
                    this.bottoms = bottoms;
                };
                // Given a left offset (from document left), returns the index of the el that it horizontally intersects.
                // If no intersection is made, returns undefined.
                PositionCache.prototype.leftToIndex = function (leftPosition) {
                    var _a = this, lefts = _a.lefts, rights = _a.rights;
                    var len = lefts.length;
                    var i;
                    for (i = 0; i < len; i += 1) {
                        if (leftPosition >= lefts[i] && leftPosition < rights[i]) {
                            return i;
                        }
                    }
                    return undefined; // TODO: better
                };
                // Given a top offset (from document top), returns the index of the el that it vertically intersects.
                // If no intersection is made, returns undefined.
                PositionCache.prototype.topToIndex = function (topPosition) {
                    var _a = this, tops = _a.tops, bottoms = _a.bottoms;
                    var len = tops.length;
                    var i;
                    for (i = 0; i < len; i += 1) {
                        if (topPosition >= tops[i] && topPosition < bottoms[i]) {
                            return i;
                        }
                    }
                    return undefined; // TODO: better
                };
                // Gets the width of the element at the given index
                PositionCache.prototype.getWidth = function (leftIndex) {
                    return this.rights[leftIndex] - this.lefts[leftIndex];
                };
                // Gets the height of the element at the given index
                PositionCache.prototype.getHeight = function (topIndex) {
                    return this.bottoms[topIndex] - this.tops[topIndex];
                };
                return PositionCache;
            }());

            /* eslint max-classes-per-file: "off" */
            /*
An object for getting/setting scroll-related information for an element.
Internally, this is done very differently for window versus DOM element,
so this object serves as a common interface.
*/
            var ScrollController = /** @class */ (function () {
                function ScrollController() {
                }
                ScrollController.prototype.getMaxScrollTop = function () {
                    return this.getScrollHeight() - this.getClientHeight();
                };
                ScrollController.prototype.getMaxScrollLeft = function () {
                    return this.getScrollWidth() - this.getClientWidth();
                };
                ScrollController.prototype.canScrollVertically = function () {
                    return this.getMaxScrollTop() > 0;
                };
                ScrollController.prototype.canScrollHorizontally = function () {
                    return this.getMaxScrollLeft() > 0;
                };
                ScrollController.prototype.canScrollUp = function () {
                    return this.getScrollTop() > 0;
                };
                ScrollController.prototype.canScrollDown = function () {
                    return this.getScrollTop() < this.getMaxScrollTop();
                };
                ScrollController.prototype.canScrollLeft = function () {
                    return this.getScrollLeft() > 0;
                };
                ScrollController.prototype.canScrollRight = function () {
                    return this.getScrollLeft() < this.getMaxScrollLeft();
                };
                return ScrollController;
            }());
            var ElementScrollController = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ElementScrollController, _super);
                function ElementScrollController(el) {
                    var _this = _super.call(this) || this;
                    _this.el = el;
                    return _this;
                }
                ElementScrollController.prototype.getScrollTop = function () {
                    return this.el.scrollTop;
                };
                ElementScrollController.prototype.getScrollLeft = function () {
                    return this.el.scrollLeft;
                };
                ElementScrollController.prototype.setScrollTop = function (top) {
                    this.el.scrollTop = top;
                };
                ElementScrollController.prototype.setScrollLeft = function (left) {
                    this.el.scrollLeft = left;
                };
                ElementScrollController.prototype.getScrollWidth = function () {
                    return this.el.scrollWidth;
                };
                ElementScrollController.prototype.getScrollHeight = function () {
                    return this.el.scrollHeight;
                };
                ElementScrollController.prototype.getClientHeight = function () {
                    return this.el.clientHeight;
                };
                ElementScrollController.prototype.getClientWidth = function () {
                    return this.el.clientWidth;
                };
                return ElementScrollController;
            }(ScrollController));
            var WindowScrollController = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(WindowScrollController, _super);
                function WindowScrollController() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                WindowScrollController.prototype.getScrollTop = function () {
                    return window.pageYOffset;
                };
                WindowScrollController.prototype.getScrollLeft = function () {
                    return window.pageXOffset;
                };
                WindowScrollController.prototype.setScrollTop = function (n) {
                    window.scroll(window.pageXOffset, n);
                };
                WindowScrollController.prototype.setScrollLeft = function (n) {
                    window.scroll(n, window.pageYOffset);
                };
                WindowScrollController.prototype.getScrollWidth = function () {
                    return document.documentElement.scrollWidth;
                };
                WindowScrollController.prototype.getScrollHeight = function () {
                    return document.documentElement.scrollHeight;
                };
                WindowScrollController.prototype.getClientHeight = function () {
                    return document.documentElement.clientHeight;
                };
                WindowScrollController.prototype.getClientWidth = function () {
                    return document.documentElement.clientWidth;
                };
                return WindowScrollController;
            }(ScrollController));

            var Theme = /** @class */ (function () {
                function Theme(calendarOptions) {
                    if (this.iconOverrideOption) {
                        this.setIconOverride(calendarOptions[this.iconOverrideOption]);
                    }
                }
                Theme.prototype.setIconOverride = function (iconOverrideHash) {
                    var iconClassesCopy;
                    var buttonName;
                    if (typeof iconOverrideHash === 'object' && iconOverrideHash) { // non-null object
                        iconClassesCopy = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.iconClasses);
                        for (buttonName in iconOverrideHash) {
                            iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);
                        }
                        this.iconClasses = iconClassesCopy;
                    }
                    else if (iconOverrideHash === false) {
                        this.iconClasses = {};
                    }
                };
                Theme.prototype.applyIconOverridePrefix = function (className) {
                    var prefix = this.iconOverridePrefix;
                    if (prefix && className.indexOf(prefix) !== 0) { // if not already present
                        className = prefix + className;
                    }
                    return className;
                };
                Theme.prototype.getClass = function (key) {
                    return this.classes[key] || '';
                };
                Theme.prototype.getIconClass = function (buttonName, isRtl) {
                    var className;
                    if (isRtl && this.rtlIconClasses) {
                        className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName];
                    }
                    else {
                        className = this.iconClasses[buttonName];
                    }
                    if (className) {
                        return this.baseIconClass + " " + className;
                    }
                    return '';
                };
                Theme.prototype.getCustomButtonIconClass = function (customButtonProps) {
                    var className;
                    if (this.iconOverrideCustomButtonOption) {
                        className = customButtonProps[this.iconOverrideCustomButtonOption];
                        if (className) {
                            return this.baseIconClass + " " + this.applyIconOverridePrefix(className);
                        }
                    }
                    return '';
                };
                return Theme;
            }());
            Theme.prototype.classes = {};
            Theme.prototype.iconClasses = {};
            Theme.prototype.baseIconClass = '';
            Theme.prototype.iconOverridePrefix = '';

            var ScrollResponder = /** @class */ (function () {
                function ScrollResponder(execFunc, emitter, scrollTime, scrollTimeReset) {
                    var _this = this;
                    this.execFunc = execFunc;
                    this.emitter = emitter;
                    this.scrollTime = scrollTime;
                    this.scrollTimeReset = scrollTimeReset;
                    this.handleScrollRequest = function (request) {
                        _this.queuedRequest = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, _this.queuedRequest || {}, request);
                        _this.drain();
                    };
                    emitter.on('_scrollRequest', this.handleScrollRequest);
                    this.fireInitialScroll();
                }
                ScrollResponder.prototype.detach = function () {
                    this.emitter.off('_scrollRequest', this.handleScrollRequest);
                };
                ScrollResponder.prototype.update = function (isDatesNew) {
                    if (isDatesNew && this.scrollTimeReset) {
                        this.fireInitialScroll(); // will drain
                    }
                    else {
                        this.drain();
                    }
                };
                ScrollResponder.prototype.fireInitialScroll = function () {
                    this.handleScrollRequest({
                        time: this.scrollTime,
                    });
                };
                ScrollResponder.prototype.drain = function () {
                    if (this.queuedRequest && this.execFunc(this.queuedRequest)) {
                        this.queuedRequest = null;
                    }
                };
                return ScrollResponder;
            }());

            var ViewContextType = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createContext)({}); // for Components
            function buildViewContext(viewSpec, viewApi, viewOptions, dateProfileGenerator, dateEnv, theme, pluginHooks, dispatch, getCurrentData, emitter, calendarApi, registerInteractiveComponent, unregisterInteractiveComponent) {
                return {
                    dateEnv: dateEnv,
                    options: viewOptions,
                    pluginHooks: pluginHooks,
                    emitter: emitter,
                    dispatch: dispatch,
                    getCurrentData: getCurrentData,
                    calendarApi: calendarApi,
                    viewSpec: viewSpec,
                    viewApi: viewApi,
                    dateProfileGenerator: dateProfileGenerator,
                    theme: theme,
                    isRtl: viewOptions.direction === 'rtl',
                    addResizeHandler: function (handler) {
                        emitter.on('_resize', handler);
                    },
                    removeResizeHandler: function (handler) {
                        emitter.off('_resize', handler);
                    },
                    createScrollResponder: function (execFunc) {
                        return new ScrollResponder(execFunc, emitter, createDuration(viewOptions.scrollTime), viewOptions.scrollTimeReset);
                    },
                    registerInteractiveComponent: registerInteractiveComponent,
                    unregisterInteractiveComponent: unregisterInteractiveComponent,
                };
            }

            /* eslint max-classes-per-file: off */
            var PureComponent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(PureComponent, _super);
                function PureComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                PureComponent.prototype.shouldComponentUpdate = function (nextProps, nextState) {
                    if (this.debug) {
                        // eslint-disable-next-line no-console
                        console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state));
                    }
                    return !compareObjs(this.props, nextProps, this.propEquality) ||
                        !compareObjs(this.state, nextState, this.stateEquality);
                };
                // HACK for freakin' React StrictMode
                PureComponent.prototype.safeSetState = function (newState) {
                    if (!compareObjs(this.state, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.state), newState), this.stateEquality)) {
                        this.setState(newState);
                    }
                };
                PureComponent.addPropsEquality = addPropsEquality;
                PureComponent.addStateEquality = addStateEquality;
                PureComponent.contextType = ViewContextType;
                return PureComponent;
            }(_vdom_js__WEBPACK_IMPORTED_MODULE_1__.Component));
            PureComponent.prototype.propEquality = {};
            PureComponent.prototype.stateEquality = {};
            var BaseComponent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(BaseComponent, _super);
                function BaseComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                BaseComponent.contextType = ViewContextType;
                return BaseComponent;
            }(PureComponent));
            function addPropsEquality(propEquality) {
                var hash = Object.create(this.prototype.propEquality);
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(hash, propEquality);
                this.prototype.propEquality = hash;
            }
            function addStateEquality(stateEquality) {
                var hash = Object.create(this.prototype.stateEquality);
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(hash, stateEquality);
                this.prototype.stateEquality = hash;
            }
// use other one
            function setRef(ref, current) {
                if (typeof ref === 'function') {
                    ref(current);
                }
                else if (ref) {
                    // see https://github.com/facebook/react/issues/13029
                    ref.current = current;
                }
            }

            /*
an INTERACTABLE date component

PURPOSES:
- hook up to fg, fill, and mirror renderers
- interface for dragging and hits
*/
            var DateComponent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DateComponent, _super);
                function DateComponent() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.uid = guid();
                    return _this;
                }
                // Hit System
                // -----------------------------------------------------------------------------------------------------------------
                DateComponent.prototype.prepareHits = function () {
                };
                DateComponent.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {
                    return null; // this should be abstract
                };
                // Pointer Interaction Utils
                // -----------------------------------------------------------------------------------------------------------------
                DateComponent.prototype.isValidSegDownEl = function (el) {
                    return !this.props.eventDrag && // HACK
                        !this.props.eventResize && // HACK
                        !elementClosest(el, '.fc-event-mirror');
                };
                DateComponent.prototype.isValidDateDownEl = function (el) {
                    return !elementClosest(el, '.fc-event:not(.fc-bg-event)') &&
                        !elementClosest(el, '.fc-more-link') && // a "more.." link
                        !elementClosest(el, 'a[data-navlink]') && // a clickable nav link
                        !elementClosest(el, '.fc-popover'); // hack
                };
                return DateComponent;
            }(BaseComponent));

// TODO: easier way to add new hooks? need to update a million things
            function createPlugin(input) {
                return {
                    id: guid(),
                    deps: input.deps || [],
                    reducers: input.reducers || [],
                    isLoadingFuncs: input.isLoadingFuncs || [],
                    contextInit: [].concat(input.contextInit || []),
                    eventRefiners: input.eventRefiners || {},
                    eventDefMemberAdders: input.eventDefMemberAdders || [],
                    eventSourceRefiners: input.eventSourceRefiners || {},
                    isDraggableTransformers: input.isDraggableTransformers || [],
                    eventDragMutationMassagers: input.eventDragMutationMassagers || [],
                    eventDefMutationAppliers: input.eventDefMutationAppliers || [],
                    dateSelectionTransformers: input.dateSelectionTransformers || [],
                    datePointTransforms: input.datePointTransforms || [],
                    dateSpanTransforms: input.dateSpanTransforms || [],
                    views: input.views || {},
                    viewPropsTransformers: input.viewPropsTransformers || [],
                    isPropsValid: input.isPropsValid || null,
                    externalDefTransforms: input.externalDefTransforms || [],
                    viewContainerAppends: input.viewContainerAppends || [],
                    eventDropTransformers: input.eventDropTransformers || [],
                    componentInteractions: input.componentInteractions || [],
                    calendarInteractions: input.calendarInteractions || [],
                    themeClasses: input.themeClasses || {},
                    eventSourceDefs: input.eventSourceDefs || [],
                    cmdFormatter: input.cmdFormatter,
                    recurringTypes: input.recurringTypes || [],
                    namedTimeZonedImpl: input.namedTimeZonedImpl,
                    initialView: input.initialView || '',
                    elementDraggingImpl: input.elementDraggingImpl,
                    optionChangeHandlers: input.optionChangeHandlers || {},
                    scrollGridImpl: input.scrollGridImpl || null,
                    contentTypeHandlers: input.contentTypeHandlers || {},
                    listenerRefiners: input.listenerRefiners || {},
                    optionRefiners: input.optionRefiners || {},
                    propSetHandlers: input.propSetHandlers || {},
                };
            }
            function buildPluginHooks(pluginDefs, globalDefs) {
                var isAdded = {};
                var hooks = {
                    reducers: [],
                    isLoadingFuncs: [],
                    contextInit: [],
                    eventRefiners: {},
                    eventDefMemberAdders: [],
                    eventSourceRefiners: {},
                    isDraggableTransformers: [],
                    eventDragMutationMassagers: [],
                    eventDefMutationAppliers: [],
                    dateSelectionTransformers: [],
                    datePointTransforms: [],
                    dateSpanTransforms: [],
                    views: {},
                    viewPropsTransformers: [],
                    isPropsValid: null,
                    externalDefTransforms: [],
                    viewContainerAppends: [],
                    eventDropTransformers: [],
                    componentInteractions: [],
                    calendarInteractions: [],
                    themeClasses: {},
                    eventSourceDefs: [],
                    cmdFormatter: null,
                    recurringTypes: [],
                    namedTimeZonedImpl: null,
                    initialView: '',
                    elementDraggingImpl: null,
                    optionChangeHandlers: {},
                    scrollGridImpl: null,
                    contentTypeHandlers: {},
                    listenerRefiners: {},
                    optionRefiners: {},
                    propSetHandlers: {},
                };
                function addDefs(defs) {
                    for (var _i = 0, defs_1 = defs; _i < defs_1.length; _i++) {
                        var def = defs_1[_i];
                        if (!isAdded[def.id]) {
                            isAdded[def.id] = true;
                            addDefs(def.deps);
                            hooks = combineHooks(hooks, def);
                        }
                    }
                }
                if (pluginDefs) {
                    addDefs(pluginDefs);
                }
                addDefs(globalDefs);
                return hooks;
            }
            function buildBuildPluginHooks() {
                var currentOverrideDefs = [];
                var currentGlobalDefs = [];
                var currentHooks;
                return function (overrideDefs, globalDefs) {
                    if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {
                        currentHooks = buildPluginHooks(overrideDefs, globalDefs);
                    }
                    currentOverrideDefs = overrideDefs;
                    currentGlobalDefs = globalDefs;
                    return currentHooks;
                };
            }
            function combineHooks(hooks0, hooks1) {
                return {
                    reducers: hooks0.reducers.concat(hooks1.reducers),
                    isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),
                    contextInit: hooks0.contextInit.concat(hooks1.contextInit),
                    eventRefiners: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.eventRefiners), hooks1.eventRefiners),
                    eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),
                    eventSourceRefiners: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),
                    isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),
                    eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),
                    eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),
                    dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),
                    datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),
                    dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),
                    views: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.views), hooks1.views),
                    viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),
                    isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,
                    externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),
                    viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),
                    eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),
                    calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),
                    componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),
                    themeClasses: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.themeClasses), hooks1.themeClasses),
                    eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),
                    cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,
                    recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),
                    namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,
                    initialView: hooks0.initialView || hooks1.initialView,
                    elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,
                    optionChangeHandlers: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),
                    scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,
                    contentTypeHandlers: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.contentTypeHandlers), hooks1.contentTypeHandlers),
                    listenerRefiners: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.listenerRefiners), hooks1.listenerRefiners),
                    optionRefiners: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.optionRefiners), hooks1.optionRefiners),
                    propSetHandlers: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, hooks0.propSetHandlers), hooks1.propSetHandlers),
                };
            }

            var StandardTheme = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(StandardTheme, _super);
                function StandardTheme() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                return StandardTheme;
            }(Theme));
            StandardTheme.prototype.classes = {
                root: 'fc-theme-standard',
                tableCellShaded: 'fc-cell-shaded',
                buttonGroup: 'fc-button-group',
                button: 'fc-button fc-button-primary',
                buttonActive: 'fc-button-active',
            };
            StandardTheme.prototype.baseIconClass = 'fc-icon';
            StandardTheme.prototype.iconClasses = {
                close: 'fc-icon-x',
                prev: 'fc-icon-chevron-left',
                next: 'fc-icon-chevron-right',
                prevYear: 'fc-icon-chevrons-left',
                nextYear: 'fc-icon-chevrons-right',
            };
            StandardTheme.prototype.rtlIconClasses = {
                prev: 'fc-icon-chevron-right',
                next: 'fc-icon-chevron-left',
                prevYear: 'fc-icon-chevrons-right',
                nextYear: 'fc-icon-chevrons-left',
            };
            StandardTheme.prototype.iconOverrideOption = 'buttonIcons'; // TODO: make TS-friendly
            StandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';
            StandardTheme.prototype.iconOverridePrefix = 'fc-icon-';

            function compileViewDefs(defaultConfigs, overrideConfigs) {
                var hash = {};
                var viewType;
                for (viewType in defaultConfigs) {
                    ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
                }
                for (viewType in overrideConfigs) {
                    ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
                }
                return hash;
            }
            function ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
                if (hash[viewType]) {
                    return hash[viewType];
                }
                var viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);
                if (viewDef) {
                    hash[viewType] = viewDef;
                }
                return viewDef;
            }
            function buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
                var defaultConfig = defaultConfigs[viewType];
                var overrideConfig = overrideConfigs[viewType];
                var queryProp = function (name) { return ((defaultConfig && defaultConfig[name] !== null) ? defaultConfig[name] :
                    ((overrideConfig && overrideConfig[name] !== null) ? overrideConfig[name] : null)); };
                var theComponent = queryProp('component');
                var superType = queryProp('superType');
                var superDef = null;
                if (superType) {
                    if (superType === viewType) {
                        throw new Error('Can\'t have a custom view type that references itself');
                    }
                    superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);
                }
                if (!theComponent && superDef) {
                    theComponent = superDef.component;
                }
                if (!theComponent) {
                    return null; // don't throw a warning, might be settings for a single-unit view
                }
                return {
                    type: viewType,
                    component: theComponent,
                    defaults: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, (superDef ? superDef.defaults : {})), (defaultConfig ? defaultConfig.rawOptions : {})),
                    overrides: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, (superDef ? superDef.overrides : {})), (overrideConfig ? overrideConfig.rawOptions : {})),
                };
            }

            /* eslint max-classes-per-file: off */
// NOTE: in JSX, you should always use this class with <HookProps> arg. otherwise, will default to any???
            var RenderHook = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(RenderHook, _super);
                function RenderHook() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.rootElRef = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.handleRootEl = function (el) {
                        setRef(_this.rootElRef, el);
                        if (_this.props.elRef) {
                            setRef(_this.props.elRef, el);
                        }
                    };
                    return _this;
                }
                RenderHook.prototype.render = function () {
                    var _this = this;
                    var props = this.props;
                    var hookProps = props.hookProps;
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(MountHook, { hookProps: hookProps, didMount: props.didMount, willUnmount: props.willUnmount, elRef: this.handleRootEl }, function (rootElRef) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ContentHook, { hookProps: hookProps, content: props.content, defaultContent: props.defaultContent, backupElRef: _this.rootElRef }, function (innerElRef, innerContent) { return props.children(rootElRef, normalizeClassNames(props.classNames, hookProps), innerElRef, innerContent); })); }));
                };
                return RenderHook;
            }(BaseComponent));
// TODO: rename to be about function, not default. use in above type
// for forcing rerender of components that use the ContentHook
            var CustomContentRenderContext = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createContext)(0);
            function ContentHook(props) {
                return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(CustomContentRenderContext.Consumer, null, function (renderId) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ContentHookInner, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ renderId: renderId }, props))); }));
            }
            var ContentHookInner = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ContentHookInner, _super);
                function ContentHookInner() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.innerElRef = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    return _this;
                }
                ContentHookInner.prototype.render = function () {
                    return this.props.children(this.innerElRef, this.renderInnerContent());
                };
                ContentHookInner.prototype.componentDidMount = function () {
                    this.updateCustomContent();
                };
                ContentHookInner.prototype.componentDidUpdate = function () {
                    this.updateCustomContent();
                };
                ContentHookInner.prototype.componentWillUnmount = function () {
                    if (this.customContentInfo && this.customContentInfo.destroy) {
                        this.customContentInfo.destroy();
                    }
                };
                ContentHookInner.prototype.renderInnerContent = function () {
                    var customContentInfo = this.customContentInfo; // only populated if using non-[p]react node(s)
                    var innerContent = this.getInnerContent();
                    var meta = this.getContentMeta(innerContent);
                    // initial run, or content-type changing? (from vue -> react for example)
                    if (!customContentInfo || customContentInfo.contentKey !== meta.contentKey) {
                        // clearing old value
                        if (customContentInfo) {
                            if (customContentInfo.destroy) {
                                customContentInfo.destroy();
                            }
                            customContentInfo = this.customContentInfo = null;
                        }
                        // assigning new value
                        if (meta.contentKey) {
                            customContentInfo = this.customContentInfo = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ contentKey: meta.contentKey, contentVal: innerContent[meta.contentKey] }, meta.buildLifecycleFuncs());
                        }
                        // updating
                    }
                    else if (customContentInfo) {
                        customContentInfo.contentVal = innerContent[meta.contentKey];
                    }
                    return customContentInfo
                        ? [] // signal that something was specified
                        : innerContent; // assume a [p]react vdom node. use it
                };
                ContentHookInner.prototype.getInnerContent = function () {
                    var props = this.props;
                    var innerContent = normalizeContent(props.content, props.hookProps);
                    if (innerContent === undefined) { // use the default
                        innerContent = normalizeContent(props.defaultContent, props.hookProps);
                    }
                    return innerContent == null ? null : innerContent; // convert undefined to null (better for React)
                };
                ContentHookInner.prototype.getContentMeta = function (innerContent) {
                    var contentTypeHandlers = this.context.pluginHooks.contentTypeHandlers;
                    var contentKey = '';
                    var buildLifecycleFuncs = null;
                    if (innerContent) { // allowed to be null, for convenience to caller
                        for (var searchKey in contentTypeHandlers) {
                            if (innerContent[searchKey] !== undefined) {
                                contentKey = searchKey;
                                buildLifecycleFuncs = contentTypeHandlers[searchKey];
                                break;
                            }
                        }
                    }
                    return { contentKey: contentKey, buildLifecycleFuncs: buildLifecycleFuncs };
                };
                ContentHookInner.prototype.updateCustomContent = function () {
                    if (this.customContentInfo) { // for non-[p]react
                        this.customContentInfo.render(this.innerElRef.current || this.props.backupElRef.current, // the element to render into
                            this.customContentInfo.contentVal);
                    }
                };
                return ContentHookInner;
            }(BaseComponent));
            var MountHook = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(MountHook, _super);
                function MountHook() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.handleRootEl = function (rootEl) {
                        _this.rootEl = rootEl;
                        if (_this.props.elRef) {
                            setRef(_this.props.elRef, rootEl);
                        }
                    };
                    return _this;
                }
                MountHook.prototype.render = function () {
                    return this.props.children(this.handleRootEl);
                };
                MountHook.prototype.componentDidMount = function () {
                    var callback = this.props.didMount;
                    if (callback) {
                        callback((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.props.hookProps), { el: this.rootEl }));
                    }
                };
                MountHook.prototype.componentWillUnmount = function () {
                    var callback = this.props.willUnmount;
                    if (callback) {
                        callback((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.props.hookProps), { el: this.rootEl }));
                    }
                };
                return MountHook;
            }(BaseComponent));
            function buildClassNameNormalizer() {
                var currentGenerator;
                var currentHookProps;
                var currentClassNames = [];
                return function (generator, hookProps) {
                    if (!currentHookProps || !isPropsEqual(currentHookProps, hookProps) || generator !== currentGenerator) {
                        currentGenerator = generator;
                        currentHookProps = hookProps;
                        currentClassNames = normalizeClassNames(generator, hookProps);
                    }
                    return currentClassNames;
                };
            }
            function normalizeClassNames(classNames, hookProps) {
                if (typeof classNames === 'function') {
                    classNames = classNames(hookProps);
                }
                return parseClassNames(classNames);
            }
            function normalizeContent(input, hookProps) {
                if (typeof input === 'function') {
                    return input(hookProps, _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement); // give the function the vdom-creation func
                }
                return input;
            }

            var ViewRoot = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ViewRoot, _super);
                function ViewRoot() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.normalizeClassNames = buildClassNameNormalizer();
                    return _this;
                }
                ViewRoot.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var options = context.options;
                    var hookProps = { view: context.viewApi };
                    var customClassNames = this.normalizeClassNames(options.viewClassNames, hookProps);
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(MountHook, { hookProps: hookProps, didMount: options.viewDidMount, willUnmount: options.viewWillUnmount, elRef: props.elRef }, function (rootElRef) { return props.children(rootElRef, ["fc-" + props.viewSpec.type + "-view", 'fc-view'].concat(customClassNames)); }));
                };
                return ViewRoot;
            }(BaseComponent));

            function parseViewConfigs(inputs) {
                return mapHash(inputs, parseViewConfig);
            }
            function parseViewConfig(input) {
                var rawOptions = typeof input === 'function' ?
                    { component: input } :
                    input;
                var component = rawOptions.component;
                if (rawOptions.content) {
                    component = createViewHookComponent(rawOptions);
                    // TODO: remove content/classNames/didMount/etc from options?
                }
                return {
                    superType: rawOptions.type,
                    component: component,
                    rawOptions: rawOptions,
                };
            }
            function createViewHookComponent(options) {
                return function (viewProps) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewContextType.Consumer, null, function (context) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewRoot, { viewSpec: context.viewSpec }, function (viewElRef, viewClassNames) {
                    var hookProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, viewProps), { nextDayThreshold: context.options.nextDayThreshold });
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(RenderHook, { hookProps: hookProps, classNames: options.classNames, content: options.content, didMount: options.didMount, willUnmount: options.willUnmount, elRef: viewElRef }, function (rootElRef, customClassNames, innerElRef, innerContent) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: viewClassNames.concat(customClassNames).join(' '), ref: rootElRef }, innerContent)); }));
                })); })); };
            }

            function buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
                var defaultConfigs = parseViewConfigs(defaultInputs);
                var overrideConfigs = parseViewConfigs(optionOverrides.views);
                var viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);
                return mapHash(viewDefs, function (viewDef) { return buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults); });
            }
            function buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
                var durationInput = viewDef.overrides.duration ||
                    viewDef.defaults.duration ||
                    dynamicOptionOverrides.duration ||
                    optionOverrides.duration;
                var duration = null;
                var durationUnit = '';
                var singleUnit = '';
                var singleUnitOverrides = {};
                if (durationInput) {
                    duration = createDurationCached(durationInput);
                    if (duration) { // valid?
                        var denom = greatestDurationDenominator(duration);
                        durationUnit = denom.unit;
                        if (denom.value === 1) {
                            singleUnit = durationUnit;
                            singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};
                        }
                    }
                }
                var queryButtonText = function (optionsSubset) {
                    var buttonTextMap = optionsSubset.buttonText || {};
                    var buttonTextKey = viewDef.defaults.buttonTextKey;
                    if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {
                        return buttonTextMap[buttonTextKey];
                    }
                    if (buttonTextMap[viewDef.type] != null) {
                        return buttonTextMap[viewDef.type];
                    }
                    if (buttonTextMap[singleUnit] != null) {
                        return buttonTextMap[singleUnit];
                    }
                    return null;
                };
                var queryButtonTitle = function (optionsSubset) {
                    var buttonHints = optionsSubset.buttonHints || {};
                    var buttonKey = viewDef.defaults.buttonTextKey; // use same key as text
                    if (buttonKey != null && buttonHints[buttonKey] != null) {
                        return buttonHints[buttonKey];
                    }
                    if (buttonHints[viewDef.type] != null) {
                        return buttonHints[viewDef.type];
                    }
                    if (buttonHints[singleUnit] != null) {
                        return buttonHints[singleUnit];
                    }
                    return null;
                };
                return {
                    type: viewDef.type,
                    component: viewDef.component,
                    duration: duration,
                    durationUnit: durationUnit,
                    singleUnit: singleUnit,
                    optionDefaults: viewDef.defaults,
                    optionOverrides: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, singleUnitOverrides), viewDef.overrides),
                    buttonTextOverride: queryButtonText(dynamicOptionOverrides) ||
                        queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence
                        viewDef.overrides.buttonText,
                    buttonTextDefault: queryButtonText(localeDefaults) ||
                        viewDef.defaults.buttonText ||
                        queryButtonText(BASE_OPTION_DEFAULTS) ||
                        viewDef.type,
                    // not DRY
                    buttonTitleOverride: queryButtonTitle(dynamicOptionOverrides) ||
                        queryButtonTitle(optionOverrides) ||
                        viewDef.overrides.buttonHint,
                    buttonTitleDefault: queryButtonTitle(localeDefaults) ||
                        viewDef.defaults.buttonHint ||
                        queryButtonTitle(BASE_OPTION_DEFAULTS),
                    // will eventually fall back to buttonText
                };
            }
// hack to get memoization working
            var durationInputMap = {};
            function createDurationCached(durationInput) {
                var json = JSON.stringify(durationInput);
                var res = durationInputMap[json];
                if (res === undefined) {
                    res = createDuration(durationInput);
                    durationInputMap[json] = res;
                }
                return res;
            }

            var DateProfileGenerator = /** @class */ (function () {
                function DateProfileGenerator(props) {
                    this.props = props;
                    this.nowDate = getNow(props.nowInput, props.dateEnv);
                    this.initHiddenDays();
                }
                /* Date Range Computation
    ------------------------------------------------------------------------------------------------------------------*/
                // Builds a structure with info about what the dates/ranges will be for the "prev" view.
                DateProfileGenerator.prototype.buildPrev = function (currentDateProfile, currentDate, forceToValid) {
                    var dateEnv = this.props.dateEnv;
                    var prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
                        currentDateProfile.dateIncrement);
                    return this.build(prevDate, -1, forceToValid);
                };
                // Builds a structure with info about what the dates/ranges will be for the "next" view.
                DateProfileGenerator.prototype.buildNext = function (currentDateProfile, currentDate, forceToValid) {
                    var dateEnv = this.props.dateEnv;
                    var nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
                        currentDateProfile.dateIncrement);
                    return this.build(nextDate, 1, forceToValid);
                };
                // Builds a structure holding dates/ranges for rendering around the given date.
                // Optional direction param indicates whether the date is being incremented/decremented
                // from its previous value. decremented = -1, incremented = 1 (default).
                DateProfileGenerator.prototype.build = function (currentDate, direction, forceToValid) {
                    if (forceToValid === void 0) { forceToValid = true; }
                    var props = this.props;
                    var validRange;
                    var currentInfo;
                    var isRangeAllDay;
                    var renderRange;
                    var activeRange;
                    var isValid;
                    validRange = this.buildValidRange();
                    validRange = this.trimHiddenDays(validRange);
                    if (forceToValid) {
                        currentDate = constrainMarkerToRange(currentDate, validRange);
                    }
                    currentInfo = this.buildCurrentRangeInfo(currentDate, direction);
                    isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);
                    renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);
                    renderRange = this.trimHiddenDays(renderRange);
                    activeRange = renderRange;
                    if (!props.showNonCurrentDates) {
                        activeRange = intersectRanges(activeRange, currentInfo.range);
                    }
                    activeRange = this.adjustActiveRange(activeRange);
                    activeRange = intersectRanges(activeRange, validRange); // might return null
                    // it's invalid if the originally requested date is not contained,
                    // or if the range is completely outside of the valid range.
                    isValid = rangesIntersect(currentInfo.range, validRange);
                    return {
                        // constraint for where prev/next operations can go and where events can be dragged/resized to.
                        // an object with optional start and end properties.
                        validRange: validRange,
                        // range the view is formally responsible for.
                        // for example, a month view might have 1st-31st, excluding padded dates
                        currentRange: currentInfo.range,
                        // name of largest unit being displayed, like "month" or "week"
                        currentRangeUnit: currentInfo.unit,
                        isRangeAllDay: isRangeAllDay,
                        // dates that display events and accept drag-n-drop
                        // will be `null` if no dates accept events
                        activeRange: activeRange,
                        // date range with a rendered skeleton
                        // includes not-active days that need some sort of DOM
                        renderRange: renderRange,
                        // Duration object that denotes the first visible time of any given day
                        slotMinTime: props.slotMinTime,
                        // Duration object that denotes the exclusive visible end time of any given day
                        slotMaxTime: props.slotMaxTime,
                        isValid: isValid,
                        // how far the current date will move for a prev/next operation
                        dateIncrement: this.buildDateIncrement(currentInfo.duration),
                        // pass a fallback (might be null) ^
                    };
                };
                // Builds an object with optional start/end properties.
                // Indicates the minimum/maximum dates to display.
                // not responsible for trimming hidden days.
                DateProfileGenerator.prototype.buildValidRange = function () {
                    var input = this.props.validRangeInput;
                    var simpleInput = typeof input === 'function'
                        ? input.call(this.props.calendarApi, this.nowDate)
                        : input;
                    return this.refineRange(simpleInput) ||
                        { start: null, end: null }; // completely open-ended
                };
                // Builds a structure with info about the "current" range, the range that is
                // highlighted as being the current month for example.
                // See build() for a description of `direction`.
                // Guaranteed to have `range` and `unit` properties. `duration` is optional.
                DateProfileGenerator.prototype.buildCurrentRangeInfo = function (date, direction) {
                    var props = this.props;
                    var duration = null;
                    var unit = null;
                    var range = null;
                    var dayCount;
                    if (props.duration) {
                        duration = props.duration;
                        unit = props.durationUnit;
                        range = this.buildRangeFromDuration(date, direction, duration, unit);
                    }
                    else if ((dayCount = this.props.dayCount)) {
                        unit = 'day';
                        range = this.buildRangeFromDayCount(date, direction, dayCount);
                    }
                    else if ((range = this.buildCustomVisibleRange(date))) {
                        unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit;
                    }
                    else {
                        duration = this.getFallbackDuration();
                        unit = greatestDurationDenominator(duration).unit;
                        range = this.buildRangeFromDuration(date, direction, duration, unit);
                    }
                    return { duration: duration, unit: unit, range: range };
                };
                DateProfileGenerator.prototype.getFallbackDuration = function () {
                    return createDuration({ day: 1 });
                };
                // Returns a new activeRange to have time values (un-ambiguate)
                // slotMinTime or slotMaxTime causes the range to expand.
                DateProfileGenerator.prototype.adjustActiveRange = function (range) {
                    var _a = this.props, dateEnv = _a.dateEnv, usesMinMaxTime = _a.usesMinMaxTime, slotMinTime = _a.slotMinTime, slotMaxTime = _a.slotMaxTime;
                    var start = range.start, end = range.end;
                    if (usesMinMaxTime) {
                        // expand active range if slotMinTime is negative (why not when positive?)
                        if (asRoughDays(slotMinTime) < 0) {
                            start = startOfDay(start); // necessary?
                            start = dateEnv.add(start, slotMinTime);
                        }
                        // expand active range if slotMaxTime is beyond one day (why not when negative?)
                        if (asRoughDays(slotMaxTime) > 1) {
                            end = startOfDay(end); // necessary?
                            end = addDays(end, -1);
                            end = dateEnv.add(end, slotMaxTime);
                        }
                    }
                    return { start: start, end: end };
                };
                // Builds the "current" range when it is specified as an explicit duration.
                // `unit` is the already-computed greatestDurationDenominator unit of duration.
                DateProfileGenerator.prototype.buildRangeFromDuration = function (date, direction, duration, unit) {
                    var _a = this.props, dateEnv = _a.dateEnv, dateAlignment = _a.dateAlignment;
                    var start;
                    var end;
                    var res;
                    // compute what the alignment should be
                    if (!dateAlignment) {
                        var dateIncrement = this.props.dateIncrement;
                        if (dateIncrement) {
                            // use the smaller of the two units
                            if (asRoughMs(dateIncrement) < asRoughMs(duration)) {
                                dateAlignment = greatestDurationDenominator(dateIncrement).unit;
                            }
                            else {
                                dateAlignment = unit;
                            }
                        }
                        else {
                            dateAlignment = unit;
                        }
                    }
                    // if the view displays a single day or smaller
                    if (asRoughDays(duration) <= 1) {
                        if (this.isHiddenDay(start)) {
                            start = this.skipHiddenDays(start, direction);
                            start = startOfDay(start);
                        }
                    }
                    function computeRes() {
                        start = dateEnv.startOf(date, dateAlignment);
                        end = dateEnv.add(start, duration);
                        res = { start: start, end: end };
                    }
                    computeRes();
                    // if range is completely enveloped by hidden days, go past the hidden days
                    if (!this.trimHiddenDays(res)) {
                        date = this.skipHiddenDays(date, direction);
                        computeRes();
                    }
                    return res;
                };
                // Builds the "current" range when a dayCount is specified.
                DateProfileGenerator.prototype.buildRangeFromDayCount = function (date, direction, dayCount) {
                    var _a = this.props, dateEnv = _a.dateEnv, dateAlignment = _a.dateAlignment;
                    var runningCount = 0;
                    var start = date;
                    var end;
                    if (dateAlignment) {
                        start = dateEnv.startOf(start, dateAlignment);
                    }
                    start = startOfDay(start);
                    start = this.skipHiddenDays(start, direction);
                    end = start;
                    do {
                        end = addDays(end, 1);
                        if (!this.isHiddenDay(end)) {
                            runningCount += 1;
                        }
                    } while (runningCount < dayCount);
                    return { start: start, end: end };
                };
                // Builds a normalized range object for the "visible" range,
                // which is a way to define the currentRange and activeRange at the same time.
                DateProfileGenerator.prototype.buildCustomVisibleRange = function (date) {
                    var props = this.props;
                    var input = props.visibleRangeInput;
                    var simpleInput = typeof input === 'function'
                        ? input.call(props.calendarApi, props.dateEnv.toDate(date))
                        : input;
                    var range = this.refineRange(simpleInput);
                    if (range && (range.start == null || range.end == null)) {
                        return null;
                    }
                    return range;
                };
                // Computes the range that will represent the element/cells for *rendering*,
                // but which may have voided days/times.
                // not responsible for trimming hidden days.
                DateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {
                    return currentRange;
                };
                // Compute the duration value that should be added/substracted to the current date
                // when a prev/next operation happens.
                DateProfileGenerator.prototype.buildDateIncrement = function (fallback) {
                    var dateIncrement = this.props.dateIncrement;
                    var customAlignment;
                    if (dateIncrement) {
                        return dateIncrement;
                    }
                    if ((customAlignment = this.props.dateAlignment)) {
                        return createDuration(1, customAlignment);
                    }
                    if (fallback) {
                        return fallback;
                    }
                    return createDuration({ days: 1 });
                };
                DateProfileGenerator.prototype.refineRange = function (rangeInput) {
                    if (rangeInput) {
                        var range = parseRange(rangeInput, this.props.dateEnv);
                        if (range) {
                            range = computeVisibleDayRange(range);
                        }
                        return range;
                    }
                    return null;
                };
                /* Hidden Days
    ------------------------------------------------------------------------------------------------------------------*/
                // Initializes internal variables related to calculating hidden days-of-week
                DateProfileGenerator.prototype.initHiddenDays = function () {
                    var hiddenDays = this.props.hiddenDays || []; // array of day-of-week indices that are hidden
                    var isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)
                    var dayCnt = 0;
                    var i;
                    if (this.props.weekends === false) {
                        hiddenDays.push(0, 6); // 0=sunday, 6=saturday
                    }
                    for (i = 0; i < 7; i += 1) {
                        if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {
                            dayCnt += 1;
                        }
                    }
                    if (!dayCnt) {
                        throw new Error('invalid hiddenDays'); // all days were hidden? bad.
                    }
                    this.isHiddenDayHash = isHiddenDayHash;
                };
                // Remove days from the beginning and end of the range that are computed as hidden.
                // If the whole range is trimmed off, returns null
                DateProfileGenerator.prototype.trimHiddenDays = function (range) {
                    var start = range.start, end = range.end;
                    if (start) {
                        start = this.skipHiddenDays(start);
                    }
                    if (end) {
                        end = this.skipHiddenDays(end, -1, true);
                    }
                    if (start == null || end == null || start < end) {
                        return { start: start, end: end };
                    }
                    return null;
                };
                // Is the current day hidden?
                // `day` is a day-of-week index (0-6), or a Date (used for UTC)
                DateProfileGenerator.prototype.isHiddenDay = function (day) {
                    if (day instanceof Date) {
                        day = day.getUTCDay();
                    }
                    return this.isHiddenDayHash[day];
                };
                // Incrementing the current day until it is no longer a hidden day, returning a copy.
                // DOES NOT CONSIDER validRange!
                // If the initial value of `date` is not a hidden day, don't do anything.
                // Pass `isExclusive` as `true` if you are dealing with an end date.
                // `inc` defaults to `1` (increment one day forward each time)
                DateProfileGenerator.prototype.skipHiddenDays = function (date, inc, isExclusive) {
                    if (inc === void 0) { inc = 1; }
                    if (isExclusive === void 0) { isExclusive = false; }
                    while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {
                        date = addDays(date, inc);
                    }
                    return date;
                };
                return DateProfileGenerator;
            }());

            function reduceViewType(viewType, action) {
                switch (action.type) {
                    case 'CHANGE_VIEW_TYPE':
                        viewType = action.viewType;
                }
                return viewType;
            }

            function reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {
                var _a;
                switch (action.type) {
                    case 'SET_OPTION':
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, dynamicOptionOverrides), (_a = {}, _a[action.optionName] = action.rawOptionValue, _a));
                    default:
                        return dynamicOptionOverrides;
                }
            }

            function reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {
                var dp;
                switch (action.type) {
                    case 'CHANGE_VIEW_TYPE':
                        return dateProfileGenerator.build(action.dateMarker || currentDate);
                    case 'CHANGE_DATE':
                        return dateProfileGenerator.build(action.dateMarker);
                    case 'PREV':
                        dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);
                        if (dp.isValid) {
                            return dp;
                        }
                        break;
                    case 'NEXT':
                        dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);
                        if (dp.isValid) {
                            return dp;
                        }
                        break;
                }
                return currentDateProfile;
            }

            function initEventSources(calendarOptions, dateProfile, context) {
                var activeRange = dateProfile ? dateProfile.activeRange : null;
                return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);
            }
            function reduceEventSources(eventSources, action, dateProfile, context) {
                var activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?
                switch (action.type) {
                    case 'ADD_EVENT_SOURCES': // already parsed
                        return addSources(eventSources, action.sources, activeRange, context);
                    case 'REMOVE_EVENT_SOURCE':
                        return removeSource(eventSources, action.sourceId);
                    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
                    case 'NEXT':
                    case 'CHANGE_DATE':
                    case 'CHANGE_VIEW_TYPE':
                        if (dateProfile) {
                            return fetchDirtySources(eventSources, activeRange, context);
                        }
                        return eventSources;
                    case 'FETCH_EVENT_SOURCES':
                        return fetchSourcesByIds(eventSources, action.sourceIds ? // why no type?
                            arrayToHash(action.sourceIds) :
                            excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);
                    case 'RECEIVE_EVENTS':
                    case 'RECEIVE_EVENT_ERROR':
                        return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);
                    case 'REMOVE_ALL_EVENT_SOURCES':
                        return {};
                    default:
                        return eventSources;
                }
            }
            function reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {
                var activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?
                return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);
            }
            function computeEventSourcesLoading(eventSources) {
                for (var sourceId in eventSources) {
                    if (eventSources[sourceId].isFetching) {
                        return true;
                    }
                }
                return false;
            }
            function addSources(eventSourceHash, sources, fetchRange, context) {
                var hash = {};
                for (var _i = 0, sources_1 = sources; _i < sources_1.length; _i++) {
                    var source = sources_1[_i];
                    hash[source.sourceId] = source;
                }
                if (fetchRange) {
                    hash = fetchDirtySources(hash, fetchRange, context);
                }
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventSourceHash), hash);
            }
            function removeSource(eventSourceHash, sourceId) {
                return filterHash(eventSourceHash, function (eventSource) { return eventSource.sourceId !== sourceId; });
            }
            function fetchDirtySources(sourceHash, fetchRange, context) {
                return fetchSourcesByIds(sourceHash, filterHash(sourceHash, function (eventSource) { return isSourceDirty(eventSource, fetchRange, context); }), fetchRange, false, context);
            }
            function isSourceDirty(eventSource, fetchRange, context) {
                if (!doesSourceNeedRange(eventSource, context)) {
                    return !eventSource.latestFetchId;
                }
                return !context.options.lazyFetching ||
                    !eventSource.fetchRange ||
                    eventSource.isFetching || // always cancel outdated in-progress fetches
                    fetchRange.start < eventSource.fetchRange.start ||
                    fetchRange.end > eventSource.fetchRange.end;
            }
            function fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {
                var nextSources = {};
                for (var sourceId in prevSources) {
                    var source = prevSources[sourceId];
                    if (sourceIdHash[sourceId]) {
                        nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);
                    }
                    else {
                        nextSources[sourceId] = source;
                    }
                }
                return nextSources;
            }
            function fetchSource(eventSource, fetchRange, isRefetch, context) {
                var options = context.options, calendarApi = context.calendarApi;
                var sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];
                var fetchId = guid();
                sourceDef.fetch({
                    eventSource: eventSource,
                    range: fetchRange,
                    isRefetch: isRefetch,
                    context: context,
                }, function (res) {
                    var rawEvents = res.rawEvents;
                    if (options.eventSourceSuccess) {
                        rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.xhr) || rawEvents;
                    }
                    if (eventSource.success) {
                        rawEvents = eventSource.success.call(calendarApi, rawEvents, res.xhr) || rawEvents;
                    }
                    context.dispatch({
                        type: 'RECEIVE_EVENTS',
                        sourceId: eventSource.sourceId,
                        fetchId: fetchId,
                        fetchRange: fetchRange,
                        rawEvents: rawEvents,
                    });
                }, function (error) {
                    console.warn(error.message, error);
                    if (options.eventSourceFailure) {
                        options.eventSourceFailure.call(calendarApi, error);
                    }
                    if (eventSource.failure) {
                        eventSource.failure(error);
                    }
                    context.dispatch({
                        type: 'RECEIVE_EVENT_ERROR',
                        sourceId: eventSource.sourceId,
                        fetchId: fetchId,
                        fetchRange: fetchRange,
                        error: error,
                    });
                });
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventSource), { isFetching: true, latestFetchId: fetchId });
            }
            function receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {
                var _a;
                var eventSource = sourceHash[sourceId];
                if (eventSource && // not already removed
                    fetchId === eventSource.latestFetchId) {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, sourceHash), (_a = {}, _a[sourceId] = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventSource), { isFetching: false, fetchRange: fetchRange }), _a));
                }
                return sourceHash;
            }
            function excludeStaticSources(eventSources, context) {
                return filterHash(eventSources, function (eventSource) { return doesSourceNeedRange(eventSource, context); });
            }
            function parseInitialSources(rawOptions, context) {
                var refiners = buildEventSourceRefiners(context);
                var rawSources = [].concat(rawOptions.eventSources || []);
                var sources = []; // parsed
                if (rawOptions.initialEvents) {
                    rawSources.unshift(rawOptions.initialEvents);
                }
                if (rawOptions.events) {
                    rawSources.unshift(rawOptions.events);
                }
                for (var _i = 0, rawSources_1 = rawSources; _i < rawSources_1.length; _i++) {
                    var rawSource = rawSources_1[_i];
                    var source = parseEventSource(rawSource, context, refiners);
                    if (source) {
                        sources.push(source);
                    }
                }
                return sources;
            }
            function doesSourceNeedRange(eventSource, context) {
                var defs = context.pluginHooks.eventSourceDefs;
                return !defs[eventSource.sourceDefId].ignoreRange;
            }

            function reduceEventStore(eventStore, action, eventSources, dateProfile, context) {
                switch (action.type) {
                    case 'RECEIVE_EVENTS': // raw
                        return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, context);
                    case 'ADD_EVENTS': // already parsed, but not expanded
                        return addEvent(eventStore, action.eventStore, // new ones
                            dateProfile ? dateProfile.activeRange : null, context);
                    case 'RESET_EVENTS':
                        return action.eventStore;
                    case 'MERGE_EVENTS': // already parsed and expanded
                        return mergeEventStores(eventStore, action.eventStore);
                    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
                    case 'NEXT':
                    case 'CHANGE_DATE':
                    case 'CHANGE_VIEW_TYPE':
                        if (dateProfile) {
                            return expandRecurring(eventStore, dateProfile.activeRange, context);
                        }
                        return eventStore;
                    case 'REMOVE_EVENTS':
                        return excludeSubEventStore(eventStore, action.eventStore);
                    case 'REMOVE_EVENT_SOURCE':
                        return excludeEventsBySourceId(eventStore, action.sourceId);
                    case 'REMOVE_ALL_EVENT_SOURCES':
                        return filterEventStoreDefs(eventStore, function (eventDef) { return (!eventDef.sourceId // only keep events with no source id
                        ); });
                    case 'REMOVE_ALL_EVENTS':
                        return createEmptyEventStore();
                    default:
                        return eventStore;
                }
            }
            function receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, context) {
                if (eventSource && // not already removed
                    fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources
                ) {
                    var subset = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context);
                    if (fetchRange) {
                        subset = expandRecurring(subset, fetchRange, context);
                    }
                    return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);
                }
                return eventStore;
            }
            function transformRawEvents(rawEvents, eventSource, context) {
                var calEachTransform = context.options.eventDataTransform;
                var sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;
                if (sourceEachTransform) {
                    rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);
                }
                if (calEachTransform) {
                    rawEvents = transformEachRawEvent(rawEvents, calEachTransform);
                }
                return rawEvents;
            }
            function transformEachRawEvent(rawEvents, func) {
                var refinedEvents;
                if (!func) {
                    refinedEvents = rawEvents;
                }
                else {
                    refinedEvents = [];
                    for (var _i = 0, rawEvents_1 = rawEvents; _i < rawEvents_1.length; _i++) {
                        var rawEvent = rawEvents_1[_i];
                        var refinedEvent = func(rawEvent);
                        if (refinedEvent) {
                            refinedEvents.push(refinedEvent);
                        }
                        else if (refinedEvent == null) {
                            refinedEvents.push(rawEvent);
                        } // if a different falsy value, do nothing
                    }
                }
                return refinedEvents;
            }
            function addEvent(eventStore, subset, expandRange, context) {
                if (expandRange) {
                    subset = expandRecurring(subset, expandRange, context);
                }
                return mergeEventStores(eventStore, subset);
            }
            function rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {
                var defs = eventStore.defs;
                var instances = mapHash(eventStore.instances, function (instance) {
                    var def = defs[instance.defId];
                    if (def.allDay || def.recurringDef) {
                        return instance; // isn't dependent on timezone
                    }
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, instance), { range: {
                            start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),
                            end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo)),
                        }, forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo, forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo });
                });
                return { defs: defs, instances: instances };
            }
            function excludeEventsBySourceId(eventStore, sourceId) {
                return filterEventStoreDefs(eventStore, function (eventDef) { return eventDef.sourceId !== sourceId; });
            }
// QUESTION: why not just return instances? do a general object-property-exclusion util
            function excludeInstances(eventStore, removals) {
                return {
                    defs: eventStore.defs,
                    instances: filterHash(eventStore.instances, function (instance) { return !removals[instance.instanceId]; }),
                };
            }

            function reduceDateSelection(currentSelection, action) {
                switch (action.type) {
                    case 'UNSELECT_DATES':
                        return null;
                    case 'SELECT_DATES':
                        return action.selection;
                    default:
                        return currentSelection;
                }
            }

            function reduceSelectedEvent(currentInstanceId, action) {
                switch (action.type) {
                    case 'UNSELECT_EVENT':
                        return '';
                    case 'SELECT_EVENT':
                        return action.eventInstanceId;
                    default:
                        return currentInstanceId;
                }
            }

            function reduceEventDrag(currentDrag, action) {
                var newDrag;
                switch (action.type) {
                    case 'UNSET_EVENT_DRAG':
                        return null;
                    case 'SET_EVENT_DRAG':
                        newDrag = action.state;
                        return {
                            affectedEvents: newDrag.affectedEvents,
                            mutatedEvents: newDrag.mutatedEvents,
                            isEvent: newDrag.isEvent,
                        };
                    default:
                        return currentDrag;
                }
            }

            function reduceEventResize(currentResize, action) {
                var newResize;
                switch (action.type) {
                    case 'UNSET_EVENT_RESIZE':
                        return null;
                    case 'SET_EVENT_RESIZE':
                        newResize = action.state;
                        return {
                            affectedEvents: newResize.affectedEvents,
                            mutatedEvents: newResize.mutatedEvents,
                            isEvent: newResize.isEvent,
                        };
                    default:
                        return currentResize;
                }
            }

            function parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
                var header = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;
                var footer = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;
                return { header: header, footer: footer };
            }
            function parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
                var sectionWidgets = {};
                var viewsWithButtons = [];
                var hasTitle = false;
                for (var sectionName in sectionStrHash) {
                    var sectionStr = sectionStrHash[sectionName];
                    var sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi);
                    sectionWidgets[sectionName] = sectionRes.widgets;
                    viewsWithButtons.push.apply(viewsWithButtons, sectionRes.viewsWithButtons);
                    hasTitle = hasTitle || sectionRes.hasTitle;
                }
                return { sectionWidgets: sectionWidgets, viewsWithButtons: viewsWithButtons, hasTitle: hasTitle };
            }
            /*
BAD: querying icons and text here. should be done at render time
*/
            function parseSection(sectionStr, calendarOptions, // defaults+overrides, then refined
                                  calendarOptionOverrides, // overrides only!, unrefined :(
                                  theme, viewSpecs, calendarApi) {
                var isRtl = calendarOptions.direction === 'rtl';
                var calendarCustomButtons = calendarOptions.customButtons || {};
                var calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};
                var calendarButtonText = calendarOptions.buttonText || {};
                var calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {};
                var calendarButtonHints = calendarOptions.buttonHints || {};
                var sectionSubstrs = sectionStr ? sectionStr.split(' ') : [];
                var viewsWithButtons = [];
                var hasTitle = false;
                var widgets = sectionSubstrs.map(function (buttonGroupStr) { return (buttonGroupStr.split(',').map(function (buttonName) {
                    if (buttonName === 'title') {
                        hasTitle = true;
                        return { buttonName: buttonName };
                    }
                    var customButtonProps;
                    var viewSpec;
                    var buttonClick;
                    var buttonIcon; // only one of these will be set
                    var buttonText; // "
                    var buttonHint;
                    // ^ for the title="" attribute, for accessibility
                    if ((customButtonProps = calendarCustomButtons[buttonName])) {
                        buttonClick = function (ev) {
                            if (customButtonProps.click) {
                                customButtonProps.click.call(ev.target, ev, ev.target); // TODO: use Calendar this context?
                            }
                        };
                        (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) ||
                        (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                        (buttonText = customButtonProps.text);
                        buttonHint = customButtonProps.hint || customButtonProps.text;
                    }
                    else if ((viewSpec = viewSpecs[buttonName])) {
                        viewsWithButtons.push(buttonName);
                        buttonClick = function () {
                            calendarApi.changeView(buttonName);
                        };
                        (buttonText = viewSpec.buttonTextOverride) ||
                        (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                        (buttonText = viewSpec.buttonTextDefault);
                        var textFallback = viewSpec.buttonTextOverride ||
                            viewSpec.buttonTextDefault;
                        buttonHint = formatWithOrdinals(viewSpec.buttonTitleOverride ||
                            viewSpec.buttonTitleDefault ||
                            calendarOptions.viewHint, [textFallback, buttonName], // view-name = buttonName
                            textFallback);
                    }
                    else if (calendarApi[buttonName]) { // a calendarApi method
                        buttonClick = function () {
                            calendarApi[buttonName]();
                        };
                        (buttonText = calendarButtonTextOverrides[buttonName]) ||
                        (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                        (buttonText = calendarButtonText[buttonName]); // everything else is considered default
                        if (buttonName === 'prevYear' || buttonName === 'nextYear') {
                            var prevOrNext = buttonName === 'prevYear' ? 'prev' : 'next';
                            buttonHint = formatWithOrdinals(calendarButtonHintOverrides[prevOrNext] ||
                                calendarButtonHints[prevOrNext], [
                                calendarButtonText.year || 'year',
                                'year',
                            ], calendarButtonText[buttonName]);
                        }
                        else {
                            buttonHint = function (navUnit) { return formatWithOrdinals(calendarButtonHintOverrides[buttonName] ||
                                calendarButtonHints[buttonName], [
                                calendarButtonText[navUnit] || navUnit,
                                navUnit,
                            ], calendarButtonText[buttonName]); };
                        }
                    }
                    return { buttonName: buttonName, buttonClick: buttonClick, buttonIcon: buttonIcon, buttonText: buttonText, buttonHint: buttonHint };
                })); });
                return { widgets: widgets, viewsWithButtons: viewsWithButtons, hasTitle: hasTitle };
            }

            var eventSourceDef$2 = {
                ignoreRange: true,
                parseMeta: function (refined) {
                    if (Array.isArray(refined.events)) {
                        return refined.events;
                    }
                    return null;
                },
                fetch: function (arg, success) {
                    success({
                        rawEvents: arg.eventSource.meta,
                    });
                },
            };
            var arrayEventSourcePlugin = createPlugin({
                eventSourceDefs: [eventSourceDef$2],
            });

            var eventSourceDef$1 = {
                parseMeta: function (refined) {
                    if (typeof refined.events === 'function') {
                        return refined.events;
                    }
                    return null;
                },
                fetch: function (arg, success, failure) {
                    var dateEnv = arg.context.dateEnv;
                    var func = arg.eventSource.meta;
                    unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), function (rawEvents) {
                        success({ rawEvents: rawEvents }); // needs an object response
                    }, failure);
                },
            };
            var funcEventSourcePlugin = createPlugin({
                eventSourceDefs: [eventSourceDef$1],
            });

            function requestJson(method, url, params, successCallback, failureCallback) {
                method = method.toUpperCase();
                var body = null;
                if (method === 'GET') {
                    url = injectQueryStringParams(url, params);
                }
                else {
                    body = encodeParams(params);
                }
                var xhr = new XMLHttpRequest();
                xhr.open(method, url, true);
                if (method !== 'GET') {
                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                }
                xhr.onload = function () {
                    if (xhr.status >= 200 && xhr.status < 400) {
                        var parsed = false;
                        var res = void 0;
                        try {
                            res = JSON.parse(xhr.responseText);
                            parsed = true;
                        }
                        catch (err) {
                            // will handle parsed=false
                        }
                        if (parsed) {
                            successCallback(res, xhr);
                        }
                        else {
                            failureCallback('Failure parsing JSON', xhr);
                        }
                    }
                    else {
                        failureCallback('Request failed', xhr);
                    }
                };
                xhr.onerror = function () {
                    failureCallback('Request failed', xhr);
                };
                xhr.send(body);
            }
            function injectQueryStringParams(url, params) {
                return url +
                    (url.indexOf('?') === -1 ? '?' : '&') +
                    encodeParams(params);
            }
            function encodeParams(params) {
                var parts = [];
                for (var key in params) {
                    parts.push(encodeURIComponent(key) + "=" + encodeURIComponent(params[key]));
                }
                return parts.join('&');
            }

            var JSON_FEED_EVENT_SOURCE_REFINERS = {
                method: String,
                extraParams: identity,
                startParam: String,
                endParam: String,
                timeZoneParam: String,
            };

            var eventSourceDef = {
                parseMeta: function (refined) {
                    if (refined.url && (refined.format === 'json' || !refined.format)) {
                        return {
                            url: refined.url,
                            format: 'json',
                            method: (refined.method || 'GET').toUpperCase(),
                            extraParams: refined.extraParams,
                            startParam: refined.startParam,
                            endParam: refined.endParam,
                            timeZoneParam: refined.timeZoneParam,
                        };
                    }
                    return null;
                },
                fetch: function (arg, success, failure) {
                    var meta = arg.eventSource.meta;
                    var requestParams = buildRequestParams(meta, arg.range, arg.context);
                    requestJson(meta.method, meta.url, requestParams, function (rawEvents, xhr) {
                        success({ rawEvents: rawEvents, xhr: xhr });
                    }, function (errorMessage, xhr) {
                        failure({ message: errorMessage, xhr: xhr });
                    });
                },
            };
            var jsonFeedEventSourcePlugin = createPlugin({
                eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,
                eventSourceDefs: [eventSourceDef],
            });
            function buildRequestParams(meta, range, context) {
                var dateEnv = context.dateEnv, options = context.options;
                var startParam;
                var endParam;
                var timeZoneParam;
                var customRequestParams;
                var params = {};
                startParam = meta.startParam;
                if (startParam == null) {
                    startParam = options.startParam;
                }
                endParam = meta.endParam;
                if (endParam == null) {
                    endParam = options.endParam;
                }
                timeZoneParam = meta.timeZoneParam;
                if (timeZoneParam == null) {
                    timeZoneParam = options.timeZoneParam;
                }
                // retrieve any outbound GET/POST data from the options
                if (typeof meta.extraParams === 'function') {
                    // supplied as a function that returns a key/value object
                    customRequestParams = meta.extraParams();
                }
                else {
                    // probably supplied as a straight key/value object
                    customRequestParams = meta.extraParams || {};
                }
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(params, customRequestParams);
                params[startParam] = dateEnv.formatIso(range.start);
                params[endParam] = dateEnv.formatIso(range.end);
                if (dateEnv.timeZone !== 'local') {
                    params[timeZoneParam] = dateEnv.timeZone;
                }
                return params;
            }

            var SIMPLE_RECURRING_REFINERS = {
                daysOfWeek: identity,
                startTime: createDuration,
                endTime: createDuration,
                duration: createDuration,
                startRecur: identity,
                endRecur: identity,
            };

            var recurring = {
                parse: function (refined, dateEnv) {
                    if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {
                        var recurringData = {
                            daysOfWeek: refined.daysOfWeek || null,
                            startTime: refined.startTime || null,
                            endTime: refined.endTime || null,
                            startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,
                            endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,
                        };
                        var duration = void 0;
                        if (refined.duration) {
                            duration = refined.duration;
                        }
                        if (!duration && refined.startTime && refined.endTime) {
                            duration = subtractDurations(refined.endTime, refined.startTime);
                        }
                        return {
                            allDayGuess: Boolean(!refined.startTime && !refined.endTime),
                            duration: duration,
                            typeData: recurringData, // doesn't need endTime anymore but oh well
                        };
                    }
                    return null;
                },
                expand: function (typeData, framingRange, dateEnv) {
                    var clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });
                    if (clippedFramingRange) {
                        return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);
                    }
                    return [];
                },
            };
            var simpleRecurringEventsPlugin = createPlugin({
                recurringTypes: [recurring],
                eventRefiners: SIMPLE_RECURRING_REFINERS,
            });
            function expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {
                var dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;
                var dayMarker = startOfDay(framingRange.start);
                var endMarker = framingRange.end;
                var instanceStarts = [];
                while (dayMarker < endMarker) {
                    var instanceStart
                        // if everyday, or this particular day-of-week
                        = void 0;
                    // if everyday, or this particular day-of-week
                    if (!dowHash || dowHash[dayMarker.getUTCDay()]) {
                        if (startTime) {
                            instanceStart = dateEnv.add(dayMarker, startTime);
                        }
                        else {
                            instanceStart = dayMarker;
                        }
                        instanceStarts.push(instanceStart);
                    }
                    dayMarker = addDays(dayMarker, 1);
                }
                return instanceStarts;
            }

            var changeHandlerPlugin = createPlugin({
                optionChangeHandlers: {
                    events: function (events, context) {
                        handleEventSources([events], context);
                    },
                    eventSources: handleEventSources,
                },
            });
            /*
BUG: if `event` was supplied, all previously-given `eventSources` will be wiped out
*/
            function handleEventSources(inputs, context) {
                var unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);
                var newInputs = [];
                for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
                    var input = inputs_1[_i];
                    var inputFound = false;
                    for (var i = 0; i < unfoundSources.length; i += 1) {
                        if (unfoundSources[i]._raw === input) {
                            unfoundSources.splice(i, 1); // delete
                            inputFound = true;
                            break;
                        }
                    }
                    if (!inputFound) {
                        newInputs.push(input);
                    }
                }
                for (var _a = 0, unfoundSources_1 = unfoundSources; _a < unfoundSources_1.length; _a++) {
                    var unfoundSource = unfoundSources_1[_a];
                    context.dispatch({
                        type: 'REMOVE_EVENT_SOURCE',
                        sourceId: unfoundSource.sourceId,
                    });
                }
                for (var _b = 0, newInputs_1 = newInputs; _b < newInputs_1.length; _b++) {
                    var newInput = newInputs_1[_b];
                    context.calendarApi.addEventSource(newInput);
                }
            }

            function handleDateProfile(dateProfile, context) {
                context.emitter.trigger('datesSet', (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));
            }

            function handleEventStore(eventStore, context) {
                var emitter = context.emitter;
                if (emitter.hasHandlers('eventsSet')) {
                    emitter.trigger('eventsSet', buildEventApis(eventStore, context));
                }
            }

            /*
this array is exposed on the root namespace so that UMD plugins can add to it.
see the rollup-bundles script.
*/
            var globalPlugins = [
                arrayEventSourcePlugin,
                funcEventSourcePlugin,
                jsonFeedEventSourcePlugin,
                simpleRecurringEventsPlugin,
                changeHandlerPlugin,
                createPlugin({
                    isLoadingFuncs: [
                        function (state) { return computeEventSourcesLoading(state.eventSources); },
                    ],
                    contentTypeHandlers: {
                        html: buildHtmlRenderer,
                        domNodes: buildDomNodeRenderer,
                    },
                    propSetHandlers: {
                        dateProfile: handleDateProfile,
                        eventStore: handleEventStore,
                    },
                }),
            ];
            function buildHtmlRenderer() {
                var currentEl = null;
                var currentHtml = '';
                function render(el, html) {
                    if (el !== currentEl || html !== currentHtml) {
                        el.innerHTML = html;
                    }
                    currentEl = el;
                    currentHtml = html;
                }
                function destroy() {
                    currentEl.innerHTML = '';
                    currentEl = null;
                    currentHtml = '';
                }
                return { render: render, destroy: destroy };
            }
            function buildDomNodeRenderer() {
                var currentEl = null;
                var currentDomNodes = [];
                function render(el, domNodes) {
                    var newDomNodes = Array.prototype.slice.call(domNodes);
                    if (el !== currentEl || !isArraysEqual(currentDomNodes, newDomNodes)) {
                        // append first, remove second (for scroll resetting)
                        for (var _i = 0, newDomNodes_1 = newDomNodes; _i < newDomNodes_1.length; _i++) {
                            var newNode = newDomNodes_1[_i];
                            el.appendChild(newNode);
                        }
                        destroy();
                    }
                    currentEl = el;
                    currentDomNodes = newDomNodes;
                }
                function destroy() {
                    currentDomNodes.forEach(removeElement);
                    currentDomNodes = [];
                    currentEl = null;
                }
                return { render: render, destroy: destroy };
            }

            var DelayedRunner = /** @class */ (function () {
                function DelayedRunner(drainedOption) {
                    this.drainedOption = drainedOption;
                    this.isRunning = false;
                    this.isDirty = false;
                    this.pauseDepths = {};
                    this.timeoutId = 0;
                }
                DelayedRunner.prototype.request = function (delay) {
                    this.isDirty = true;
                    if (!this.isPaused()) {
                        this.clearTimeout();
                        if (delay == null) {
                            this.tryDrain();
                        }
                        else {
                            this.timeoutId = setTimeout(// NOT OPTIMAL! TODO: look at debounce
                                this.tryDrain.bind(this), delay);
                        }
                    }
                };
                DelayedRunner.prototype.pause = function (scope) {
                    if (scope === void 0) { scope = ''; }
                    var pauseDepths = this.pauseDepths;
                    pauseDepths[scope] = (pauseDepths[scope] || 0) + 1;
                    this.clearTimeout();
                };
                DelayedRunner.prototype.resume = function (scope, force) {
                    if (scope === void 0) { scope = ''; }
                    var pauseDepths = this.pauseDepths;
                    if (scope in pauseDepths) {
                        if (force) {
                            delete pauseDepths[scope];
                        }
                        else {
                            pauseDepths[scope] -= 1;
                            var depth = pauseDepths[scope];
                            if (depth <= 0) {
                                delete pauseDepths[scope];
                            }
                        }
                        this.tryDrain();
                    }
                };
                DelayedRunner.prototype.isPaused = function () {
                    return Object.keys(this.pauseDepths).length;
                };
                DelayedRunner.prototype.tryDrain = function () {
                    if (!this.isRunning && !this.isPaused()) {
                        this.isRunning = true;
                        while (this.isDirty) {
                            this.isDirty = false;
                            this.drained(); // might set isDirty to true again
                        }
                        this.isRunning = false;
                    }
                };
                DelayedRunner.prototype.clear = function () {
                    this.clearTimeout();
                    this.isDirty = false;
                    this.pauseDepths = {};
                };
                DelayedRunner.prototype.clearTimeout = function () {
                    if (this.timeoutId) {
                        clearTimeout(this.timeoutId);
                        this.timeoutId = 0;
                    }
                };
                DelayedRunner.prototype.drained = function () {
                    if (this.drainedOption) {
                        this.drainedOption();
                    }
                };
                return DelayedRunner;
            }());

            var TaskRunner = /** @class */ (function () {
                function TaskRunner(runTaskOption, drainedOption) {
                    this.runTaskOption = runTaskOption;
                    this.drainedOption = drainedOption;
                    this.queue = [];
                    this.delayedRunner = new DelayedRunner(this.drain.bind(this));
                }
                TaskRunner.prototype.request = function (task, delay) {
                    this.queue.push(task);
                    this.delayedRunner.request(delay);
                };
                TaskRunner.prototype.pause = function (scope) {
                    this.delayedRunner.pause(scope);
                };
                TaskRunner.prototype.resume = function (scope, force) {
                    this.delayedRunner.resume(scope, force);
                };
                TaskRunner.prototype.drain = function () {
                    var queue = this.queue;
                    while (queue.length) {
                        var completedTasks = [];
                        var task = void 0;
                        while ((task = queue.shift())) {
                            this.runTask(task);
                            completedTasks.push(task);
                        }
                        this.drained(completedTasks);
                    } // keep going, in case new tasks were added in the drained handler
                };
                TaskRunner.prototype.runTask = function (task) {
                    if (this.runTaskOption) {
                        this.runTaskOption(task);
                    }
                };
                TaskRunner.prototype.drained = function (completedTasks) {
                    if (this.drainedOption) {
                        this.drainedOption(completedTasks);
                    }
                };
                return TaskRunner;
            }());

// Computes what the title at the top of the calendarApi should be for this view
            function buildTitle(dateProfile, viewOptions, dateEnv) {
                var range;
                // for views that span a large unit of time, show the proper interval, ignoring stray days before and after
                if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {
                    range = dateProfile.currentRange;
                }
                else { // for day units or smaller, use the actual day range
                    range = dateProfile.activeRange;
                }
                return dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {
                    isEndExclusive: dateProfile.isRangeAllDay,
                    defaultSeparator: viewOptions.titleRangeSeparator,
                });
            }
// Generates the format string that should be used to generate the title for the current date range.
// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.
            function buildTitleFormat(dateProfile) {
                var currentRangeUnit = dateProfile.currentRangeUnit;
                if (currentRangeUnit === 'year') {
                    return { year: 'numeric' };
                }
                if (currentRangeUnit === 'month') {
                    return { year: 'numeric', month: 'long' }; // like "September 2014"
                }
                var days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);
                if (days !== null && days > 1) {
                    // multi-day range. shorter, like "Sep 9 - 10 2014"
                    return { year: 'numeric', month: 'short', day: 'numeric' };
                }
                // one day. longer, like "September 9 2014"
                return { year: 'numeric', month: 'long', day: 'numeric' };
            }

// in future refactor, do the redux-style function(state=initial) for initial-state
// also, whatever is happening in constructor, have it happen in action queue too
            var CalendarDataManager = /** @class */ (function () {
                function CalendarDataManager(props) {
                    var _this = this;
                    this.computeOptionsData = memoize(this._computeOptionsData);
                    this.computeCurrentViewData = memoize(this._computeCurrentViewData);
                    this.organizeRawLocales = memoize(organizeRawLocales);
                    this.buildLocale = memoize(buildLocale);
                    this.buildPluginHooks = buildBuildPluginHooks();
                    this.buildDateEnv = memoize(buildDateEnv);
                    this.buildTheme = memoize(buildTheme);
                    this.parseToolbars = memoize(parseToolbars);
                    this.buildViewSpecs = memoize(buildViewSpecs);
                    this.buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator);
                    this.buildViewApi = memoize(buildViewApi);
                    this.buildViewUiProps = memoizeObjArg(buildViewUiProps);
                    this.buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual);
                    this.buildEventUiBases = memoize(buildEventUiBases);
                    this.parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours);
                    this.buildTitle = memoize(buildTitle);
                    this.emitter = new Emitter();
                    this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));
                    this.currentCalendarOptionsInput = {};
                    this.currentCalendarOptionsRefined = {};
                    this.currentViewOptionsInput = {};
                    this.currentViewOptionsRefined = {};
                    this.currentCalendarOptionsRefiners = {};
                    this.getCurrentData = function () { return _this.data; };
                    this.dispatch = function (action) {
                        _this.actionRunner.request(action); // protects against recursive calls to _handleAction
                    };
                    this.props = props;
                    this.actionRunner.pause();
                    var dynamicOptionOverrides = {};
                    var optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
                    var currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;
                    var currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
                    // wire things up
                    // TODO: not DRY
                    props.calendarApi.currentDataManager = this;
                    this.emitter.setThisContext(props.calendarApi);
                    this.emitter.setOptions(currentViewData.options);
                    var currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv);
                    var dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
                    if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {
                        currentDate = dateProfile.currentRange.start;
                    }
                    var calendarContext = {
                        dateEnv: optionsData.dateEnv,
                        options: optionsData.calendarOptions,
                        pluginHooks: optionsData.pluginHooks,
                        calendarApi: props.calendarApi,
                        dispatch: this.dispatch,
                        emitter: this.emitter,
                        getCurrentData: this.getCurrentData,
                    };
                    // needs to be after setThisContext
                    for (var _i = 0, _a = optionsData.pluginHooks.contextInit; _i < _a.length; _i++) {
                        var callback = _a[_i];
                        callback(calendarContext);
                    }
                    // NOT DRY
                    var eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);
                    var initialState = {
                        dynamicOptionOverrides: dynamicOptionOverrides,
                        currentViewType: currentViewType,
                        currentDate: currentDate,
                        dateProfile: dateProfile,
                        businessHours: this.parseContextBusinessHours(calendarContext),
                        eventSources: eventSources,
                        eventUiBases: {},
                        eventStore: createEmptyEventStore(),
                        renderableEventStore: createEmptyEventStore(),
                        dateSelection: null,
                        eventSelection: '',
                        eventDrag: null,
                        eventResize: null,
                        selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig,
                    };
                    var contextAndState = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, calendarContext), initialState);
                    for (var _b = 0, _c = optionsData.pluginHooks.reducers; _b < _c.length; _b++) {
                        var reducer = _c[_b];
                        (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(initialState, reducer(null, null, contextAndState));
                    }
                    if (computeIsLoading(initialState, calendarContext)) {
                        this.emitter.trigger('loading', true); // NOT DRY
                    }
                    this.state = initialState;
                    this.updateData();
                    this.actionRunner.resume();
                }
                CalendarDataManager.prototype.resetOptions = function (optionOverrides, append) {
                    var props = this.props;
                    props.optionOverrides = append
                        ? (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, props.optionOverrides), optionOverrides) : optionOverrides;
                    this.actionRunner.request({
                        type: 'NOTHING',
                    });
                };
                CalendarDataManager.prototype._handleAction = function (action) {
                    var _a = this, props = _a.props, state = _a.state, emitter = _a.emitter;
                    var dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);
                    var optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
                    var currentViewType = reduceViewType(state.currentViewType, action);
                    var currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
                    // wire things up
                    // TODO: not DRY
                    props.calendarApi.currentDataManager = this;
                    emitter.setThisContext(props.calendarApi);
                    emitter.setOptions(currentViewData.options);
                    var calendarContext = {
                        dateEnv: optionsData.dateEnv,
                        options: optionsData.calendarOptions,
                        pluginHooks: optionsData.pluginHooks,
                        calendarApi: props.calendarApi,
                        dispatch: this.dispatch,
                        emitter: emitter,
                        getCurrentData: this.getCurrentData,
                    };
                    var currentDate = state.currentDate, dateProfile = state.dateProfile;
                    if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) { // hack
                        dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
                    }
                    currentDate = reduceCurrentDate(currentDate, action);
                    dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);
                    if (action.type === 'PREV' || // TODO: move this logic into DateProfileGenerator
                        action.type === 'NEXT' || // "
                        !rangeContainsMarker(dateProfile.currentRange, currentDate)) {
                        currentDate = dateProfile.currentRange.start;
                    }
                    var eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);
                    var eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext);
                    var isEventsLoading = computeEventSourcesLoading(eventSources); // BAD. also called in this func in computeIsLoading
                    var renderableEventStore = (isEventsLoading && !currentViewData.options.progressiveEventRendering) ?
                        (state.renderableEventStore || eventStore) : // try from previous state
                        eventStore;
                    var _b = this.buildViewUiProps(calendarContext), eventUiSingleBase = _b.eventUiSingleBase, selectionConfig = _b.selectionConfig; // will memoize obj
                    var eventUiBySource = this.buildEventUiBySource(eventSources);
                    var eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);
                    var newState = {
                        dynamicOptionOverrides: dynamicOptionOverrides,
                        currentViewType: currentViewType,
                        currentDate: currentDate,
                        dateProfile: dateProfile,
                        eventSources: eventSources,
                        eventStore: eventStore,
                        renderableEventStore: renderableEventStore,
                        selectionConfig: selectionConfig,
                        eventUiBases: eventUiBases,
                        businessHours: this.parseContextBusinessHours(calendarContext),
                        dateSelection: reduceDateSelection(state.dateSelection, action),
                        eventSelection: reduceSelectedEvent(state.eventSelection, action),
                        eventDrag: reduceEventDrag(state.eventDrag, action),
                        eventResize: reduceEventResize(state.eventResize, action),
                    };
                    var contextAndState = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, calendarContext), newState);
                    for (var _i = 0, _c = optionsData.pluginHooks.reducers; _i < _c.length; _i++) {
                        var reducer = _c[_i];
                        (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(newState, reducer(state, action, contextAndState)); // give the OLD state, for old value
                    }
                    var wasLoading = computeIsLoading(state, calendarContext);
                    var isLoading = computeIsLoading(newState, calendarContext);
                    // TODO: use propSetHandlers in plugin system
                    if (!wasLoading && isLoading) {
                        emitter.trigger('loading', true);
                    }
                    else if (wasLoading && !isLoading) {
                        emitter.trigger('loading', false);
                    }
                    this.state = newState;
                    if (props.onAction) {
                        props.onAction(action);
                    }
                };
                CalendarDataManager.prototype.updateData = function () {
                    var _a = this, props = _a.props, state = _a.state;
                    var oldData = this.data;
                    var optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);
                    var currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);
                    var data = this.data = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv), calendarApi: props.calendarApi, dispatch: this.dispatch, emitter: this.emitter, getCurrentData: this.getCurrentData }, optionsData), currentViewData), state);
                    var changeHandlers = optionsData.pluginHooks.optionChangeHandlers;
                    var oldCalendarOptions = oldData && oldData.calendarOptions;
                    var newCalendarOptions = optionsData.calendarOptions;
                    if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {
                        if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {
                            // hack
                            state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);
                            state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv);
                        }
                        for (var optionName in changeHandlers) {
                            if (oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {
                                changeHandlers[optionName](newCalendarOptions[optionName], data);
                            }
                        }
                    }
                    if (props.onData) {
                        props.onData(data);
                    }
                };
                CalendarDataManager.prototype._computeOptionsData = function (optionOverrides, dynamicOptionOverrides, calendarApi) {
                    // TODO: blacklist options that are handled by optionChangeHandlers
                    var _a = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides), refinedOptions = _a.refinedOptions, pluginHooks = _a.pluginHooks, localeDefaults = _a.localeDefaults, availableLocaleData = _a.availableLocaleData, extra = _a.extra;
                    warnUnknownOptions(extra);
                    var dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);
                    var viewSpecs = this.buildViewSpecs(pluginHooks.views, optionOverrides, dynamicOptionOverrides, localeDefaults);
                    var theme = this.buildTheme(refinedOptions, pluginHooks);
                    var toolbarConfig = this.parseToolbars(refinedOptions, optionOverrides, theme, viewSpecs, calendarApi);
                    return {
                        calendarOptions: refinedOptions,
                        pluginHooks: pluginHooks,
                        dateEnv: dateEnv,
                        viewSpecs: viewSpecs,
                        theme: theme,
                        toolbarConfig: toolbarConfig,
                        localeDefaults: localeDefaults,
                        availableRawLocales: availableLocaleData.map,
                    };
                };
                // always called from behind a memoizer
                CalendarDataManager.prototype.processRawCalendarOptions = function (optionOverrides, dynamicOptionOverrides) {
                    var _a = mergeRawOptions([
                        BASE_OPTION_DEFAULTS,
                        optionOverrides,
                        dynamicOptionOverrides,
                    ]), locales = _a.locales, locale = _a.locale;
                    var availableLocaleData = this.organizeRawLocales(locales);
                    var availableRawLocales = availableLocaleData.map;
                    var localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;
                    var pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);
                    var refiners = this.currentCalendarOptionsRefiners = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
                    var extra = {};
                    var raw = mergeRawOptions([
                        BASE_OPTION_DEFAULTS,
                        localeDefaults,
                        optionOverrides,
                        dynamicOptionOverrides,
                    ]);
                    var refined = {};
                    var currentRaw = this.currentCalendarOptionsInput;
                    var currentRefined = this.currentCalendarOptionsRefined;
                    var anyChanges = false;
                    for (var optionName in raw) {
                        if (optionName !== 'plugins') { // because plugins is special-cased
                            if (raw[optionName] === currentRaw[optionName] ||
                                (COMPLEX_OPTION_COMPARATORS[optionName] &&
                                    (optionName in currentRaw) &&
                                    COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName]))) {
                                refined[optionName] = currentRefined[optionName];
                            }
                            else if (refiners[optionName]) {
                                refined[optionName] = refiners[optionName](raw[optionName]);
                                anyChanges = true;
                            }
                            else {
                                extra[optionName] = currentRaw[optionName];
                            }
                        }
                    }
                    if (anyChanges) {
                        this.currentCalendarOptionsInput = raw;
                        this.currentCalendarOptionsRefined = refined;
                    }
                    return {
                        rawOptions: this.currentCalendarOptionsInput,
                        refinedOptions: this.currentCalendarOptionsRefined,
                        pluginHooks: pluginHooks,
                        availableLocaleData: availableLocaleData,
                        localeDefaults: localeDefaults,
                        extra: extra,
                    };
                };
                CalendarDataManager.prototype._computeCurrentViewData = function (viewType, optionsData, optionOverrides, dynamicOptionOverrides) {
                    var viewSpec = optionsData.viewSpecs[viewType];
                    if (!viewSpec) {
                        throw new Error("viewType \"" + viewType + "\" is not available. Please make sure you've loaded all neccessary plugins");
                    }
                    var _a = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides), refinedOptions = _a.refinedOptions, extra = _a.extra;
                    warnUnknownOptions(extra);
                    var dateProfileGenerator = this.buildDateProfileGenerator({
                        dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,
                        duration: viewSpec.duration,
                        durationUnit: viewSpec.durationUnit,
                        usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,
                        dateEnv: optionsData.dateEnv,
                        calendarApi: this.props.calendarApi,
                        slotMinTime: refinedOptions.slotMinTime,
                        slotMaxTime: refinedOptions.slotMaxTime,
                        showNonCurrentDates: refinedOptions.showNonCurrentDates,
                        dayCount: refinedOptions.dayCount,
                        dateAlignment: refinedOptions.dateAlignment,
                        dateIncrement: refinedOptions.dateIncrement,
                        hiddenDays: refinedOptions.hiddenDays,
                        weekends: refinedOptions.weekends,
                        nowInput: refinedOptions.now,
                        validRangeInput: refinedOptions.validRange,
                        visibleRangeInput: refinedOptions.visibleRange,
                        monthMode: refinedOptions.monthMode,
                        fixedWeekCount: refinedOptions.fixedWeekCount,
                    });
                    var viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);
                    return { viewSpec: viewSpec, options: refinedOptions, dateProfileGenerator: dateProfileGenerator, viewApi: viewApi };
                };
                CalendarDataManager.prototype.processRawViewOptions = function (viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {
                    var raw = mergeRawOptions([
                        BASE_OPTION_DEFAULTS,
                        viewSpec.optionDefaults,
                        localeDefaults,
                        optionOverrides,
                        viewSpec.optionOverrides,
                        dynamicOptionOverrides,
                    ]);
                    var refiners = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), VIEW_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
                    var refined = {};
                    var currentRaw = this.currentViewOptionsInput;
                    var currentRefined = this.currentViewOptionsRefined;
                    var anyChanges = false;
                    var extra = {};
                    for (var optionName in raw) {
                        if (raw[optionName] === currentRaw[optionName] ||
                            (COMPLEX_OPTION_COMPARATORS[optionName] &&
                                COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], currentRaw[optionName]))) {
                            refined[optionName] = currentRefined[optionName];
                        }
                        else {
                            if (raw[optionName] === this.currentCalendarOptionsInput[optionName] ||
                                (COMPLEX_OPTION_COMPARATORS[optionName] &&
                                    COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], this.currentCalendarOptionsInput[optionName]))) {
                                if (optionName in this.currentCalendarOptionsRefined) { // might be an "extra" prop
                                    refined[optionName] = this.currentCalendarOptionsRefined[optionName];
                                }
                            }
                            else if (refiners[optionName]) {
                                refined[optionName] = refiners[optionName](raw[optionName]);
                            }
                            else {
                                extra[optionName] = raw[optionName];
                            }
                            anyChanges = true;
                        }
                    }
                    if (anyChanges) {
                        this.currentViewOptionsInput = raw;
                        this.currentViewOptionsRefined = refined;
                    }
                    return {
                        rawOptions: this.currentViewOptionsInput,
                        refinedOptions: this.currentViewOptionsRefined,
                        extra: extra,
                    };
                };
                return CalendarDataManager;
            }());
            function buildDateEnv(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {
                var locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);
                return new DateEnv({
                    calendarSystem: 'gregory',
                    timeZone: timeZone,
                    namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,
                    locale: locale,
                    weekNumberCalculation: weekNumberCalculation,
                    firstDay: firstDay,
                    weekText: weekText,
                    cmdFormatter: pluginHooks.cmdFormatter,
                    defaultSeparator: defaultSeparator,
                });
            }
            function buildTheme(options, pluginHooks) {
                var ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;
                return new ThemeClass(options);
            }
            function buildDateProfileGenerator(props) {
                var DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator;
                return new DateProfileGeneratorClass(props);
            }
            function buildViewApi(type, getCurrentData, dateEnv) {
                return new ViewApi(type, getCurrentData, dateEnv);
            }
            function buildEventUiBySource(eventSources) {
                return mapHash(eventSources, function (eventSource) { return eventSource.ui; });
            }
            function buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {
                var eventUiBases = { '': eventUiSingleBase };
                for (var defId in eventDefs) {
                    var def = eventDefs[defId];
                    if (def.sourceId && eventUiBySource[def.sourceId]) {
                        eventUiBases[defId] = eventUiBySource[def.sourceId];
                    }
                }
                return eventUiBases;
            }
            function buildViewUiProps(calendarContext) {
                var options = calendarContext.options;
                return {
                    eventUiSingleBase: createEventUi({
                        display: options.eventDisplay,
                        editable: options.editable,
                        startEditable: options.eventStartEditable,
                        durationEditable: options.eventDurationEditable,
                        constraint: options.eventConstraint,
                        overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,
                        allow: options.eventAllow,
                        backgroundColor: options.eventBackgroundColor,
                        borderColor: options.eventBorderColor,
                        textColor: options.eventTextColor,
                        color: options.eventColor,
                        // classNames: options.eventClassNames // render hook will handle this
                    }, calendarContext),
                    selectionConfig: createEventUi({
                        constraint: options.selectConstraint,
                        overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,
                        allow: options.selectAllow,
                    }, calendarContext),
                };
            }
            function computeIsLoading(state, context) {
                for (var _i = 0, _a = context.pluginHooks.isLoadingFuncs; _i < _a.length; _i++) {
                    var isLoadingFunc = _a[_i];
                    if (isLoadingFunc(state)) {
                        return true;
                    }
                }
                return false;
            }
            function parseContextBusinessHours(calendarContext) {
                return parseBusinessHours(calendarContext.options.businessHours, calendarContext);
            }
            function warnUnknownOptions(options, viewName) {
                for (var optionName in options) {
                    console.warn("Unknown option '" + optionName + "'" +
                        (viewName ? " for view '" + viewName + "'" : ''));
                }
            }

// TODO: move this to react plugin?
            var CalendarDataProvider = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(CalendarDataProvider, _super);
                function CalendarDataProvider(props) {
                    var _this = _super.call(this, props) || this;
                    _this.handleData = function (data) {
                        if (!_this.dataManager) { // still within initial run, before assignment in constructor
                            // eslint-disable-next-line react/no-direct-mutation-state
                            _this.state = data; // can't use setState yet
                        }
                        else {
                            _this.setState(data);
                        }
                    };
                    _this.dataManager = new CalendarDataManager({
                        optionOverrides: props.optionOverrides,
                        calendarApi: props.calendarApi,
                        onData: _this.handleData,
                    });
                    return _this;
                }
                CalendarDataProvider.prototype.render = function () {
                    return this.props.children(this.state);
                };
                CalendarDataProvider.prototype.componentDidUpdate = function (prevProps) {
                    var newOptionOverrides = this.props.optionOverrides;
                    if (newOptionOverrides !== prevProps.optionOverrides) { // prevent recursive handleData
                        this.dataManager.resetOptions(newOptionOverrides);
                    }
                };
                return CalendarDataProvider;
            }(_vdom_js__WEBPACK_IMPORTED_MODULE_1__.Component));

// HELPERS
            /*
if nextDayThreshold is specified, slicing is done in an all-day fashion.
you can get nextDayThreshold from context.nextDayThreshold
*/
            function sliceEvents(props, allDay) {
                return sliceEventStore(props.eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? props.nextDayThreshold : null).fg;
            }

            var NamedTimeZoneImpl = /** @class */ (function () {
                function NamedTimeZoneImpl(timeZoneName) {
                    this.timeZoneName = timeZoneName;
                }
                return NamedTimeZoneImpl;
            }());

            var SegHierarchy = /** @class */ (function () {
                function SegHierarchy() {
                    // settings
                    this.strictOrder = false;
                    this.allowReslicing = false;
                    this.maxCoord = -1; // -1 means no max
                    this.maxStackCnt = -1; // -1 means no max
                    this.levelCoords = []; // ordered
                    this.entriesByLevel = []; // parallel with levelCoords
                    this.stackCnts = {}; // TODO: use better technique!?
                }
                SegHierarchy.prototype.addSegs = function (inputs) {
                    var hiddenEntries = [];
                    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
                        var input = inputs_1[_i];
                        this.insertEntry(input, hiddenEntries);
                    }
                    return hiddenEntries;
                };
                SegHierarchy.prototype.insertEntry = function (entry, hiddenEntries) {
                    var insertion = this.findInsertion(entry);
                    if (this.isInsertionValid(insertion, entry)) {
                        this.insertEntryAt(entry, insertion);
                        return 1;
                    }
                    return this.handleInvalidInsertion(insertion, entry, hiddenEntries);
                };
                SegHierarchy.prototype.isInsertionValid = function (insertion, entry) {
                    return (this.maxCoord === -1 || insertion.levelCoord + entry.thickness <= this.maxCoord) &&
                        (this.maxStackCnt === -1 || insertion.stackCnt < this.maxStackCnt);
                };
                // returns number of new entries inserted
                SegHierarchy.prototype.handleInvalidInsertion = function (insertion, entry, hiddenEntries) {
                    if (this.allowReslicing && insertion.touchingEntry) {
                        return this.splitEntry(entry, insertion.touchingEntry, hiddenEntries);
                    }
                    hiddenEntries.push(entry);
                    return 0;
                };
                SegHierarchy.prototype.splitEntry = function (entry, barrier, hiddenEntries) {
                    var partCnt = 0;
                    var splitHiddenEntries = [];
                    var entrySpan = entry.span;
                    var barrierSpan = barrier.span;
                    if (entrySpan.start < barrierSpan.start) {
                        partCnt += this.insertEntry({
                            index: entry.index,
                            thickness: entry.thickness,
                            span: { start: entrySpan.start, end: barrierSpan.start },
                        }, splitHiddenEntries);
                    }
                    if (entrySpan.end > barrierSpan.end) {
                        partCnt += this.insertEntry({
                            index: entry.index,
                            thickness: entry.thickness,
                            span: { start: barrierSpan.end, end: entrySpan.end },
                        }, splitHiddenEntries);
                    }
                    if (partCnt) {
                        hiddenEntries.push.apply(hiddenEntries, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([{
                            index: entry.index,
                            thickness: entry.thickness,
                            span: intersectSpans(barrierSpan, entrySpan), // guaranteed to intersect
                        }], splitHiddenEntries));
                        return partCnt;
                    }
                    hiddenEntries.push(entry);
                    return 0;
                };
                SegHierarchy.prototype.insertEntryAt = function (entry, insertion) {
                    var _a = this, entriesByLevel = _a.entriesByLevel, levelCoords = _a.levelCoords;
                    if (insertion.lateral === -1) {
                        // create a new level
                        insertAt(levelCoords, insertion.level, insertion.levelCoord);
                        insertAt(entriesByLevel, insertion.level, [entry]);
                    }
                    else {
                        // insert into existing level
                        insertAt(entriesByLevel[insertion.level], insertion.lateral, entry);
                    }
                    this.stackCnts[buildEntryKey(entry)] = insertion.stackCnt;
                };
                SegHierarchy.prototype.findInsertion = function (newEntry) {
                    var _a = this, levelCoords = _a.levelCoords, entriesByLevel = _a.entriesByLevel, strictOrder = _a.strictOrder, stackCnts = _a.stackCnts;
                    var levelCnt = levelCoords.length;
                    var candidateCoord = 0;
                    var touchingLevel = -1;
                    var touchingLateral = -1;
                    var touchingEntry = null;
                    var stackCnt = 0;
                    for (var trackingLevel = 0; trackingLevel < levelCnt; trackingLevel += 1) {
                        var trackingCoord = levelCoords[trackingLevel];
                        // if the current level is past the placed entry, we have found a good empty space and can stop.
                        // if strictOrder, keep finding more lateral intersections.
                        if (!strictOrder && trackingCoord >= candidateCoord + newEntry.thickness) {
                            break;
                        }
                        var trackingEntries = entriesByLevel[trackingLevel];
                        var trackingEntry = void 0;
                        var searchRes = binarySearch(trackingEntries, newEntry.span.start, getEntrySpanEnd); // find first entry after newEntry's end
                        var lateralIndex = searchRes[0] + searchRes[1]; // if exact match (which doesn't collide), go to next one
                        while ( // loop through entries that horizontally intersect
                        (trackingEntry = trackingEntries[lateralIndex]) && // but not past the whole entry list
                        trackingEntry.span.start < newEntry.span.end // and not entirely past newEntry
                            ) {
                            var trackingEntryBottom = trackingCoord + trackingEntry.thickness;
                            // intersects into the top of the candidate?
                            if (trackingEntryBottom > candidateCoord) {
                                candidateCoord = trackingEntryBottom;
                                touchingEntry = trackingEntry;
                                touchingLevel = trackingLevel;
                                touchingLateral = lateralIndex;
                            }
                            // butts up against top of candidate? (will happen if just intersected as well)
                            if (trackingEntryBottom === candidateCoord) {
                                // accumulate the highest possible stackCnt of the trackingEntries that butt up
                                stackCnt = Math.max(stackCnt, stackCnts[buildEntryKey(trackingEntry)] + 1);
                            }
                            lateralIndex += 1;
                        }
                    }
                    // the destination level will be after touchingEntry's level. find it
                    var destLevel = 0;
                    if (touchingEntry) {
                        destLevel = touchingLevel + 1;
                        while (destLevel < levelCnt && levelCoords[destLevel] < candidateCoord) {
                            destLevel += 1;
                        }
                    }
                    // if adding to an existing level, find where to insert
                    var destLateral = -1;
                    if (destLevel < levelCnt && levelCoords[destLevel] === candidateCoord) {
                        destLateral = binarySearch(entriesByLevel[destLevel], newEntry.span.end, getEntrySpanEnd)[0];
                    }
                    return {
                        touchingLevel: touchingLevel,
                        touchingLateral: touchingLateral,
                        touchingEntry: touchingEntry,
                        stackCnt: stackCnt,
                        levelCoord: candidateCoord,
                        level: destLevel,
                        lateral: destLateral,
                    };
                };
                // sorted by levelCoord (lowest to highest)
                SegHierarchy.prototype.toRects = function () {
                    var _a = this, entriesByLevel = _a.entriesByLevel, levelCoords = _a.levelCoords;
                    var levelCnt = entriesByLevel.length;
                    var rects = [];
                    for (var level = 0; level < levelCnt; level += 1) {
                        var entries = entriesByLevel[level];
                        var levelCoord = levelCoords[level];
                        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                            var entry = entries_1[_i];
                            rects.push((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, entry), { levelCoord: levelCoord }));
                        }
                    }
                    return rects;
                };
                return SegHierarchy;
            }());
            function getEntrySpanEnd(entry) {
                return entry.span.end;
            }
            function buildEntryKey(entry) {
                return entry.index + ':' + entry.span.start;
            }
// returns groups with entries sorted by input order
            function groupIntersectingEntries(entries) {
                var merges = [];
                for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {
                    var entry = entries_2[_i];
                    var filteredMerges = [];
                    var hungryMerge = {
                        span: entry.span,
                        entries: [entry],
                    };
                    for (var _a = 0, merges_1 = merges; _a < merges_1.length; _a++) {
                        var merge = merges_1[_a];
                        if (intersectSpans(merge.span, hungryMerge.span)) {
                            hungryMerge = {
                                entries: merge.entries.concat(hungryMerge.entries),
                                span: joinSpans(merge.span, hungryMerge.span),
                            };
                        }
                        else {
                            filteredMerges.push(merge);
                        }
                    }
                    filteredMerges.push(hungryMerge);
                    merges = filteredMerges;
                }
                return merges;
            }
            function joinSpans(span0, span1) {
                return {
                    start: Math.min(span0.start, span1.start),
                    end: Math.max(span0.end, span1.end),
                };
            }
            function intersectSpans(span0, span1) {
                var start = Math.max(span0.start, span1.start);
                var end = Math.min(span0.end, span1.end);
                if (start < end) {
                    return { start: start, end: end };
                }
                return null;
            }
// general util
// ---------------------------------------------------------------------------------------------------------------------
            function insertAt(arr, index, item) {
                arr.splice(index, 0, item);
            }
            function binarySearch(a, searchVal, getItemVal) {
                var startIndex = 0;
                var endIndex = a.length; // exclusive
                if (!endIndex || searchVal < getItemVal(a[startIndex])) { // no items OR before first item
                    return [0, 0];
                }
                if (searchVal > getItemVal(a[endIndex - 1])) { // after last item
                    return [endIndex, 0];
                }
                while (startIndex < endIndex) {
                    var middleIndex = Math.floor(startIndex + (endIndex - startIndex) / 2);
                    var middleVal = getItemVal(a[middleIndex]);
                    if (searchVal < middleVal) {
                        endIndex = middleIndex;
                    }
                    else if (searchVal > middleVal) {
                        startIndex = middleIndex + 1;
                    }
                    else { // equal!
                        return [middleIndex, 1];
                    }
                }
                return [startIndex, 0];
            }

            var Interaction = /** @class */ (function () {
                function Interaction(settings) {
                    this.component = settings.component;
                    this.isHitComboAllowed = settings.isHitComboAllowed || null;
                }
                Interaction.prototype.destroy = function () {
                };
                return Interaction;
            }());
            function parseInteractionSettings(component, input) {
                return {
                    component: component,
                    el: input.el,
                    useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,
                    isHitComboAllowed: input.isHitComboAllowed || null,
                };
            }
            function interactionSettingsToStore(settings) {
                var _a;
                return _a = {},
                    _a[settings.component.uid] = settings,
                    _a;
            }
// global state
            var interactionSettingsStore = {};

            /*
An abstraction for a dragging interaction originating on an event.
Does higher-level things than PointerDragger, such as possibly:
- a "mirror" that moves with the pointer
- a minimum number of pixels or other criteria for a true drag to begin

subclasses must emit:
- pointerdown
- dragstart
- dragmove
- pointerup
- dragend
*/
            var ElementDragging = /** @class */ (function () {
                function ElementDragging(el, selector) {
                    this.emitter = new Emitter();
                }
                ElementDragging.prototype.destroy = function () {
                };
                ElementDragging.prototype.setMirrorIsVisible = function (bool) {
                    // optional if subclass doesn't want to support a mirror
                };
                ElementDragging.prototype.setMirrorNeedsRevert = function (bool) {
                    // optional if subclass doesn't want to support a mirror
                };
                ElementDragging.prototype.setAutoScrollEnabled = function (bool) {
                    // optional
                };
                return ElementDragging;
            }());

// TODO: get rid of this in favor of options system,
// tho it's really easy to access this globally rather than pass thru options.
            var config = {};

            /*
Information about what will happen when an external element is dragged-and-dropped
onto a calendar. Contains information for creating an event.
*/
            var DRAG_META_REFINERS = {
                startTime: createDuration,
                duration: createDuration,
                create: Boolean,
                sourceId: String,
            };
            function parseDragMeta(raw) {
                var _a = refineProps(raw, DRAG_META_REFINERS), refined = _a.refined, extra = _a.extra;
                return {
                    startTime: refined.startTime || null,
                    duration: refined.duration || null,
                    create: refined.create != null ? refined.create : true,
                    sourceId: refined.sourceId,
                    leftoverProps: extra,
                };
            }

            var ToolbarSection = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ToolbarSection, _super);
                function ToolbarSection() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ToolbarSection.prototype.render = function () {
                    var _this = this;
                    var children = this.props.widgetGroups.map(function (widgetGroup) { return _this.renderWidgetGroup(widgetGroup); });
                    return _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)(['div', { className: 'fc-toolbar-chunk' }], children));
                };
                ToolbarSection.prototype.renderWidgetGroup = function (widgetGroup) {
                    var props = this.props;
                    var theme = this.context.theme;
                    var children = [];
                    var isOnlyButtons = true;
                    for (var _i = 0, widgetGroup_1 = widgetGroup; _i < widgetGroup_1.length; _i++) {
                        var widget = widgetGroup_1[_i];
                        var buttonName = widget.buttonName, buttonClick = widget.buttonClick, buttonText = widget.buttonText, buttonIcon = widget.buttonIcon, buttonHint = widget.buttonHint;
                        if (buttonName === 'title') {
                            isOnlyButtons = false;
                            children.push((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", { className: "fc-toolbar-title", id: props.titleId }, props.title));
                        }
                        else {
                            var isPressed = buttonName === props.activeButton;
                            var isDisabled = (!props.isTodayEnabled && buttonName === 'today') ||
                                (!props.isPrevEnabled && buttonName === 'prev') ||
                                (!props.isNextEnabled && buttonName === 'next');
                            var buttonClasses = ["fc-" + buttonName + "-button", theme.getClass('button')];
                            if (isPressed) {
                                buttonClasses.push(theme.getClass('buttonActive'));
                            }
                            children.push((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", { type: "button", title: typeof buttonHint === 'function' ? buttonHint(props.navUnit) : buttonHint, disabled: isDisabled, "aria-pressed": isPressed, className: buttonClasses.join(' '), onClick: buttonClick }, buttonText || (buttonIcon ? (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", { className: buttonIcon }) : '')));
                        }
                    }
                    if (children.length > 1) {
                        var groupClassName = (isOnlyButtons && theme.getClass('buttonGroup')) || '';
                        return _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)(['div', { className: groupClassName }], children));
                    }
                    return children[0];
                };
                return ToolbarSection;
            }(BaseComponent));

            var Toolbar = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(Toolbar, _super);
                function Toolbar() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                Toolbar.prototype.render = function () {
                    var _a = this.props, model = _a.model, extraClassName = _a.extraClassName;
                    var forceLtr = false;
                    var startContent;
                    var endContent;
                    var sectionWidgets = model.sectionWidgets;
                    var centerContent = sectionWidgets.center;
                    if (sectionWidgets.left) {
                        forceLtr = true;
                        startContent = sectionWidgets.left;
                    }
                    else {
                        startContent = sectionWidgets.start;
                    }
                    if (sectionWidgets.right) {
                        forceLtr = true;
                        endContent = sectionWidgets.right;
                    }
                    else {
                        endContent = sectionWidgets.end;
                    }
                    var classNames = [
                        extraClassName || '',
                        'fc-toolbar',
                        forceLtr ? 'fc-toolbar-ltr' : '',
                    ];
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: classNames.join(' ') },
                        this.renderSection('start', startContent || []),
                        this.renderSection('center', centerContent || []),
                        this.renderSection('end', endContent || [])));
                };
                Toolbar.prototype.renderSection = function (key, widgetGroups) {
                    var props = this.props;
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ToolbarSection, { key: key, widgetGroups: widgetGroups, title: props.title, navUnit: props.navUnit, activeButton: props.activeButton, isTodayEnabled: props.isTodayEnabled, isPrevEnabled: props.isPrevEnabled, isNextEnabled: props.isNextEnabled, titleId: props.titleId }));
                };
                return Toolbar;
            }(BaseComponent));

// TODO: do function component?
            var ViewContainer = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ViewContainer, _super);
                function ViewContainer() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.state = {
                        availableWidth: null,
                    };
                    _this.handleEl = function (el) {
                        _this.el = el;
                        setRef(_this.props.elRef, el);
                        _this.updateAvailableWidth();
                    };
                    _this.handleResize = function () {
                        _this.updateAvailableWidth();
                    };
                    return _this;
                }
                ViewContainer.prototype.render = function () {
                    var _a = this, props = _a.props, state = _a.state;
                    var aspectRatio = props.aspectRatio;
                    var classNames = [
                        'fc-view-harness',
                        (aspectRatio || props.liquid || props.height)
                            ? 'fc-view-harness-active' // harness controls the height
                            : 'fc-view-harness-passive', // let the view do the height
                    ];
                    var height = '';
                    var paddingBottom = '';
                    if (aspectRatio) {
                        if (state.availableWidth !== null) {
                            height = state.availableWidth / aspectRatio;
                        }
                        else {
                            // while waiting to know availableWidth, we can't set height to *zero*
                            // because will cause lots of unnecessary scrollbars within scrollgrid.
                            // BETTER: don't start rendering ANYTHING yet until we know container width
                            // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)
                            paddingBottom = (1 / aspectRatio) * 100 + "%";
                        }
                    }
                    else {
                        height = props.height || '';
                    }
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { "aria-labelledby": props.labeledById, ref: this.handleEl, className: classNames.join(' '), style: { height: height, paddingBottom: paddingBottom } }, props.children));
                };
                ViewContainer.prototype.componentDidMount = function () {
                    this.context.addResizeHandler(this.handleResize);
                };
                ViewContainer.prototype.componentWillUnmount = function () {
                    this.context.removeResizeHandler(this.handleResize);
                };
                ViewContainer.prototype.updateAvailableWidth = function () {
                    if (this.el && // needed. but why?
                        this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth
                    ) {
                        this.setState({ availableWidth: this.el.offsetWidth });
                    }
                };
                return ViewContainer;
            }(BaseComponent));

            /*
Detects when the user clicks on an event within a DateComponent
*/
            var EventClicking = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(EventClicking, _super);
                function EventClicking(settings) {
                    var _this = _super.call(this, settings) || this;
                    _this.handleSegClick = function (ev, segEl) {
                        var component = _this.component;
                        var context = component.context;
                        var seg = getElSeg(segEl);
                        if (seg && // might be the <div> surrounding the more link
                            component.isValidSegDownEl(ev.target)) {
                            // our way to simulate a link click for elements that can't be <a> tags
                            // grab before trigger fired in case trigger trashes DOM thru rerendering
                            var hasUrlContainer = elementClosest(ev.target, '.fc-event-forced-url');
                            var url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';
                            context.emitter.trigger('eventClick', {
                                el: segEl,
                                event: new EventApi(component.context, seg.eventRange.def, seg.eventRange.instance),
                                jsEvent: ev,
                                view: context.viewApi,
                            });
                            if (url && !ev.defaultPrevented) {
                                window.location.href = url;
                            }
                        }
                    };
                    _this.destroy = listenBySelector(settings.el, 'click', '.fc-event', // on both fg and bg events
                        _this.handleSegClick);
                    return _this;
                }
                return EventClicking;
            }(Interaction));

            /*
Triggers events and adds/removes core classNames when the user's pointer
enters/leaves event-elements of a component.
*/
            var EventHovering = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(EventHovering, _super);
                function EventHovering(settings) {
                    var _this = _super.call(this, settings) || this;
                    // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it
                    _this.handleEventElRemove = function (el) {
                        if (el === _this.currentSegEl) {
                            _this.handleSegLeave(null, _this.currentSegEl);
                        }
                    };
                    _this.handleSegEnter = function (ev, segEl) {
                        if (getElSeg(segEl)) { // TODO: better way to make sure not hovering over more+ link or its wrapper
                            _this.currentSegEl = segEl;
                            _this.triggerEvent('eventMouseEnter', ev, segEl);
                        }
                    };
                    _this.handleSegLeave = function (ev, segEl) {
                        if (_this.currentSegEl) {
                            _this.currentSegEl = null;
                            _this.triggerEvent('eventMouseLeave', ev, segEl);
                        }
                    };
                    _this.removeHoverListeners = listenToHoverBySelector(settings.el, '.fc-event', // on both fg and bg events
                        _this.handleSegEnter, _this.handleSegLeave);
                    return _this;
                }
                EventHovering.prototype.destroy = function () {
                    this.removeHoverListeners();
                };
                EventHovering.prototype.triggerEvent = function (publicEvName, ev, segEl) {
                    var component = this.component;
                    var context = component.context;
                    var seg = getElSeg(segEl);
                    if (!ev || component.isValidSegDownEl(ev.target)) {
                        context.emitter.trigger(publicEvName, {
                            el: segEl,
                            event: new EventApi(context, seg.eventRange.def, seg.eventRange.instance),
                            jsEvent: ev,
                            view: context.viewApi,
                        });
                    }
                };
                return EventHovering;
            }(Interaction));

            var CalendarContent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(CalendarContent, _super);
                function CalendarContent() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.buildViewContext = memoize(buildViewContext);
                    _this.buildViewPropTransformers = memoize(buildViewPropTransformers);
                    _this.buildToolbarProps = memoize(buildToolbarProps);
                    _this.headerRef = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.footerRef = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.interactionsStore = {};
                    // eslint-disable-next-line
                    _this.state = {
                        viewLabelId: getUniqueDomId(),
                    };
                    // Component Registration
                    // -----------------------------------------------------------------------------------------------------------------
                    _this.registerInteractiveComponent = function (component, settingsInput) {
                        var settings = parseInteractionSettings(component, settingsInput);
                        var DEFAULT_INTERACTIONS = [
                            EventClicking,
                            EventHovering,
                        ];
                        var interactionClasses = DEFAULT_INTERACTIONS.concat(_this.props.pluginHooks.componentInteractions);
                        var interactions = interactionClasses.map(function (TheInteractionClass) { return new TheInteractionClass(settings); });
                        _this.interactionsStore[component.uid] = interactions;
                        interactionSettingsStore[component.uid] = settings;
                    };
                    _this.unregisterInteractiveComponent = function (component) {
                        var listeners = _this.interactionsStore[component.uid];
                        if (listeners) {
                            for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {
                                var listener = listeners_1[_i];
                                listener.destroy();
                            }
                            delete _this.interactionsStore[component.uid];
                        }
                        delete interactionSettingsStore[component.uid];
                    };
                    // Resizing
                    // -----------------------------------------------------------------------------------------------------------------
                    _this.resizeRunner = new DelayedRunner(function () {
                        _this.props.emitter.trigger('_resize', true); // should window resizes be considered "forced" ?
                        _this.props.emitter.trigger('windowResize', { view: _this.props.viewApi });
                    });
                    _this.handleWindowResize = function (ev) {
                        var options = _this.props.options;
                        if (options.handleWindowResize &&
                            ev.target === window // avoid jqui events
                        ) {
                            _this.resizeRunner.request(options.windowResizeDelay);
                        }
                    };
                    return _this;
                }
                /*
    renders INSIDE of an outer div
    */
                CalendarContent.prototype.render = function () {
                    var props = this.props;
                    var toolbarConfig = props.toolbarConfig, options = props.options;
                    var toolbarProps = this.buildToolbarProps(props.viewSpec, props.dateProfile, props.dateProfileGenerator, props.currentDate, getNow(props.options.now, props.dateEnv), // TODO: use NowTimer????
                        props.viewTitle);
                    var viewVGrow = false;
                    var viewHeight = '';
                    var viewAspectRatio;
                    if (props.isHeightAuto || props.forPrint) {
                        viewHeight = '';
                    }
                    else if (options.height != null) {
                        viewVGrow = true;
                    }
                    else if (options.contentHeight != null) {
                        viewHeight = options.contentHeight;
                    }
                    else {
                        viewAspectRatio = Math.max(options.aspectRatio, 0.5); // prevent from getting too tall
                    }
                    var viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);
                    var viewLabelId = (toolbarConfig.header && toolbarConfig.header.hasTitle)
                        ? this.state.viewLabelId
                        : '';
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewContextType.Provider, { value: viewContext },
                        toolbarConfig.header && ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(Toolbar, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: this.headerRef, extraClassName: "fc-header-toolbar", model: toolbarConfig.header, titleId: viewLabelId }, toolbarProps))),
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewContainer, { liquid: viewVGrow, height: viewHeight, aspectRatio: viewAspectRatio, labeledById: viewLabelId },
                            this.renderView(props),
                            this.buildAppendContent()),
                        toolbarConfig.footer && ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(Toolbar, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: this.footerRef, extraClassName: "fc-footer-toolbar", model: toolbarConfig.footer, titleId: "" }, toolbarProps)))));
                };
                CalendarContent.prototype.componentDidMount = function () {
                    var props = this.props;
                    this.calendarInteractions = props.pluginHooks.calendarInteractions
                        .map(function (CalendarInteractionClass) { return new CalendarInteractionClass(props); });
                    window.addEventListener('resize', this.handleWindowResize);
                    var propSetHandlers = props.pluginHooks.propSetHandlers;
                    for (var propName in propSetHandlers) {
                        propSetHandlers[propName](props[propName], props);
                    }
                };
                CalendarContent.prototype.componentDidUpdate = function (prevProps) {
                    var props = this.props;
                    var propSetHandlers = props.pluginHooks.propSetHandlers;
                    for (var propName in propSetHandlers) {
                        if (props[propName] !== prevProps[propName]) {
                            propSetHandlers[propName](props[propName], props);
                        }
                    }
                };
                CalendarContent.prototype.componentWillUnmount = function () {
                    window.removeEventListener('resize', this.handleWindowResize);
                    this.resizeRunner.clear();
                    for (var _i = 0, _a = this.calendarInteractions; _i < _a.length; _i++) {
                        var interaction = _a[_i];
                        interaction.destroy();
                    }
                    this.props.emitter.trigger('_unmount');
                };
                CalendarContent.prototype.buildAppendContent = function () {
                    var props = this.props;
                    var children = props.pluginHooks.viewContainerAppends.map(function (buildAppendContent) { return buildAppendContent(props); });
                    return _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([_vdom_js__WEBPACK_IMPORTED_MODULE_1__.Fragment, {}], children));
                };
                CalendarContent.prototype.renderView = function (props) {
                    var pluginHooks = props.pluginHooks;
                    var viewSpec = props.viewSpec;
                    var viewProps = {
                        dateProfile: props.dateProfile,
                        businessHours: props.businessHours,
                        eventStore: props.renderableEventStore,
                        eventUiBases: props.eventUiBases,
                        dateSelection: props.dateSelection,
                        eventSelection: props.eventSelection,
                        eventDrag: props.eventDrag,
                        eventResize: props.eventResize,
                        isHeightAuto: props.isHeightAuto,
                        forPrint: props.forPrint,
                    };
                    var transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);
                    for (var _i = 0, transformers_1 = transformers; _i < transformers_1.length; _i++) {
                        var transformer = transformers_1[_i];
                        (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)(viewProps, transformer.transform(viewProps, props));
                    }
                    var ViewComponent = viewSpec.component;
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewComponent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, viewProps)));
                };
                return CalendarContent;
            }(PureComponent));
            function buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {
                // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid
                var todayInfo = dateProfileGenerator.build(now, undefined, false); // TODO: need `undefined` or else INFINITE LOOP for some reason
                var prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);
                var nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);
                return {
                    title: title,
                    activeButton: viewSpec.type,
                    navUnit: viewSpec.singleUnit,
                    isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),
                    isPrevEnabled: prevInfo.isValid,
                    isNextEnabled: nextInfo.isValid,
                };
            }
// Plugin
// -----------------------------------------------------------------------------------------------------------------
            function buildViewPropTransformers(theClasses) {
                return theClasses.map(function (TheClass) { return new TheClass(); });
            }

            var CalendarRoot = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(CalendarRoot, _super);
                function CalendarRoot() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.state = {
                        forPrint: false,
                    };
                    _this.handleBeforePrint = function () {
                        _this.setState({ forPrint: true });
                    };
                    _this.handleAfterPrint = function () {
                        _this.setState({ forPrint: false });
                    };
                    return _this;
                }
                CalendarRoot.prototype.render = function () {
                    var props = this.props;
                    var options = props.options;
                    var forPrint = this.state.forPrint;
                    var isHeightAuto = forPrint || options.height === 'auto' || options.contentHeight === 'auto';
                    var height = (!isHeightAuto && options.height != null) ? options.height : '';
                    var classNames = [
                        'fc',
                        forPrint ? 'fc-media-print' : 'fc-media-screen',
                        "fc-direction-" + options.direction,
                        props.theme.getClass('root'),
                    ];
                    if (!getCanVGrowWithinCell()) {
                        classNames.push('fc-liquid-hack');
                    }
                    return props.children(classNames, height, isHeightAuto, forPrint);
                };
                CalendarRoot.prototype.componentDidMount = function () {
                    var emitter = this.props.emitter;
                    emitter.on('_beforeprint', this.handleBeforePrint);
                    emitter.on('_afterprint', this.handleAfterPrint);
                };
                CalendarRoot.prototype.componentWillUnmount = function () {
                    var emitter = this.props.emitter;
                    emitter.off('_beforeprint', this.handleBeforePrint);
                    emitter.off('_afterprint', this.handleAfterPrint);
                };
                return CalendarRoot;
            }(BaseComponent));

// Computes a default column header formatting string if `colFormat` is not explicitly defined
            function computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {
                // if more than one week row, or if there are a lot of columns with not much space,
                // put just the day numbers will be in each cell
                if (!datesRepDistinctDays || dayCnt > 10) {
                    return createFormatter({ weekday: 'short' }); // "Sat"
                }
                if (dayCnt > 1) {
                    return createFormatter({ weekday: 'short', month: 'numeric', day: 'numeric', omitCommas: true }); // "Sat 11/12"
                }
                return createFormatter({ weekday: 'long' }); // "Saturday"
            }

            var CLASS_NAME = 'fc-col-header-cell'; // do the cushion too? no
            function renderInner$1(hookProps) {
                return hookProps.text;
            }

            var TableDateCell = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableDateCell, _super);
                function TableDateCell() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TableDateCell.prototype.render = function () {
                    var _a = this.context, dateEnv = _a.dateEnv, options = _a.options, theme = _a.theme, viewApi = _a.viewApi;
                    var props = this.props;
                    var date = props.date, dateProfile = props.dateProfile;
                    var dayMeta = getDateMeta(date, props.todayRange, null, dateProfile);
                    var classNames = [CLASS_NAME].concat(getDayClassNames(dayMeta, theme));
                    var text = dateEnv.format(date, props.dayHeaderFormat);
                    // if colCnt is 1, we are already in a day-view and don't need a navlink
                    var navLinkAttrs = (!dayMeta.isDisabled && props.colCnt > 1)
                        ? buildNavLinkAttrs(this.context, date)
                        : {};
                    var hookProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ date: dateEnv.toDate(date), view: viewApi }, props.extraHookProps), { text: text }), dayMeta);
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(RenderHook, { hookProps: hookProps, classNames: options.dayHeaderClassNames, content: options.dayHeaderContent, defaultContent: renderInner$1, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: rootElRef, role: "columnheader", className: classNames.concat(customClassNames).join(' '), "data-date": !dayMeta.isDisabled ? formatDayString(date) : undefined, colSpan: props.colSpan }, props.extraDataAttrs),
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-scrollgrid-sync-inner" }, !dayMeta.isDisabled && ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: innerElRef, className: [
                                'fc-col-header-cell-cushion',
                                props.isSticky ? 'fc-sticky' : '',
                            ].join(' ') }, navLinkAttrs), innerContent))))); }));
                };
                return TableDateCell;
            }(BaseComponent));

            var WEEKDAY_FORMAT = createFormatter({ weekday: 'long' });
            var TableDowCell = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableDowCell, _super);
                function TableDowCell() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TableDowCell.prototype.render = function () {
                    var props = this.props;
                    var _a = this.context, dateEnv = _a.dateEnv, theme = _a.theme, viewApi = _a.viewApi, options = _a.options;
                    var date = addDays(new Date(259200000), props.dow); // start with Sun, 04 Jan 1970 00:00:00 GMT
                    var dateMeta = {
                        dow: props.dow,
                        isDisabled: false,
                        isFuture: false,
                        isPast: false,
                        isToday: false,
                        isOther: false,
                    };
                    var classNames = [CLASS_NAME].concat(getDayClassNames(dateMeta, theme), props.extraClassNames || []);
                    var text = dateEnv.format(date, props.dayHeaderFormat);
                    var hookProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ // TODO: make this public?
                        date: date }, dateMeta), { view: viewApi }), props.extraHookProps), { text: text });
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(RenderHook, { hookProps: hookProps, classNames: options.dayHeaderClassNames, content: options.dayHeaderContent, defaultContent: renderInner$1, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: rootElRef, role: "columnheader", className: classNames.concat(customClassNames).join(' '), colSpan: props.colSpan }, props.extraDataAttrs),
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-scrollgrid-sync-inner" },
                            (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", { "aria-label": dateEnv.format(date, WEEKDAY_FORMAT), className: [
                                    'fc-col-header-cell-cushion',
                                    props.isSticky ? 'fc-sticky' : '',
                                ].join(' '), ref: innerElRef }, innerContent)))); }));
                };
                return TableDowCell;
            }(BaseComponent));

            var NowTimer = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(NowTimer, _super);
                function NowTimer(props, context) {
                    var _this = _super.call(this, props, context) || this;
                    _this.initialNowDate = getNow(context.options.now, context.dateEnv);
                    _this.initialNowQueriedMs = new Date().valueOf();
                    _this.state = _this.computeTiming().currentState;
                    return _this;
                }
                NowTimer.prototype.render = function () {
                    var _a = this, props = _a.props, state = _a.state;
                    return props.children(state.nowDate, state.todayRange);
                };
                NowTimer.prototype.componentDidMount = function () {
                    this.setTimeout();
                };
                NowTimer.prototype.componentDidUpdate = function (prevProps) {
                    if (prevProps.unit !== this.props.unit) {
                        this.clearTimeout();
                        this.setTimeout();
                    }
                };
                NowTimer.prototype.componentWillUnmount = function () {
                    this.clearTimeout();
                };
                NowTimer.prototype.computeTiming = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var unroundedNow = addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs);
                    var currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit);
                    var nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit));
                    var waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf();
                    // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)
                    // ensure no longer than a day
                    waitMs = Math.min(1000 * 60 * 60 * 24, waitMs);
                    return {
                        currentState: { nowDate: currentUnitStart, todayRange: buildDayRange(currentUnitStart) },
                        nextState: { nowDate: nextUnitStart, todayRange: buildDayRange(nextUnitStart) },
                        waitMs: waitMs,
                    };
                };
                NowTimer.prototype.setTimeout = function () {
                    var _this = this;
                    var _a = this.computeTiming(), nextState = _a.nextState, waitMs = _a.waitMs;
                    this.timeoutId = setTimeout(function () {
                        _this.setState(nextState, function () {
                            _this.setTimeout();
                        });
                    }, waitMs);
                };
                NowTimer.prototype.clearTimeout = function () {
                    if (this.timeoutId) {
                        clearTimeout(this.timeoutId);
                    }
                };
                NowTimer.contextType = ViewContextType;
                return NowTimer;
            }(_vdom_js__WEBPACK_IMPORTED_MODULE_1__.Component));
            function buildDayRange(date) {
                var start = startOfDay(date);
                var end = addDays(start, 1);
                return { start: start, end: end };
            }

            var DayHeader = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DayHeader, _super);
                function DayHeader() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.createDayHeaderFormatter = memoize(createDayHeaderFormatter);
                    return _this;
                }
                DayHeader.prototype.render = function () {
                    var context = this.context;
                    var _a = this.props, dates = _a.dates, dateProfile = _a.dateProfile, datesRepDistinctDays = _a.datesRepDistinctDays, renderIntro = _a.renderIntro;
                    var dayHeaderFormat = this.createDayHeaderFormatter(context.options.dayHeaderFormat, datesRepDistinctDays, dates.length);
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(NowTimer, { unit: "day" }, function (nowDate, todayRange) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { role: "row" },
                        renderIntro && renderIntro('day'),
                        dates.map(function (date) { return (datesRepDistinctDays ? ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableDateCell, { key: date.toISOString(), date: date, dateProfile: dateProfile, todayRange: todayRange, colCnt: dates.length, dayHeaderFormat: dayHeaderFormat })) : ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableDowCell, { key: date.getUTCDay(), dow: date.getUTCDay(), dayHeaderFormat: dayHeaderFormat }))); }))); }));
                };
                return DayHeader;
            }(BaseComponent));
            function createDayHeaderFormatter(explicitFormat, datesRepDistinctDays, dateCnt) {
                return explicitFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt);
            }

            var DaySeriesModel = /** @class */ (function () {
                function DaySeriesModel(range, dateProfileGenerator) {
                    var date = range.start;
                    var end = range.end;
                    var indices = [];
                    var dates = [];
                    var dayIndex = -1;
                    while (date < end) { // loop each day from start to end
                        if (dateProfileGenerator.isHiddenDay(date)) {
                            indices.push(dayIndex + 0.5); // mark that it's between indices
                        }
                        else {
                            dayIndex += 1;
                            indices.push(dayIndex);
                            dates.push(date);
                        }
                        date = addDays(date, 1);
                    }
                    this.dates = dates;
                    this.indices = indices;
                    this.cnt = dates.length;
                }
                DaySeriesModel.prototype.sliceRange = function (range) {
                    var firstIndex = this.getDateDayIndex(range.start); // inclusive first index
                    var lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index
                    var clippedFirstIndex = Math.max(0, firstIndex);
                    var clippedLastIndex = Math.min(this.cnt - 1, lastIndex);
                    // deal with in-between indices
                    clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell
                    clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell
                    if (clippedFirstIndex <= clippedLastIndex) {
                        return {
                            firstIndex: clippedFirstIndex,
                            lastIndex: clippedLastIndex,
                            isStart: firstIndex === clippedFirstIndex,
                            isEnd: lastIndex === clippedLastIndex,
                        };
                    }
                    return null;
                };
                // Given a date, returns its chronolocial cell-index from the first cell of the grid.
                // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.
                // If before the first offset, returns a negative number.
                // If after the last offset, returns an offset past the last cell offset.
                // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.
                DaySeriesModel.prototype.getDateDayIndex = function (date) {
                    var indices = this.indices;
                    var dayOffset = Math.floor(diffDays(this.dates[0], date));
                    if (dayOffset < 0) {
                        return indices[0] - 1;
                    }
                    if (dayOffset >= indices.length) {
                        return indices[indices.length - 1] + 1;
                    }
                    return indices[dayOffset];
                };
                return DaySeriesModel;
            }());

            var DayTableModel = /** @class */ (function () {
                function DayTableModel(daySeries, breakOnWeeks) {
                    var dates = daySeries.dates;
                    var daysPerRow;
                    var firstDay;
                    var rowCnt;
                    if (breakOnWeeks) {
                        // count columns until the day-of-week repeats
                        firstDay = dates[0].getUTCDay();
                        for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {
                            if (dates[daysPerRow].getUTCDay() === firstDay) {
                                break;
                            }
                        }
                        rowCnt = Math.ceil(dates.length / daysPerRow);
                    }
                    else {
                        rowCnt = 1;
                        daysPerRow = dates.length;
                    }
                    this.rowCnt = rowCnt;
                    this.colCnt = daysPerRow;
                    this.daySeries = daySeries;
                    this.cells = this.buildCells();
                    this.headerDates = this.buildHeaderDates();
                }
                DayTableModel.prototype.buildCells = function () {
                    var rows = [];
                    for (var row = 0; row < this.rowCnt; row += 1) {
                        var cells = [];
                        for (var col = 0; col < this.colCnt; col += 1) {
                            cells.push(this.buildCell(row, col));
                        }
                        rows.push(cells);
                    }
                    return rows;
                };
                DayTableModel.prototype.buildCell = function (row, col) {
                    var date = this.daySeries.dates[row * this.colCnt + col];
                    return {
                        key: date.toISOString(),
                        date: date,
                    };
                };
                DayTableModel.prototype.buildHeaderDates = function () {
                    var dates = [];
                    for (var col = 0; col < this.colCnt; col += 1) {
                        dates.push(this.cells[0][col].date);
                    }
                    return dates;
                };
                DayTableModel.prototype.sliceRange = function (range) {
                    var colCnt = this.colCnt;
                    var seriesSeg = this.daySeries.sliceRange(range);
                    var segs = [];
                    if (seriesSeg) {
                        var firstIndex = seriesSeg.firstIndex, lastIndex = seriesSeg.lastIndex;
                        var index = firstIndex;
                        while (index <= lastIndex) {
                            var row = Math.floor(index / colCnt);
                            var nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);
                            segs.push({
                                row: row,
                                firstCol: index % colCnt,
                                lastCol: (nextIndex - 1) % colCnt,
                                isStart: seriesSeg.isStart && index === firstIndex,
                                isEnd: seriesSeg.isEnd && (nextIndex - 1) === lastIndex,
                            });
                            index = nextIndex;
                        }
                    }
                    return segs;
                };
                return DayTableModel;
            }());

            var Slicer = /** @class */ (function () {
                function Slicer() {
                    this.sliceBusinessHours = memoize(this._sliceBusinessHours);
                    this.sliceDateSelection = memoize(this._sliceDateSpan);
                    this.sliceEventStore = memoize(this._sliceEventStore);
                    this.sliceEventDrag = memoize(this._sliceInteraction);
                    this.sliceEventResize = memoize(this._sliceInteraction);
                    this.forceDayIfListItem = false; // hack
                }
                Slicer.prototype.sliceProps = function (props, dateProfile, nextDayThreshold, context) {
                    var extraArgs = [];
                    for (var _i = 4; _i < arguments.length; _i++) {
                        extraArgs[_i - 4] = arguments[_i];
                    }
                    var eventUiBases = props.eventUiBases;
                    var eventSegs = this.sliceEventStore.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([props.eventStore, eventUiBases, dateProfile, nextDayThreshold], extraArgs));
                    return {
                        dateSelectionSegs: this.sliceDateSelection.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([props.dateSelection, eventUiBases, context], extraArgs)),
                        businessHourSegs: this.sliceBusinessHours.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([props.businessHours, dateProfile, nextDayThreshold, context], extraArgs)),
                        fgEventSegs: eventSegs.fg,
                        bgEventSegs: eventSegs.bg,
                        eventDrag: this.sliceEventDrag.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([props.eventDrag, eventUiBases, dateProfile, nextDayThreshold], extraArgs)),
                        eventResize: this.sliceEventResize.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([props.eventResize, eventUiBases, dateProfile, nextDayThreshold], extraArgs)),
                        eventSelection: props.eventSelection,
                    }; // TODO: give interactionSegs?
                };
                Slicer.prototype.sliceNowDate = function (// does not memoize
                    date, context) {
                    var extraArgs = [];
                    for (var _i = 2; _i < arguments.length; _i++) {
                        extraArgs[_i - 2] = arguments[_i];
                    }
                    return this._sliceDateSpan.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([{ range: { start: date, end: addMs(date, 1) }, allDay: false },
                        {},
                        context], extraArgs));
                };
                Slicer.prototype._sliceBusinessHours = function (businessHours, dateProfile, nextDayThreshold, context) {
                    var extraArgs = [];
                    for (var _i = 4; _i < arguments.length; _i++) {
                        extraArgs[_i - 4] = arguments[_i];
                    }
                    if (!businessHours) {
                        return [];
                    }
                    return this._sliceEventStore.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), context),
                        {},
                        dateProfile,
                        nextDayThreshold], extraArgs)).bg;
                };
                Slicer.prototype._sliceEventStore = function (eventStore, eventUiBases, dateProfile, nextDayThreshold) {
                    var extraArgs = [];
                    for (var _i = 4; _i < arguments.length; _i++) {
                        extraArgs[_i - 4] = arguments[_i];
                    }
                    if (eventStore) {
                        var rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
                        return {
                            bg: this.sliceEventRanges(rangeRes.bg, extraArgs),
                            fg: this.sliceEventRanges(rangeRes.fg, extraArgs),
                        };
                    }
                    return { bg: [], fg: [] };
                };
                Slicer.prototype._sliceInteraction = function (interaction, eventUiBases, dateProfile, nextDayThreshold) {
                    var extraArgs = [];
                    for (var _i = 4; _i < arguments.length; _i++) {
                        extraArgs[_i - 4] = arguments[_i];
                    }
                    if (!interaction) {
                        return null;
                    }
                    var rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
                    return {
                        segs: this.sliceEventRanges(rangeRes.fg, extraArgs),
                        affectedInstances: interaction.affectedEvents.instances,
                        isEvent: interaction.isEvent,
                    };
                };
                Slicer.prototype._sliceDateSpan = function (dateSpan, eventUiBases, context) {
                    var extraArgs = [];
                    for (var _i = 3; _i < arguments.length; _i++) {
                        extraArgs[_i - 3] = arguments[_i];
                    }
                    if (!dateSpan) {
                        return [];
                    }
                    var eventRange = fabricateEventRange(dateSpan, eventUiBases, context);
                    var segs = this.sliceRange.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([dateSpan.range], extraArgs));
                    for (var _a = 0, segs_1 = segs; _a < segs_1.length; _a++) {
                        var seg = segs_1[_a];
                        seg.eventRange = eventRange;
                    }
                    return segs;
                };
                /*
    "complete" seg means it has component and eventRange
    */
                Slicer.prototype.sliceEventRanges = function (eventRanges, extraArgs) {
                    var segs = [];
                    for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {
                        var eventRange = eventRanges_1[_i];
                        segs.push.apply(segs, this.sliceEventRange(eventRange, extraArgs));
                    }
                    return segs;
                };
                /*
    "complete" seg means it has component and eventRange
    */
                Slicer.prototype.sliceEventRange = function (eventRange, extraArgs) {
                    var dateRange = eventRange.range;
                    // hack to make multi-day events that are being force-displayed as list-items to take up only one day
                    if (this.forceDayIfListItem && eventRange.ui.display === 'list-item') {
                        dateRange = {
                            start: dateRange.start,
                            end: addDays(dateRange.start, 1),
                        };
                    }
                    var segs = this.sliceRange.apply(this, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([dateRange], extraArgs));
                    for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
                        var seg = segs_2[_i];
                        seg.eventRange = eventRange;
                        seg.isStart = eventRange.isStart && seg.isStart;
                        seg.isEnd = eventRange.isEnd && seg.isEnd;
                    }
                    return segs;
                };
                return Slicer;
            }());
            /*
for incorporating slotMinTime/slotMaxTime if appropriate
TODO: should be part of DateProfile!
TimelineDateProfile already does this btw
*/
            function computeActiveRange(dateProfile, isComponentAllDay) {
                var range = dateProfile.activeRange;
                if (isComponentAllDay) {
                    return range;
                }
                return {
                    start: addMs(range.start, dateProfile.slotMinTime.milliseconds),
                    end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5), // 864e5 = ms in a day
                };
            }

// high-level segmenting-aware tester functions
// ------------------------------------------------------------------------------------------------------------------------
            function isInteractionValid(interaction, dateProfile, context) {
                var instances = interaction.mutatedEvents.instances;
                for (var instanceId in instances) {
                    if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {
                        return false;
                    }
                }
                return isNewPropsValid({ eventDrag: interaction }, context); // HACK: the eventDrag props is used for ALL interactions
            }
            function isDateSelectionValid(dateSelection, dateProfile, context) {
                if (!rangeContainsRange(dateProfile.validRange, dateSelection.range)) {
                    return false;
                }
                return isNewPropsValid({ dateSelection: dateSelection }, context);
            }
            function isNewPropsValid(newProps, context) {
                var calendarState = context.getCurrentData();
                var props = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ businessHours: calendarState.businessHours, dateSelection: '', eventStore: calendarState.eventStore, eventUiBases: calendarState.eventUiBases, eventSelection: '', eventDrag: null, eventResize: null }, newProps);
                return (context.pluginHooks.isPropsValid || isPropsValid)(props, context);
            }
            function isPropsValid(state, context, dateSpanMeta, filterConfig) {
                if (dateSpanMeta === void 0) { dateSpanMeta = {}; }
                if (state.eventDrag && !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)) {
                    return false;
                }
                if (state.dateSelection && !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)) {
                    return false;
                }
                return true;
            }
// Moving Event Validation
// ------------------------------------------------------------------------------------------------------------------------
            function isInteractionPropsValid(state, context, dateSpanMeta, filterConfig) {
                var currentState = context.getCurrentData();
                var interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions
                var subjectEventStore = interaction.mutatedEvents;
                var subjectDefs = subjectEventStore.defs;
                var subjectInstances = subjectEventStore.instances;
                var subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ?
                    state.eventUiBases :
                    { '': currentState.selectionConfig });
                if (filterConfig) {
                    subjectConfigs = mapHash(subjectConfigs, filterConfig);
                }
                // exclude the subject events. TODO: exclude defs too?
                var otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances);
                var otherDefs = otherEventStore.defs;
                var otherInstances = otherEventStore.instances;
                var otherConfigs = compileEventUis(otherDefs, state.eventUiBases);
                for (var subjectInstanceId in subjectInstances) {
                    var subjectInstance = subjectInstances[subjectInstanceId];
                    var subjectRange = subjectInstance.range;
                    var subjectConfig = subjectConfigs[subjectInstance.defId];
                    var subjectDef = subjectDefs[subjectInstance.defId];
                    // constraint
                    if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, context)) {
                        return false;
                    }
                    // overlap
                    var eventOverlap = context.options.eventOverlap;
                    var eventOverlapFunc = typeof eventOverlap === 'function' ? eventOverlap : null;
                    for (var otherInstanceId in otherInstances) {
                        var otherInstance = otherInstances[otherInstanceId];
                        // intersect! evaluate
                        if (rangesIntersect(subjectRange, otherInstance.range)) {
                            var otherOverlap = otherConfigs[otherInstance.defId].overlap;
                            // consider the other event's overlap. only do this if the subject event is a "real" event
                            if (otherOverlap === false && interaction.isEvent) {
                                return false;
                            }
                            if (subjectConfig.overlap === false) {
                                return false;
                            }
                            if (eventOverlapFunc && !eventOverlapFunc(new EventApi(context, otherDefs[otherInstance.defId], otherInstance), // still event
                                new EventApi(context, subjectDef, subjectInstance))) {
                                return false;
                            }
                        }
                    }
                    // allow (a function)
                    var calendarEventStore = currentState.eventStore; // need global-to-calendar, not local to component (splittable)state
                    for (var _i = 0, _a = subjectConfig.allows; _i < _a.length; _i++) {
                        var subjectAllow = _a[_i];
                        var subjectDateSpan = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, dateSpanMeta), { range: subjectInstance.range, allDay: subjectDef.allDay });
                        var origDef = calendarEventStore.defs[subjectDef.defId];
                        var origInstance = calendarEventStore.instances[subjectInstanceId];
                        var eventApi = void 0;
                        if (origDef) { // was previously in the calendar
                            eventApi = new EventApi(context, origDef, origInstance);
                        }
                        else { // was an external event
                            eventApi = new EventApi(context, subjectDef); // no instance, because had no dates
                        }
                        if (!subjectAllow(buildDateSpanApiWithContext(subjectDateSpan, context), eventApi)) {
                            return false;
                        }
                    }
                }
                return true;
            }
// Date Selection Validation
// ------------------------------------------------------------------------------------------------------------------------
            function isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig) {
                var relevantEventStore = state.eventStore;
                var relevantDefs = relevantEventStore.defs;
                var relevantInstances = relevantEventStore.instances;
                var selection = state.dateSelection;
                var selectionRange = selection.range;
                var selectionConfig = context.getCurrentData().selectionConfig;
                if (filterConfig) {
                    selectionConfig = filterConfig(selectionConfig);
                }
                // constraint
                if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, context)) {
                    return false;
                }
                // overlap
                var selectOverlap = context.options.selectOverlap;
                var selectOverlapFunc = typeof selectOverlap === 'function' ? selectOverlap : null;
                for (var relevantInstanceId in relevantInstances) {
                    var relevantInstance = relevantInstances[relevantInstanceId];
                    // intersect! evaluate
                    if (rangesIntersect(selectionRange, relevantInstance.range)) {
                        if (selectionConfig.overlap === false) {
                            return false;
                        }
                        if (selectOverlapFunc && !selectOverlapFunc(new EventApi(context, relevantDefs[relevantInstance.defId], relevantInstance), null)) {
                            return false;
                        }
                    }
                }
                // allow (a function)
                for (var _i = 0, _a = selectionConfig.allows; _i < _a.length; _i++) {
                    var selectionAllow = _a[_i];
                    var fullDateSpan = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, dateSpanMeta), selection);
                    if (!selectionAllow(buildDateSpanApiWithContext(fullDateSpan, context), null)) {
                        return false;
                    }
                }
                return true;
            }
// Constraint Utils
// ------------------------------------------------------------------------------------------------------------------------
            function allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, context) {
                for (var _i = 0, constraints_1 = constraints; _i < constraints_1.length; _i++) {
                    var constraint = constraints_1[_i];
                    if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, context), subjectRange)) {
                        return false;
                    }
                }
                return true;
            }
            function constraintToRanges(constraint, subjectRange, // for expanding a recurring constraint, or expanding business hours
                                        otherEventStore, // for if constraint is an even group ID
                                        businessHoursUnexpanded, // for if constraint is 'businessHours'
                                        context) {
                if (constraint === 'businessHours') {
                    return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, context));
                }
                if (typeof constraint === 'string') { // an group ID
                    return eventStoreToRanges(filterEventStoreDefs(otherEventStore, function (eventDef) { return eventDef.groupId === constraint; }));
                }
                if (typeof constraint === 'object' && constraint) { // non-null object
                    return eventStoreToRanges(expandRecurring(constraint, subjectRange, context));
                }
                return []; // if it's false
            }
// TODO: move to event-store file?
            function eventStoreToRanges(eventStore) {
                var instances = eventStore.instances;
                var ranges = [];
                for (var instanceId in instances) {
                    ranges.push(instances[instanceId].range);
                }
                return ranges;
            }
// TODO: move to geom file?
            function anyRangesContainRange(outerRanges, innerRange) {
                for (var _i = 0, outerRanges_1 = outerRanges; _i < outerRanges_1.length; _i++) {
                    var outerRange = outerRanges_1[_i];
                    if (rangeContainsRange(outerRange, innerRange)) {
                        return true;
                    }
                }
                return false;
            }

            var VISIBLE_HIDDEN_RE = /^(visible|hidden)$/;
            var Scroller = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(Scroller, _super);
                function Scroller() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.handleEl = function (el) {
                        _this.el = el;
                        setRef(_this.props.elRef, el);
                    };
                    return _this;
                }
                Scroller.prototype.render = function () {
                    var props = this.props;
                    var liquid = props.liquid, liquidIsAbsolute = props.liquidIsAbsolute;
                    var isAbsolute = liquid && liquidIsAbsolute;
                    var className = ['fc-scroller'];
                    if (liquid) {
                        if (liquidIsAbsolute) {
                            className.push('fc-scroller-liquid-absolute');
                        }
                        else {
                            className.push('fc-scroller-liquid');
                        }
                    }
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: this.handleEl, className: className.join(' '), style: {
                            overflowX: props.overflowX,
                            overflowY: props.overflowY,
                            left: (isAbsolute && -(props.overcomeLeft || 0)) || '',
                            right: (isAbsolute && -(props.overcomeRight || 0)) || '',
                            bottom: (isAbsolute && -(props.overcomeBottom || 0)) || '',
                            marginLeft: (!isAbsolute && -(props.overcomeLeft || 0)) || '',
                            marginRight: (!isAbsolute && -(props.overcomeRight || 0)) || '',
                            marginBottom: (!isAbsolute && -(props.overcomeBottom || 0)) || '',
                            maxHeight: props.maxHeight || '',
                        } }, props.children));
                };
                Scroller.prototype.needsXScrolling = function () {
                    if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
                        return false;
                    }
                    // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.
                    // much more reliable to see if children are taller than the scroller, even tho doesn't account for
                    // inner-child margins and absolute positioning
                    var el = this.el;
                    var realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth();
                    var children = el.children;
                    for (var i = 0; i < children.length; i += 1) {
                        var childEl = children[i];
                        if (childEl.getBoundingClientRect().width > realClientWidth) {
                            return true;
                        }
                    }
                    return false;
                };
                Scroller.prototype.needsYScrolling = function () {
                    if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
                        return false;
                    }
                    // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.
                    // much more reliable to see if children are taller than the scroller, even tho doesn't account for
                    // inner-child margins and absolute positioning
                    var el = this.el;
                    var realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth();
                    var children = el.children;
                    for (var i = 0; i < children.length; i += 1) {
                        var childEl = children[i];
                        if (childEl.getBoundingClientRect().height > realClientHeight) {
                            return true;
                        }
                    }
                    return false;
                };
                Scroller.prototype.getXScrollbarWidth = function () {
                    if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
                        return 0;
                    }
                    return this.el.offsetHeight - this.el.clientHeight; // only works because we guarantee no borders. TODO: add to CSS with important?
                };
                Scroller.prototype.getYScrollbarWidth = function () {
                    if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
                        return 0;
                    }
                    return this.el.offsetWidth - this.el.clientWidth; // only works because we guarantee no borders. TODO: add to CSS with important?
                };
                return Scroller;
            }(BaseComponent));

            /*
TODO: somehow infer OtherArgs from masterCallback?
TODO: infer RefType from masterCallback if provided
*/
            var RefMap = /** @class */ (function () {
                function RefMap(masterCallback) {
                    var _this = this;
                    this.masterCallback = masterCallback;
                    this.currentMap = {};
                    this.depths = {};
                    this.callbackMap = {};
                    this.handleValue = function (val, key) {
                        var _a = _this, depths = _a.depths, currentMap = _a.currentMap;
                        var removed = false;
                        var added = false;
                        if (val !== null) {
                            // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore
                            removed = (key in currentMap);
                            currentMap[key] = val;
                            depths[key] = (depths[key] || 0) + 1;
                            added = true;
                        }
                        else {
                            depths[key] -= 1;
                            if (!depths[key]) {
                                delete currentMap[key];
                                delete _this.callbackMap[key];
                                removed = true;
                            }
                        }
                        if (_this.masterCallback) {
                            if (removed) {
                                _this.masterCallback(null, String(key));
                            }
                            if (added) {
                                _this.masterCallback(val, String(key));
                            }
                        }
                    };
                }
                RefMap.prototype.createRef = function (key) {
                    var _this = this;
                    var refCallback = this.callbackMap[key];
                    if (!refCallback) {
                        refCallback = this.callbackMap[key] = function (val) {
                            _this.handleValue(val, String(key));
                        };
                    }
                    return refCallback;
                };
                // TODO: check callers that don't care about order. should use getAll instead
                // NOTE: this method has become less valuable now that we are encouraged to map order by some other index
                // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and "collect"
                RefMap.prototype.collect = function (startIndex, endIndex, step) {
                    return collectFromHash(this.currentMap, startIndex, endIndex, step);
                };
                RefMap.prototype.getAll = function () {
                    return hashValuesToArray(this.currentMap);
                };
                return RefMap;
            }());

            function computeShrinkWidth(chunkEls) {
                var shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink');
                var largestWidth = 0;
                for (var _i = 0, shrinkCells_1 = shrinkCells; _i < shrinkCells_1.length; _i++) {
                    var shrinkCell = shrinkCells_1[_i];
                    largestWidth = Math.max(largestWidth, computeSmallestCellWidth(shrinkCell));
                }
                return Math.ceil(largestWidth); // <table> elements work best with integers. round up to ensure contents fits
            }
            function getSectionHasLiquidHeight(props, sectionConfig) {
                return props.liquid && sectionConfig.liquid; // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)
            }
            function getAllowYScrolling(props, sectionConfig) {
                return sectionConfig.maxHeight != null || // if its possible for the height to max out, we might need scrollbars
                    getSectionHasLiquidHeight(props, sectionConfig); // if the section is liquid height, it might condense enough to require scrollbars
            }
// TODO: ONLY use `arg`. force out internal function to use same API
            function renderChunkContent(sectionConfig, chunkConfig, arg, isHeader) {
                var expandRows = arg.expandRows;
                var content = typeof chunkConfig.content === 'function' ?
                    chunkConfig.content(arg) :
                    (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('table', {
                        role: 'presentation',
                        className: [
                            chunkConfig.tableClassName,
                            sectionConfig.syncRowHeights ? 'fc-scrollgrid-sync-table' : '',
                        ].join(' '),
                        style: {
                            minWidth: arg.tableMinWidth,
                            width: arg.clientWidth,
                            height: expandRows ? arg.clientHeight : '', // css `height` on a <table> serves as a min-height
                        },
                    }, arg.tableColGroupNode, (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(isHeader ? 'thead' : 'tbody', {
                        role: 'presentation',
                    }, typeof chunkConfig.rowContent === 'function'
                        ? chunkConfig.rowContent(arg)
                        : chunkConfig.rowContent));
                return content;
            }
            function isColPropsEqual(cols0, cols1) {
                return isArraysEqual(cols0, cols1, isPropsEqual);
            }
            function renderMicroColGroup(cols, shrinkWidth) {
                var colNodes = [];
                /*
    for ColProps with spans, it would have been great to make a single <col span="">
    HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.
    SOLUTION: making individual <col> elements makes Chrome behave.
    */
                for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {
                    var colProps = cols_1[_i];
                    var span = colProps.span || 1;
                    for (var i = 0; i < span; i += 1) {
                        colNodes.push((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("col", { style: {
                                width: colProps.width === 'shrink' ? sanitizeShrinkWidth(shrinkWidth) : (colProps.width || ''),
                                minWidth: colProps.minWidth || '',
                            } }));
                    }
                }
                return _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)(['colgroup', {}], colNodes));
            }
            function sanitizeShrinkWidth(shrinkWidth) {
                /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth
    4 accounts for 2 2-pixel borders. TODO: better solution? */
                return shrinkWidth == null ? 4 : shrinkWidth;
            }
            function hasShrinkWidth(cols) {
                for (var _i = 0, cols_2 = cols; _i < cols_2.length; _i++) {
                    var col = cols_2[_i];
                    if (col.width === 'shrink') {
                        return true;
                    }
                }
                return false;
            }
            function getScrollGridClassNames(liquid, context) {
                var classNames = [
                    'fc-scrollgrid',
                    context.theme.getClass('table'),
                ];
                if (liquid) {
                    classNames.push('fc-scrollgrid-liquid');
                }
                return classNames;
            }
            function getSectionClassNames(sectionConfig, wholeTableVGrow) {
                var classNames = [
                    'fc-scrollgrid-section',
                    "fc-scrollgrid-section-" + sectionConfig.type,
                    sectionConfig.className, // used?
                ];
                if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {
                    classNames.push('fc-scrollgrid-section-liquid');
                }
                if (sectionConfig.isSticky) {
                    classNames.push('fc-scrollgrid-section-sticky');
                }
                return classNames;
            }
            function renderScrollShim(arg) {
                return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-scrollgrid-sticky-shim", style: {
                        width: arg.clientWidth,
                        minWidth: arg.tableMinWidth,
                    } }));
            }
            function getStickyHeaderDates(options) {
                var stickyHeaderDates = options.stickyHeaderDates;
                if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {
                    stickyHeaderDates = options.height === 'auto' || options.viewHeight === 'auto';
                }
                return stickyHeaderDates;
            }
            function getStickyFooterScrollbar(options) {
                var stickyFooterScrollbar = options.stickyFooterScrollbar;
                if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {
                    stickyFooterScrollbar = options.height === 'auto' || options.viewHeight === 'auto';
                }
                return stickyFooterScrollbar;
            }

            var SimpleScrollGrid = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(SimpleScrollGrid, _super);
                function SimpleScrollGrid() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.processCols = memoize(function (a) { return a; }, isColPropsEqual); // so we get same `cols` props every time
                    // yucky to memoize VNodes, but much more efficient for consumers
                    _this.renderMicroColGroup = memoize(renderMicroColGroup);
                    _this.scrollerRefs = new RefMap();
                    _this.scrollerElRefs = new RefMap(_this._handleScrollerEl.bind(_this));
                    _this.state = {
                        shrinkWidth: null,
                        forceYScrollbars: false,
                        scrollerClientWidths: {},
                        scrollerClientHeights: {},
                    };
                    // TODO: can do a really simple print-view. dont need to join rows
                    _this.handleSizing = function () {
                        _this.safeSetState((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ shrinkWidth: _this.computeShrinkWidth() }, _this.computeScrollerDims()));
                    };
                    return _this;
                }
                SimpleScrollGrid.prototype.render = function () {
                    var _a = this, props = _a.props, state = _a.state, context = _a.context;
                    var sectionConfigs = props.sections || [];
                    var cols = this.processCols(props.cols);
                    var microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth);
                    var classNames = getScrollGridClassNames(props.liquid, context);
                    if (props.collapsibleWidth) {
                        classNames.push('fc-scrollgrid-collapsible');
                    }
                    // TODO: make DRY
                    var configCnt = sectionConfigs.length;
                    var configI = 0;
                    var currentConfig;
                    var headSectionNodes = [];
                    var bodySectionNodes = [];
                    var footSectionNodes = [];
                    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {
                        headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));
                        configI += 1;
                    }
                    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {
                        bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode, false));
                        configI += 1;
                    }
                    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {
                        footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));
                        configI += 1;
                    }
                    // firefox bug: when setting height on table and there is a thead or tfoot,
                    // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)
                    // use getCanVGrowWithinCell as a way to detect table-stupid firefox.
                    // if so, use a simpler dom structure, jam everything into a lone tbody.
                    var isBuggy = !getCanVGrowWithinCell();
                    var roleAttrs = { role: 'rowgroup' };
                    return (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)('table', {
                        role: 'grid',
                        className: classNames.join(' '),
                        style: { height: props.height },
                    }, Boolean(!isBuggy && headSectionNodes.length) && _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)(['thead', roleAttrs], headSectionNodes)), Boolean(!isBuggy && bodySectionNodes.length) && _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)(['tbody', roleAttrs], bodySectionNodes)), Boolean(!isBuggy && footSectionNodes.length) && _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)(['tfoot', roleAttrs], footSectionNodes)), isBuggy && _vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)(['tbody', roleAttrs], headSectionNodes), bodySectionNodes), footSectionNodes)));
                };
                SimpleScrollGrid.prototype.renderSection = function (sectionConfig, microColGroupNode, isHeader) {
                    if ('outerContent' in sectionConfig) {
                        return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(_vdom_js__WEBPACK_IMPORTED_MODULE_1__.Fragment, { key: sectionConfig.key }, sectionConfig.outerContent));
                    }
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { key: sectionConfig.key, role: "presentation", className: getSectionClassNames(sectionConfig, this.props.liquid).join(' ') }, this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk, isHeader)));
                };
                SimpleScrollGrid.prototype.renderChunkTd = function (sectionConfig, microColGroupNode, chunkConfig, isHeader) {
                    if ('outerContent' in chunkConfig) {
                        return chunkConfig.outerContent;
                    }
                    var props = this.props;
                    var _a = this.state, forceYScrollbars = _a.forceYScrollbars, scrollerClientWidths = _a.scrollerClientWidths, scrollerClientHeights = _a.scrollerClientHeights;
                    var needsYScrolling = getAllowYScrolling(props, sectionConfig); // TODO: do lazily. do in section config?
                    var isLiquid = getSectionHasLiquidHeight(props, sectionConfig);
                    // for `!props.liquid` - is WHOLE scrollgrid natural height?
                    // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars
                    var overflowY = !props.liquid ? 'visible' :
                        forceYScrollbars ? 'scroll' :
                            !needsYScrolling ? 'hidden' :
                                'auto';
                    var sectionKey = sectionConfig.key;
                    var content = renderChunkContent(sectionConfig, chunkConfig, {
                        tableColGroupNode: microColGroupNode,
                        tableMinWidth: '',
                        clientWidth: (!props.collapsibleWidth && scrollerClientWidths[sectionKey] !== undefined) ? scrollerClientWidths[sectionKey] : null,
                        clientHeight: scrollerClientHeights[sectionKey] !== undefined ? scrollerClientHeights[sectionKey] : null,
                        expandRows: sectionConfig.expandRows,
                        syncRowHeights: false,
                        rowSyncHeights: [],
                        reportRowHeightChange: function () { },
                    }, isHeader);
                    return (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(isHeader ? 'th' : 'td', {
                        ref: chunkConfig.elRef,
                        role: 'presentation',
                    }, (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-scroller-harness" + (isLiquid ? ' fc-scroller-harness-liquid' : '') },
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(Scroller, { ref: this.scrollerRefs.createRef(sectionKey), elRef: this.scrollerElRefs.createRef(sectionKey), overflowY: overflowY, overflowX: !props.liquid ? 'visible' : 'hidden' /* natural height? */, maxHeight: sectionConfig.maxHeight, liquid: isLiquid, liquidIsAbsolute // because its within a harness
                                : true }, content)));
                };
                SimpleScrollGrid.prototype._handleScrollerEl = function (scrollerEl, key) {
                    var section = getSectionByKey(this.props.sections, key);
                    if (section) {
                        setRef(section.chunk.scrollerElRef, scrollerEl);
                    }
                };
                SimpleScrollGrid.prototype.componentDidMount = function () {
                    this.handleSizing();
                    this.context.addResizeHandler(this.handleSizing);
                };
                SimpleScrollGrid.prototype.componentDidUpdate = function () {
                    // TODO: need better solution when state contains non-sizing things
                    this.handleSizing();
                };
                SimpleScrollGrid.prototype.componentWillUnmount = function () {
                    this.context.removeResizeHandler(this.handleSizing);
                };
                SimpleScrollGrid.prototype.computeShrinkWidth = function () {
                    return hasShrinkWidth(this.props.cols)
                        ? computeShrinkWidth(this.scrollerElRefs.getAll())
                        : 0;
                };
                SimpleScrollGrid.prototype.computeScrollerDims = function () {
                    var scrollbarWidth = getScrollbarWidths();
                    var _a = this, scrollerRefs = _a.scrollerRefs, scrollerElRefs = _a.scrollerElRefs;
                    var forceYScrollbars = false;
                    var scrollerClientWidths = {};
                    var scrollerClientHeights = {};
                    for (var sectionKey in scrollerRefs.currentMap) {
                        var scroller = scrollerRefs.currentMap[sectionKey];
                        if (scroller && scroller.needsYScrolling()) {
                            forceYScrollbars = true;
                            break;
                        }
                    }
                    for (var _i = 0, _b = this.props.sections; _i < _b.length; _i++) {
                        var section = _b[_i];
                        var sectionKey = section.key;
                        var scrollerEl = scrollerElRefs.currentMap[sectionKey];
                        if (scrollerEl) {
                            var harnessEl = scrollerEl.parentNode; // TODO: weird way to get this. need harness b/c doesn't include table borders
                            scrollerClientWidths[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().width - (forceYScrollbars
                                ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future
                                : 0));
                            scrollerClientHeights[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().height);
                        }
                    }
                    return { forceYScrollbars: forceYScrollbars, scrollerClientWidths: scrollerClientWidths, scrollerClientHeights: scrollerClientHeights };
                };
                return SimpleScrollGrid;
            }(BaseComponent));
            SimpleScrollGrid.addStateEquality({
                scrollerClientWidths: isPropsEqual,
                scrollerClientHeights: isPropsEqual,
            });
            function getSectionByKey(sections, key) {
                for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
                    var section = sections_1[_i];
                    if (section.key === key) {
                        return section;
                    }
                }
                return null;
            }

            var EventRoot = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(EventRoot, _super);
                function EventRoot() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.elRef = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    return _this;
                }
                EventRoot.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var options = context.options;
                    var seg = props.seg;
                    var eventRange = seg.eventRange;
                    var ui = eventRange.ui;
                    var hookProps = {
                        event: new EventApi(context, eventRange.def, eventRange.instance),
                        view: context.viewApi,
                        timeText: props.timeText,
                        textColor: ui.textColor,
                        backgroundColor: ui.backgroundColor,
                        borderColor: ui.borderColor,
                        isDraggable: !props.disableDragging && computeSegDraggable(seg, context),
                        isStartResizable: !props.disableResizing && computeSegStartResizable(seg, context),
                        isEndResizable: !props.disableResizing && computeSegEndResizable(seg),
                        isMirror: Boolean(props.isDragging || props.isResizing || props.isDateSelecting),
                        isStart: Boolean(seg.isStart),
                        isEnd: Boolean(seg.isEnd),
                        isPast: Boolean(props.isPast),
                        isFuture: Boolean(props.isFuture),
                        isToday: Boolean(props.isToday),
                        isSelected: Boolean(props.isSelected),
                        isDragging: Boolean(props.isDragging),
                        isResizing: Boolean(props.isResizing),
                    };
                    var standardClassNames = getEventClassNames(hookProps).concat(ui.classNames);
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(RenderHook, { hookProps: hookProps, classNames: options.eventClassNames, content: options.eventContent, defaultContent: props.defaultContent, didMount: options.eventDidMount, willUnmount: options.eventWillUnmount, elRef: this.elRef }, function (rootElRef, customClassNames, innerElRef, innerContent) { return props.children(rootElRef, standardClassNames.concat(customClassNames), innerElRef, innerContent, hookProps); }));
                };
                EventRoot.prototype.componentDidMount = function () {
                    setElSeg(this.elRef.current, this.props.seg);
                };
                /*
    need to re-assign seg to the element if seg changes, even if the element is the same
    */
                EventRoot.prototype.componentDidUpdate = function (prevProps) {
                    var seg = this.props.seg;
                    if (seg !== prevProps.seg) {
                        setElSeg(this.elRef.current, seg);
                    }
                };
                return EventRoot;
            }(BaseComponent));

// should not be a purecomponent
            var StandardEvent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(StandardEvent, _super);
                function StandardEvent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                StandardEvent.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var seg = props.seg;
                    var timeFormat = context.options.eventTimeFormat || props.defaultTimeFormat;
                    var timeText = buildSegTimeText(seg, timeFormat, context, props.defaultDisplayEventTime, props.defaultDisplayEventEnd);
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(EventRoot, { seg: seg, timeText: timeText, disableDragging: props.disableDragging, disableResizing: props.disableResizing, defaultContent: props.defaultContent || renderInnerContent$1, isDragging: props.isDragging, isResizing: props.isResizing, isDateSelecting: props.isDateSelecting, isSelected: props.isSelected, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ className: props.extraClassNames.concat(classNames).join(' '), style: {
                                borderColor: hookProps.borderColor,
                                backgroundColor: hookProps.backgroundColor,
                            }, ref: rootElRef }, getSegAnchorAttrs(seg, context)),
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-main", ref: innerElRef, style: { color: hookProps.textColor } }, innerContent),
                        hookProps.isStartResizable &&
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-resizer fc-event-resizer-start" }),
                        hookProps.isEndResizable &&
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-resizer fc-event-resizer-end" }))); }));
                };
                return StandardEvent;
            }(BaseComponent));
            function renderInnerContent$1(innerProps) {
                return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-main-frame" },
                    innerProps.timeText && ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-time" }, innerProps.timeText)),
                    (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-title-container" },
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-title fc-sticky" }, innerProps.event.title || (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(_vdom_js__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, "\u00A0")))));
            }

            var NowIndicatorRoot = function (props) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewContextType.Consumer, null, function (context) {
                var options = context.options;
                var hookProps = {
                    isAxis: props.isAxis,
                    date: context.dateEnv.toDate(props.date),
                    view: context.viewApi,
                };
                return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(RenderHook, { hookProps: hookProps, classNames: options.nowIndicatorClassNames, content: options.nowIndicatorContent, didMount: options.nowIndicatorDidMount, willUnmount: options.nowIndicatorWillUnmount }, props.children));
            })); };

            var DAY_NUM_FORMAT = createFormatter({ day: 'numeric' });
            var DayCellContent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DayCellContent, _super);
                function DayCellContent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                DayCellContent.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var options = context.options;
                    var hookProps = refineDayCellHookProps({
                        date: props.date,
                        dateProfile: props.dateProfile,
                        todayRange: props.todayRange,
                        showDayNumber: props.showDayNumber,
                        extraProps: props.extraHookProps,
                        viewApi: context.viewApi,
                        dateEnv: context.dateEnv,
                    });
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ContentHook, { hookProps: hookProps, content: options.dayCellContent, defaultContent: props.defaultContent }, props.children));
                };
                return DayCellContent;
            }(BaseComponent));
            function refineDayCellHookProps(raw) {
                var date = raw.date, dateEnv = raw.dateEnv;
                var dayMeta = getDateMeta(date, raw.todayRange, null, raw.dateProfile);
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ date: dateEnv.toDate(date), view: raw.viewApi }, dayMeta), { dayNumberText: raw.showDayNumber ? dateEnv.format(date, DAY_NUM_FORMAT) : '' }), raw.extraProps);
            }

            var DayCellRoot = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DayCellRoot, _super);
                function DayCellRoot() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.refineHookProps = memoizeObjArg(refineDayCellHookProps);
                    _this.normalizeClassNames = buildClassNameNormalizer();
                    return _this;
                }
                DayCellRoot.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var options = context.options;
                    var hookProps = this.refineHookProps({
                        date: props.date,
                        dateProfile: props.dateProfile,
                        todayRange: props.todayRange,
                        showDayNumber: props.showDayNumber,
                        extraProps: props.extraHookProps,
                        viewApi: context.viewApi,
                        dateEnv: context.dateEnv,
                    });
                    var classNames = getDayClassNames(hookProps, context.theme).concat(hookProps.isDisabled
                        ? [] // don't use custom classNames if disabled
                        : this.normalizeClassNames(options.dayCellClassNames, hookProps));
                    var dataAttrs = hookProps.isDisabled ? {} : {
                        'data-date': formatDayString(props.date),
                    };
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(MountHook, { hookProps: hookProps, didMount: options.dayCellDidMount, willUnmount: options.dayCellWillUnmount, elRef: props.elRef }, function (rootElRef) { return props.children(rootElRef, classNames, dataAttrs, hookProps.isDisabled); }));
                };
                return DayCellRoot;
            }(BaseComponent));

            function renderFill(fillType) {
                return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-" + fillType }));
            }
            var BgEvent = function (props) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(EventRoot, { defaultContent: renderInnerContent, seg: props.seg /* uselesss i think */, timeText: "", disableDragging: true, disableResizing: true, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: rootElRef, className: ['fc-bg-event'].concat(classNames).join(' '), style: {
                    backgroundColor: hookProps.backgroundColor,
                } }, innerContent)); })); };
            function renderInnerContent(props) {
                var title = props.event.title;
                return title && ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-title" }, props.event.title));
            }

            var WeekNumberRoot = function (props) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewContextType.Consumer, null, function (context) {
                var dateEnv = context.dateEnv, options = context.options;
                var date = props.date;
                var format = options.weekNumberFormat || props.defaultFormat;
                var num = dateEnv.computeWeekNumber(date); // TODO: somehow use for formatting as well?
                var text = dateEnv.format(date, format);
                var hookProps = { num: num, text: text, date: date };
                return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(RenderHook, { hookProps: hookProps, classNames: options.weekNumberClassNames, content: options.weekNumberContent, defaultContent: renderInner, didMount: options.weekNumberDidMount, willUnmount: options.weekNumberWillUnmount }, props.children));
            })); };
            function renderInner(innerProps) {
                return innerProps.text;
            }

            var PADDING_FROM_VIEWPORT = 10;
            var Popover = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(Popover, _super);
                function Popover() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.state = {
                        titleId: getUniqueDomId(),
                    };
                    _this.handleRootEl = function (el) {
                        _this.rootEl = el;
                        if (_this.props.elRef) {
                            setRef(_this.props.elRef, el);
                        }
                    };
                    // Triggered when the user clicks *anywhere* in the document, for the autoHide feature
                    _this.handleDocumentMouseDown = function (ev) {
                        // only hide the popover if the click happened outside the popover
                        var target = getEventTargetViaRoot(ev);
                        if (!_this.rootEl.contains(target)) {
                            _this.handleCloseClick();
                        }
                    };
                    _this.handleDocumentKeyDown = function (ev) {
                        if (ev.key === 'Escape') {
                            _this.handleCloseClick();
                        }
                    };
                    _this.handleCloseClick = function () {
                        var onClose = _this.props.onClose;
                        if (onClose) {
                            onClose();
                        }
                    };
                    return _this;
                }
                Popover.prototype.render = function () {
                    var _a = this.context, theme = _a.theme, options = _a.options;
                    var _b = this, props = _b.props, state = _b.state;
                    var classNames = [
                        'fc-popover',
                        theme.getClass('popover'),
                    ].concat(props.extraClassNames || []);
                    return (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createPortal)((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ id: props.id, className: classNames.join(' '), "aria-labelledby": state.titleId }, props.extraAttrs, { ref: this.handleRootEl }),
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: 'fc-popover-header ' + theme.getClass('popoverHeader') },
                            (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", { className: "fc-popover-title", id: state.titleId }, props.title),
                            (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", { className: 'fc-popover-close ' + theme.getIconClass('close'), title: options.closeHint, onClick: this.handleCloseClick })),
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: 'fc-popover-body ' + theme.getClass('popoverContent') }, props.children)), props.parentEl);
                };
                Popover.prototype.componentDidMount = function () {
                    document.addEventListener('mousedown', this.handleDocumentMouseDown);
                    document.addEventListener('keydown', this.handleDocumentKeyDown);
                    this.updateSize();
                };
                Popover.prototype.componentWillUnmount = function () {
                    document.removeEventListener('mousedown', this.handleDocumentMouseDown);
                    document.removeEventListener('keydown', this.handleDocumentKeyDown);
                };
                Popover.prototype.updateSize = function () {
                    var isRtl = this.context.isRtl;
                    var _a = this.props, alignmentEl = _a.alignmentEl, alignGridTop = _a.alignGridTop;
                    var rootEl = this.rootEl;
                    var alignmentRect = computeClippedClientRect(alignmentEl);
                    if (alignmentRect) {
                        var popoverDims = rootEl.getBoundingClientRect();
                        // position relative to viewport
                        var popoverTop = alignGridTop
                            ? elementClosest(alignmentEl, '.fc-scrollgrid').getBoundingClientRect().top
                            : alignmentRect.top;
                        var popoverLeft = isRtl ? alignmentRect.right - popoverDims.width : alignmentRect.left;
                        // constrain
                        popoverTop = Math.max(popoverTop, PADDING_FROM_VIEWPORT);
                        popoverLeft = Math.min(popoverLeft, document.documentElement.clientWidth - PADDING_FROM_VIEWPORT - popoverDims.width);
                        popoverLeft = Math.max(popoverLeft, PADDING_FROM_VIEWPORT);
                        var origin_1 = rootEl.offsetParent.getBoundingClientRect();
                        applyStyle(rootEl, {
                            top: popoverTop - origin_1.top,
                            left: popoverLeft - origin_1.left,
                        });
                    }
                };
                return Popover;
            }(BaseComponent));

            var MorePopover = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(MorePopover, _super);
                function MorePopover() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.handleRootEl = function (rootEl) {
                        _this.rootEl = rootEl;
                        if (rootEl) {
                            _this.context.registerInteractiveComponent(_this, {
                                el: rootEl,
                                useEventCenter: false,
                            });
                        }
                        else {
                            _this.context.unregisterInteractiveComponent(_this);
                        }
                    };
                    return _this;
                }
                MorePopover.prototype.render = function () {
                    var _a = this.context, options = _a.options, dateEnv = _a.dateEnv;
                    var props = this.props;
                    var startDate = props.startDate, todayRange = props.todayRange, dateProfile = props.dateProfile;
                    var title = dateEnv.format(startDate, options.dayPopoverFormat);
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(DayCellRoot, { date: startDate, dateProfile: dateProfile, todayRange: todayRange, elRef: this.handleRootEl }, function (rootElRef, dayClassNames, dataAttrs) { return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(Popover, { elRef: rootElRef, id: props.id, title: title, extraClassNames: ['fc-more-popover'].concat(dayClassNames), extraAttrs: dataAttrs /* TODO: make these time-based when not whole-day? */, parentEl: props.parentEl, alignmentEl: props.alignmentEl, alignGridTop: props.alignGridTop, onClose: props.onClose },
                        (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(DayCellContent, { date: startDate, dateProfile: dateProfile, todayRange: todayRange }, function (innerElRef, innerContent) { return (innerContent &&
                            (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-more-popover-misc", ref: innerElRef }, innerContent)); }),
                        props.children)); }));
                };
                MorePopover.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {
                    var _a = this, rootEl = _a.rootEl, props = _a.props;
                    if (positionLeft >= 0 && positionLeft < elWidth &&
                        positionTop >= 0 && positionTop < elHeight) {
                        return {
                            dateProfile: props.dateProfile,
                            dateSpan: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ allDay: true, range: {
                                    start: props.startDate,
                                    end: props.endDate,
                                } }, props.extraDateSpan),
                            dayEl: rootEl,
                            rect: {
                                left: 0,
                                top: 0,
                                right: elWidth,
                                bottom: elHeight,
                            },
                            layer: 1, // important when comparing with hits from other components
                        };
                    }
                    return null;
                };
                return MorePopover;
            }(DateComponent));

            var MoreLinkRoot = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(MoreLinkRoot, _super);
                function MoreLinkRoot() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.linkElRef = (0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.state = {
                        isPopoverOpen: false,
                        popoverId: getUniqueDomId(),
                    };
                    _this.handleClick = function (ev) {
                        var _a = _this, props = _a.props, context = _a.context;
                        var moreLinkClick = context.options.moreLinkClick;
                        var date = computeRange(props).start;
                        function buildPublicSeg(seg) {
                            var _a = seg.eventRange, def = _a.def, instance = _a.instance, range = _a.range;
                            return {
                                event: new EventApi(context, def, instance),
                                start: context.dateEnv.toDate(range.start),
                                end: context.dateEnv.toDate(range.end),
                                isStart: seg.isStart,
                                isEnd: seg.isEnd,
                            };
                        }
                        if (typeof moreLinkClick === 'function') {
                            moreLinkClick = moreLinkClick({
                                date: date,
                                allDay: Boolean(props.allDayDate),
                                allSegs: props.allSegs.map(buildPublicSeg),
                                hiddenSegs: props.hiddenSegs.map(buildPublicSeg),
                                jsEvent: ev,
                                view: context.viewApi,
                            });
                        }
                        if (!moreLinkClick || moreLinkClick === 'popover') {
                            _this.setState({ isPopoverOpen: true });
                        }
                        else if (typeof moreLinkClick === 'string') { // a view name
                            context.calendarApi.zoomTo(date, moreLinkClick);
                        }
                    };
                    _this.handlePopoverClose = function () {
                        _this.setState({ isPopoverOpen: false });
                    };
                    return _this;
                }
                MoreLinkRoot.prototype.render = function () {
                    var _this = this;
                    var _a = this, props = _a.props, state = _a.state;
                    return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewContextType.Consumer, null, function (context) {
                        var viewApi = context.viewApi, options = context.options, calendarApi = context.calendarApi;
                        var moreLinkText = options.moreLinkText;
                        var moreCnt = props.moreCnt;
                        var range = computeRange(props);
                        var text = typeof moreLinkText === 'function' // TODO: eventually use formatWithOrdinals
                            ? moreLinkText.call(calendarApi, moreCnt)
                            : "+" + moreCnt + " " + moreLinkText;
                        var title = formatWithOrdinals(options.moreLinkHint, [moreCnt], text);
                        var hookProps = {
                            num: moreCnt,
                            shortText: "+" + moreCnt,
                            text: text,
                            view: viewApi,
                        };
                        return ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(_vdom_js__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,
                            Boolean(props.moreCnt) && ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(RenderHook, { elRef: _this.linkElRef, hookProps: hookProps, classNames: options.moreLinkClassNames, content: options.moreLinkContent, defaultContent: props.defaultContent || renderMoreLinkInner, didMount: options.moreLinkDidMount, willUnmount: options.moreLinkWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return props.children(rootElRef, ['fc-more-link'].concat(customClassNames), innerElRef, innerContent, _this.handleClick, title, state.isPopoverOpen, state.isPopoverOpen ? state.popoverId : ''); })),
                            state.isPopoverOpen && ((0,_vdom_js__WEBPACK_IMPORTED_MODULE_1__.createElement)(MorePopover, { id: state.popoverId, startDate: range.start, endDate: range.end, dateProfile: props.dateProfile, todayRange: props.todayRange, extraDateSpan: props.extraDateSpan, parentEl: _this.parentEl, alignmentEl: props.alignmentElRef.current, alignGridTop: props.alignGridTop, onClose: _this.handlePopoverClose }, props.popoverContent()))));
                    }));
                };
                MoreLinkRoot.prototype.componentDidMount = function () {
                    this.updateParentEl();
                };
                MoreLinkRoot.prototype.componentDidUpdate = function () {
                    this.updateParentEl();
                };
                MoreLinkRoot.prototype.updateParentEl = function () {
                    if (this.linkElRef.current) {
                        this.parentEl = elementClosest(this.linkElRef.current, '.fc-view-harness');
                    }
                };
                return MoreLinkRoot;
            }(BaseComponent));
            function renderMoreLinkInner(props) {
                return props.text;
            }
            function computeRange(props) {
                if (props.allDayDate) {
                    return {
                        start: props.allDayDate,
                        end: addDays(props.allDayDate, 1),
                    };
                }
                var hiddenSegs = props.hiddenSegs;
                return {
                    start: computeEarliestSegStart(hiddenSegs),
                    end: computeLatestSegEnd(hiddenSegs),
                };
            }
            function computeEarliestSegStart(segs) {
                return segs.reduce(pickEarliestStart).eventRange.range.start;
            }
            function pickEarliestStart(seg0, seg1) {
                return seg0.eventRange.range.start < seg1.eventRange.range.start ? seg0 : seg1;
            }
            function computeLatestSegEnd(segs) {
                return segs.reduce(pickLatestEnd).eventRange.range.end;
            }
            function pickLatestEnd(seg0, seg1) {
                return seg0.eventRange.range.end > seg1.eventRange.range.end ? seg0 : seg1;
            }

// exports
// --------------------------------------------------------------------------------------------------
            var version = '5.11.5'; // important to type it, so .d.ts has generic string


//# sourceMappingURL=main.js.map


            /***/ }),

        /***/ "./node_modules/@fullcalendar/common/vdom.js":
        /*!***************************************************!*\
  !*** ./node_modules/@fullcalendar/common/vdom.js ***!
  \***************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   Component: () => (/* binding */ Component),
                /* harmony export */   Fragment: () => (/* binding */ Fragment),
                /* harmony export */   createContext: () => (/* binding */ createContext),
                /* harmony export */   createElement: () => (/* binding */ createElement),
                /* harmony export */   createPortal: () => (/* binding */ createPortal),
                /* harmony export */   createRef: () => (/* binding */ createRef),
                /* harmony export */   flushSync: () => (/* binding */ flushSync),
                /* harmony export */   render: () => (/* binding */ render),
                /* harmony export */   unmountComponentAtNode: () => (/* binding */ unmountComponentAtNode)
                /* harmony export */ });
/// <reference types="@fullcalendar/core-preact" />
            if (typeof FullCalendarVDom === 'undefined') {
                throw new Error('Please import the top-level fullcalendar lib before attempting to import a plugin.');
            }
            var Component = FullCalendarVDom.Component;
            var createElement = FullCalendarVDom.createElement;
            var render = FullCalendarVDom.render;
            var createRef = FullCalendarVDom.createRef;
            var Fragment = FullCalendarVDom.Fragment;
            var createContext = FullCalendarVDom.createContext;
            var createPortal = FullCalendarVDom.createPortal;
            var flushSync = FullCalendarVDom.flushSync;
            var unmountComponentAtNode = FullCalendarVDom.unmountComponentAtNode;
            /* eslint-enable */




            /***/ }),

        /***/ "./node_modules/@fullcalendar/core/main.js":
        /*!*************************************************!*\
  !*** ./node_modules/@fullcalendar/core/main.js ***!
  \*************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   BASE_OPTION_DEFAULTS: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BASE_OPTION_DEFAULTS),
                /* harmony export */   BASE_OPTION_REFINERS: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BASE_OPTION_REFINERS),
                /* harmony export */   BaseComponent: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent),
                /* harmony export */   BgEvent: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BgEvent),
                /* harmony export */   Calendar: () => (/* binding */ Calendar),
                /* harmony export */   CalendarApi: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarApi),
                /* harmony export */   CalendarContent: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarContent),
                /* harmony export */   CalendarDataManager: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarDataManager),
                /* harmony export */   CalendarDataProvider: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarDataProvider),
                /* harmony export */   CalendarRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarRoot),
                /* harmony export */   Component: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Component),
                /* harmony export */   ContentHook: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ContentHook),
                /* harmony export */   CustomContentRenderContext: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CustomContentRenderContext),
                /* harmony export */   DateComponent: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent),
                /* harmony export */   DateEnv: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateEnv),
                /* harmony export */   DateProfileGenerator: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateProfileGenerator),
                /* harmony export */   DayCellContent: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayCellContent),
                /* harmony export */   DayCellRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayCellRoot),
                /* harmony export */   DayHeader: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayHeader),
                /* harmony export */   DaySeriesModel: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DaySeriesModel),
                /* harmony export */   DayTableModel: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayTableModel),
                /* harmony export */   DelayedRunner: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DelayedRunner),
                /* harmony export */   ElementDragging: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ElementDragging),
                /* harmony export */   ElementScrollController: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ElementScrollController),
                /* harmony export */   Emitter: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Emitter),
                /* harmony export */   EventApi: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.EventApi),
                /* harmony export */   EventRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.EventRoot),
                /* harmony export */   EventSourceApi: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.EventSourceApi),
                /* harmony export */   Fragment: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment),
                /* harmony export */   Interaction: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Interaction),
                /* harmony export */   MoreLinkRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.MoreLinkRoot),
                /* harmony export */   MountHook: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.MountHook),
                /* harmony export */   NamedTimeZoneImpl: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NamedTimeZoneImpl),
                /* harmony export */   NowIndicatorRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowIndicatorRoot),
                /* harmony export */   NowTimer: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowTimer),
                /* harmony export */   PositionCache: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.PositionCache),
                /* harmony export */   RefMap: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap),
                /* harmony export */   RenderHook: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RenderHook),
                /* harmony export */   ScrollController: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ScrollController),
                /* harmony export */   ScrollResponder: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ScrollResponder),
                /* harmony export */   Scroller: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Scroller),
                /* harmony export */   SegHierarchy: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.SegHierarchy),
                /* harmony export */   SimpleScrollGrid: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.SimpleScrollGrid),
                /* harmony export */   Slicer: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Slicer),
                /* harmony export */   Splitter: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Splitter),
                /* harmony export */   StandardEvent: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.StandardEvent),
                /* harmony export */   TableDateCell: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.TableDateCell),
                /* harmony export */   TableDowCell: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.TableDowCell),
                /* harmony export */   Theme: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Theme),
                /* harmony export */   ViewApi: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewApi),
                /* harmony export */   ViewContextType: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewContextType),
                /* harmony export */   ViewRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewRoot),
                /* harmony export */   WeekNumberRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.WeekNumberRoot),
                /* harmony export */   WindowScrollController: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.WindowScrollController),
                /* harmony export */   addDays: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDays),
                /* harmony export */   addDurations: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDurations),
                /* harmony export */   addMs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addMs),
                /* harmony export */   addWeeks: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addWeeks),
                /* harmony export */   allowContextMenu: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.allowContextMenu),
                /* harmony export */   allowSelection: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.allowSelection),
                /* harmony export */   applyMutationToEventStore: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.applyMutationToEventStore),
                /* harmony export */   applyStyle: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.applyStyle),
                /* harmony export */   applyStyleProp: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.applyStyleProp),
                /* harmony export */   asCleanDays: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asCleanDays),
                /* harmony export */   asRoughMinutes: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMinutes),
                /* harmony export */   asRoughMs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMs),
                /* harmony export */   asRoughSeconds: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughSeconds),
                /* harmony export */   binarySearch: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.binarySearch),
                /* harmony export */   buildClassNameNormalizer: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildClassNameNormalizer),
                /* harmony export */   buildEntryKey: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEntryKey),
                /* harmony export */   buildEventApis: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEventApis),
                /* harmony export */   buildEventRangeKey: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEventRangeKey),
                /* harmony export */   buildHashFromArray: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildHashFromArray),
                /* harmony export */   buildIsoString: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildIsoString),
                /* harmony export */   buildNavLinkAttrs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildNavLinkAttrs),
                /* harmony export */   buildSegCompareObj: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildSegCompareObj),
                /* harmony export */   buildSegTimeText: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildSegTimeText),
                /* harmony export */   collectFromHash: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.collectFromHash),
                /* harmony export */   combineEventUis: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.combineEventUis),
                /* harmony export */   compareByFieldSpec: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.compareByFieldSpec),
                /* harmony export */   compareByFieldSpecs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.compareByFieldSpecs),
                /* harmony export */   compareNumbers: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.compareNumbers),
                /* harmony export */   compareObjs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.compareObjs),
                /* harmony export */   computeEarliestSegStart: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeEarliestSegStart),
                /* harmony export */   computeEdges: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeEdges),
                /* harmony export */   computeFallbackHeaderFormat: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeFallbackHeaderFormat),
                /* harmony export */   computeHeightAndMargins: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeHeightAndMargins),
                /* harmony export */   computeInnerRect: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeInnerRect),
                /* harmony export */   computeRect: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeRect),
                /* harmony export */   computeSegDraggable: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeSegDraggable),
                /* harmony export */   computeSegEndResizable: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeSegEndResizable),
                /* harmony export */   computeSegStartResizable: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeSegStartResizable),
                /* harmony export */   computeShrinkWidth: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeShrinkWidth),
                /* harmony export */   computeSmallestCellWidth: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeSmallestCellWidth),
                /* harmony export */   computeVisibleDayRange: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeVisibleDayRange),
                /* harmony export */   config: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.config),
                /* harmony export */   constrainPoint: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.constrainPoint),
                /* harmony export */   createAriaClickAttrs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createAriaClickAttrs),
                /* harmony export */   createContext: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createContext),
                /* harmony export */   createDuration: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createDuration),
                /* harmony export */   createElement: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement),
                /* harmony export */   createEmptyEventStore: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createEmptyEventStore),
                /* harmony export */   createEventInstance: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createEventInstance),
                /* harmony export */   createEventUi: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createEventUi),
                /* harmony export */   createFormatter: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter),
                /* harmony export */   createPlugin: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createPlugin),
                /* harmony export */   createPortal: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createPortal),
                /* harmony export */   createRef: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef),
                /* harmony export */   diffDates: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffDates),
                /* harmony export */   diffDayAndTime: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffDayAndTime),
                /* harmony export */   diffDays: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffDays),
                /* harmony export */   diffPoints: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffPoints),
                /* harmony export */   diffWeeks: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffWeeks),
                /* harmony export */   diffWholeDays: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffWholeDays),
                /* harmony export */   diffWholeWeeks: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffWholeWeeks),
                /* harmony export */   disableCursor: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.disableCursor),
                /* harmony export */   elementClosest: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.elementClosest),
                /* harmony export */   elementMatches: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.elementMatches),
                /* harmony export */   enableCursor: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.enableCursor),
                /* harmony export */   eventTupleToStore: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.eventTupleToStore),
                /* harmony export */   filterEventStoreDefs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.filterEventStoreDefs),
                /* harmony export */   filterHash: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.filterHash),
                /* harmony export */   findDirectChildren: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.findDirectChildren),
                /* harmony export */   findElements: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.findElements),
                /* harmony export */   flexibleCompare: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.flexibleCompare),
                /* harmony export */   flushSync: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.flushSync),
                /* harmony export */   formatDate: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.formatDate),
                /* harmony export */   formatDayString: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.formatDayString),
                /* harmony export */   formatIsoTimeString: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.formatIsoTimeString),
                /* harmony export */   formatRange: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.formatRange),
                /* harmony export */   getAllowYScrolling: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getAllowYScrolling),
                /* harmony export */   getCanVGrowWithinCell: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getCanVGrowWithinCell),
                /* harmony export */   getClippingParents: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getClippingParents),
                /* harmony export */   getDateMeta: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getDateMeta),
                /* harmony export */   getDayClassNames: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getDayClassNames),
                /* harmony export */   getDefaultEventEnd: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getDefaultEventEnd),
                /* harmony export */   getElRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getElRoot),
                /* harmony export */   getElSeg: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getElSeg),
                /* harmony export */   getEntrySpanEnd: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getEntrySpanEnd),
                /* harmony export */   getEventClassNames: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getEventClassNames),
                /* harmony export */   getEventTargetViaRoot: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getEventTargetViaRoot),
                /* harmony export */   getIsRtlScrollbarOnLeft: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getIsRtlScrollbarOnLeft),
                /* harmony export */   getRectCenter: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getRectCenter),
                /* harmony export */   getRelevantEvents: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getRelevantEvents),
                /* harmony export */   getScrollGridClassNames: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getScrollGridClassNames),
                /* harmony export */   getScrollbarWidths: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getScrollbarWidths),
                /* harmony export */   getSectionClassNames: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSectionClassNames),
                /* harmony export */   getSectionHasLiquidHeight: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSectionHasLiquidHeight),
                /* harmony export */   getSegAnchorAttrs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegAnchorAttrs),
                /* harmony export */   getSegMeta: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta),
                /* harmony export */   getSlotClassNames: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSlotClassNames),
                /* harmony export */   getStickyFooterScrollbar: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyFooterScrollbar),
                /* harmony export */   getStickyHeaderDates: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyHeaderDates),
                /* harmony export */   getUnequalProps: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getUnequalProps),
                /* harmony export */   getUniqueDomId: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getUniqueDomId),
                /* harmony export */   globalLocales: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.globalLocales),
                /* harmony export */   globalPlugins: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.globalPlugins),
                /* harmony export */   greatestDurationDenominator: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.greatestDurationDenominator),
                /* harmony export */   groupIntersectingEntries: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.groupIntersectingEntries),
                /* harmony export */   guid: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.guid),
                /* harmony export */   hasBgRendering: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.hasBgRendering),
                /* harmony export */   hasShrinkWidth: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.hasShrinkWidth),
                /* harmony export */   identity: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.identity),
                /* harmony export */   interactionSettingsStore: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.interactionSettingsStore),
                /* harmony export */   interactionSettingsToStore: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.interactionSettingsToStore),
                /* harmony export */   intersectRanges: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.intersectRanges),
                /* harmony export */   intersectRects: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.intersectRects),
                /* harmony export */   intersectSpans: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.intersectSpans),
                /* harmony export */   isArraysEqual: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isArraysEqual),
                /* harmony export */   isColPropsEqual: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isColPropsEqual),
                /* harmony export */   isDateSelectionValid: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isDateSelectionValid),
                /* harmony export */   isDateSpansEqual: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isDateSpansEqual),
                /* harmony export */   isInt: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isInt),
                /* harmony export */   isInteractionValid: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isInteractionValid),
                /* harmony export */   isMultiDayRange: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isMultiDayRange),
                /* harmony export */   isPropsEqual: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isPropsEqual),
                /* harmony export */   isPropsValid: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isPropsValid),
                /* harmony export */   isValidDate: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isValidDate),
                /* harmony export */   joinSpans: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.joinSpans),
                /* harmony export */   listenBySelector: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.listenBySelector),
                /* harmony export */   mapHash: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.mapHash),
                /* harmony export */   memoize: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize),
                /* harmony export */   memoizeArraylike: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoizeArraylike),
                /* harmony export */   memoizeHashlike: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoizeHashlike),
                /* harmony export */   memoizeObjArg: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoizeObjArg),
                /* harmony export */   mergeEventStores: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.mergeEventStores),
                /* harmony export */   multiplyDuration: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.multiplyDuration),
                /* harmony export */   padStart: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.padStart),
                /* harmony export */   parseBusinessHours: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.parseBusinessHours),
                /* harmony export */   parseClassNames: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.parseClassNames),
                /* harmony export */   parseDragMeta: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.parseDragMeta),
                /* harmony export */   parseEventDef: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.parseEventDef),
                /* harmony export */   parseFieldSpecs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.parseFieldSpecs),
                /* harmony export */   parseMarker: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.parseMarker),
                /* harmony export */   pointInsideRect: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.pointInsideRect),
                /* harmony export */   preventContextMenu: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.preventContextMenu),
                /* harmony export */   preventDefault: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.preventDefault),
                /* harmony export */   preventSelection: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.preventSelection),
                /* harmony export */   rangeContainsMarker: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.rangeContainsMarker),
                /* harmony export */   rangeContainsRange: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.rangeContainsRange),
                /* harmony export */   rangesEqual: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.rangesEqual),
                /* harmony export */   rangesIntersect: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.rangesIntersect),
                /* harmony export */   refineEventDef: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.refineEventDef),
                /* harmony export */   refineProps: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.refineProps),
                /* harmony export */   removeElement: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.removeElement),
                /* harmony export */   removeExact: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.removeExact),
                /* harmony export */   render: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.render),
                /* harmony export */   renderChunkContent: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderChunkContent),
                /* harmony export */   renderFill: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderFill),
                /* harmony export */   renderMicroColGroup: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderMicroColGroup),
                /* harmony export */   renderScrollShim: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderScrollShim),
                /* harmony export */   requestJson: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.requestJson),
                /* harmony export */   sanitizeShrinkWidth: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sanitizeShrinkWidth),
                /* harmony export */   setElSeg: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.setElSeg),
                /* harmony export */   setRef: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.setRef),
                /* harmony export */   sliceEventStore: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sliceEventStore),
                /* harmony export */   sliceEvents: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sliceEvents),
                /* harmony export */   sortEventSegs: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sortEventSegs),
                /* harmony export */   startOfDay: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.startOfDay),
                /* harmony export */   translateRect: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.translateRect),
                /* harmony export */   triggerDateSelect: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.triggerDateSelect),
                /* harmony export */   unmountComponentAtNode: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.unmountComponentAtNode),
                /* harmony export */   unpromisify: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.unpromisify),
                /* harmony export */   version: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.version),
                /* harmony export */   whenTransitionDone: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.whenTransitionDone),
                /* harmony export */   wholeDivideDurations: () => (/* reexport safe */ _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.wholeDivideDurations)
                /* harmony export */ });
            /* harmony import */ var _vdom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vdom.js */ "./node_modules/@fullcalendar/core/vdom.js");
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
            /* harmony import */ var _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/common */ "./node_modules/@fullcalendar/common/main.js");
            /*!
FullCalendar v5.11.5
Docs & License: https://fullcalendar.io/
(c) 2022 Adam Shaw
*/





            var Calendar = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(Calendar, _super);
                function Calendar(el, optionOverrides) {
                    if (optionOverrides === void 0) { optionOverrides = {}; }
                    var _this = _super.call(this) || this;
                    _this.isRendering = false;
                    _this.isRendered = false;
                    _this.currentClassNames = [];
                    _this.customContentRenderId = 0; // will affect custom generated classNames?
                    _this.handleAction = function (action) {
                        // actions we know we want to render immediately
                        switch (action.type) {
                            case 'SET_EVENT_DRAG':
                            case 'SET_EVENT_RESIZE':
                                _this.renderRunner.tryDrain();
                        }
                    };
                    _this.handleData = function (data) {
                        _this.currentData = data;
                        _this.renderRunner.request(data.calendarOptions.rerenderDelay);
                    };
                    _this.handleRenderRequest = function () {
                        if (_this.isRendering) {
                            _this.isRendered = true;
                            var currentData_1 = _this.currentData;
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.flushSync)(function () {
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.render)((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarRoot, { options: currentData_1.calendarOptions, theme: currentData_1.theme, emitter: currentData_1.emitter }, function (classNames, height, isHeightAuto, forPrint) {
                                    _this.setClassNames(classNames);
                                    _this.setHeight(height);
                                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CustomContentRenderContext.Provider, { value: _this.customContentRenderId },
                                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarContent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ isHeightAuto: isHeightAuto, forPrint: forPrint }, currentData_1))));
                                }), _this.el);
                            });
                        }
                        else if (_this.isRendered) {
                            _this.isRendered = false;
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.unmountComponentAtNode)(_this.el);
                            _this.setClassNames([]);
                            _this.setHeight('');
                        }
                    };
                    _this.el = el;
                    _this.renderRunner = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DelayedRunner(_this.handleRenderRequest);
                    new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarDataManager({
                        optionOverrides: optionOverrides,
                        calendarApi: _this,
                        onAction: _this.handleAction,
                        onData: _this.handleData,
                    });
                    return _this;
                }
                Object.defineProperty(Calendar.prototype, "view", {
                    get: function () { return this.currentData.viewApi; } // for public API
                    ,
                    enumerable: false,
                    configurable: true
                });
                Calendar.prototype.render = function () {
                    var wasRendering = this.isRendering;
                    if (!wasRendering) {
                        this.isRendering = true;
                    }
                    else {
                        this.customContentRenderId += 1;
                    }
                    this.renderRunner.request();
                    if (wasRendering) {
                        this.updateSize();
                    }
                };
                Calendar.prototype.destroy = function () {
                    if (this.isRendering) {
                        this.isRendering = false;
                        this.renderRunner.request();
                    }
                };
                Calendar.prototype.updateSize = function () {
                    var _this = this;
                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.flushSync)(function () {
                        _super.prototype.updateSize.call(_this);
                    });
                };
                Calendar.prototype.batchRendering = function (func) {
                    this.renderRunner.pause('batchRendering');
                    func();
                    this.renderRunner.resume('batchRendering');
                };
                Calendar.prototype.pauseRendering = function () {
                    this.renderRunner.pause('pauseRendering');
                };
                Calendar.prototype.resumeRendering = function () {
                    this.renderRunner.resume('pauseRendering', true);
                };
                Calendar.prototype.resetOptions = function (optionOverrides, append) {
                    this.currentDataManager.resetOptions(optionOverrides, append);
                };
                Calendar.prototype.setClassNames = function (classNames) {
                    if (!(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isArraysEqual)(classNames, this.currentClassNames)) {
                        var classList = this.el.classList;
                        for (var _i = 0, _a = this.currentClassNames; _i < _a.length; _i++) {
                            var className = _a[_i];
                            classList.remove(className);
                        }
                        for (var _b = 0, classNames_1 = classNames; _b < classNames_1.length; _b++) {
                            var className = classNames_1[_b];
                            classList.add(className);
                        }
                        this.currentClassNames = classNames;
                    }
                };
                Calendar.prototype.setHeight = function (height) {
                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.applyStyleProp)(this.el, 'height', height);
                };
                return Calendar;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.CalendarApi));


//# sourceMappingURL=main.js.map


            /***/ }),

        /***/ "./node_modules/@fullcalendar/core/vdom.js":
        /*!*************************************************!*\
  !*** ./node_modules/@fullcalendar/core/vdom.js ***!
  \*************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
            /* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ "./node_modules/preact/dist/preact.module.js");
            /* harmony import */ var preact_compat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/compat */ "./node_modules/preact/compat/dist/compat.module.js");




            var globalObj = typeof globalThis !== 'undefined' ? globalThis : window; // // TODO: streamline when killing IE11 support
            if (globalObj.FullCalendarVDom) {
                console.warn('FullCalendar VDOM already loaded');
            }
            else {
                globalObj.FullCalendarVDom = {
                    Component: preact__WEBPACK_IMPORTED_MODULE_0__.Component,
                    createElement: preact__WEBPACK_IMPORTED_MODULE_0__.createElement,
                    render: preact__WEBPACK_IMPORTED_MODULE_0__.render,
                    createRef: preact__WEBPACK_IMPORTED_MODULE_0__.createRef,
                    Fragment: preact__WEBPACK_IMPORTED_MODULE_0__.Fragment,
                    createContext: createContext,
                    createPortal: preact_compat__WEBPACK_IMPORTED_MODULE_1__.createPortal,
                    flushSync: flushSync,
                    unmountComponentAtNode: unmountComponentAtNode,
                };
            }
// HACKS...
// TODO: lock version
// TODO: link gh issues
            function flushSync(runBeforeFlush) {
                runBeforeFlush();
                var oldDebounceRendering = preact__WEBPACK_IMPORTED_MODULE_0__.options.debounceRendering; // orig
                var callbackQ = [];
                function execCallbackSync(callback) {
                    callbackQ.push(callback);
                }
                preact__WEBPACK_IMPORTED_MODULE_0__.options.debounceRendering = execCallbackSync;
                preact__WEBPACK_IMPORTED_MODULE_0__.render(preact__WEBPACK_IMPORTED_MODULE_0__.createElement(FakeComponent, {}), document.createElement('div'));
                while (callbackQ.length) {
                    callbackQ.shift()();
                }
                preact__WEBPACK_IMPORTED_MODULE_0__.options.debounceRendering = oldDebounceRendering;
            }
            var FakeComponent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(FakeComponent, _super);
                function FakeComponent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                FakeComponent.prototype.render = function () { return preact__WEBPACK_IMPORTED_MODULE_0__.createElement('div', {}); };
                FakeComponent.prototype.componentDidMount = function () { this.setState({}); };
                return FakeComponent;
            }(preact__WEBPACK_IMPORTED_MODULE_0__.Component));
            function createContext(defaultValue) {
                var ContextType = preact__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultValue);
                var origProvider = ContextType.Provider;
                ContextType.Provider = function () {
                    var _this = this;
                    var isNew = !this.getChildContext;
                    var children = origProvider.apply(this, arguments); // eslint-disable-line prefer-rest-params
                    if (isNew) {
                        var subs_1 = [];
                        this.shouldComponentUpdate = function (_props) {
                            if (_this.props.value !== _props.value) {
                                subs_1.forEach(function (c) {
                                    c.context = _props.value;
                                    c.forceUpdate();
                                });
                            }
                        };
                        this.sub = function (c) {
                            subs_1.push(c);
                            var old = c.componentWillUnmount;
                            c.componentWillUnmount = function () {
                                subs_1.splice(subs_1.indexOf(c), 1);
                                old && old.call(c);
                            };
                        };
                    }
                    return children;
                };
                return ContextType;
            }
            function unmountComponentAtNode(node) {
                preact__WEBPACK_IMPORTED_MODULE_0__.render(null, node);
            }


            /***/ }),

        /***/ "./node_modules/@fullcalendar/daygrid/main.js":
        /*!****************************************************!*\
  !*** ./node_modules/@fullcalendar/daygrid/main.js ***!
  \****************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   DayGridView: () => (/* binding */ DayTableView),
                /* harmony export */   DayTable: () => (/* binding */ DayTable),
                /* harmony export */   DayTableSlicer: () => (/* binding */ DayTableSlicer),
                /* harmony export */   Table: () => (/* binding */ Table),
                /* harmony export */   TableView: () => (/* binding */ TableView),
                /* harmony export */   buildDayTableModel: () => (/* binding */ buildDayTableModel),
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.css */ "./node_modules/@fullcalendar/daygrid/main.css");
            /* harmony import */ var _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/common */ "./node_modules/@fullcalendar/common/main.js");
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
            /*!
FullCalendar v5.11.5
Docs & License: https://fullcalendar.io/
(c) 2022 Adam Shaw
*/





            /* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.
----------------------------------------------------------------------------------------------------------------------*/
// It is a manager for a Table subcomponent, which does most of the heavy lifting.
// It is responsible for managing width/height.
            var TableView = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableView, _super);
                function TableView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.headerElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    return _this;
                }
                TableView.prototype.renderSimpleLayout = function (headerRowContent, bodyContent) {
                    var _a = this, props = _a.props, context = _a.context;
                    var sections = [];
                    var stickyHeaderDates = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyHeaderDates)(context.options);
                    if (headerRowContent) {
                        sections.push({
                            type: 'header',
                            key: 'header',
                            isSticky: stickyHeaderDates,
                            chunk: {
                                elRef: this.headerElRef,
                                tableClassName: 'fc-col-header',
                                rowContent: headerRowContent,
                            },
                        });
                    }
                    sections.push({
                        type: 'body',
                        key: 'body',
                        liquid: true,
                        chunk: { content: bodyContent },
                    });
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewRoot, { viewSpec: context.viewSpec }, function (rootElRef, classNames) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: rootElRef, className: ['fc-daygrid'].concat(classNames).join(' ') },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections }))); }));
                };
                TableView.prototype.renderHScrollLayout = function (headerRowContent, bodyContent, colCnt, dayMinWidth) {
                    var ScrollGrid = this.context.pluginHooks.scrollGridImpl;
                    if (!ScrollGrid) {
                        throw new Error('No ScrollGrid implementation');
                    }
                    var _a = this, props = _a.props, context = _a.context;
                    var stickyHeaderDates = !props.forPrint && (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyHeaderDates)(context.options);
                    var stickyFooterScrollbar = !props.forPrint && (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyFooterScrollbar)(context.options);
                    var sections = [];
                    if (headerRowContent) {
                        sections.push({
                            type: 'header',
                            key: 'header',
                            isSticky: stickyHeaderDates,
                            chunks: [{
                                key: 'main',
                                elRef: this.headerElRef,
                                tableClassName: 'fc-col-header',
                                rowContent: headerRowContent,
                            }],
                        });
                    }
                    sections.push({
                        type: 'body',
                        key: 'body',
                        liquid: true,
                        chunks: [{
                            key: 'main',
                            content: bodyContent,
                        }],
                    });
                    if (stickyFooterScrollbar) {
                        sections.push({
                            type: 'footer',
                            key: 'footer',
                            isSticky: true,
                            chunks: [{
                                key: 'main',
                                content: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderScrollShim,
                            }],
                        });
                    }
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewRoot, { viewSpec: context.viewSpec }, function (rootElRef, classNames) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: rootElRef, className: ['fc-daygrid'].concat(classNames).join(' ') },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections }))); }));
                };
                return TableView;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));

            function splitSegsByRow(segs, rowCnt) {
                var byRow = [];
                for (var i = 0; i < rowCnt; i += 1) {
                    byRow[i] = [];
                }
                for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
                    var seg = segs_1[_i];
                    byRow[seg.row].push(seg);
                }
                return byRow;
            }
            function splitSegsByFirstCol(segs, colCnt) {
                var byCol = [];
                for (var i = 0; i < colCnt; i += 1) {
                    byCol[i] = [];
                }
                for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
                    var seg = segs_2[_i];
                    byCol[seg.firstCol].push(seg);
                }
                return byCol;
            }
            function splitInteractionByRow(ui, rowCnt) {
                var byRow = [];
                if (!ui) {
                    for (var i = 0; i < rowCnt; i += 1) {
                        byRow[i] = null;
                    }
                }
                else {
                    for (var i = 0; i < rowCnt; i += 1) {
                        byRow[i] = {
                            affectedInstances: ui.affectedInstances,
                            isEvent: ui.isEvent,
                            segs: [],
                        };
                    }
                    for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {
                        var seg = _a[_i];
                        byRow[seg.row].segs.push(seg);
                    }
                }
                return byRow;
            }

            var TableCellTop = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableCellTop, _super);
                function TableCellTop() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TableCellTop.prototype.render = function () {
                    var props = this.props;
                    var navLinkAttrs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildNavLinkAttrs)(this.context, props.date);
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayCellContent, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, extraHookProps: props.extraHookProps, defaultContent: renderTopInner }, function (innerElRef, innerContent) { return ((innerContent || props.forceDayTop) && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-daygrid-day-top", ref: innerElRef },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ id: props.dayNumberId, className: "fc-daygrid-day-number" }, navLinkAttrs), innerContent || (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, "\u00A0"))))); }));
                };
                return TableCellTop;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function renderTopInner(props) {
                return props.dayNumberText;
            }

            var DEFAULT_TABLE_EVENT_TIME_FORMAT = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)({
                hour: 'numeric',
                minute: '2-digit',
                omitZeroMinute: true,
                meridiem: 'narrow',
            });
            function hasListItemDisplay(seg) {
                var display = seg.eventRange.ui.display;
                return display === 'list-item' || (display === 'auto' &&
                    !seg.eventRange.def.allDay &&
                    seg.firstCol === seg.lastCol && // can't be multi-day
                    seg.isStart && // "
                    seg.isEnd // "
                );
            }

            var TableBlockEvent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableBlockEvent, _super);
                function TableBlockEvent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TableBlockEvent.prototype.render = function () {
                    var props = this.props;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.StandardEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, props, { extraClassNames: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));
                };
                return TableBlockEvent;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));

            var TableListItemEvent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableListItemEvent, _super);
                function TableListItemEvent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TableListItemEvent.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;
                    var timeText = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildSegTimeText)(props.seg, timeFormat, context, true, props.defaultDisplayEventEnd);
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.EventRoot, { seg: props.seg, timeText: timeText, defaultContent: renderInnerContent, isDragging: props.isDragging, isResizing: false, isDateSelecting: false, isSelected: props.isSelected, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday }, function (rootElRef, classNames, innerElRef, innerContent) { return ( // we don't use styles!
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ className: ['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' '), ref: rootElRef }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegAnchorAttrs)(props.seg, context)), innerContent)); }));
                };
                return TableListItemEvent;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function renderInnerContent(innerProps) {
                return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,
                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-daygrid-event-dot", style: { borderColor: innerProps.borderColor || innerProps.backgroundColor } }),
                    innerProps.timeText && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-time" }, innerProps.timeText)),
                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-event-title" }, innerProps.event.title || (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, "\u00A0"))));
            }

            var TableCellMoreLink = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableCellMoreLink, _super);
                function TableCellMoreLink() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.compileSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(compileSegs);
                    return _this;
                }
                TableCellMoreLink.prototype.render = function () {
                    var props = this.props;
                    var _a = this.compileSegs(props.singlePlacements), allSegs = _a.allSegs, invisibleSegs = _a.invisibleSegs;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.MoreLinkRoot, { dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: function () {
                            var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||
                                (props.eventResize ? props.eventResize.affectedInstances : null) ||
                                {};
                            return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, allSegs.map(function (seg) {
                                var instanceId = seg.eventRange.instance.instanceId;
                                return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-daygrid-event-harness", key: instanceId, style: {
                                        visibility: isForcedInvisible[instanceId] ? 'hidden' : '',
                                    } }, hasListItemDisplay(seg) ? ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableListItemEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, props.todayRange)))) : ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableBlockEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, props.todayRange))))));
                            })));
                        } }, function (rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: rootElRef, className: ['fc-daygrid-more-link'].concat(classNames).join(' '), title: title, "aria-expanded": isExpanded, "aria-controls": popoverId }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createAriaClickAttrs)(handleClick)), innerContent)); }));
                };
                return TableCellMoreLink;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function compileSegs(singlePlacements) {
                var allSegs = [];
                var invisibleSegs = [];
                for (var _i = 0, singlePlacements_1 = singlePlacements; _i < singlePlacements_1.length; _i++) {
                    var placement = singlePlacements_1[_i];
                    allSegs.push(placement.seg);
                    if (!placement.isVisible) {
                        invisibleSegs.push(placement.seg);
                    }
                }
                return { allSegs: allSegs, invisibleSegs: invisibleSegs };
            }

            var DEFAULT_WEEK_NUM_FORMAT = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)({ week: 'narrow' });
            var TableCell = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableCell, _super);
                function TableCell() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.rootElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.state = {
                        dayNumberId: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getUniqueDomId)(),
                    };
                    _this.handleRootEl = function (el) {
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.setRef)(_this.rootElRef, el);
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.setRef)(_this.props.elRef, el);
                    };
                    return _this;
                }
                TableCell.prototype.render = function () {
                    var _a = this, context = _a.context, props = _a.props, state = _a.state, rootElRef = _a.rootElRef;
                    var date = props.date, dateProfile = props.dateProfile;
                    var navLinkAttrs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildNavLinkAttrs)(context, date, 'week');
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayCellRoot, { date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, extraHookProps: props.extraHookProps, elRef: this.handleRootEl }, function (dayElRef, dayClassNames, rootDataAttrs, isDisabled) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: dayElRef, role: "gridcell", className: ['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ') }, rootDataAttrs, props.extraDataAttrs, (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})),
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-daygrid-day-frame fc-scrollgrid-sync-inner", ref: props.innerElRef /* different from hook system! RENAME */ },
                            props.showWeekNumber && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.WeekNumberRoot, { date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, function (weekElRef, weekClassNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: weekElRef, className: ['fc-daygrid-week-number'].concat(weekClassNames).join(' ') }, navLinkAttrs), innerContent)); })),
                            !isDisabled && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableCellTop, { date: date, dateProfile: dateProfile, showDayNumber: props.showDayNumber, dayNumberId: state.dayNumberId, forceDayTop: props.forceDayTop, todayRange: props.todayRange, extraHookProps: props.extraHookProps })),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-daygrid-day-events", ref: props.fgContentElRef },
                                props.fgContent,
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-daygrid-day-bottom", style: { marginTop: props.moreMarginTop } },
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-daygrid-day-bg" }, props.bgContent)))); }));
                };
                return TableCell;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));

            function computeFgSegPlacement(segs, // assumed already sorted
                                           dayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {
                var hierarchy = new DayGridSegHierarchy();
                hierarchy.allowReslicing = true;
                hierarchy.strictOrder = strictOrder;
                if (dayMaxEvents === true || dayMaxEventRows === true) {
                    hierarchy.maxCoord = maxContentHeight;
                    hierarchy.hiddenConsumes = true;
                }
                else if (typeof dayMaxEvents === 'number') {
                    hierarchy.maxStackCnt = dayMaxEvents;
                }
                else if (typeof dayMaxEventRows === 'number') {
                    hierarchy.maxStackCnt = dayMaxEventRows;
                    hierarchy.hiddenConsumes = true;
                }
                // create segInputs only for segs with known heights
                var segInputs = [];
                var unknownHeightSegs = [];
                for (var i = 0; i < segs.length; i += 1) {
                    var seg = segs[i];
                    var instanceId = seg.eventRange.instance.instanceId;
                    var eventHeight = eventInstanceHeights[instanceId];
                    if (eventHeight != null) {
                        segInputs.push({
                            index: i,
                            thickness: eventHeight,
                            span: {
                                start: seg.firstCol,
                                end: seg.lastCol + 1,
                            },
                        });
                    }
                    else {
                        unknownHeightSegs.push(seg);
                    }
                }
                var hiddenEntries = hierarchy.addSegs(segInputs);
                var segRects = hierarchy.toRects();
                var _a = placeRects(segRects, segs, cells), singleColPlacements = _a.singleColPlacements, multiColPlacements = _a.multiColPlacements, leftoverMargins = _a.leftoverMargins;
                var moreCnts = [];
                var moreMarginTops = [];
                // add segs with unknown heights
                for (var _i = 0, unknownHeightSegs_1 = unknownHeightSegs; _i < unknownHeightSegs_1.length; _i++) {
                    var seg = unknownHeightSegs_1[_i];
                    multiColPlacements[seg.firstCol].push({
                        seg: seg,
                        isVisible: false,
                        isAbsolute: true,
                        absoluteTop: 0,
                        marginTop: 0,
                    });
                    for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {
                        singleColPlacements[col].push({
                            seg: resliceSeg(seg, col, col + 1, cells),
                            isVisible: false,
                            isAbsolute: false,
                            absoluteTop: 0,
                            marginTop: 0,
                        });
                    }
                }
                // add the hidden entries
                for (var col = 0; col < cells.length; col += 1) {
                    moreCnts.push(0);
                }
                for (var _b = 0, hiddenEntries_1 = hiddenEntries; _b < hiddenEntries_1.length; _b++) {
                    var hiddenEntry = hiddenEntries_1[_b];
                    var seg = segs[hiddenEntry.index];
                    var hiddenSpan = hiddenEntry.span;
                    multiColPlacements[hiddenSpan.start].push({
                        seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),
                        isVisible: false,
                        isAbsolute: true,
                        absoluteTop: 0,
                        marginTop: 0,
                    });
                    for (var col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {
                        moreCnts[col] += 1;
                        singleColPlacements[col].push({
                            seg: resliceSeg(seg, col, col + 1, cells),
                            isVisible: false,
                            isAbsolute: false,
                            absoluteTop: 0,
                            marginTop: 0,
                        });
                    }
                }
                // deal with leftover margins
                for (var col = 0; col < cells.length; col += 1) {
                    moreMarginTops.push(leftoverMargins[col]);
                }
                return { singleColPlacements: singleColPlacements, multiColPlacements: multiColPlacements, moreCnts: moreCnts, moreMarginTops: moreMarginTops };
            }
// rects ordered by top coord, then left
            function placeRects(allRects, segs, cells) {
                var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);
                var singleColPlacements = [];
                var multiColPlacements = [];
                var leftoverMargins = [];
                for (var col = 0; col < cells.length; col += 1) {
                    var rects = rectsByEachCol[col];
                    // compute all static segs in singlePlacements
                    var singlePlacements = [];
                    var currentHeight = 0;
                    var currentMarginTop = 0;
                    for (var _i = 0, rects_1 = rects; _i < rects_1.length; _i++) {
                        var rect = rects_1[_i];
                        var seg = segs[rect.index];
                        singlePlacements.push({
                            seg: resliceSeg(seg, col, col + 1, cells),
                            isVisible: true,
                            isAbsolute: false,
                            absoluteTop: rect.levelCoord,
                            marginTop: rect.levelCoord - currentHeight,
                        });
                        currentHeight = rect.levelCoord + rect.thickness;
                    }
                    // compute mixed static/absolute segs in multiPlacements
                    var multiPlacements = [];
                    currentHeight = 0;
                    currentMarginTop = 0;
                    for (var _a = 0, rects_2 = rects; _a < rects_2.length; _a++) {
                        var rect = rects_2[_a];
                        var seg = segs[rect.index];
                        var isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?
                        var isFirstCol = rect.span.start === col;
                        currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg
                        currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg
                        if (isAbsolute) {
                            currentMarginTop += rect.thickness;
                            if (isFirstCol) {
                                multiPlacements.push({
                                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),
                                    isVisible: true,
                                    isAbsolute: true,
                                    absoluteTop: rect.levelCoord,
                                    marginTop: 0,
                                });
                            }
                        }
                        else if (isFirstCol) {
                            multiPlacements.push({
                                seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),
                                isVisible: true,
                                isAbsolute: false,
                                absoluteTop: rect.levelCoord,
                                marginTop: currentMarginTop, // claim the margin
                            });
                            currentMarginTop = 0;
                        }
                    }
                    singleColPlacements.push(singlePlacements);
                    multiColPlacements.push(multiPlacements);
                    leftoverMargins.push(currentMarginTop);
                }
                return { singleColPlacements: singleColPlacements, multiColPlacements: multiColPlacements, leftoverMargins: leftoverMargins };
            }
            function groupRectsByEachCol(rects, colCnt) {
                var rectsByEachCol = [];
                for (var col = 0; col < colCnt; col += 1) {
                    rectsByEachCol.push([]);
                }
                for (var _i = 0, rects_3 = rects; _i < rects_3.length; _i++) {
                    var rect = rects_3[_i];
                    for (var col = rect.span.start; col < rect.span.end; col += 1) {
                        rectsByEachCol[col].push(rect);
                    }
                }
                return rectsByEachCol;
            }
            function resliceSeg(seg, spanStart, spanEnd, cells) {
                if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {
                    return seg;
                }
                var eventRange = seg.eventRange;
                var origRange = eventRange.range;
                var slicedRange = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.intersectRanges)(origRange, {
                    start: cells[spanStart].date,
                    end: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDays)(cells[spanEnd - 1].date, 1),
                });
                return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {
                        def: eventRange.def,
                        ui: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, eventRange.ui), { durationEditable: false }),
                        instance: eventRange.instance,
                        range: slicedRange,
                    }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });
            }
            var DayGridSegHierarchy = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DayGridSegHierarchy, _super);
                function DayGridSegHierarchy() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    // config
                    _this.hiddenConsumes = false;
                    // allows us to keep hidden entries in the hierarchy so they take up space
                    _this.forceHidden = {};
                    return _this;
                }
                DayGridSegHierarchy.prototype.addSegs = function (segInputs) {
                    var _this = this;
                    var hiddenSegs = _super.prototype.addSegs.call(this, segInputs);
                    var entriesByLevel = this.entriesByLevel;
                    var excludeHidden = function (entry) { return !_this.forceHidden[(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEntryKey)(entry)]; };
                    // remove the forced-hidden segs
                    for (var level = 0; level < entriesByLevel.length; level += 1) {
                        entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);
                    }
                    return hiddenSegs;
                };
                DayGridSegHierarchy.prototype.handleInvalidInsertion = function (insertion, entry, hiddenEntries) {
                    var _a = this, entriesByLevel = _a.entriesByLevel, forceHidden = _a.forceHidden;
                    var touchingEntry = insertion.touchingEntry, touchingLevel = insertion.touchingLevel, touchingLateral = insertion.touchingLateral;
                    if (this.hiddenConsumes && touchingEntry) {
                        var touchingEntryId = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEntryKey)(touchingEntry);
                        // if not already hidden
                        if (!forceHidden[touchingEntryId]) {
                            if (this.allowReslicing) {
                                var placeholderEntry = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, touchingEntry), { span: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.intersectSpans)(touchingEntry.span, entry.span) });
                                var placeholderEntryId = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEntryKey)(placeholderEntry);
                                forceHidden[placeholderEntryId] = true;
                                entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder
                                this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it
                            }
                            else {
                                forceHidden[touchingEntryId] = true;
                                hiddenEntries.push(touchingEntry);
                            }
                        }
                    }
                    return _super.prototype.handleInvalidInsertion.call(this, insertion, entry, hiddenEntries);
                };
                return DayGridSegHierarchy;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.SegHierarchy));

            var TableRow = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableRow, _super);
                function TableRow() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.cellElRefs = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap(); // the <td>
                    _this.frameElRefs = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap(); // the fc-daygrid-day-frame
                    _this.fgElRefs = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap(); // the fc-daygrid-day-events
                    _this.segHarnessRefs = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap(); // indexed by "instanceId:firstCol"
                    _this.rootElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.state = {
                        framePositions: null,
                        maxContentHeight: null,
                        eventInstanceHeights: {},
                    };
                    return _this;
                }
                TableRow.prototype.render = function () {
                    var _this = this;
                    var _a = this, props = _a.props, state = _a.state, context = _a.context;
                    var options = context.options;
                    var colCnt = props.cells.length;
                    var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);
                    var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);
                    var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);
                    var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);
                    var _b = computeFgSegPlacement((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sortEventSegs)(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells), singleColPlacements = _b.singleColPlacements, multiColPlacements = _b.multiColPlacements, moreCnts = _b.moreCnts, moreMarginTops = _b.moreMarginTops;
                    var isForcedInvisible = // TODO: messy way to compute this
                        (props.eventDrag && props.eventDrag.affectedInstances) ||
                        (props.eventResize && props.eventResize.affectedInstances) ||
                        {};
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { ref: this.rootElRef, role: "row" },
                        props.renderIntro && props.renderIntro(),
                        props.cells.map(function (cell, col) {
                            var normalFgNodes = _this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);
                            var mirrorFgNodes = _this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);
                            return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableCell, { key: cell.key, elRef: _this.cellElRefs.createRef(cell.key), innerElRef: _this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraHookProps: cell.extraHookProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: _this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,
                                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, normalFgNodes),
                                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,
                                        _this.renderFillSegs(highlightSegsByCol[col], 'highlight'),
                                        _this.renderFillSegs(businessHoursByCol[col], 'non-business'),
                                        _this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))) }));
                        })));
                };
                TableRow.prototype.componentDidMount = function () {
                    this.updateSizing(true);
                };
                TableRow.prototype.componentDidUpdate = function (prevProps, prevState) {
                    var currentProps = this.props;
                    this.updateSizing(!(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isPropsEqual)(prevProps, currentProps));
                };
                TableRow.prototype.getHighlightSegs = function () {
                    var props = this.props;
                    if (props.eventDrag && props.eventDrag.segs.length) { // messy check
                        return props.eventDrag.segs;
                    }
                    if (props.eventResize && props.eventResize.segs.length) { // messy check
                        return props.eventResize.segs;
                    }
                    return props.dateSelectionSegs;
                };
                TableRow.prototype.getMirrorSegs = function () {
                    var props = this.props;
                    if (props.eventResize && props.eventResize.segs.length) { // messy check
                        return props.eventResize.segs;
                    }
                    return [];
                };
                TableRow.prototype.renderFgSegs = function (col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {
                    var context = this.context;
                    var eventSelection = this.props.eventSelection;
                    var framePositions = this.state.framePositions;
                    var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1
                    var isMirror = isDragging || isResizing || isDateSelecting;
                    var nodes = [];
                    if (framePositions) {
                        for (var _i = 0, segPlacements_1 = segPlacements; _i < segPlacements_1.length; _i++) {
                            var placement = segPlacements_1[_i];
                            var seg = placement.seg;
                            var instanceId = seg.eventRange.instance.instanceId;
                            var key = instanceId + ':' + col;
                            var isVisible = placement.isVisible && !isForcedInvisible[instanceId];
                            var isAbsolute = placement.isAbsolute;
                            var left = '';
                            var right = '';
                            if (isAbsolute) {
                                if (context.isRtl) {
                                    right = 0;
                                    left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];
                                }
                                else {
                                    left = 0;
                                    right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];
                                }
                            }
                            /*
                known bug: events that are force to be list-item but span multiple days still take up space in later columns
                todo: in print view, for multi-day events, don't display title within non-start/end segs
                */
                            nodes.push((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: key, ref: isMirror ? null : this.segHarnessRefs.createRef(key), style: {
                                    visibility: isVisible ? '' : 'hidden',
                                    marginTop: isAbsolute ? '' : placement.marginTop,
                                    top: isAbsolute ? placement.absoluteTop : '',
                                    left: left,
                                    right: right,
                                } }, hasListItemDisplay(seg) ? ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableListItemEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, todayRange)))) : ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableBlockEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, todayRange))))));
                        }
                    }
                    return nodes;
                };
                TableRow.prototype.renderFillSegs = function (segs, fillType) {
                    var isRtl = this.context.isRtl;
                    var todayRange = this.props.todayRange;
                    var framePositions = this.state.framePositions;
                    var nodes = [];
                    if (framePositions) {
                        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
                            var seg = segs_1[_i];
                            var leftRightCss = isRtl ? {
                                right: 0,
                                left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],
                            } : {
                                left: 0,
                                right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],
                            };
                            nodes.push((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { key: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEventRangeKey)(seg.eventRange), className: "fc-daygrid-bg-harness", style: leftRightCss }, fillType === 'bg-event' ?
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BgEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ seg: seg }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, todayRange))) :
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderFill)(fillType)));
                        }
                    }
                    return _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, {}], nodes));
                };
                TableRow.prototype.updateSizing = function (isExternalSizingChange) {
                    var _a = this, props = _a.props, frameElRefs = _a.frameElRefs;
                    if (!props.forPrint &&
                        props.clientWidth !== null // positioning ready?
                    ) {
                        if (isExternalSizingChange) {
                            var frameEls = props.cells.map(function (cell) { return frameElRefs.currentMap[cell.key]; });
                            if (frameEls.length) {
                                var originEl = this.rootElRef.current;
                                this.setState({
                                    framePositions: new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.PositionCache(originEl, frameEls, true, // isHorizontal
                                        false),
                                });
                            }
                        }
                        var oldInstanceHeights = this.state.eventInstanceHeights;
                        var newInstanceHeights = this.queryEventInstanceHeights();
                        var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;
                        this.safeSetState({
                            // HACK to prevent oscillations of events being shown/hidden from max-event-rows
                            // Essentially, once you compute an element's height, never null-out.
                            // TODO: always display all events, as visibility:hidden?
                            eventInstanceHeights: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, oldInstanceHeights), newInstanceHeights),
                            maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,
                        });
                    }
                };
                TableRow.prototype.queryEventInstanceHeights = function () {
                    var segElMap = this.segHarnessRefs.currentMap;
                    var eventInstanceHeights = {};
                    // get the max height amongst instance segs
                    for (var key in segElMap) {
                        var height = Math.round(segElMap[key].getBoundingClientRect().height);
                        var instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key
                        eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);
                    }
                    return eventInstanceHeights;
                };
                TableRow.prototype.computeMaxContentHeight = function () {
                    var firstKey = this.props.cells[0].key;
                    var cellEl = this.cellElRefs.currentMap[firstKey];
                    var fcContainerEl = this.fgElRefs.currentMap[firstKey];
                    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;
                };
                TableRow.prototype.getCellEls = function () {
                    var elMap = this.cellElRefs.currentMap;
                    return this.props.cells.map(function (cell) { return elMap[cell.key]; });
                };
                return TableRow;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));
            TableRow.addStateEquality({
                eventInstanceHeights: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isPropsEqual,
            });
            function buildMirrorPlacements(mirrorSegs, colPlacements) {
                if (!mirrorSegs.length) {
                    return [];
                }
                var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?
                return mirrorSegs.map(function (seg) { return ({
                    seg: seg,
                    isVisible: true,
                    isAbsolute: true,
                    absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],
                    marginTop: 0,
                }); });
            }
            function buildAbsoluteTopHash(colPlacements) {
                var topsByInstanceId = {};
                for (var _i = 0, colPlacements_1 = colPlacements; _i < colPlacements_1.length; _i++) {
                    var placements = colPlacements_1[_i];
                    for (var _a = 0, placements_1 = placements; _a < placements_1.length; _a++) {
                        var placement = placements_1[_a];
                        topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;
                    }
                }
                return topsByInstanceId;
            }

            var Table = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(Table, _super);
                function Table() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.splitBusinessHourSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByRow);
                    _this.splitBgEventSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByRow);
                    _this.splitFgEventSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByRow);
                    _this.splitDateSelectionSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByRow);
                    _this.splitEventDrag = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitInteractionByRow);
                    _this.splitEventResize = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitInteractionByRow);
                    _this.rowRefs = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap();
                    _this.handleRootEl = function (rootEl) {
                        _this.rootEl = rootEl;
                        if (rootEl) {
                            _this.context.registerInteractiveComponent(_this, {
                                el: rootEl,
                                isHitComboAllowed: _this.props.isHitComboAllowed,
                            });
                        }
                        else {
                            _this.context.unregisterInteractiveComponent(_this);
                        }
                    };
                    return _this;
                }
                Table.prototype.render = function () {
                    var _this = this;
                    var props = this.props;
                    var dateProfile = props.dateProfile, dayMaxEventRows = props.dayMaxEventRows, dayMaxEvents = props.dayMaxEvents, expandRows = props.expandRows;
                    var rowCnt = props.cells.length;
                    var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);
                    var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);
                    var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);
                    var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);
                    var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);
                    var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);
                    var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;
                    // if rows can't expand to fill fixed height, can't do balanced-height event limit
                    // TODO: best place to normalize these options?
                    if (limitViaBalanced && !expandRows) {
                        limitViaBalanced = false;
                        dayMaxEventRows = null;
                        dayMaxEvents = null;
                    }
                    var classNames = [
                        'fc-daygrid-body',
                        limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',
                        expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?
                    ];
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: classNames.join(' '), ref: this.handleRootEl, style: {
                                // these props are important to give this wrapper correct dimensions for interactions
                                // TODO: if we set it here, can we avoid giving to inner tables?
                                width: props.clientWidth,
                                minWidth: props.tableMinWidth,
                            } },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowTimer, { unit: "day" }, function (nowDate, todayRange) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("table", { role: "presentation", className: "fc-scrollgrid-sync-table", style: {
                                        width: props.clientWidth,
                                        minWidth: props.tableMinWidth,
                                        height: expandRows ? props.clientHeight : '',
                                    } },
                                props.colGroupNode,
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tbody", { role: "presentation" }, props.cells.map(function (cells, row) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TableRow, { ref: _this.rowRefs.createRef(row), key: cells.length
                                        ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */
                                        : row // in case there are no cells (like when resource view is loading)
                                    , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })); }))))); })));
                };
                // Hit System
                // ----------------------------------------------------------------------------------------------------
                Table.prototype.prepareHits = function () {
                    this.rowPositions = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) { return rowObj.getCellEls()[0]; }), // first cell el in each row. TODO: not optimal
                        false, true);
                    this.colPositions = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row
                        true, // horizontal
                        false);
                };
                Table.prototype.queryHit = function (positionLeft, positionTop) {
                    var _a = this, colPositions = _a.colPositions, rowPositions = _a.rowPositions;
                    var col = colPositions.leftToIndex(positionLeft);
                    var row = rowPositions.topToIndex(positionTop);
                    if (row != null && col != null) {
                        var cell = this.props.cells[row][col];
                        return {
                            dateProfile: this.props.dateProfile,
                            dateSpan: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),
                            dayEl: this.getCellEl(row, col),
                            rect: {
                                left: colPositions.lefts[col],
                                right: colPositions.rights[col],
                                top: rowPositions.tops[row],
                                bottom: rowPositions.bottoms[row],
                            },
                            layer: 0,
                        };
                    }
                    return null;
                };
                Table.prototype.getCellEl = function (row, col) {
                    return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal
                };
                Table.prototype.getCellRange = function (row, col) {
                    var start = this.props.cells[row][col].date;
                    var end = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDays)(start, 1);
                    return { start: start, end: end };
                };
                return Table;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));
            function isSegAllDay(seg) {
                return seg.eventRange.def.allDay;
            }

            var DayTableSlicer = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DayTableSlicer, _super);
                function DayTableSlicer() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.forceDayIfListItem = true;
                    return _this;
                }
                DayTableSlicer.prototype.sliceRange = function (dateRange, dayTableModel) {
                    return dayTableModel.sliceRange(dateRange);
                };
                return DayTableSlicer;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Slicer));

            var DayTable = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DayTable, _super);
                function DayTable() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.slicer = new DayTableSlicer();
                    _this.tableRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    return _this;
                }
                DayTable.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(Table, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));
                };
                return DayTable;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));

            var DayTableView = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(DayTableView, _super);
                function DayTableView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.buildDayTableModel = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(buildDayTableModel);
                    _this.headerRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.tableRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    return _this;
                }
                DayTableView.prototype.render = function () {
                    var _this = this;
                    var _a = this.context, options = _a.options, dateProfileGenerator = _a.dateProfileGenerator;
                    var props = this.props;
                    var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);
                    var headerContent = options.dayHeaders && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));
                    var bodyContent = function (contentArg) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(DayTable, { ref: _this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: _this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint })); };
                    return options.dayMinWidth
                        ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)
                        : this.renderSimpleLayout(headerContent, bodyContent);
                };
                return DayTableView;
            }(TableView));
            function buildDayTableModel(dateProfile, dateProfileGenerator) {
                var daySeries = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);
                return new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));
            }

            var TableDateProfileGenerator = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(TableDateProfileGenerator, _super);
                function TableDateProfileGenerator() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                // Computes the date range that will be rendered.
                TableDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {
                    var dateEnv = this.props.dateEnv;
                    var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);
                    var start = renderRange.start;
                    var end = renderRange.end;
                    var endOfWeek;
                    // year and month views should be aligned with weeks. this is already done for week
                    if (/^(year|month)$/.test(currentRangeUnit)) {
                        start = dateEnv.startOfWeek(start);
                        // make end-of-week if not already
                        endOfWeek = dateEnv.startOfWeek(end);
                        if (endOfWeek.valueOf() !== end.valueOf()) {
                            end = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addWeeks)(endOfWeek, 1);
                        }
                    }
                    // ensure 6 weeks
                    if (this.props.monthMode &&
                        this.props.fixedWeekCount) {
                        var rowCnt = Math.ceil(// could be partial weeks due to hiddenDays
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffWeeks)(start, end));
                        end = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addWeeks)(end, 6 - rowCnt);
                    }
                    return { start: start, end: end };
                };
                return TableDateProfileGenerator;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateProfileGenerator));

            var main = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createPlugin)({
                initialView: 'dayGridMonth',
                views: {
                    dayGrid: {
                        component: DayTableView,
                        dateProfileGeneratorClass: TableDateProfileGenerator,
                    },
                    dayGridDay: {
                        type: 'dayGrid',
                        duration: { days: 1 },
                    },
                    dayGridWeek: {
                        type: 'dayGrid',
                        duration: { weeks: 1 },
                    },
                    dayGridMonth: {
                        type: 'dayGrid',
                        duration: { months: 1 },
                        monthMode: true,
                        fixedWeekCount: true,
                    },
                },
            });

            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (main);

//# sourceMappingURL=main.js.map


            /***/ }),

        /***/ "./node_modules/@fullcalendar/interaction/main.js":
        /*!********************************************************!*\
  !*** ./node_modules/@fullcalendar/interaction/main.js ***!
  \********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   Draggable: () => (/* binding */ ExternalDraggable),
                /* harmony export */   FeaturefulElementDragging: () => (/* binding */ FeaturefulElementDragging),
                /* harmony export */   PointerDragging: () => (/* binding */ PointerDragging),
                /* harmony export */   ThirdPartyDraggable: () => (/* binding */ ThirdPartyDraggable),
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fullcalendar/common */ "./node_modules/@fullcalendar/common/main.js");
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
            /*!
FullCalendar v5.11.5
Docs & License: https://fullcalendar.io/
(c) 2022 Adam Shaw
*/



            _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.config.touchMouseIgnoreWait = 500;
            var ignoreMouseDepth = 0;
            var listenerCnt = 0;
            var isWindowTouchMoveCancelled = false;
            /*
Uses a "pointer" abstraction, which monitors UI events for both mouse and touch.
Tracks when the pointer "drags" on a certain element, meaning down+move+up.

Also, tracks if there was touch-scrolling.
Also, can prevent touch-scrolling from happening.
Also, can fire pointermove events when scrolling happens underneath, even when no real pointer movement.

emits:
- pointerdown
- pointermove
- pointerup
*/
            var PointerDragging = /** @class */ (function () {
                function PointerDragging(containerEl) {
                    var _this = this;
                    this.subjectEl = null;
                    // options that can be directly assigned by caller
                    this.selector = ''; // will cause subjectEl in all emitted events to be this element
                    this.handleSelector = '';
                    this.shouldIgnoreMove = false;
                    this.shouldWatchScroll = true; // for simulating pointermove on scroll
                    // internal states
                    this.isDragging = false;
                    this.isTouchDragging = false;
                    this.wasTouchScroll = false;
                    // Mouse
                    // ----------------------------------------------------------------------------------------------------
                    this.handleMouseDown = function (ev) {
                        if (!_this.shouldIgnoreMouse() &&
                            isPrimaryMouseButton(ev) &&
                            _this.tryStart(ev)) {
                            var pev = _this.createEventFromMouse(ev, true);
                            _this.emitter.trigger('pointerdown', pev);
                            _this.initScrollWatch(pev);
                            if (!_this.shouldIgnoreMove) {
                                document.addEventListener('mousemove', _this.handleMouseMove);
                            }
                            document.addEventListener('mouseup', _this.handleMouseUp);
                        }
                    };
                    this.handleMouseMove = function (ev) {
                        var pev = _this.createEventFromMouse(ev);
                        _this.recordCoords(pev);
                        _this.emitter.trigger('pointermove', pev);
                    };
                    this.handleMouseUp = function (ev) {
                        document.removeEventListener('mousemove', _this.handleMouseMove);
                        document.removeEventListener('mouseup', _this.handleMouseUp);
                        _this.emitter.trigger('pointerup', _this.createEventFromMouse(ev));
                        _this.cleanup(); // call last so that pointerup has access to props
                    };
                    // Touch
                    // ----------------------------------------------------------------------------------------------------
                    this.handleTouchStart = function (ev) {
                        if (_this.tryStart(ev)) {
                            _this.isTouchDragging = true;
                            var pev = _this.createEventFromTouch(ev, true);
                            _this.emitter.trigger('pointerdown', pev);
                            _this.initScrollWatch(pev);
                            // unlike mouse, need to attach to target, not document
                            // https://stackoverflow.com/a/45760014
                            var targetEl = ev.target;
                            if (!_this.shouldIgnoreMove) {
                                targetEl.addEventListener('touchmove', _this.handleTouchMove);
                            }
                            targetEl.addEventListener('touchend', _this.handleTouchEnd);
                            targetEl.addEventListener('touchcancel', _this.handleTouchEnd); // treat it as a touch end
                            // attach a handler to get called when ANY scroll action happens on the page.
                            // this was impossible to do with normal on/off because 'scroll' doesn't bubble.
                            // http://stackoverflow.com/a/32954565/96342
                            window.addEventListener('scroll', _this.handleTouchScroll, true);
                        }
                    };
                    this.handleTouchMove = function (ev) {
                        var pev = _this.createEventFromTouch(ev);
                        _this.recordCoords(pev);
                        _this.emitter.trigger('pointermove', pev);
                    };
                    this.handleTouchEnd = function (ev) {
                        if (_this.isDragging) { // done to guard against touchend followed by touchcancel
                            var targetEl = ev.target;
                            targetEl.removeEventListener('touchmove', _this.handleTouchMove);
                            targetEl.removeEventListener('touchend', _this.handleTouchEnd);
                            targetEl.removeEventListener('touchcancel', _this.handleTouchEnd);
                            window.removeEventListener('scroll', _this.handleTouchScroll, true); // useCaptured=true
                            _this.emitter.trigger('pointerup', _this.createEventFromTouch(ev));
                            _this.cleanup(); // call last so that pointerup has access to props
                            _this.isTouchDragging = false;
                            startIgnoringMouse();
                        }
                    };
                    this.handleTouchScroll = function () {
                        _this.wasTouchScroll = true;
                    };
                    this.handleScroll = function (ev) {
                        if (!_this.shouldIgnoreMove) {
                            var pageX = (window.pageXOffset - _this.prevScrollX) + _this.prevPageX;
                            var pageY = (window.pageYOffset - _this.prevScrollY) + _this.prevPageY;
                            _this.emitter.trigger('pointermove', {
                                origEvent: ev,
                                isTouch: _this.isTouchDragging,
                                subjectEl: _this.subjectEl,
                                pageX: pageX,
                                pageY: pageY,
                                deltaX: pageX - _this.origPageX,
                                deltaY: pageY - _this.origPageY,
                            });
                        }
                    };
                    this.containerEl = containerEl;
                    this.emitter = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.Emitter();
                    containerEl.addEventListener('mousedown', this.handleMouseDown);
                    containerEl.addEventListener('touchstart', this.handleTouchStart, { passive: true });
                    listenerCreated();
                }
                PointerDragging.prototype.destroy = function () {
                    this.containerEl.removeEventListener('mousedown', this.handleMouseDown);
                    this.containerEl.removeEventListener('touchstart', this.handleTouchStart, { passive: true });
                    listenerDestroyed();
                };
                PointerDragging.prototype.tryStart = function (ev) {
                    var subjectEl = this.querySubjectEl(ev);
                    var downEl = ev.target;
                    if (subjectEl &&
                        (!this.handleSelector || (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementClosest)(downEl, this.handleSelector))) {
                        this.subjectEl = subjectEl;
                        this.isDragging = true; // do this first so cancelTouchScroll will work
                        this.wasTouchScroll = false;
                        return true;
                    }
                    return false;
                };
                PointerDragging.prototype.cleanup = function () {
                    isWindowTouchMoveCancelled = false;
                    this.isDragging = false;
                    this.subjectEl = null;
                    // keep wasTouchScroll around for later access
                    this.destroyScrollWatch();
                };
                PointerDragging.prototype.querySubjectEl = function (ev) {
                    if (this.selector) {
                        return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementClosest)(ev.target, this.selector);
                    }
                    return this.containerEl;
                };
                PointerDragging.prototype.shouldIgnoreMouse = function () {
                    return ignoreMouseDepth || this.isTouchDragging;
                };
                // can be called by user of this class, to cancel touch-based scrolling for the current drag
                PointerDragging.prototype.cancelTouchScroll = function () {
                    if (this.isDragging) {
                        isWindowTouchMoveCancelled = true;
                    }
                };
                // Scrolling that simulates pointermoves
                // ----------------------------------------------------------------------------------------------------
                PointerDragging.prototype.initScrollWatch = function (ev) {
                    if (this.shouldWatchScroll) {
                        this.recordCoords(ev);
                        window.addEventListener('scroll', this.handleScroll, true); // useCapture=true
                    }
                };
                PointerDragging.prototype.recordCoords = function (ev) {
                    if (this.shouldWatchScroll) {
                        this.prevPageX = ev.pageX;
                        this.prevPageY = ev.pageY;
                        this.prevScrollX = window.pageXOffset;
                        this.prevScrollY = window.pageYOffset;
                    }
                };
                PointerDragging.prototype.destroyScrollWatch = function () {
                    if (this.shouldWatchScroll) {
                        window.removeEventListener('scroll', this.handleScroll, true); // useCaptured=true
                    }
                };
                // Event Normalization
                // ----------------------------------------------------------------------------------------------------
                PointerDragging.prototype.createEventFromMouse = function (ev, isFirst) {
                    var deltaX = 0;
                    var deltaY = 0;
                    // TODO: repeat code
                    if (isFirst) {
                        this.origPageX = ev.pageX;
                        this.origPageY = ev.pageY;
                    }
                    else {
                        deltaX = ev.pageX - this.origPageX;
                        deltaY = ev.pageY - this.origPageY;
                    }
                    return {
                        origEvent: ev,
                        isTouch: false,
                        subjectEl: this.subjectEl,
                        pageX: ev.pageX,
                        pageY: ev.pageY,
                        deltaX: deltaX,
                        deltaY: deltaY,
                    };
                };
                PointerDragging.prototype.createEventFromTouch = function (ev, isFirst) {
                    var touches = ev.touches;
                    var pageX;
                    var pageY;
                    var deltaX = 0;
                    var deltaY = 0;
                    // if touch coords available, prefer,
                    // because FF would give bad ev.pageX ev.pageY
                    if (touches && touches.length) {
                        pageX = touches[0].pageX;
                        pageY = touches[0].pageY;
                    }
                    else {
                        pageX = ev.pageX;
                        pageY = ev.pageY;
                    }
                    // TODO: repeat code
                    if (isFirst) {
                        this.origPageX = pageX;
                        this.origPageY = pageY;
                    }
                    else {
                        deltaX = pageX - this.origPageX;
                        deltaY = pageY - this.origPageY;
                    }
                    return {
                        origEvent: ev,
                        isTouch: true,
                        subjectEl: this.subjectEl,
                        pageX: pageX,
                        pageY: pageY,
                        deltaX: deltaX,
                        deltaY: deltaY,
                    };
                };
                return PointerDragging;
            }());
// Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)
            function isPrimaryMouseButton(ev) {
                return ev.button === 0 && !ev.ctrlKey;
            }
// Ignoring fake mouse events generated by touch
// ----------------------------------------------------------------------------------------------------
            function startIgnoringMouse() {
                ignoreMouseDepth += 1;
                setTimeout(function () {
                    ignoreMouseDepth -= 1;
                }, _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.config.touchMouseIgnoreWait);
            }
// We want to attach touchmove as early as possible for Safari
// ----------------------------------------------------------------------------------------------------
            function listenerCreated() {
                listenerCnt += 1;
                if (listenerCnt === 1) {
                    window.addEventListener('touchmove', onWindowTouchMove, { passive: false });
                }
            }
            function listenerDestroyed() {
                listenerCnt -= 1;
                if (!listenerCnt) {
                    window.removeEventListener('touchmove', onWindowTouchMove, { passive: false });
                }
            }
            function onWindowTouchMove(ev) {
                if (isWindowTouchMoveCancelled) {
                    ev.preventDefault();
                }
            }

            /*
An effect in which an element follows the movement of a pointer across the screen.
The moving element is a clone of some other element.
Must call start + handleMove + stop.
*/
            var ElementMirror = /** @class */ (function () {
                function ElementMirror() {
                    this.isVisible = false; // must be explicitly enabled
                    this.sourceEl = null;
                    this.mirrorEl = null;
                    this.sourceElRect = null; // screen coords relative to viewport
                    // options that can be set directly by caller
                    this.parentNode = document.body; // HIGHLY SUGGESTED to set this to sidestep ShadowDOM issues
                    this.zIndex = 9999;
                    this.revertDuration = 0;
                }
                ElementMirror.prototype.start = function (sourceEl, pageX, pageY) {
                    this.sourceEl = sourceEl;
                    this.sourceElRect = this.sourceEl.getBoundingClientRect();
                    this.origScreenX = pageX - window.pageXOffset;
                    this.origScreenY = pageY - window.pageYOffset;
                    this.deltaX = 0;
                    this.deltaY = 0;
                    this.updateElPosition();
                };
                ElementMirror.prototype.handleMove = function (pageX, pageY) {
                    this.deltaX = (pageX - window.pageXOffset) - this.origScreenX;
                    this.deltaY = (pageY - window.pageYOffset) - this.origScreenY;
                    this.updateElPosition();
                };
                // can be called before start
                ElementMirror.prototype.setIsVisible = function (bool) {
                    if (bool) {
                        if (!this.isVisible) {
                            if (this.mirrorEl) {
                                this.mirrorEl.style.display = '';
                            }
                            this.isVisible = bool; // needs to happen before updateElPosition
                            this.updateElPosition(); // because was not updating the position while invisible
                        }
                    }
                    else if (this.isVisible) {
                        if (this.mirrorEl) {
                            this.mirrorEl.style.display = 'none';
                        }
                        this.isVisible = bool;
                    }
                };
                // always async
                ElementMirror.prototype.stop = function (needsRevertAnimation, callback) {
                    var _this = this;
                    var done = function () {
                        _this.cleanup();
                        callback();
                    };
                    if (needsRevertAnimation &&
                        this.mirrorEl &&
                        this.isVisible &&
                        this.revertDuration && // if 0, transition won't work
                        (this.deltaX || this.deltaY) // if same coords, transition won't work
                    ) {
                        this.doRevertAnimation(done, this.revertDuration);
                    }
                    else {
                        setTimeout(done, 0);
                    }
                };
                ElementMirror.prototype.doRevertAnimation = function (callback, revertDuration) {
                    var mirrorEl = this.mirrorEl;
                    var finalSourceElRect = this.sourceEl.getBoundingClientRect(); // because autoscrolling might have happened
                    mirrorEl.style.transition =
                        'top ' + revertDuration + 'ms,' +
                        'left ' + revertDuration + 'ms';
                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.applyStyle)(mirrorEl, {
                        left: finalSourceElRect.left,
                        top: finalSourceElRect.top,
                    });
                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.whenTransitionDone)(mirrorEl, function () {
                        mirrorEl.style.transition = '';
                        callback();
                    });
                };
                ElementMirror.prototype.cleanup = function () {
                    if (this.mirrorEl) {
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.removeElement)(this.mirrorEl);
                        this.mirrorEl = null;
                    }
                    this.sourceEl = null;
                };
                ElementMirror.prototype.updateElPosition = function () {
                    if (this.sourceEl && this.isVisible) {
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.applyStyle)(this.getMirrorEl(), {
                            left: this.sourceElRect.left + this.deltaX,
                            top: this.sourceElRect.top + this.deltaY,
                        });
                    }
                };
                ElementMirror.prototype.getMirrorEl = function () {
                    var sourceElRect = this.sourceElRect;
                    var mirrorEl = this.mirrorEl;
                    if (!mirrorEl) {
                        mirrorEl = this.mirrorEl = this.sourceEl.cloneNode(true); // cloneChildren=true
                        // we don't want long taps or any mouse interaction causing selection/menus.
                        // would use preventSelection(), but that prevents selectstart, causing problems.
                        mirrorEl.classList.add('fc-unselectable');
                        mirrorEl.classList.add('fc-event-dragging');
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.applyStyle)(mirrorEl, {
                            position: 'fixed',
                            zIndex: this.zIndex,
                            visibility: '',
                            boxSizing: 'border-box',
                            width: sourceElRect.right - sourceElRect.left,
                            height: sourceElRect.bottom - sourceElRect.top,
                            right: 'auto',
                            bottom: 'auto',
                            margin: 0,
                        });
                        this.parentNode.appendChild(mirrorEl);
                    }
                    return mirrorEl;
                };
                return ElementMirror;
            }());

            /*
Is a cache for a given element's scroll information (all the info that ScrollController stores)
in addition the "client rectangle" of the element.. the area within the scrollbars.

The cache can be in one of two modes:
- doesListening:false - ignores when the container is scrolled by someone else
- doesListening:true - watch for scrolling and update the cache
*/
            var ScrollGeomCache = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(ScrollGeomCache, _super);
                function ScrollGeomCache(scrollController, doesListening) {
                    var _this = _super.call(this) || this;
                    _this.handleScroll = function () {
                        _this.scrollTop = _this.scrollController.getScrollTop();
                        _this.scrollLeft = _this.scrollController.getScrollLeft();
                        _this.handleScrollChange();
                    };
                    _this.scrollController = scrollController;
                    _this.doesListening = doesListening;
                    _this.scrollTop = _this.origScrollTop = scrollController.getScrollTop();
                    _this.scrollLeft = _this.origScrollLeft = scrollController.getScrollLeft();
                    _this.scrollWidth = scrollController.getScrollWidth();
                    _this.scrollHeight = scrollController.getScrollHeight();
                    _this.clientWidth = scrollController.getClientWidth();
                    _this.clientHeight = scrollController.getClientHeight();
                    _this.clientRect = _this.computeClientRect(); // do last in case it needs cached values
                    if (_this.doesListening) {
                        _this.getEventTarget().addEventListener('scroll', _this.handleScroll);
                    }
                    return _this;
                }
                ScrollGeomCache.prototype.destroy = function () {
                    if (this.doesListening) {
                        this.getEventTarget().removeEventListener('scroll', this.handleScroll);
                    }
                };
                ScrollGeomCache.prototype.getScrollTop = function () {
                    return this.scrollTop;
                };
                ScrollGeomCache.prototype.getScrollLeft = function () {
                    return this.scrollLeft;
                };
                ScrollGeomCache.prototype.setScrollTop = function (top) {
                    this.scrollController.setScrollTop(top);
                    if (!this.doesListening) {
                        // we are not relying on the element to normalize out-of-bounds scroll values
                        // so we need to sanitize ourselves
                        this.scrollTop = Math.max(Math.min(top, this.getMaxScrollTop()), 0);
                        this.handleScrollChange();
                    }
                };
                ScrollGeomCache.prototype.setScrollLeft = function (top) {
                    this.scrollController.setScrollLeft(top);
                    if (!this.doesListening) {
                        // we are not relying on the element to normalize out-of-bounds scroll values
                        // so we need to sanitize ourselves
                        this.scrollLeft = Math.max(Math.min(top, this.getMaxScrollLeft()), 0);
                        this.handleScrollChange();
                    }
                };
                ScrollGeomCache.prototype.getClientWidth = function () {
                    return this.clientWidth;
                };
                ScrollGeomCache.prototype.getClientHeight = function () {
                    return this.clientHeight;
                };
                ScrollGeomCache.prototype.getScrollWidth = function () {
                    return this.scrollWidth;
                };
                ScrollGeomCache.prototype.getScrollHeight = function () {
                    return this.scrollHeight;
                };
                ScrollGeomCache.prototype.handleScrollChange = function () {
                };
                return ScrollGeomCache;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.ScrollController));

            var ElementScrollGeomCache = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(ElementScrollGeomCache, _super);
                function ElementScrollGeomCache(el, doesListening) {
                    return _super.call(this, new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.ElementScrollController(el), doesListening) || this;
                }
                ElementScrollGeomCache.prototype.getEventTarget = function () {
                    return this.scrollController.el;
                };
                ElementScrollGeomCache.prototype.computeClientRect = function () {
                    return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.computeInnerRect)(this.scrollController.el);
                };
                return ElementScrollGeomCache;
            }(ScrollGeomCache));

            var WindowScrollGeomCache = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(WindowScrollGeomCache, _super);
                function WindowScrollGeomCache(doesListening) {
                    return _super.call(this, new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.WindowScrollController(), doesListening) || this;
                }
                WindowScrollGeomCache.prototype.getEventTarget = function () {
                    return window;
                };
                WindowScrollGeomCache.prototype.computeClientRect = function () {
                    return {
                        left: this.scrollLeft,
                        right: this.scrollLeft + this.clientWidth,
                        top: this.scrollTop,
                        bottom: this.scrollTop + this.clientHeight,
                    };
                };
                // the window is the only scroll object that changes it's rectangle relative
                // to the document's topleft as it scrolls
                WindowScrollGeomCache.prototype.handleScrollChange = function () {
                    this.clientRect = this.computeClientRect();
                };
                return WindowScrollGeomCache;
            }(ScrollGeomCache));

// If available we are using native "performance" API instead of "Date"
// Read more about it on MDN:
// https://developer.mozilla.org/en-US/docs/Web/API/Performance
            var getTime = typeof performance === 'function' ? performance.now : Date.now;
            /*
For a pointer interaction, automatically scrolls certain scroll containers when the pointer
approaches the edge.

The caller must call start + handleMove + stop.
*/
            var AutoScroller = /** @class */ (function () {
                function AutoScroller() {
                    var _this = this;
                    // options that can be set by caller
                    this.isEnabled = true;
                    this.scrollQuery = [window, '.fc-scroller'];
                    this.edgeThreshold = 50; // pixels
                    this.maxVelocity = 300; // pixels per second
                    // internal state
                    this.pointerScreenX = null;
                    this.pointerScreenY = null;
                    this.isAnimating = false;
                    this.scrollCaches = null;
                    // protect against the initial pointerdown being too close to an edge and starting the scroll
                    this.everMovedUp = false;
                    this.everMovedDown = false;
                    this.everMovedLeft = false;
                    this.everMovedRight = false;
                    this.animate = function () {
                        if (_this.isAnimating) { // wasn't cancelled between animation calls
                            var edge = _this.computeBestEdge(_this.pointerScreenX + window.pageXOffset, _this.pointerScreenY + window.pageYOffset);
                            if (edge) {
                                var now = getTime();
                                _this.handleSide(edge, (now - _this.msSinceRequest) / 1000);
                                _this.requestAnimation(now);
                            }
                            else {
                                _this.isAnimating = false; // will stop animation
                            }
                        }
                    };
                }
                AutoScroller.prototype.start = function (pageX, pageY, scrollStartEl) {
                    if (this.isEnabled) {
                        this.scrollCaches = this.buildCaches(scrollStartEl);
                        this.pointerScreenX = null;
                        this.pointerScreenY = null;
                        this.everMovedUp = false;
                        this.everMovedDown = false;
                        this.everMovedLeft = false;
                        this.everMovedRight = false;
                        this.handleMove(pageX, pageY);
                    }
                };
                AutoScroller.prototype.handleMove = function (pageX, pageY) {
                    if (this.isEnabled) {
                        var pointerScreenX = pageX - window.pageXOffset;
                        var pointerScreenY = pageY - window.pageYOffset;
                        var yDelta = this.pointerScreenY === null ? 0 : pointerScreenY - this.pointerScreenY;
                        var xDelta = this.pointerScreenX === null ? 0 : pointerScreenX - this.pointerScreenX;
                        if (yDelta < 0) {
                            this.everMovedUp = true;
                        }
                        else if (yDelta > 0) {
                            this.everMovedDown = true;
                        }
                        if (xDelta < 0) {
                            this.everMovedLeft = true;
                        }
                        else if (xDelta > 0) {
                            this.everMovedRight = true;
                        }
                        this.pointerScreenX = pointerScreenX;
                        this.pointerScreenY = pointerScreenY;
                        if (!this.isAnimating) {
                            this.isAnimating = true;
                            this.requestAnimation(getTime());
                        }
                    }
                };
                AutoScroller.prototype.stop = function () {
                    if (this.isEnabled) {
                        this.isAnimating = false; // will stop animation
                        for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                            var scrollCache = _a[_i];
                            scrollCache.destroy();
                        }
                        this.scrollCaches = null;
                    }
                };
                AutoScroller.prototype.requestAnimation = function (now) {
                    this.msSinceRequest = now;
                    requestAnimationFrame(this.animate);
                };
                AutoScroller.prototype.handleSide = function (edge, seconds) {
                    var scrollCache = edge.scrollCache;
                    var edgeThreshold = this.edgeThreshold;
                    var invDistance = edgeThreshold - edge.distance;
                    var velocity = // the closer to the edge, the faster we scroll
                        ((invDistance * invDistance) / (edgeThreshold * edgeThreshold)) * // quadratic
                        this.maxVelocity * seconds;
                    var sign = 1;
                    switch (edge.name) {
                        case 'left':
                            sign = -1;
                        // falls through
                        case 'right':
                            scrollCache.setScrollLeft(scrollCache.getScrollLeft() + velocity * sign);
                            break;
                        case 'top':
                            sign = -1;
                        // falls through
                        case 'bottom':
                            scrollCache.setScrollTop(scrollCache.getScrollTop() + velocity * sign);
                            break;
                    }
                };
                // left/top are relative to document topleft
                AutoScroller.prototype.computeBestEdge = function (left, top) {
                    var edgeThreshold = this.edgeThreshold;
                    var bestSide = null;
                    var scrollCaches = this.scrollCaches || [];
                    for (var _i = 0, scrollCaches_1 = scrollCaches; _i < scrollCaches_1.length; _i++) {
                        var scrollCache = scrollCaches_1[_i];
                        var rect = scrollCache.clientRect;
                        var leftDist = left - rect.left;
                        var rightDist = rect.right - left;
                        var topDist = top - rect.top;
                        var bottomDist = rect.bottom - top;
                        // completely within the rect?
                        if (leftDist >= 0 && rightDist >= 0 && topDist >= 0 && bottomDist >= 0) {
                            if (topDist <= edgeThreshold && this.everMovedUp && scrollCache.canScrollUp() &&
                                (!bestSide || bestSide.distance > topDist)) {
                                bestSide = { scrollCache: scrollCache, name: 'top', distance: topDist };
                            }
                            if (bottomDist <= edgeThreshold && this.everMovedDown && scrollCache.canScrollDown() &&
                                (!bestSide || bestSide.distance > bottomDist)) {
                                bestSide = { scrollCache: scrollCache, name: 'bottom', distance: bottomDist };
                            }
                            if (leftDist <= edgeThreshold && this.everMovedLeft && scrollCache.canScrollLeft() &&
                                (!bestSide || bestSide.distance > leftDist)) {
                                bestSide = { scrollCache: scrollCache, name: 'left', distance: leftDist };
                            }
                            if (rightDist <= edgeThreshold && this.everMovedRight && scrollCache.canScrollRight() &&
                                (!bestSide || bestSide.distance > rightDist)) {
                                bestSide = { scrollCache: scrollCache, name: 'right', distance: rightDist };
                            }
                        }
                    }
                    return bestSide;
                };
                AutoScroller.prototype.buildCaches = function (scrollStartEl) {
                    return this.queryScrollEls(scrollStartEl).map(function (el) {
                        if (el === window) {
                            return new WindowScrollGeomCache(false); // false = don't listen to user-generated scrolls
                        }
                        return new ElementScrollGeomCache(el, false); // false = don't listen to user-generated scrolls
                    });
                };
                AutoScroller.prototype.queryScrollEls = function (scrollStartEl) {
                    var els = [];
                    for (var _i = 0, _a = this.scrollQuery; _i < _a.length; _i++) {
                        var query = _a[_i];
                        if (typeof query === 'object') {
                            els.push(query);
                        }
                        else {
                            els.push.apply(els, Array.prototype.slice.call((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getElRoot)(scrollStartEl).querySelectorAll(query)));
                        }
                    }
                    return els;
                };
                return AutoScroller;
            }());

            /*
Monitors dragging on an element. Has a number of high-level features:
- minimum distance required before dragging
- minimum wait time ("delay") before dragging
- a mirror element that follows the pointer
*/
            var FeaturefulElementDragging = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(FeaturefulElementDragging, _super);
                function FeaturefulElementDragging(containerEl, selector) {
                    var _this = _super.call(this, containerEl) || this;
                    _this.containerEl = containerEl;
                    // options that can be directly set by caller
                    // the caller can also set the PointerDragging's options as well
                    _this.delay = null;
                    _this.minDistance = 0;
                    _this.touchScrollAllowed = true; // prevents drag from starting and blocks scrolling during drag
                    _this.mirrorNeedsRevert = false;
                    _this.isInteracting = false; // is the user validly moving the pointer? lasts until pointerup
                    _this.isDragging = false; // is it INTENTFULLY dragging? lasts until after revert animation
                    _this.isDelayEnded = false;
                    _this.isDistanceSurpassed = false;
                    _this.delayTimeoutId = null;
                    _this.onPointerDown = function (ev) {
                        if (!_this.isDragging) { // so new drag doesn't happen while revert animation is going
                            _this.isInteracting = true;
                            _this.isDelayEnded = false;
                            _this.isDistanceSurpassed = false;
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.preventSelection)(document.body);
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.preventContextMenu)(document.body);
                            // prevent links from being visited if there's an eventual drag.
                            // also prevents selection in older browsers (maybe?).
                            // not necessary for touch, besides, browser would complain about passiveness.
                            if (!ev.isTouch) {
                                ev.origEvent.preventDefault();
                            }
                            _this.emitter.trigger('pointerdown', ev);
                            if (_this.isInteracting && // not destroyed via pointerdown handler
                                !_this.pointer.shouldIgnoreMove) {
                                // actions related to initiating dragstart+dragmove+dragend...
                                _this.mirror.setIsVisible(false); // reset. caller must set-visible
                                _this.mirror.start(ev.subjectEl, ev.pageX, ev.pageY); // must happen on first pointer down
                                _this.startDelay(ev);
                                if (!_this.minDistance) {
                                    _this.handleDistanceSurpassed(ev);
                                }
                            }
                        }
                    };
                    _this.onPointerMove = function (ev) {
                        if (_this.isInteracting) {
                            _this.emitter.trigger('pointermove', ev);
                            if (!_this.isDistanceSurpassed) {
                                var minDistance = _this.minDistance;
                                var distanceSq = void 0; // current distance from the origin, squared
                                var deltaX = ev.deltaX, deltaY = ev.deltaY;
                                distanceSq = deltaX * deltaX + deltaY * deltaY;
                                if (distanceSq >= minDistance * minDistance) { // use pythagorean theorem
                                    _this.handleDistanceSurpassed(ev);
                                }
                            }
                            if (_this.isDragging) {
                                // a real pointer move? (not one simulated by scrolling)
                                if (ev.origEvent.type !== 'scroll') {
                                    _this.mirror.handleMove(ev.pageX, ev.pageY);
                                    _this.autoScroller.handleMove(ev.pageX, ev.pageY);
                                }
                                _this.emitter.trigger('dragmove', ev);
                            }
                        }
                    };
                    _this.onPointerUp = function (ev) {
                        if (_this.isInteracting) {
                            _this.isInteracting = false;
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.allowSelection)(document.body);
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.allowContextMenu)(document.body);
                            _this.emitter.trigger('pointerup', ev); // can potentially set mirrorNeedsRevert
                            if (_this.isDragging) {
                                _this.autoScroller.stop();
                                _this.tryStopDrag(ev); // which will stop the mirror
                            }
                            if (_this.delayTimeoutId) {
                                clearTimeout(_this.delayTimeoutId);
                                _this.delayTimeoutId = null;
                            }
                        }
                    };
                    var pointer = _this.pointer = new PointerDragging(containerEl);
                    pointer.emitter.on('pointerdown', _this.onPointerDown);
                    pointer.emitter.on('pointermove', _this.onPointerMove);
                    pointer.emitter.on('pointerup', _this.onPointerUp);
                    if (selector) {
                        pointer.selector = selector;
                    }
                    _this.mirror = new ElementMirror();
                    _this.autoScroller = new AutoScroller();
                    return _this;
                }
                FeaturefulElementDragging.prototype.destroy = function () {
                    this.pointer.destroy();
                    // HACK: simulate a pointer-up to end the current drag
                    // TODO: fire 'dragend' directly and stop interaction. discourage use of pointerup event (b/c might not fire)
                    this.onPointerUp({});
                };
                FeaturefulElementDragging.prototype.startDelay = function (ev) {
                    var _this = this;
                    if (typeof this.delay === 'number') {
                        this.delayTimeoutId = setTimeout(function () {
                            _this.delayTimeoutId = null;
                            _this.handleDelayEnd(ev);
                        }, this.delay); // not assignable to number!
                    }
                    else {
                        this.handleDelayEnd(ev);
                    }
                };
                FeaturefulElementDragging.prototype.handleDelayEnd = function (ev) {
                    this.isDelayEnded = true;
                    this.tryStartDrag(ev);
                };
                FeaturefulElementDragging.prototype.handleDistanceSurpassed = function (ev) {
                    this.isDistanceSurpassed = true;
                    this.tryStartDrag(ev);
                };
                FeaturefulElementDragging.prototype.tryStartDrag = function (ev) {
                    if (this.isDelayEnded && this.isDistanceSurpassed) {
                        if (!this.pointer.wasTouchScroll || this.touchScrollAllowed) {
                            this.isDragging = true;
                            this.mirrorNeedsRevert = false;
                            this.autoScroller.start(ev.pageX, ev.pageY, this.containerEl);
                            this.emitter.trigger('dragstart', ev);
                            if (this.touchScrollAllowed === false) {
                                this.pointer.cancelTouchScroll();
                            }
                        }
                    }
                };
                FeaturefulElementDragging.prototype.tryStopDrag = function (ev) {
                    // .stop() is ALWAYS asynchronous, which we NEED because we want all pointerup events
                    // that come from the document to fire beforehand. much more convenient this way.
                    this.mirror.stop(this.mirrorNeedsRevert, this.stopDrag.bind(this, ev));
                };
                FeaturefulElementDragging.prototype.stopDrag = function (ev) {
                    this.isDragging = false;
                    this.emitter.trigger('dragend', ev);
                };
                // fill in the implementations...
                FeaturefulElementDragging.prototype.setIgnoreMove = function (bool) {
                    this.pointer.shouldIgnoreMove = bool;
                };
                FeaturefulElementDragging.prototype.setMirrorIsVisible = function (bool) {
                    this.mirror.setIsVisible(bool);
                };
                FeaturefulElementDragging.prototype.setMirrorNeedsRevert = function (bool) {
                    this.mirrorNeedsRevert = bool;
                };
                FeaturefulElementDragging.prototype.setAutoScrollEnabled = function (bool) {
                    this.autoScroller.isEnabled = bool;
                };
                return FeaturefulElementDragging;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.ElementDragging));

            /*
When this class is instantiated, it records the offset of an element (relative to the document topleft),
and continues to monitor scrolling, updating the cached coordinates if it needs to.
Does not access the DOM after instantiation, so highly performant.

Also keeps track of all scrolling/overflow:hidden containers that are parents of the given element
and an determine if a given point is inside the combined clipping rectangle.
*/
            var OffsetTracker = /** @class */ (function () {
                function OffsetTracker(el) {
                    this.origRect = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.computeRect)(el);
                    // will work fine for divs that have overflow:hidden
                    this.scrollCaches = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getClippingParents)(el).map(function (scrollEl) { return new ElementScrollGeomCache(scrollEl, true); });
                }
                OffsetTracker.prototype.destroy = function () {
                    for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                        var scrollCache = _a[_i];
                        scrollCache.destroy();
                    }
                };
                OffsetTracker.prototype.computeLeft = function () {
                    var left = this.origRect.left;
                    for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                        var scrollCache = _a[_i];
                        left += scrollCache.origScrollLeft - scrollCache.getScrollLeft();
                    }
                    return left;
                };
                OffsetTracker.prototype.computeTop = function () {
                    var top = this.origRect.top;
                    for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                        var scrollCache = _a[_i];
                        top += scrollCache.origScrollTop - scrollCache.getScrollTop();
                    }
                    return top;
                };
                OffsetTracker.prototype.isWithinClipping = function (pageX, pageY) {
                    var point = { left: pageX, top: pageY };
                    for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                        var scrollCache = _a[_i];
                        if (!isIgnoredClipping(scrollCache.getEventTarget()) &&
                            !(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.pointInsideRect)(point, scrollCache.clientRect)) {
                            return false;
                        }
                    }
                    return true;
                };
                return OffsetTracker;
            }());
// certain clipping containers should never constrain interactions, like <html> and <body>
// https://github.com/fullcalendar/fullcalendar/issues/3615
            function isIgnoredClipping(node) {
                var tagName = node.tagName;
                return tagName === 'HTML' || tagName === 'BODY';
            }

            /*
Tracks movement over multiple droppable areas (aka "hits")
that exist in one or more DateComponents.
Relies on an existing draggable.

emits:
- pointerdown
- dragstart
- hitchange - fires initially, even if not over a hit
- pointerup
- (hitchange - again, to null, if ended over a hit)
- dragend
*/
            var HitDragging = /** @class */ (function () {
                function HitDragging(dragging, droppableStore) {
                    var _this = this;
                    // options that can be set by caller
                    this.useSubjectCenter = false;
                    this.requireInitial = true; // if doesn't start out on a hit, won't emit any events
                    this.initialHit = null;
                    this.movingHit = null;
                    this.finalHit = null; // won't ever be populated if shouldIgnoreMove
                    this.handlePointerDown = function (ev) {
                        var dragging = _this.dragging;
                        _this.initialHit = null;
                        _this.movingHit = null;
                        _this.finalHit = null;
                        _this.prepareHits();
                        _this.processFirstCoord(ev);
                        if (_this.initialHit || !_this.requireInitial) {
                            dragging.setIgnoreMove(false);
                            // TODO: fire this before computing processFirstCoord, so listeners can cancel. this gets fired by almost every handler :(
                            _this.emitter.trigger('pointerdown', ev);
                        }
                        else {
                            dragging.setIgnoreMove(true);
                        }
                    };
                    this.handleDragStart = function (ev) {
                        _this.emitter.trigger('dragstart', ev);
                        _this.handleMove(ev, true); // force = fire even if initially null
                    };
                    this.handleDragMove = function (ev) {
                        _this.emitter.trigger('dragmove', ev);
                        _this.handleMove(ev);
                    };
                    this.handlePointerUp = function (ev) {
                        _this.releaseHits();
                        _this.emitter.trigger('pointerup', ev);
                    };
                    this.handleDragEnd = function (ev) {
                        if (_this.movingHit) {
                            _this.emitter.trigger('hitupdate', null, true, ev);
                        }
                        _this.finalHit = _this.movingHit;
                        _this.movingHit = null;
                        _this.emitter.trigger('dragend', ev);
                    };
                    this.droppableStore = droppableStore;
                    dragging.emitter.on('pointerdown', this.handlePointerDown);
                    dragging.emitter.on('dragstart', this.handleDragStart);
                    dragging.emitter.on('dragmove', this.handleDragMove);
                    dragging.emitter.on('pointerup', this.handlePointerUp);
                    dragging.emitter.on('dragend', this.handleDragEnd);
                    this.dragging = dragging;
                    this.emitter = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.Emitter();
                }
                // sets initialHit
                // sets coordAdjust
                HitDragging.prototype.processFirstCoord = function (ev) {
                    var origPoint = { left: ev.pageX, top: ev.pageY };
                    var adjustedPoint = origPoint;
                    var subjectEl = ev.subjectEl;
                    var subjectRect;
                    if (subjectEl instanceof HTMLElement) { // i.e. not a Document/ShadowRoot
                        subjectRect = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.computeRect)(subjectEl);
                        adjustedPoint = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.constrainPoint)(adjustedPoint, subjectRect);
                    }
                    var initialHit = this.initialHit = this.queryHitForOffset(adjustedPoint.left, adjustedPoint.top);
                    if (initialHit) {
                        if (this.useSubjectCenter && subjectRect) {
                            var slicedSubjectRect = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.intersectRects)(subjectRect, initialHit.rect);
                            if (slicedSubjectRect) {
                                adjustedPoint = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getRectCenter)(slicedSubjectRect);
                            }
                        }
                        this.coordAdjust = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.diffPoints)(adjustedPoint, origPoint);
                    }
                    else {
                        this.coordAdjust = { left: 0, top: 0 };
                    }
                };
                HitDragging.prototype.handleMove = function (ev, forceHandle) {
                    var hit = this.queryHitForOffset(ev.pageX + this.coordAdjust.left, ev.pageY + this.coordAdjust.top);
                    if (forceHandle || !isHitsEqual(this.movingHit, hit)) {
                        this.movingHit = hit;
                        this.emitter.trigger('hitupdate', hit, false, ev);
                    }
                };
                HitDragging.prototype.prepareHits = function () {
                    this.offsetTrackers = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.mapHash)(this.droppableStore, function (interactionSettings) {
                        interactionSettings.component.prepareHits();
                        return new OffsetTracker(interactionSettings.el);
                    });
                };
                HitDragging.prototype.releaseHits = function () {
                    var offsetTrackers = this.offsetTrackers;
                    for (var id in offsetTrackers) {
                        offsetTrackers[id].destroy();
                    }
                    this.offsetTrackers = {};
                };
                HitDragging.prototype.queryHitForOffset = function (offsetLeft, offsetTop) {
                    var _a = this, droppableStore = _a.droppableStore, offsetTrackers = _a.offsetTrackers;
                    var bestHit = null;
                    for (var id in droppableStore) {
                        var component = droppableStore[id].component;
                        var offsetTracker = offsetTrackers[id];
                        if (offsetTracker && // wasn't destroyed mid-drag
                            offsetTracker.isWithinClipping(offsetLeft, offsetTop)) {
                            var originLeft = offsetTracker.computeLeft();
                            var originTop = offsetTracker.computeTop();
                            var positionLeft = offsetLeft - originLeft;
                            var positionTop = offsetTop - originTop;
                            var origRect = offsetTracker.origRect;
                            var width = origRect.right - origRect.left;
                            var height = origRect.bottom - origRect.top;
                            if (
                                // must be within the element's bounds
                                positionLeft >= 0 && positionLeft < width &&
                                positionTop >= 0 && positionTop < height) {
                                var hit = component.queryHit(positionLeft, positionTop, width, height);
                                if (hit && (
                                        // make sure the hit is within activeRange, meaning it's not a dead cell
                                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.rangeContainsRange)(hit.dateProfile.activeRange, hit.dateSpan.range)) &&
                                    (!bestHit || hit.layer > bestHit.layer)) {
                                    hit.componentId = id;
                                    hit.context = component.context;
                                    // TODO: better way to re-orient rectangle
                                    hit.rect.left += originLeft;
                                    hit.rect.right += originLeft;
                                    hit.rect.top += originTop;
                                    hit.rect.bottom += originTop;
                                    bestHit = hit;
                                }
                            }
                        }
                    }
                    return bestHit;
                };
                return HitDragging;
            }());
            function isHitsEqual(hit0, hit1) {
                if (!hit0 && !hit1) {
                    return true;
                }
                if (Boolean(hit0) !== Boolean(hit1)) {
                    return false;
                }
                return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.isDateSpansEqual)(hit0.dateSpan, hit1.dateSpan);
            }

            function buildDatePointApiWithContext(dateSpan, context) {
                var props = {};
                for (var _i = 0, _a = context.pluginHooks.datePointTransforms; _i < _a.length; _i++) {
                    var transform = _a[_i];
                    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)(props, transform(dateSpan, context));
                }
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)(props, buildDatePointApi(dateSpan, context.dateEnv));
                return props;
            }
            function buildDatePointApi(span, dateEnv) {
                return {
                    date: dateEnv.toDate(span.range.start),
                    dateStr: dateEnv.formatIso(span.range.start, { omitTime: span.allDay }),
                    allDay: span.allDay,
                };
            }

            /*
Monitors when the user clicks on a specific date/time of a component.
A pointerdown+pointerup on the same "hit" constitutes a click.
*/
            var DateClicking = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(DateClicking, _super);
                function DateClicking(settings) {
                    var _this = _super.call(this, settings) || this;
                    _this.handlePointerDown = function (pev) {
                        var dragging = _this.dragging;
                        var downEl = pev.origEvent.target;
                        // do this in pointerdown (not dragend) because DOM might be mutated by the time dragend is fired
                        dragging.setIgnoreMove(!_this.component.isValidDateDownEl(downEl));
                    };
                    // won't even fire if moving was ignored
                    _this.handleDragEnd = function (ev) {
                        var component = _this.component;
                        var pointer = _this.dragging.pointer;
                        if (!pointer.wasTouchScroll) {
                            var _a = _this.hitDragging, initialHit = _a.initialHit, finalHit = _a.finalHit;
                            if (initialHit && finalHit && isHitsEqual(initialHit, finalHit)) {
                                var context = component.context;
                                var arg = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, buildDatePointApiWithContext(initialHit.dateSpan, context)), { dayEl: initialHit.dayEl, jsEvent: ev.origEvent, view: context.viewApi || context.calendarApi.view });
                                context.emitter.trigger('dateClick', arg);
                            }
                        }
                    };
                    // we DO want to watch pointer moves because otherwise finalHit won't get populated
                    _this.dragging = new FeaturefulElementDragging(settings.el);
                    _this.dragging.autoScroller.isEnabled = false;
                    var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.interactionSettingsToStore)(settings));
                    hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
                    hitDragging.emitter.on('dragend', _this.handleDragEnd);
                    return _this;
                }
                DateClicking.prototype.destroy = function () {
                    this.dragging.destroy();
                };
                return DateClicking;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.Interaction));

            /*
Tracks when the user selects a portion of time of a component,
constituted by a drag over date cells, with a possible delay at the beginning of the drag.
*/
            var DateSelecting = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(DateSelecting, _super);
                function DateSelecting(settings) {
                    var _this = _super.call(this, settings) || this;
                    _this.dragSelection = null;
                    _this.handlePointerDown = function (ev) {
                        var _a = _this, component = _a.component, dragging = _a.dragging;
                        var options = component.context.options;
                        var canSelect = options.selectable &&
                            component.isValidDateDownEl(ev.origEvent.target);
                        // don't bother to watch expensive moves if component won't do selection
                        dragging.setIgnoreMove(!canSelect);
                        // if touch, require user to hold down
                        dragging.delay = ev.isTouch ? getComponentTouchDelay$1(component) : null;
                    };
                    _this.handleDragStart = function (ev) {
                        _this.component.context.calendarApi.unselect(ev); // unselect previous selections
                    };
                    _this.handleHitUpdate = function (hit, isFinal) {
                        var context = _this.component.context;
                        var dragSelection = null;
                        var isInvalid = false;
                        if (hit) {
                            var initialHit = _this.hitDragging.initialHit;
                            var disallowed = hit.componentId === initialHit.componentId
                                && _this.isHitComboAllowed
                                && !_this.isHitComboAllowed(initialHit, hit);
                            if (!disallowed) {
                                dragSelection = joinHitsIntoSelection(initialHit, hit, context.pluginHooks.dateSelectionTransformers);
                            }
                            if (!dragSelection || !(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.isDateSelectionValid)(dragSelection, hit.dateProfile, context)) {
                                isInvalid = true;
                                dragSelection = null;
                            }
                        }
                        if (dragSelection) {
                            context.dispatch({ type: 'SELECT_DATES', selection: dragSelection });
                        }
                        else if (!isFinal) { // only unselect if moved away while dragging
                            context.dispatch({ type: 'UNSELECT_DATES' });
                        }
                        if (!isInvalid) {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.enableCursor)();
                        }
                        else {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.disableCursor)();
                        }
                        if (!isFinal) {
                            _this.dragSelection = dragSelection; // only clear if moved away from all hits while dragging
                        }
                    };
                    _this.handlePointerUp = function (pev) {
                        if (_this.dragSelection) {
                            // selection is already rendered, so just need to report selection
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.triggerDateSelect)(_this.dragSelection, pev, _this.component.context);
                            _this.dragSelection = null;
                        }
                    };
                    var component = settings.component;
                    var options = component.context.options;
                    var dragging = _this.dragging = new FeaturefulElementDragging(settings.el);
                    dragging.touchScrollAllowed = false;
                    dragging.minDistance = options.selectMinDistance || 0;
                    dragging.autoScroller.isEnabled = options.dragScroll;
                    var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.interactionSettingsToStore)(settings));
                    hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
                    hitDragging.emitter.on('dragstart', _this.handleDragStart);
                    hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);
                    hitDragging.emitter.on('pointerup', _this.handlePointerUp);
                    return _this;
                }
                DateSelecting.prototype.destroy = function () {
                    this.dragging.destroy();
                };
                return DateSelecting;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.Interaction));
            function getComponentTouchDelay$1(component) {
                var options = component.context.options;
                var delay = options.selectLongPressDelay;
                if (delay == null) {
                    delay = options.longPressDelay;
                }
                return delay;
            }
            function joinHitsIntoSelection(hit0, hit1, dateSelectionTransformers) {
                var dateSpan0 = hit0.dateSpan;
                var dateSpan1 = hit1.dateSpan;
                var ms = [
                    dateSpan0.range.start,
                    dateSpan0.range.end,
                    dateSpan1.range.start,
                    dateSpan1.range.end,
                ];
                ms.sort(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.compareNumbers);
                var props = {};
                for (var _i = 0, dateSelectionTransformers_1 = dateSelectionTransformers; _i < dateSelectionTransformers_1.length; _i++) {
                    var transformer = dateSelectionTransformers_1[_i];
                    var res = transformer(hit0, hit1);
                    if (res === false) {
                        return null;
                    }
                    if (res) {
                        (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)(props, res);
                    }
                }
                props.range = { start: ms[0], end: ms[3] };
                props.allDay = dateSpan0.allDay;
                return props;
            }

            var EventDragging = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(EventDragging, _super);
                function EventDragging(settings) {
                    var _this = _super.call(this, settings) || this;
                    // internal state
                    _this.subjectEl = null;
                    _this.subjectSeg = null; // the seg being selected/dragged
                    _this.isDragging = false;
                    _this.eventRange = null;
                    _this.relevantEvents = null; // the events being dragged
                    _this.receivingContext = null;
                    _this.validMutation = null;
                    _this.mutatedRelevantEvents = null;
                    _this.handlePointerDown = function (ev) {
                        var origTarget = ev.origEvent.target;
                        var _a = _this, component = _a.component, dragging = _a.dragging;
                        var mirror = dragging.mirror;
                        var options = component.context.options;
                        var initialContext = component.context;
                        _this.subjectEl = ev.subjectEl;
                        var subjectSeg = _this.subjectSeg = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getElSeg)(ev.subjectEl);
                        var eventRange = _this.eventRange = subjectSeg.eventRange;
                        var eventInstanceId = eventRange.instance.instanceId;
                        _this.relevantEvents = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getRelevantEvents)(initialContext.getCurrentData().eventStore, eventInstanceId);
                        dragging.minDistance = ev.isTouch ? 0 : options.eventDragMinDistance;
                        dragging.delay =
                            // only do a touch delay if touch and this event hasn't been selected yet
                            (ev.isTouch && eventInstanceId !== component.props.eventSelection) ?
                                getComponentTouchDelay(component) :
                                null;
                        if (options.fixedMirrorParent) {
                            mirror.parentNode = options.fixedMirrorParent;
                        }
                        else {
                            mirror.parentNode = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementClosest)(origTarget, '.fc');
                        }
                        mirror.revertDuration = options.dragRevertDuration;
                        var isValid = component.isValidSegDownEl(origTarget) &&
                            !(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementClosest)(origTarget, '.fc-event-resizer'); // NOT on a resizer
                        dragging.setIgnoreMove(!isValid);
                        // disable dragging for elements that are resizable (ie, selectable)
                        // but are not draggable
                        _this.isDragging = isValid &&
                            ev.subjectEl.classList.contains('fc-event-draggable');
                    };
                    _this.handleDragStart = function (ev) {
                        var initialContext = _this.component.context;
                        var eventRange = _this.eventRange;
                        var eventInstanceId = eventRange.instance.instanceId;
                        if (ev.isTouch) {
                            // need to select a different event?
                            if (eventInstanceId !== _this.component.props.eventSelection) {
                                initialContext.dispatch({ type: 'SELECT_EVENT', eventInstanceId: eventInstanceId });
                            }
                        }
                        else {
                            // if now using mouse, but was previous touch interaction, clear selected event
                            initialContext.dispatch({ type: 'UNSELECT_EVENT' });
                        }
                        if (_this.isDragging) {
                            initialContext.calendarApi.unselect(ev); // unselect *date* selection
                            initialContext.emitter.trigger('eventDragStart', {
                                el: _this.subjectEl,
                                event: new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(initialContext, eventRange.def, eventRange.instance),
                                jsEvent: ev.origEvent,
                                view: initialContext.viewApi,
                            });
                        }
                    };
                    _this.handleHitUpdate = function (hit, isFinal) {
                        if (!_this.isDragging) {
                            return;
                        }
                        var relevantEvents = _this.relevantEvents;
                        var initialHit = _this.hitDragging.initialHit;
                        var initialContext = _this.component.context;
                        // states based on new hit
                        var receivingContext = null;
                        var mutation = null;
                        var mutatedRelevantEvents = null;
                        var isInvalid = false;
                        var interaction = {
                            affectedEvents: relevantEvents,
                            mutatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEmptyEventStore)(),
                            isEvent: true,
                        };
                        if (hit) {
                            receivingContext = hit.context;
                            var receivingOptions = receivingContext.options;
                            if (initialContext === receivingContext ||
                                (receivingOptions.editable && receivingOptions.droppable)) {
                                mutation = computeEventMutation(initialHit, hit, receivingContext.getCurrentData().pluginHooks.eventDragMutationMassagers);
                                if (mutation) {
                                    mutatedRelevantEvents = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.applyMutationToEventStore)(relevantEvents, receivingContext.getCurrentData().eventUiBases, mutation, receivingContext);
                                    interaction.mutatedEvents = mutatedRelevantEvents;
                                    if (!(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.isInteractionValid)(interaction, hit.dateProfile, receivingContext)) {
                                        isInvalid = true;
                                        mutation = null;
                                        mutatedRelevantEvents = null;
                                        interaction.mutatedEvents = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEmptyEventStore)();
                                    }
                                }
                            }
                            else {
                                receivingContext = null;
                            }
                        }
                        _this.displayDrag(receivingContext, interaction);
                        if (!isInvalid) {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.enableCursor)();
                        }
                        else {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.disableCursor)();
                        }
                        if (!isFinal) {
                            if (initialContext === receivingContext && // TODO: write test for this
                                isHitsEqual(initialHit, hit)) {
                                mutation = null;
                            }
                            _this.dragging.setMirrorNeedsRevert(!mutation);
                            // render the mirror if no already-rendered mirror
                            // TODO: wish we could somehow wait for dispatch to guarantee render
                            _this.dragging.setMirrorIsVisible(!hit || !(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getElRoot)(_this.subjectEl).querySelector('.fc-event-mirror'));
                            // assign states based on new hit
                            _this.receivingContext = receivingContext;
                            _this.validMutation = mutation;
                            _this.mutatedRelevantEvents = mutatedRelevantEvents;
                        }
                    };
                    _this.handlePointerUp = function () {
                        if (!_this.isDragging) {
                            _this.cleanup(); // because handleDragEnd won't fire
                        }
                    };
                    _this.handleDragEnd = function (ev) {
                        if (_this.isDragging) {
                            var initialContext_1 = _this.component.context;
                            var initialView = initialContext_1.viewApi;
                            var _a = _this, receivingContext_1 = _a.receivingContext, validMutation = _a.validMutation;
                            var eventDef = _this.eventRange.def;
                            var eventInstance = _this.eventRange.instance;
                            var eventApi = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(initialContext_1, eventDef, eventInstance);
                            var relevantEvents_1 = _this.relevantEvents;
                            var mutatedRelevantEvents_1 = _this.mutatedRelevantEvents;
                            var finalHit = _this.hitDragging.finalHit;
                            _this.clearDrag(); // must happen after revert animation
                            initialContext_1.emitter.trigger('eventDragStop', {
                                el: _this.subjectEl,
                                event: eventApi,
                                jsEvent: ev.origEvent,
                                view: initialView,
                            });
                            if (validMutation) {
                                // dropped within same calendar
                                if (receivingContext_1 === initialContext_1) {
                                    var updatedEventApi = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(initialContext_1, mutatedRelevantEvents_1.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents_1.instances[eventInstance.instanceId] : null);
                                    initialContext_1.dispatch({
                                        type: 'MERGE_EVENTS',
                                        eventStore: mutatedRelevantEvents_1,
                                    });
                                    var eventChangeArg = {
                                        oldEvent: eventApi,
                                        event: updatedEventApi,
                                        relatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.buildEventApis)(mutatedRelevantEvents_1, initialContext_1, eventInstance),
                                        revert: function () {
                                            initialContext_1.dispatch({
                                                type: 'MERGE_EVENTS',
                                                eventStore: relevantEvents_1, // the pre-change data
                                            });
                                        },
                                    };
                                    var transformed = {};
                                    for (var _i = 0, _b = initialContext_1.getCurrentData().pluginHooks.eventDropTransformers; _i < _b.length; _i++) {
                                        var transformer = _b[_i];
                                        (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)(transformed, transformer(validMutation, initialContext_1));
                                    }
                                    initialContext_1.emitter.trigger('eventDrop', (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, eventChangeArg), transformed), { el: ev.subjectEl, delta: validMutation.datesDelta, jsEvent: ev.origEvent, view: initialView }));
                                    initialContext_1.emitter.trigger('eventChange', eventChangeArg);
                                    // dropped in different calendar
                                }
                                else if (receivingContext_1) {
                                    var eventRemoveArg = {
                                        event: eventApi,
                                        relatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.buildEventApis)(relevantEvents_1, initialContext_1, eventInstance),
                                        revert: function () {
                                            initialContext_1.dispatch({
                                                type: 'MERGE_EVENTS',
                                                eventStore: relevantEvents_1,
                                            });
                                        },
                                    };
                                    initialContext_1.emitter.trigger('eventLeave', (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, eventRemoveArg), { draggedEl: ev.subjectEl, view: initialView }));
                                    initialContext_1.dispatch({
                                        type: 'REMOVE_EVENTS',
                                        eventStore: relevantEvents_1,
                                    });
                                    initialContext_1.emitter.trigger('eventRemove', eventRemoveArg);
                                    var addedEventDef = mutatedRelevantEvents_1.defs[eventDef.defId];
                                    var addedEventInstance = mutatedRelevantEvents_1.instances[eventInstance.instanceId];
                                    var addedEventApi = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(receivingContext_1, addedEventDef, addedEventInstance);
                                    receivingContext_1.dispatch({
                                        type: 'MERGE_EVENTS',
                                        eventStore: mutatedRelevantEvents_1,
                                    });
                                    var eventAddArg = {
                                        event: addedEventApi,
                                        relatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.buildEventApis)(mutatedRelevantEvents_1, receivingContext_1, addedEventInstance),
                                        revert: function () {
                                            receivingContext_1.dispatch({
                                                type: 'REMOVE_EVENTS',
                                                eventStore: mutatedRelevantEvents_1,
                                            });
                                        },
                                    };
                                    receivingContext_1.emitter.trigger('eventAdd', eventAddArg);
                                    if (ev.isTouch) {
                                        receivingContext_1.dispatch({
                                            type: 'SELECT_EVENT',
                                            eventInstanceId: eventInstance.instanceId,
                                        });
                                    }
                                    receivingContext_1.emitter.trigger('drop', (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, buildDatePointApiWithContext(finalHit.dateSpan, receivingContext_1)), { draggedEl: ev.subjectEl, jsEvent: ev.origEvent, view: finalHit.context.viewApi }));
                                    receivingContext_1.emitter.trigger('eventReceive', (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, eventAddArg), { draggedEl: ev.subjectEl, view: finalHit.context.viewApi }));
                                }
                            }
                            else {
                                initialContext_1.emitter.trigger('_noEventDrop');
                            }
                        }
                        _this.cleanup();
                    };
                    var component = _this.component;
                    var options = component.context.options;
                    var dragging = _this.dragging = new FeaturefulElementDragging(settings.el);
                    dragging.pointer.selector = EventDragging.SELECTOR;
                    dragging.touchScrollAllowed = false;
                    dragging.autoScroller.isEnabled = options.dragScroll;
                    var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.interactionSettingsStore);
                    hitDragging.useSubjectCenter = settings.useEventCenter;
                    hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
                    hitDragging.emitter.on('dragstart', _this.handleDragStart);
                    hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);
                    hitDragging.emitter.on('pointerup', _this.handlePointerUp);
                    hitDragging.emitter.on('dragend', _this.handleDragEnd);
                    return _this;
                }
                EventDragging.prototype.destroy = function () {
                    this.dragging.destroy();
                };
                // render a drag state on the next receivingCalendar
                EventDragging.prototype.displayDrag = function (nextContext, state) {
                    var initialContext = this.component.context;
                    var prevContext = this.receivingContext;
                    // does the previous calendar need to be cleared?
                    if (prevContext && prevContext !== nextContext) {
                        // does the initial calendar need to be cleared?
                        // if so, don't clear all the way. we still need to to hide the affectedEvents
                        if (prevContext === initialContext) {
                            prevContext.dispatch({
                                type: 'SET_EVENT_DRAG',
                                state: {
                                    affectedEvents: state.affectedEvents,
                                    mutatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEmptyEventStore)(),
                                    isEvent: true,
                                },
                            });
                            // completely clear the old calendar if it wasn't the initial
                        }
                        else {
                            prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
                        }
                    }
                    if (nextContext) {
                        nextContext.dispatch({ type: 'SET_EVENT_DRAG', state: state });
                    }
                };
                EventDragging.prototype.clearDrag = function () {
                    var initialCalendar = this.component.context;
                    var receivingContext = this.receivingContext;
                    if (receivingContext) {
                        receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
                    }
                    // the initial calendar might have an dummy drag state from displayDrag
                    if (initialCalendar !== receivingContext) {
                        initialCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });
                    }
                };
                EventDragging.prototype.cleanup = function () {
                    this.subjectSeg = null;
                    this.isDragging = false;
                    this.eventRange = null;
                    this.relevantEvents = null;
                    this.receivingContext = null;
                    this.validMutation = null;
                    this.mutatedRelevantEvents = null;
                };
                // TODO: test this in IE11
                // QUESTION: why do we need it on the resizable???
                EventDragging.SELECTOR = '.fc-event-draggable, .fc-event-resizable';
                return EventDragging;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.Interaction));
            function computeEventMutation(hit0, hit1, massagers) {
                var dateSpan0 = hit0.dateSpan;
                var dateSpan1 = hit1.dateSpan;
                var date0 = dateSpan0.range.start;
                var date1 = dateSpan1.range.start;
                var standardProps = {};
                if (dateSpan0.allDay !== dateSpan1.allDay) {
                    standardProps.allDay = dateSpan1.allDay;
                    standardProps.hasEnd = hit1.context.options.allDayMaintainDuration;
                    if (dateSpan1.allDay) {
                        // means date1 is already start-of-day,
                        // but date0 needs to be converted
                        date0 = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.startOfDay)(date0);
                    }
                }
                var delta = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.diffDates)(date0, date1, hit0.context.dateEnv, hit0.componentId === hit1.componentId ?
                    hit0.largeUnit :
                    null);
                if (delta.milliseconds) { // has hours/minutes/seconds
                    standardProps.allDay = false;
                }
                var mutation = {
                    datesDelta: delta,
                    standardProps: standardProps,
                };
                for (var _i = 0, massagers_1 = massagers; _i < massagers_1.length; _i++) {
                    var massager = massagers_1[_i];
                    massager(mutation, hit0, hit1);
                }
                return mutation;
            }
            function getComponentTouchDelay(component) {
                var options = component.context.options;
                var delay = options.eventLongPressDelay;
                if (delay == null) {
                    delay = options.longPressDelay;
                }
                return delay;
            }

            var EventResizing = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(EventResizing, _super);
                function EventResizing(settings) {
                    var _this = _super.call(this, settings) || this;
                    // internal state
                    _this.draggingSegEl = null;
                    _this.draggingSeg = null; // TODO: rename to resizingSeg? subjectSeg?
                    _this.eventRange = null;
                    _this.relevantEvents = null;
                    _this.validMutation = null;
                    _this.mutatedRelevantEvents = null;
                    _this.handlePointerDown = function (ev) {
                        var component = _this.component;
                        var segEl = _this.querySegEl(ev);
                        var seg = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getElSeg)(segEl);
                        var eventRange = _this.eventRange = seg.eventRange;
                        _this.dragging.minDistance = component.context.options.eventDragMinDistance;
                        // if touch, need to be working with a selected event
                        _this.dragging.setIgnoreMove(!_this.component.isValidSegDownEl(ev.origEvent.target) ||
                            (ev.isTouch && _this.component.props.eventSelection !== eventRange.instance.instanceId));
                    };
                    _this.handleDragStart = function (ev) {
                        var context = _this.component.context;
                        var eventRange = _this.eventRange;
                        _this.relevantEvents = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getRelevantEvents)(context.getCurrentData().eventStore, _this.eventRange.instance.instanceId);
                        var segEl = _this.querySegEl(ev);
                        _this.draggingSegEl = segEl;
                        _this.draggingSeg = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getElSeg)(segEl);
                        context.calendarApi.unselect();
                        context.emitter.trigger('eventResizeStart', {
                            el: segEl,
                            event: new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(context, eventRange.def, eventRange.instance),
                            jsEvent: ev.origEvent,
                            view: context.viewApi,
                        });
                    };
                    _this.handleHitUpdate = function (hit, isFinal, ev) {
                        var context = _this.component.context;
                        var relevantEvents = _this.relevantEvents;
                        var initialHit = _this.hitDragging.initialHit;
                        var eventInstance = _this.eventRange.instance;
                        var mutation = null;
                        var mutatedRelevantEvents = null;
                        var isInvalid = false;
                        var interaction = {
                            affectedEvents: relevantEvents,
                            mutatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEmptyEventStore)(),
                            isEvent: true,
                        };
                        if (hit) {
                            var disallowed = hit.componentId === initialHit.componentId
                                && _this.isHitComboAllowed
                                && !_this.isHitComboAllowed(initialHit, hit);
                            if (!disallowed) {
                                mutation = computeMutation(initialHit, hit, ev.subjectEl.classList.contains('fc-event-resizer-start'), eventInstance.range);
                            }
                        }
                        if (mutation) {
                            mutatedRelevantEvents = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.applyMutationToEventStore)(relevantEvents, context.getCurrentData().eventUiBases, mutation, context);
                            interaction.mutatedEvents = mutatedRelevantEvents;
                            if (!(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.isInteractionValid)(interaction, hit.dateProfile, context)) {
                                isInvalid = true;
                                mutation = null;
                                mutatedRelevantEvents = null;
                                interaction.mutatedEvents = null;
                            }
                        }
                        if (mutatedRelevantEvents) {
                            context.dispatch({
                                type: 'SET_EVENT_RESIZE',
                                state: interaction,
                            });
                        }
                        else {
                            context.dispatch({ type: 'UNSET_EVENT_RESIZE' });
                        }
                        if (!isInvalid) {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.enableCursor)();
                        }
                        else {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.disableCursor)();
                        }
                        if (!isFinal) {
                            if (mutation && isHitsEqual(initialHit, hit)) {
                                mutation = null;
                            }
                            _this.validMutation = mutation;
                            _this.mutatedRelevantEvents = mutatedRelevantEvents;
                        }
                    };
                    _this.handleDragEnd = function (ev) {
                        var context = _this.component.context;
                        var eventDef = _this.eventRange.def;
                        var eventInstance = _this.eventRange.instance;
                        var eventApi = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(context, eventDef, eventInstance);
                        var relevantEvents = _this.relevantEvents;
                        var mutatedRelevantEvents = _this.mutatedRelevantEvents;
                        context.emitter.trigger('eventResizeStop', {
                            el: _this.draggingSegEl,
                            event: eventApi,
                            jsEvent: ev.origEvent,
                            view: context.viewApi,
                        });
                        if (_this.validMutation) {
                            var updatedEventApi = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(context, mutatedRelevantEvents.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null);
                            context.dispatch({
                                type: 'MERGE_EVENTS',
                                eventStore: mutatedRelevantEvents,
                            });
                            var eventChangeArg = {
                                oldEvent: eventApi,
                                event: updatedEventApi,
                                relatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.buildEventApis)(mutatedRelevantEvents, context, eventInstance),
                                revert: function () {
                                    context.dispatch({
                                        type: 'MERGE_EVENTS',
                                        eventStore: relevantEvents, // the pre-change events
                                    });
                                },
                            };
                            context.emitter.trigger('eventResize', (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, eventChangeArg), { el: _this.draggingSegEl, startDelta: _this.validMutation.startDelta || (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createDuration)(0), endDelta: _this.validMutation.endDelta || (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createDuration)(0), jsEvent: ev.origEvent, view: context.viewApi }));
                            context.emitter.trigger('eventChange', eventChangeArg);
                        }
                        else {
                            context.emitter.trigger('_noEventResize');
                        }
                        // reset all internal state
                        _this.draggingSeg = null;
                        _this.relevantEvents = null;
                        _this.validMutation = null;
                        // okay to keep eventInstance around. useful to set it in handlePointerDown
                    };
                    var component = settings.component;
                    var dragging = _this.dragging = new FeaturefulElementDragging(settings.el);
                    dragging.pointer.selector = '.fc-event-resizer';
                    dragging.touchScrollAllowed = false;
                    dragging.autoScroller.isEnabled = component.context.options.dragScroll;
                    var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.interactionSettingsToStore)(settings));
                    hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
                    hitDragging.emitter.on('dragstart', _this.handleDragStart);
                    hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);
                    hitDragging.emitter.on('dragend', _this.handleDragEnd);
                    return _this;
                }
                EventResizing.prototype.destroy = function () {
                    this.dragging.destroy();
                };
                EventResizing.prototype.querySegEl = function (ev) {
                    return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementClosest)(ev.subjectEl, '.fc-event');
                };
                return EventResizing;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.Interaction));
            function computeMutation(hit0, hit1, isFromStart, instanceRange) {
                var dateEnv = hit0.context.dateEnv;
                var date0 = hit0.dateSpan.range.start;
                var date1 = hit1.dateSpan.range.start;
                var delta = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.diffDates)(date0, date1, dateEnv, hit0.largeUnit);
                if (isFromStart) {
                    if (dateEnv.add(instanceRange.start, delta) < instanceRange.end) {
                        return { startDelta: delta };
                    }
                }
                else if (dateEnv.add(instanceRange.end, delta) > instanceRange.start) {
                    return { endDelta: delta };
                }
                return null;
            }

            var UnselectAuto = /** @class */ (function () {
                function UnselectAuto(context) {
                    var _this = this;
                    this.context = context;
                    this.isRecentPointerDateSelect = false; // wish we could use a selector to detect date selection, but uses hit system
                    this.matchesCancel = false;
                    this.matchesEvent = false;
                    this.onSelect = function (selectInfo) {
                        if (selectInfo.jsEvent) {
                            _this.isRecentPointerDateSelect = true;
                        }
                    };
                    this.onDocumentPointerDown = function (pev) {
                        var unselectCancel = _this.context.options.unselectCancel;
                        var downEl = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getEventTargetViaRoot)(pev.origEvent);
                        _this.matchesCancel = !!(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementClosest)(downEl, unselectCancel);
                        _this.matchesEvent = !!(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementClosest)(downEl, EventDragging.SELECTOR); // interaction started on an event?
                    };
                    this.onDocumentPointerUp = function (pev) {
                        var context = _this.context;
                        var documentPointer = _this.documentPointer;
                        var calendarState = context.getCurrentData();
                        // touch-scrolling should never unfocus any type of selection
                        if (!documentPointer.wasTouchScroll) {
                            if (calendarState.dateSelection && // an existing date selection?
                                !_this.isRecentPointerDateSelect // a new pointer-initiated date selection since last onDocumentPointerUp?
                            ) {
                                var unselectAuto = context.options.unselectAuto;
                                if (unselectAuto && (!unselectAuto || !_this.matchesCancel)) {
                                    context.calendarApi.unselect(pev);
                                }
                            }
                            if (calendarState.eventSelection && // an existing event selected?
                                !_this.matchesEvent // interaction DIDN'T start on an event
                            ) {
                                context.dispatch({ type: 'UNSELECT_EVENT' });
                            }
                        }
                        _this.isRecentPointerDateSelect = false;
                    };
                    var documentPointer = this.documentPointer = new PointerDragging(document);
                    documentPointer.shouldIgnoreMove = true;
                    documentPointer.shouldWatchScroll = false;
                    documentPointer.emitter.on('pointerdown', this.onDocumentPointerDown);
                    documentPointer.emitter.on('pointerup', this.onDocumentPointerUp);
                    /*
        TODO: better way to know about whether there was a selection with the pointer
        */
                    context.emitter.on('select', this.onSelect);
                }
                UnselectAuto.prototype.destroy = function () {
                    this.context.emitter.off('select', this.onSelect);
                    this.documentPointer.destroy();
                };
                return UnselectAuto;
            }());

            var OPTION_REFINERS = {
                fixedMirrorParent: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
            };
            var LISTENER_REFINERS = {
                dateClick: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventDragStart: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventDragStop: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventDrop: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventResizeStart: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventResizeStop: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventResize: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                drop: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventReceive: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
                eventLeave: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.identity,
            };

            /*
Given an already instantiated draggable object for one-or-more elements,
Interprets any dragging as an attempt to drag an events that lives outside
of a calendar onto a calendar.
*/
            var ExternalElementDragging = /** @class */ (function () {
                function ExternalElementDragging(dragging, suppliedDragMeta) {
                    var _this = this;
                    this.receivingContext = null;
                    this.droppableEvent = null; // will exist for all drags, even if create:false
                    this.suppliedDragMeta = null;
                    this.dragMeta = null;
                    this.handleDragStart = function (ev) {
                        _this.dragMeta = _this.buildDragMeta(ev.subjectEl);
                    };
                    this.handleHitUpdate = function (hit, isFinal, ev) {
                        var dragging = _this.hitDragging.dragging;
                        var receivingContext = null;
                        var droppableEvent = null;
                        var isInvalid = false;
                        var interaction = {
                            affectedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEmptyEventStore)(),
                            mutatedEvents: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEmptyEventStore)(),
                            isEvent: _this.dragMeta.create,
                        };
                        if (hit) {
                            receivingContext = hit.context;
                            if (_this.canDropElOnCalendar(ev.subjectEl, receivingContext)) {
                                droppableEvent = computeEventForDateSpan(hit.dateSpan, _this.dragMeta, receivingContext);
                                interaction.mutatedEvents = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.eventTupleToStore)(droppableEvent);
                                isInvalid = !(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.isInteractionValid)(interaction, hit.dateProfile, receivingContext);
                                if (isInvalid) {
                                    interaction.mutatedEvents = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEmptyEventStore)();
                                    droppableEvent = null;
                                }
                            }
                        }
                        _this.displayDrag(receivingContext, interaction);
                        // show mirror if no already-rendered mirror element OR if we are shutting down the mirror (?)
                        // TODO: wish we could somehow wait for dispatch to guarantee render
                        dragging.setMirrorIsVisible(isFinal || !droppableEvent || !document.querySelector('.fc-event-mirror'));
                        if (!isInvalid) {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.enableCursor)();
                        }
                        else {
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.disableCursor)();
                        }
                        if (!isFinal) {
                            dragging.setMirrorNeedsRevert(!droppableEvent);
                            _this.receivingContext = receivingContext;
                            _this.droppableEvent = droppableEvent;
                        }
                    };
                    this.handleDragEnd = function (pev) {
                        var _a = _this, receivingContext = _a.receivingContext, droppableEvent = _a.droppableEvent;
                        _this.clearDrag();
                        if (receivingContext && droppableEvent) {
                            var finalHit = _this.hitDragging.finalHit;
                            var finalView = finalHit.context.viewApi;
                            var dragMeta = _this.dragMeta;
                            receivingContext.emitter.trigger('drop', (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, buildDatePointApiWithContext(finalHit.dateSpan, receivingContext)), { draggedEl: pev.subjectEl, jsEvent: pev.origEvent, view: finalView }));
                            if (dragMeta.create) {
                                var addingEvents_1 = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.eventTupleToStore)(droppableEvent);
                                receivingContext.dispatch({
                                    type: 'MERGE_EVENTS',
                                    eventStore: addingEvents_1,
                                });
                                if (pev.isTouch) {
                                    receivingContext.dispatch({
                                        type: 'SELECT_EVENT',
                                        eventInstanceId: droppableEvent.instance.instanceId,
                                    });
                                }
                                // signal that an external event landed
                                receivingContext.emitter.trigger('eventReceive', {
                                    event: new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.EventApi(receivingContext, droppableEvent.def, droppableEvent.instance),
                                    relatedEvents: [],
                                    revert: function () {
                                        receivingContext.dispatch({
                                            type: 'REMOVE_EVENTS',
                                            eventStore: addingEvents_1,
                                        });
                                    },
                                    draggedEl: pev.subjectEl,
                                    view: finalView,
                                });
                            }
                        }
                        _this.receivingContext = null;
                        _this.droppableEvent = null;
                    };
                    var hitDragging = this.hitDragging = new HitDragging(dragging, _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.interactionSettingsStore);
                    hitDragging.requireInitial = false; // will start outside of a component
                    hitDragging.emitter.on('dragstart', this.handleDragStart);
                    hitDragging.emitter.on('hitupdate', this.handleHitUpdate);
                    hitDragging.emitter.on('dragend', this.handleDragEnd);
                    this.suppliedDragMeta = suppliedDragMeta;
                }
                ExternalElementDragging.prototype.buildDragMeta = function (subjectEl) {
                    if (typeof this.suppliedDragMeta === 'object') {
                        return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.parseDragMeta)(this.suppliedDragMeta);
                    }
                    if (typeof this.suppliedDragMeta === 'function') {
                        return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.parseDragMeta)(this.suppliedDragMeta(subjectEl));
                    }
                    return getDragMetaFromEl(subjectEl);
                };
                ExternalElementDragging.prototype.displayDrag = function (nextContext, state) {
                    var prevContext = this.receivingContext;
                    if (prevContext && prevContext !== nextContext) {
                        prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
                    }
                    if (nextContext) {
                        nextContext.dispatch({ type: 'SET_EVENT_DRAG', state: state });
                    }
                };
                ExternalElementDragging.prototype.clearDrag = function () {
                    if (this.receivingContext) {
                        this.receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
                    }
                };
                ExternalElementDragging.prototype.canDropElOnCalendar = function (el, receivingContext) {
                    var dropAccept = receivingContext.options.dropAccept;
                    if (typeof dropAccept === 'function') {
                        return dropAccept.call(receivingContext.calendarApi, el);
                    }
                    if (typeof dropAccept === 'string' && dropAccept) {
                        return Boolean((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.elementMatches)(el, dropAccept));
                    }
                    return true;
                };
                return ExternalElementDragging;
            }());
// Utils for computing event store from the DragMeta
// ----------------------------------------------------------------------------------------------------
            function computeEventForDateSpan(dateSpan, dragMeta, context) {
                var defProps = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, dragMeta.leftoverProps);
                for (var _i = 0, _a = context.pluginHooks.externalDefTransforms; _i < _a.length; _i++) {
                    var transform = _a[_i];
                    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)(defProps, transform(dateSpan, dragMeta));
                }
                var _b = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.refineEventDef)(defProps, context), refined = _b.refined, extra = _b.extra;
                var def = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.parseEventDef)(refined, extra, dragMeta.sourceId, dateSpan.allDay, context.options.forceEventDuration || Boolean(dragMeta.duration), // hasEnd
                    context);
                var start = dateSpan.range.start;
                // only rely on time info if drop zone is all-day,
                // otherwise, we already know the time
                if (dateSpan.allDay && dragMeta.startTime) {
                    start = context.dateEnv.add(start, dragMeta.startTime);
                }
                var end = dragMeta.duration ?
                    context.dateEnv.add(start, dragMeta.duration) :
                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.getDefaultEventEnd)(dateSpan.allDay, start, context);
                var instance = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createEventInstance)(def.defId, { start: start, end: end });
                return { def: def, instance: instance };
            }
// Utils for extracting data from element
// ----------------------------------------------------------------------------------------------------
            function getDragMetaFromEl(el) {
                var str = getEmbeddedElData(el, 'event');
                var obj = str ?
                    JSON.parse(str) :
                    { create: false }; // if no embedded data, assume no event creation
                return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.parseDragMeta)(obj);
            }
            _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.config.dataAttrPrefix = '';
            function getEmbeddedElData(el, name) {
                var prefix = _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.config.dataAttrPrefix;
                var prefixedName = (prefix ? prefix + '-' : '') + name;
                return el.getAttribute('data-' + prefixedName) || '';
            }

            /*
Makes an element (that is *external* to any calendar) draggable.
Can pass in data that determines how an event will be created when dropped onto a calendar.
Leverages FullCalendar's internal drag-n-drop functionality WITHOUT a third-party drag system.
*/
            var ExternalDraggable = /** @class */ (function () {
                function ExternalDraggable(el, settings) {
                    var _this = this;
                    if (settings === void 0) { settings = {}; }
                    this.handlePointerDown = function (ev) {
                        var dragging = _this.dragging;
                        var _a = _this.settings, minDistance = _a.minDistance, longPressDelay = _a.longPressDelay;
                        dragging.minDistance =
                            minDistance != null ?
                                minDistance :
                                (ev.isTouch ? 0 : _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.BASE_OPTION_DEFAULTS.eventDragMinDistance);
                        dragging.delay =
                            ev.isTouch ? // TODO: eventually read eventLongPressDelay instead vvv
                                (longPressDelay != null ? longPressDelay : _fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.BASE_OPTION_DEFAULTS.longPressDelay) :
                                0;
                    };
                    this.handleDragStart = function (ev) {
                        if (ev.isTouch &&
                            _this.dragging.delay &&
                            ev.subjectEl.classList.contains('fc-event')) {
                            _this.dragging.mirror.getMirrorEl().classList.add('fc-event-selected');
                        }
                    };
                    this.settings = settings;
                    var dragging = this.dragging = new FeaturefulElementDragging(el);
                    dragging.touchScrollAllowed = false;
                    if (settings.itemSelector != null) {
                        dragging.pointer.selector = settings.itemSelector;
                    }
                    if (settings.appendTo != null) {
                        dragging.mirror.parentNode = settings.appendTo; // TODO: write tests
                    }
                    dragging.emitter.on('pointerdown', this.handlePointerDown);
                    dragging.emitter.on('dragstart', this.handleDragStart);
                    new ExternalElementDragging(dragging, settings.eventData); // eslint-disable-line no-new
                }
                ExternalDraggable.prototype.destroy = function () {
                    this.dragging.destroy();
                };
                return ExternalDraggable;
            }());

            /*
Detects when a *THIRD-PARTY* drag-n-drop system interacts with elements.
The third-party system is responsible for drawing the visuals effects of the drag.
This class simply monitors for pointer movements and fires events.
It also has the ability to hide the moving element (the "mirror") during the drag.
*/
            var InferredElementDragging = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(InferredElementDragging, _super);
                function InferredElementDragging(containerEl) {
                    var _this = _super.call(this, containerEl) || this;
                    _this.shouldIgnoreMove = false;
                    _this.mirrorSelector = '';
                    _this.currentMirrorEl = null;
                    _this.handlePointerDown = function (ev) {
                        _this.emitter.trigger('pointerdown', ev);
                        if (!_this.shouldIgnoreMove) {
                            // fire dragstart right away. does not support delay or min-distance
                            _this.emitter.trigger('dragstart', ev);
                        }
                    };
                    _this.handlePointerMove = function (ev) {
                        if (!_this.shouldIgnoreMove) {
                            _this.emitter.trigger('dragmove', ev);
                        }
                    };
                    _this.handlePointerUp = function (ev) {
                        _this.emitter.trigger('pointerup', ev);
                        if (!_this.shouldIgnoreMove) {
                            // fire dragend right away. does not support a revert animation
                            _this.emitter.trigger('dragend', ev);
                        }
                    };
                    var pointer = _this.pointer = new PointerDragging(containerEl);
                    pointer.emitter.on('pointerdown', _this.handlePointerDown);
                    pointer.emitter.on('pointermove', _this.handlePointerMove);
                    pointer.emitter.on('pointerup', _this.handlePointerUp);
                    return _this;
                }
                InferredElementDragging.prototype.destroy = function () {
                    this.pointer.destroy();
                };
                InferredElementDragging.prototype.setIgnoreMove = function (bool) {
                    this.shouldIgnoreMove = bool;
                };
                InferredElementDragging.prototype.setMirrorIsVisible = function (bool) {
                    if (bool) {
                        // restore a previously hidden element.
                        // use the reference in case the selector class has already been removed.
                        if (this.currentMirrorEl) {
                            this.currentMirrorEl.style.visibility = '';
                            this.currentMirrorEl = null;
                        }
                    }
                    else {
                        var mirrorEl = this.mirrorSelector
                            // TODO: somehow query FullCalendars WITHIN shadow-roots
                            ? document.querySelector(this.mirrorSelector)
                            : null;
                        if (mirrorEl) {
                            this.currentMirrorEl = mirrorEl;
                            mirrorEl.style.visibility = 'hidden';
                        }
                    }
                };
                return InferredElementDragging;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.ElementDragging));

            /*
Bridges third-party drag-n-drop systems with FullCalendar.
Must be instantiated and destroyed by caller.
*/
            var ThirdPartyDraggable = /** @class */ (function () {
                function ThirdPartyDraggable(containerOrSettings, settings) {
                    var containerEl = document;
                    if (
                        // wish we could just test instanceof EventTarget, but doesn't work in IE11
                        containerOrSettings === document ||
                        containerOrSettings instanceof Element) {
                        containerEl = containerOrSettings;
                        settings = settings || {};
                    }
                    else {
                        settings = (containerOrSettings || {});
                    }
                    var dragging = this.dragging = new InferredElementDragging(containerEl);
                    if (typeof settings.itemSelector === 'string') {
                        dragging.pointer.selector = settings.itemSelector;
                    }
                    else if (containerEl === document) {
                        dragging.pointer.selector = '[data-event]';
                    }
                    if (typeof settings.mirrorSelector === 'string') {
                        dragging.mirrorSelector = settings.mirrorSelector;
                    }
                    new ExternalElementDragging(dragging, settings.eventData); // eslint-disable-line no-new
                }
                ThirdPartyDraggable.prototype.destroy = function () {
                    this.dragging.destroy();
                };
                return ThirdPartyDraggable;
            }());

            var main = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_0__.createPlugin)({
                componentInteractions: [DateClicking, DateSelecting, EventDragging, EventResizing],
                calendarInteractions: [UnselectAuto],
                elementDraggingImpl: FeaturefulElementDragging,
                optionRefiners: OPTION_REFINERS,
                listenerRefiners: LISTENER_REFINERS,
            });

            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (main);

//# sourceMappingURL=main.js.map


            /***/ }),

        /***/ "./node_modules/@fullcalendar/list/main.js":
        /*!*************************************************!*\
  !*** ./node_modules/@fullcalendar/list/main.js ***!
  \*************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ListView: () => (/* binding */ ListView),
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.css */ "./node_modules/@fullcalendar/list/main.css");
            /* harmony import */ var _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/common */ "./node_modules/@fullcalendar/common/main.js");
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
            /*!
FullCalendar v5.11.5
Docs & License: https://fullcalendar.io/
(c) 2022 Adam Shaw
*/





            var ListViewHeaderRow = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ListViewHeaderRow, _super);
                function ListViewHeaderRow() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.state = {
                        textId: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getUniqueDomId)(),
                    };
                    return _this;
                }
                ListViewHeaderRow.prototype.render = function () {
                    var _a = this.context, theme = _a.theme, dateEnv = _a.dateEnv, options = _a.options, viewApi = _a.viewApi;
                    var _b = this.props, cellId = _b.cellId, dayDate = _b.dayDate, todayRange = _b.todayRange;
                    var textId = this.state.textId;
                    var dayMeta = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getDateMeta)(dayDate, todayRange);
                    // will ever be falsy?
                    var text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';
                    // will ever be falsy? also, BAD NAME "alt"
                    var sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';
                    var hookProps = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ date: dateEnv.toDate(dayDate), view: viewApi, textId: textId,
                        text: text,
                        sideText: sideText, navLinkAttrs: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildNavLinkAttrs)(this.context, dayDate), sideNavLinkAttrs: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildNavLinkAttrs)(this.context, dayDate, 'day', false) }, dayMeta);
                    var classNames = ['fc-list-day'].concat((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getDayClassNames)(dayMeta, theme));
                    // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RenderHook, { hookProps: hookProps, classNames: options.dayHeaderClassNames, content: options.dayHeaderContent, defaultContent: renderInnerContent, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), "data-date": (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.formatDayString)(dayDate) },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", { scope: "colgroup", colSpan: 3, id: cellId, "aria-labelledby": textId },
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: 'fc-list-day-cushion ' + theme.getClass('tableCellShaded'), ref: innerElRef }, innerContent)))); }));
                };
                return ListViewHeaderRow;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function renderInnerContent(props) {
                return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,
                    props.text && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ id: props.textId, className: "fc-list-day-text" }, props.navLinkAttrs), props.text)),
                    props.sideText && ( /* not keyboard tabbable */(0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ "aria-hidden": true, className: "fc-list-day-side-text" }, props.sideNavLinkAttrs), props.sideText))));
            }

            var DEFAULT_TIME_FORMAT = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)({
                hour: 'numeric',
                minute: '2-digit',
                meridiem: 'short',
            });
            var ListViewEventRow = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ListViewEventRow, _super);
                function ListViewEventRow() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                ListViewEventRow.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var seg = props.seg, timeHeaderId = props.timeHeaderId, eventHeaderId = props.eventHeaderId, dateHeaderId = props.dateHeaderId;
                    var timeFormat = context.options.eventTimeFormat || DEFAULT_TIME_FORMAT;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.EventRoot, { seg: seg, timeText: "" // BAD. because of all-day content
                        , disableDragging: true, disableResizing: true, defaultContent: function () { return renderEventInnerContent(seg, context); } /* weird */, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday, isSelected: props.isSelected, isDragging: props.isDragging, isResizing: props.isResizing, isDateSelecting: props.isDateSelecting }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { className: ['fc-list-event', hookProps.event.url ? 'fc-event-forced-url' : ''].concat(classNames).join(' '), ref: rootElRef },
                        buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId),
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { "aria-hidden": true, className: "fc-list-event-graphic" },
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", { className: "fc-list-event-dot", style: { borderColor: hookProps.borderColor || hookProps.backgroundColor } })),
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { ref: innerElRef, headers: eventHeaderId + " " + dateHeaderId, className: "fc-list-event-title" }, innerContent))); }));
                };
                return ListViewEventRow;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function renderEventInnerContent(seg, context) {
                var interactiveAttrs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegAnchorAttrs)(seg, context);
                return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, interactiveAttrs), seg.eventRange.def.title));
            }
            function buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {
                var options = context.options;
                if (options.displayEventTime !== false) {
                    var eventDef = seg.eventRange.def;
                    var eventInstance = seg.eventRange.instance;
                    var doAllDay = false;
                    var timeText = void 0;
                    if (eventDef.allDay) {
                        doAllDay = true;
                    }
                    else if ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.isMultiDayRange)(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?
                        if (seg.isStart) {
                            timeText = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildSegTimeText)(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);
                        }
                        else if (seg.isEnd) {
                            timeText = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildSegTimeText)(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);
                        }
                        else {
                            doAllDay = true;
                        }
                    }
                    else {
                        timeText = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildSegTimeText)(seg, timeFormat, context);
                    }
                    if (doAllDay) {
                        var hookProps = {
                            text: context.options.allDayText,
                            view: context.viewApi,
                        };
                        return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RenderHook, { hookProps: hookProps, classNames: options.allDayClassNames, content: options.allDayContent, defaultContent: renderAllDayInner, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { ref: rootElRef, headers: timeHeaderId + " " + dateHeaderId, className: ['fc-list-event-time'].concat(classNames).join(' ') }, innerContent)); }));
                    }
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { className: "fc-list-event-time" }, timeText));
                }
                return null;
            }
            function renderAllDayInner(hookProps) {
                return hookProps.text;
            }

            /*
Responsible for the scroller, and forwarding event-related actions into the "grid".
*/
            var ListView = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ListView, _super);
                function ListView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.computeDateVars = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(computeDateVars);
                    _this.eventStoreToSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(_this._eventStoreToSegs);
                    _this.state = {
                        timeHeaderId: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getUniqueDomId)(),
                        eventHeaderId: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getUniqueDomId)(),
                        dateHeaderIdRoot: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getUniqueDomId)(),
                    };
                    _this.setRootEl = function (rootEl) {
                        if (rootEl) {
                            _this.context.registerInteractiveComponent(_this, {
                                el: rootEl,
                            });
                        }
                        else {
                            _this.context.unregisterInteractiveComponent(_this);
                        }
                    };
                    return _this;
                }
                ListView.prototype.render = function () {
                    var _this = this;
                    var _a = this, props = _a.props, context = _a.context;
                    var extraClassNames = [
                        'fc-list',
                        context.theme.getClass('table'),
                        context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : '',
                    ];
                    var _b = this.computeDateVars(props.dateProfile), dayDates = _b.dayDates, dayRanges = _b.dayRanges;
                    var eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewRoot, { viewSpec: context.viewSpec, elRef: this.setRootEl }, function (rootElRef, classNames) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: rootElRef, className: extraClassNames.concat(classNames).join(' ') },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Scroller, { liquid: !props.isHeightAuto, overflowX: props.isHeightAuto ? 'visible' : 'hidden', overflowY: props.isHeightAuto ? 'visible' : 'auto' }, eventSegs.length > 0 ?
                            _this.renderSegList(eventSegs, dayDates) :
                            _this.renderEmptyMessage()))); }));
                };
                ListView.prototype.renderEmptyMessage = function () {
                    var _a = this.context, options = _a.options, viewApi = _a.viewApi;
                    var hookProps = {
                        text: options.noEventsText,
                        view: viewApi,
                    };
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RenderHook, { hookProps: hookProps, classNames: options.noEventsClassNames, content: options.noEventsContent, defaultContent: renderNoEventsInner, didMount: options.noEventsDidMount, willUnmount: options.noEventsWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: ['fc-list-empty'].concat(classNames).join(' '), ref: rootElRef },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-list-empty-cushion", ref: innerElRef }, innerContent))); }));
                };
                ListView.prototype.renderSegList = function (allSegs, dayDates) {
                    var _a = this.context, theme = _a.theme, options = _a.options;
                    var _b = this.state, timeHeaderId = _b.timeHeaderId, eventHeaderId = _b.eventHeaderId, dateHeaderIdRoot = _b.dateHeaderIdRoot;
                    var segsByDay = groupSegsByDay(allSegs); // sparse array
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowTimer, { unit: "day" }, function (nowDate, todayRange) {
                        var innerNodes = [];
                        for (var dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {
                            var daySegs = segsByDay[dayIndex];
                            if (daySegs) { // sparse array, so might be undefined
                                var dayStr = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.formatDayString)(dayDates[dayIndex]);
                                var dateHeaderId = dateHeaderIdRoot + '-' + dayStr;
                                // append a day header
                                innerNodes.push((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(ListViewHeaderRow, { key: dayStr, cellId: dateHeaderId, dayDate: dayDates[dayIndex], todayRange: todayRange }));
                                daySegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sortEventSegs)(daySegs, options.eventOrder);
                                for (var _i = 0, daySegs_1 = daySegs; _i < daySegs_1.length; _i++) {
                                    var seg = daySegs_1[_i];
                                    innerNodes.push((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(ListViewEventRow, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */, seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, timeHeaderId: timeHeaderId, eventHeaderId: eventHeaderId, dateHeaderId: dateHeaderId }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, todayRange, nowDate))));
                                }
                            }
                        }
                        return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("table", { className: 'fc-list-table ' + theme.getClass('table') },
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("thead", null,
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", null,
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", { scope: "col", id: timeHeaderId }, options.timeHint),
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", { scope: "col", "aria-hidden": true }),
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", { scope: "col", id: eventHeaderId }, options.eventHint))),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tbody", null, innerNodes)));
                    }));
                };
                ListView.prototype._eventStoreToSegs = function (eventStore, eventUiBases, dayRanges) {
                    return this.eventRangesToSegs((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sliceEventStore)(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);
                };
                ListView.prototype.eventRangesToSegs = function (eventRanges, dayRanges) {
                    var segs = [];
                    for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {
                        var eventRange = eventRanges_1[_i];
                        segs.push.apply(segs, this.eventRangeToSegs(eventRange, dayRanges));
                    }
                    return segs;
                };
                ListView.prototype.eventRangeToSegs = function (eventRange, dayRanges) {
                    var dateEnv = this.context.dateEnv;
                    var nextDayThreshold = this.context.options.nextDayThreshold;
                    var range = eventRange.range;
                    var allDay = eventRange.def.allDay;
                    var dayIndex;
                    var segRange;
                    var seg;
                    var segs = [];
                    for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {
                        segRange = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.intersectRanges)(range, dayRanges[dayIndex]);
                        if (segRange) {
                            seg = {
                                component: this,
                                eventRange: eventRange,
                                start: segRange.start,
                                end: segRange.end,
                                isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),
                                isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),
                                dayIndex: dayIndex,
                            };
                            segs.push(seg);
                            // detect when range won't go fully into the next day,
                            // and mutate the latest seg to the be the end.
                            if (!seg.isEnd && !allDay &&
                                dayIndex + 1 < dayRanges.length &&
                                range.end <
                                dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {
                                seg.end = range.end;
                                seg.isEnd = true;
                                break;
                            }
                        }
                    }
                    return segs;
                };
                return ListView;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));
            function renderNoEventsInner(hookProps) {
                return hookProps.text;
            }
            function computeDateVars(dateProfile) {
                var dayStart = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.startOfDay)(dateProfile.renderRange.start);
                var viewEnd = dateProfile.renderRange.end;
                var dayDates = [];
                var dayRanges = [];
                while (dayStart < viewEnd) {
                    dayDates.push(dayStart);
                    dayRanges.push({
                        start: dayStart,
                        end: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDays)(dayStart, 1),
                    });
                    dayStart = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDays)(dayStart, 1);
                }
                return { dayDates: dayDates, dayRanges: dayRanges };
            }
// Returns a sparse array of arrays, segs grouped by their dayIndex
            function groupSegsByDay(segs) {
                var segsByDay = []; // sparse array
                var i;
                var seg;
                for (i = 0; i < segs.length; i += 1) {
                    seg = segs[i];
                    (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))
                        .push(seg);
                }
                return segsByDay;
            }

            var OPTION_REFINERS = {
                listDayFormat: createFalsableFormatter,
                listDaySideFormat: createFalsableFormatter,
                noEventsClassNames: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.identity,
                noEventsContent: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.identity,
                noEventsDidMount: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.identity,
                noEventsWillUnmount: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.identity,
                // noEventsText is defined in base options
            };
            function createFalsableFormatter(input) {
                return input === false ? null : (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)(input);
            }

            var main = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createPlugin)({
                optionRefiners: OPTION_REFINERS,
                views: {
                    list: {
                        component: ListView,
                        buttonTextKey: 'list',
                        listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' }, // like "January 1, 2016"
                    },
                    listDay: {
                        type: 'list',
                        duration: { days: 1 },
                        listDayFormat: { weekday: 'long' }, // day-of-week is all we need. full date is probably in headerToolbar
                    },
                    listWeek: {
                        type: 'list',
                        duration: { weeks: 1 },
                        listDayFormat: { weekday: 'long' },
                        listDaySideFormat: { month: 'long', day: 'numeric', year: 'numeric' },
                    },
                    listMonth: {
                        type: 'list',
                        duration: { month: 1 },
                        listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have
                    },
                    listYear: {
                        type: 'list',
                        duration: { year: 1 },
                        listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have
                    },
                },
            });

            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (main);

//# sourceMappingURL=main.js.map


            /***/ }),

        /***/ "./node_modules/@fullcalendar/timegrid/main.js":
        /*!*****************************************************!*\
  !*** ./node_modules/@fullcalendar/timegrid/main.js ***!
  \*****************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   DayTimeCols: () => (/* binding */ DayTimeCols),
                /* harmony export */   DayTimeColsSlicer: () => (/* binding */ DayTimeColsSlicer),
                /* harmony export */   DayTimeColsView: () => (/* binding */ DayTimeColsView),
                /* harmony export */   TimeCols: () => (/* binding */ TimeCols),
                /* harmony export */   TimeColsSlatsCoords: () => (/* binding */ TimeColsSlatsCoords),
                /* harmony export */   TimeColsView: () => (/* binding */ TimeColsView),
                /* harmony export */   buildDayRanges: () => (/* binding */ buildDayRanges),
                /* harmony export */   buildSlatMetas: () => (/* binding */ buildSlatMetas),
                /* harmony export */   buildTimeColsModel: () => (/* binding */ buildTimeColsModel),
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.css */ "./node_modules/@fullcalendar/timegrid/main.css");
            /* harmony import */ var _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/common */ "./node_modules/@fullcalendar/common/main.js");
            /* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
            /* harmony import */ var _fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fullcalendar/daygrid */ "./node_modules/@fullcalendar/daygrid/main.js");
            /*!
FullCalendar v5.11.5
Docs & License: https://fullcalendar.io/
(c) 2022 Adam Shaw
*/






            var AllDaySplitter = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(AllDaySplitter, _super);
                function AllDaySplitter() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                AllDaySplitter.prototype.getKeyInfo = function () {
                    return {
                        allDay: {},
                        timed: {},
                    };
                };
                AllDaySplitter.prototype.getKeysForDateSpan = function (dateSpan) {
                    if (dateSpan.allDay) {
                        return ['allDay'];
                    }
                    return ['timed'];
                };
                AllDaySplitter.prototype.getKeysForEventDef = function (eventDef) {
                    if (!eventDef.allDay) {
                        return ['timed'];
                    }
                    if ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.hasBgRendering)(eventDef)) {
                        return ['timed', 'allDay'];
                    }
                    return ['allDay'];
                };
                return AllDaySplitter;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Splitter));

            var DEFAULT_SLAT_LABEL_FORMAT = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)({
                hour: 'numeric',
                minute: '2-digit',
                omitZeroMinute: true,
                meridiem: 'short',
            });
            function TimeColsAxisCell(props) {
                var classNames = [
                    'fc-timegrid-slot',
                    'fc-timegrid-slot-label',
                    props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',
                ];
                return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewContextType.Consumer, null, function (context) {
                    if (!props.isLabeled) {
                        return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { className: classNames.join(' '), "data-time": props.isoTimeStr }));
                    }
                    var dateEnv = context.dateEnv, options = context.options, viewApi = context.viewApi;
                    var labelFormat = // TODO: fully pre-parse
                        options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :
                            Array.isArray(options.slotLabelFormat) ? (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)(options.slotLabelFormat[0]) :
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)(options.slotLabelFormat);
                    var hookProps = {
                        level: 0,
                        time: props.time,
                        date: dateEnv.toDate(props.date),
                        view: viewApi,
                        text: dateEnv.format(props.date, labelFormat),
                    };
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RenderHook, { hookProps: hookProps, classNames: options.slotLabelClassNames, content: options.slotLabelContent, defaultContent: renderInnerContent, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), "data-time": props.isoTimeStr },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame" },
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-slot-label-cushion fc-scrollgrid-shrink-cushion", ref: innerElRef }, innerContent)))); }));
                }));
            }
            function renderInnerContent(props) {
                return props.text;
            }

            var TimeBodyAxis = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeBodyAxis, _super);
                function TimeBodyAxis() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeBodyAxis.prototype.render = function () {
                    return this.props.slatMetas.map(function (slatMeta) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { key: slatMeta.key },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColsAxisCell, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, slatMeta)))); });
                };
                return TimeBodyAxis;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));

            var DEFAULT_WEEK_NUM_FORMAT = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)({ week: 'short' });
            var AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;
            var TimeColsView = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeColsView, _super);
                function TimeColsView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.allDaySplitter = new AllDaySplitter(); // for use by subclasses
                    _this.headerElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.rootElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.scrollerElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.state = {
                        slatCoords: null,
                    };
                    _this.handleScrollTopRequest = function (scrollTop) {
                        var scrollerEl = _this.scrollerElRef.current;
                        if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer
                            scrollerEl.scrollTop = scrollTop;
                        }
                    };
                    /* Header Render Methods
        ------------------------------------------------------------------------------------------------------------------*/
                    _this.renderHeadAxis = function (rowKey, frameHeight) {
                        if (frameHeight === void 0) { frameHeight = ''; }
                        var options = _this.context.options;
                        var dateProfile = _this.props.dateProfile;
                        var range = dateProfile.renderRange;
                        var dayCnt = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.diffDays)(range.start, range.end);
                        var navLinkAttrs = (dayCnt === 1) // only do in day views (to avoid doing in week views that dont need it)
                            ? (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildNavLinkAttrs)(_this.context, range.start, 'week')
                            : {};
                        if (options.weekNumbers && rowKey === 'day') {
                            return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.WeekNumberRoot, { date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, function (rootElRef, classNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", { ref: rootElRef, "aria-hidden": true, className: [
                                        'fc-timegrid-axis',
                                        'fc-scrollgrid-shrink',
                                    ].concat(classNames).join(' ') },
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-axis-frame fc-scrollgrid-shrink-frame fc-timegrid-axis-frame-liquid", style: { height: frameHeight } },
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ ref: innerElRef, className: "fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner" }, navLinkAttrs), innerContent)))); }));
                        }
                        return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("th", { "aria-hidden": true, className: "fc-timegrid-axis" },
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-axis-frame", style: { height: frameHeight } })));
                    };
                    /* Table Component Render Methods
        ------------------------------------------------------------------------------------------------------------------*/
                    // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,
                    // but DayGrid still needs to have classNames on inner elements in order to measure.
                    _this.renderTableRowAxis = function (rowHeight) {
                        var _a = _this.context, options = _a.options, viewApi = _a.viewApi;
                        var hookProps = {
                            text: options.allDayText,
                            view: viewApi,
                        };
                        return (
                            // TODO: make reusable hook. used in list view too
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RenderHook, { hookProps: hookProps, classNames: options.allDayClassNames, content: options.allDayContent, defaultContent: renderAllDayInner, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { ref: rootElRef, "aria-hidden": true, className: [
                                        'fc-timegrid-axis',
                                        'fc-scrollgrid-shrink',
                                    ].concat(classNames).join(' ') },
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: 'fc-timegrid-axis-frame fc-scrollgrid-shrink-frame' + (rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : ''), style: { height: rowHeight } },
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", { className: "fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner", ref: innerElRef }, innerContent)))); }));
                    };
                    _this.handleSlatCoords = function (slatCoords) {
                        _this.setState({ slatCoords: slatCoords });
                    };
                    return _this;
                }
                // rendering
                // ----------------------------------------------------------------------------------------------------
                TimeColsView.prototype.renderSimpleLayout = function (headerRowContent, allDayContent, timeContent) {
                    var _a = this, context = _a.context, props = _a.props;
                    var sections = [];
                    var stickyHeaderDates = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyHeaderDates)(context.options);
                    if (headerRowContent) {
                        sections.push({
                            type: 'header',
                            key: 'header',
                            isSticky: stickyHeaderDates,
                            chunk: {
                                elRef: this.headerElRef,
                                tableClassName: 'fc-col-header',
                                rowContent: headerRowContent,
                            },
                        });
                    }
                    if (allDayContent) {
                        sections.push({
                            type: 'body',
                            key: 'all-day',
                            chunk: { content: allDayContent },
                        });
                        sections.push({
                            type: 'body',
                            key: 'all-day-divider',
                            outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { role: "presentation", className: "fc-scrollgrid-section" },
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),
                        });
                    }
                    sections.push({
                        type: 'body',
                        key: 'body',
                        liquid: true,
                        expandRows: Boolean(context.options.expandRows),
                        chunk: {
                            scrollerElRef: this.scrollerElRef,
                            content: timeContent,
                        },
                    });
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewRoot, { viewSpec: context.viewSpec, elRef: this.rootElRef }, function (rootElRef, classNames) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: ['fc-timegrid'].concat(classNames).join(' '), ref: rootElRef },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections }))); }));
                };
                TimeColsView.prototype.renderHScrollLayout = function (headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {
                    var _this = this;
                    var ScrollGrid = this.context.pluginHooks.scrollGridImpl;
                    if (!ScrollGrid) {
                        throw new Error('No ScrollGrid implementation');
                    }
                    var _a = this, context = _a.context, props = _a.props;
                    var stickyHeaderDates = !props.forPrint && (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyHeaderDates)(context.options);
                    var stickyFooterScrollbar = !props.forPrint && (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getStickyFooterScrollbar)(context.options);
                    var sections = [];
                    if (headerRowContent) {
                        sections.push({
                            type: 'header',
                            key: 'header',
                            isSticky: stickyHeaderDates,
                            syncRowHeights: true,
                            chunks: [
                                {
                                    key: 'axis',
                                    rowContent: function (arg) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { role: "presentation" }, _this.renderHeadAxis('day', arg.rowSyncHeights[0]))); },
                                },
                                {
                                    key: 'cols',
                                    elRef: this.headerElRef,
                                    tableClassName: 'fc-col-header',
                                    rowContent: headerRowContent,
                                },
                            ],
                        });
                    }
                    if (allDayContent) {
                        sections.push({
                            type: 'body',
                            key: 'all-day',
                            syncRowHeights: true,
                            chunks: [
                                {
                                    key: 'axis',
                                    rowContent: function (contentArg) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { role: "presentation" }, _this.renderTableRowAxis(contentArg.rowSyncHeights[0]))); },
                                },
                                {
                                    key: 'cols',
                                    content: allDayContent,
                                },
                            ],
                        });
                        sections.push({
                            key: 'all-day-divider',
                            type: 'body',
                            outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { role: "presentation", className: "fc-scrollgrid-section" },
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),
                        });
                    }
                    var isNowIndicator = context.options.nowIndicator;
                    sections.push({
                        type: 'body',
                        key: 'body',
                        liquid: true,
                        expandRows: Boolean(context.options.expandRows),
                        chunks: [
                            {
                                key: 'axis',
                                content: function (arg) { return (
                                    // TODO: make this now-indicator arrow more DRY with TimeColsContent
                                    (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-axis-chunk" },
                                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("table", { "aria-hidden": true, style: { height: arg.expandRows ? arg.clientHeight : '' } },
                                            arg.tableColGroupNode,
                                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tbody", null,
                                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeBodyAxis, { slatMetas: slatMetas }))),
                                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-now-indicator-container" },
                                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, function (nowDate) {
                                                var nowIndicatorTop = isNowIndicator &&
                                                    slatCoords &&
                                                    slatCoords.safeComputeTop(nowDate); // might return void
                                                if (typeof nowIndicatorTop === 'number') {
                                                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowIndicatorRoot, { isAxis: true, date: nowDate }, function (rootElRef, classNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: rootElRef, className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '), style: { top: nowIndicatorTop } }, innerContent)); }));
                                                }
                                                return null;
                                            })))); },
                            },
                            {
                                key: 'cols',
                                scrollerElRef: this.scrollerElRef,
                                content: timeContent,
                            },
                        ],
                    });
                    if (stickyFooterScrollbar) {
                        sections.push({
                            key: 'footer',
                            type: 'footer',
                            isSticky: true,
                            chunks: [
                                {
                                    key: 'axis',
                                    content: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderScrollShim,
                                },
                                {
                                    key: 'cols',
                                    content: _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderScrollShim,
                                },
                            ],
                        });
                    }
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.ViewRoot, { viewSpec: context.viewSpec, elRef: this.rootElRef }, function (rootElRef, classNames) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: ['fc-timegrid'].concat(classNames).join(' '), ref: rootElRef },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: false, colGroups: [
                                { width: 'shrink', cols: [{ width: 'shrink' }] },
                                { cols: [{ span: colCnt, minWidth: dayMinWidth }] },
                            ], sections: sections }))); }));
                };
                /* Dimensions
    ------------------------------------------------------------------------------------------------------------------*/
                TimeColsView.prototype.getAllDayMaxEventProps = function () {
                    var _a = this.context.options, dayMaxEvents = _a.dayMaxEvents, dayMaxEventRows = _a.dayMaxEventRows;
                    if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?
                        dayMaxEvents = undefined;
                        dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure "auto" goes to a real number
                    }
                    return { dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows };
                };
                return TimeColsView;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));
            function renderAllDayInner(hookProps) {
                return hookProps.text;
            }

            var TimeColsSlatsCoords = /** @class */ (function () {
                function TimeColsSlatsCoords(positions, dateProfile, slotDuration) {
                    this.positions = positions;
                    this.dateProfile = dateProfile;
                    this.slotDuration = slotDuration;
                }
                TimeColsSlatsCoords.prototype.safeComputeTop = function (date) {
                    var dateProfile = this.dateProfile;
                    if ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.rangeContainsMarker)(dateProfile.currentRange, date)) {
                        var startOfDayDate = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.startOfDay)(date);
                        var timeMs = date.valueOf() - startOfDayDate.valueOf();
                        if (timeMs >= (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMs)(dateProfile.slotMinTime) &&
                            timeMs < (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMs)(dateProfile.slotMaxTime)) {
                            return this.computeTimeTop((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createDuration)(timeMs));
                        }
                    }
                    return null;
                };
                // Computes the top coordinate, relative to the bounds of the grid, of the given date.
                // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.
                TimeColsSlatsCoords.prototype.computeDateTop = function (when, startOfDayDate) {
                    if (!startOfDayDate) {
                        startOfDayDate = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.startOfDay)(when);
                    }
                    return this.computeTimeTop((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createDuration)(when.valueOf() - startOfDayDate.valueOf()));
                };
                // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).
                // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.
                // Eventually allow computation with arbirary slat dates.
                TimeColsSlatsCoords.prototype.computeTimeTop = function (duration) {
                    var _a = this, positions = _a.positions, dateProfile = _a.dateProfile;
                    var len = positions.els.length;
                    // floating-point value of # of slots covered
                    var slatCoverage = (duration.milliseconds - (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMs)(dateProfile.slotMinTime)) / (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMs)(this.slotDuration);
                    var slatIndex;
                    var slatRemainder;
                    // compute a floating-point number for how many slats should be progressed through.
                    // from 0 to number of slats (inclusive)
                    // constrained because slotMinTime/slotMaxTime might be customized.
                    slatCoverage = Math.max(0, slatCoverage);
                    slatCoverage = Math.min(len, slatCoverage);
                    // an integer index of the furthest whole slat
                    // from 0 to number slats (*exclusive*, so len-1)
                    slatIndex = Math.floor(slatCoverage);
                    slatIndex = Math.min(slatIndex, len - 1);
                    // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.
                    // could be 1.0 if slatCoverage is covering *all* the slots
                    slatRemainder = slatCoverage - slatIndex;
                    return positions.tops[slatIndex] +
                        positions.getHeight(slatIndex) * slatRemainder;
                };
                return TimeColsSlatsCoords;
            }());

            var TimeColsSlatsBody = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeColsSlatsBody, _super);
                function TimeColsSlatsBody() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeColsSlatsBody.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    var options = context.options;
                    var slatElRefs = props.slatElRefs;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tbody", null, props.slatMetas.map(function (slatMeta, i) {
                        var hookProps = {
                            time: slatMeta.time,
                            date: context.dateEnv.toDate(slatMeta.date),
                            view: context.viewApi,
                        };
                        var classNames = [
                            'fc-timegrid-slot',
                            'fc-timegrid-slot-lane',
                            slatMeta.isLabeled ? '' : 'fc-timegrid-slot-minor',
                        ];
                        return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },
                            props.axis && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColsAxisCell, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, slatMeta))),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RenderHook, { hookProps: hookProps, classNames: options.slotLaneClassNames, content: options.slotLaneContent, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), "data-time": slatMeta.isoTimeStr }, innerContent)); })));
                    })));
                };
                return TimeColsSlatsBody;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));

            /*
for the horizontal "slats" that run width-wise. Has a time axis on a side. Depends on RTL.
*/
            var TimeColsSlats = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeColsSlats, _super);
                function TimeColsSlats() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.rootElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.slatElRefs = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap();
                    return _this;
                }
                TimeColsSlats.prototype.render = function () {
                    var _a = this, props = _a.props, context = _a.context;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: this.rootElRef, className: "fc-timegrid-slots" },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("table", { "aria-hidden": true, className: context.theme.getClass('table'), style: {
                                    minWidth: props.tableMinWidth,
                                    width: props.clientWidth,
                                    height: props.minHeight,
                                } },
                            props.tableColGroupNode /* relies on there only being a single <col> for the axis */,
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));
                };
                TimeColsSlats.prototype.componentDidMount = function () {
                    this.updateSizing();
                };
                TimeColsSlats.prototype.componentDidUpdate = function () {
                    this.updateSizing();
                };
                TimeColsSlats.prototype.componentWillUnmount = function () {
                    if (this.props.onCoords) {
                        this.props.onCoords(null);
                    }
                };
                TimeColsSlats.prototype.updateSizing = function () {
                    var _a = this, context = _a.context, props = _a.props;
                    if (props.onCoords &&
                        props.clientWidth !== null // means sizing has stabilized
                    ) {
                        var rootEl = this.rootElRef.current;
                        if (rootEl.offsetHeight) { // not hidden by css
                            props.onCoords(new TimeColsSlatsCoords(new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));
                        }
                    }
                };
                return TimeColsSlats;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function collectSlatEls(elMap, slatMetas) {
                return slatMetas.map(function (slatMeta) { return elMap[slatMeta.key]; });
            }

            function splitSegsByCol(segs, colCnt) {
                var segsByCol = [];
                var i;
                for (i = 0; i < colCnt; i += 1) {
                    segsByCol.push([]);
                }
                if (segs) {
                    for (i = 0; i < segs.length; i += 1) {
                        segsByCol[segs[i].col].push(segs[i]);
                    }
                }
                return segsByCol;
            }
            function splitInteractionByCol(ui, colCnt) {
                var byRow = [];
                if (!ui) {
                    for (var i = 0; i < colCnt; i += 1) {
                        byRow[i] = null;
                    }
                }
                else {
                    for (var i = 0; i < colCnt; i += 1) {
                        byRow[i] = {
                            affectedInstances: ui.affectedInstances,
                            isEvent: ui.isEvent,
                            segs: [],
                        };
                    }
                    for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {
                        var seg = _a[_i];
                        byRow[seg.col].segs.push(seg);
                    }
                }
                return byRow;
            }

            var TimeColMoreLink = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeColMoreLink, _super);
                function TimeColMoreLink() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.rootElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    return _this;
                }
                TimeColMoreLink.prototype.render = function () {
                    var _this = this;
                    var props = this.props;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.MoreLinkRoot, { allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, alignmentElRef: this.rootElRef, defaultContent: renderMoreLinkInner, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: function () { return renderPlainFgSegs(props.hiddenSegs, props); } }, function (rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("a", { ref: function (el) {
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.setRef)(rootElRef, el);
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.setRef)(_this.rootElRef, el);
                            }, className: ['fc-timegrid-more-link'].concat(classNames).join(' '), style: { top: props.top, bottom: props.bottom }, onClick: handleClick, title: title, "aria-expanded": isExpanded, "aria-controls": popoverId },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: innerElRef, className: "fc-timegrid-more-link-inner fc-sticky" }, innerContent))); }));
                };
                return TimeColMoreLink;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function renderMoreLinkInner(props) {
                return props.shortText;
            }

// segInputs assumed sorted
            function buildPositioning(segInputs, strictOrder, maxStackCnt) {
                var hierarchy = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.SegHierarchy();
                if (strictOrder != null) {
                    hierarchy.strictOrder = strictOrder;
                }
                if (maxStackCnt != null) {
                    hierarchy.maxStackCnt = maxStackCnt;
                }
                var hiddenEntries = hierarchy.addSegs(segInputs);
                var hiddenGroups = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.groupIntersectingEntries)(hiddenEntries);
                var web = buildWeb(hierarchy);
                web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0
                var segRects = webToRects(web);
                return { segRects: segRects, hiddenGroups: hiddenGroups };
            }
            function buildWeb(hierarchy) {
                var entriesByLevel = hierarchy.entriesByLevel;
                var buildNode = cacheable(function (level, lateral) { return level + ':' + lateral; }, function (level, lateral) {
                    var siblingRange = findNextLevelSegs(hierarchy, level, lateral);
                    var nextLevelRes = buildNodes(siblingRange, buildNode);
                    var entry = entriesByLevel[level][lateral];
                    return [
                        (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, entry), { nextLevelNodes: nextLevelRes[0] }),
                        entry.thickness + nextLevelRes[1], // the pressure builds
                    ];
                });
                return buildNodes(entriesByLevel.length
                    ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }
                    : null, buildNode)[0];
            }
            function buildNodes(siblingRange, buildNode) {
                if (!siblingRange) {
                    return [[], 0];
                }
                var level = siblingRange.level, lateralStart = siblingRange.lateralStart, lateralEnd = siblingRange.lateralEnd;
                var lateral = lateralStart;
                var pairs = [];
                while (lateral < lateralEnd) {
                    pairs.push(buildNode(level, lateral));
                    lateral += 1;
                }
                pairs.sort(cmpDescPressures);
                return [
                    pairs.map(extractNode),
                    pairs[0][1], // first item's pressure
                ];
            }
            function cmpDescPressures(a, b) {
                return b[1] - a[1];
            }
            function extractNode(a) {
                return a[0];
            }
            function findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {
                var levelCoords = hierarchy.levelCoords, entriesByLevel = hierarchy.entriesByLevel;
                var subjectEntry = entriesByLevel[subjectLevel][subjectLateral];
                var afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;
                var levelCnt = levelCoords.length;
                var level = subjectLevel;
                // skip past levels that are too high up
                for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)
                    ; // do nothing
                for (; level < levelCnt; level += 1) {
                    var entries = entriesByLevel[level];
                    var entry = void 0;
                    var searchIndex = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.binarySearch)(entries, subjectEntry.span.start, _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getEntrySpanEnd);
                    var lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one
                    var lateralEnd = lateralStart;
                    while ( // loop through entries that horizontally intersect
                    (entry = entries[lateralEnd]) && // but not past the whole seg list
                    entry.span.start < subjectEntry.span.end) {
                        lateralEnd += 1;
                    }
                    if (lateralStart < lateralEnd) {
                        return { level: level, lateralStart: lateralStart, lateralEnd: lateralEnd };
                    }
                }
                return null;
            }
            function stretchWeb(topLevelNodes, totalThickness) {
                var stretchNode = cacheable(function (node, startCoord, prevThickness) { return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEntryKey)(node); }, function (node, startCoord, prevThickness) {
                    var nextLevelNodes = node.nextLevelNodes, thickness = node.thickness;
                    var allThickness = thickness + prevThickness;
                    var thicknessFraction = thickness / allThickness;
                    var endCoord;
                    var newChildren = [];
                    if (!nextLevelNodes.length) {
                        endCoord = totalThickness;
                    }
                    else {
                        for (var _i = 0, nextLevelNodes_1 = nextLevelNodes; _i < nextLevelNodes_1.length; _i++) {
                            var childNode = nextLevelNodes_1[_i];
                            if (endCoord === undefined) {
                                var res = stretchNode(childNode, startCoord, allThickness);
                                endCoord = res[0];
                                newChildren.push(res[1]);
                            }
                            else {
                                var res = stretchNode(childNode, endCoord, 0);
                                newChildren.push(res[1]);
                            }
                        }
                    }
                    var newThickness = (endCoord - startCoord) * thicknessFraction;
                    return [endCoord - newThickness, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];
                });
                return topLevelNodes.map(function (node) { return stretchNode(node, 0, 0)[1]; });
            }
// not sorted in any particular order
            function webToRects(topLevelNodes) {
                var rects = [];
                var processNode = cacheable(function (node, levelCoord, stackDepth) { return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEntryKey)(node); }, function (node, levelCoord, stackDepth) {
                    var rect = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, node), { levelCoord: levelCoord,
                        stackDepth: stackDepth, stackForward: 0 });
                    rects.push(rect);
                    return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);
                });
                function processNodes(nodes, levelCoord, stackDepth) {
                    var stackForward = 0;
                    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
                        var node = nodes_1[_i];
                        stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);
                    }
                    return stackForward;
                }
                processNodes(topLevelNodes, 0, 0);
                return rects; // TODO: sort rects by levelCoord to be consistent with toRects?
            }
// TODO: move to general util
            function cacheable(keyFunc, workFunc) {
                var cache = {};
                return function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var key = keyFunc.apply(void 0, args);
                    return (key in cache)
                        ? cache[key]
                        : (cache[key] = workFunc.apply(void 0, args));
                };
            }

            function computeSegVCoords(segs, colDate, slatCoords, eventMinHeight) {
                if (slatCoords === void 0) { slatCoords = null; }
                if (eventMinHeight === void 0) { eventMinHeight = 0; }
                var vcoords = [];
                if (slatCoords) {
                    for (var i = 0; i < segs.length; i += 1) {
                        var seg = segs[i];
                        var spanStart = slatCoords.computeDateTop(seg.start, colDate);
                        var spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(
                            slatCoords.computeDateTop(seg.end, colDate));
                        vcoords.push({
                            start: Math.round(spanStart),
                            end: Math.round(spanEnd), //
                        });
                    }
                }
                return vcoords;
            }
            function computeFgSegPlacements(segs, segVCoords, // might not have for every seg
                                            eventOrderStrict, eventMaxStack) {
                var segInputs = [];
                var dumbSegs = []; // segs without coords
                for (var i = 0; i < segs.length; i += 1) {
                    var vcoords = segVCoords[i];
                    if (vcoords) {
                        segInputs.push({
                            index: i,
                            thickness: 1,
                            span: vcoords,
                        });
                    }
                    else {
                        dumbSegs.push(segs[i]);
                    }
                }
                var _a = buildPositioning(segInputs, eventOrderStrict, eventMaxStack), segRects = _a.segRects, hiddenGroups = _a.hiddenGroups;
                var segPlacements = [];
                for (var _i = 0, segRects_1 = segRects; _i < segRects_1.length; _i++) {
                    var segRect = segRects_1[_i];
                    segPlacements.push({
                        seg: segs[segRect.index],
                        rect: segRect,
                    });
                }
                for (var _b = 0, dumbSegs_1 = dumbSegs; _b < dumbSegs_1.length; _b++) {
                    var dumbSeg = dumbSegs_1[_b];
                    segPlacements.push({ seg: dumbSeg, rect: null });
                }
                return { segPlacements: segPlacements, hiddenGroups: hiddenGroups };
            }

            var DEFAULT_TIME_FORMAT = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createFormatter)({
                hour: 'numeric',
                minute: '2-digit',
                meridiem: false,
            });
            var TimeColEvent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeColEvent, _super);
                function TimeColEvent() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeColEvent.prototype.render = function () {
                    var classNames = [
                        'fc-timegrid-event',
                        'fc-v-event',
                    ];
                    if (this.props.isShort) {
                        classNames.push('fc-timegrid-event-short');
                    }
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.StandardEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, this.props, { defaultTimeFormat: DEFAULT_TIME_FORMAT, extraClassNames: classNames })));
                };
                return TimeColEvent;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));

            var TimeColMisc = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeColMisc, _super);
                function TimeColMisc() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                TimeColMisc.prototype.render = function () {
                    var props = this.props;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayCellContent, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps }, function (innerElRef, innerContent) { return (innerContent &&
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-col-misc", ref: innerElRef }, innerContent)); }));
                };
                return TimeColMisc;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));

            var TimeCol = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeCol, _super);
                function TimeCol() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.sortEventSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.sortEventSegs);
                    return _this;
                }
                // TODO: memoize event-placement?
                TimeCol.prototype.render = function () {
                    var _this = this;
                    var _a = this, props = _a.props, context = _a.context;
                    var isSelectMirror = context.options.selectMirror;
                    var mirrorSegs = (props.eventDrag && props.eventDrag.segs) ||
                        (props.eventResize && props.eventResize.segs) ||
                        (isSelectMirror && props.dateSelectionSegs) ||
                        [];
                    var interactionAffectedInstances = // TODO: messy way to compute this
                        (props.eventDrag && props.eventDrag.affectedInstances) ||
                        (props.eventResize && props.eventResize.affectedInstances) ||
                        {};
                    var sortedFgSegs = this.sortEventSegs(props.fgEventSegs, context.options.eventOrder);
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayCellRoot, { elRef: props.elRef, date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps }, function (rootElRef, classNames, dataAttrs) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ ref: rootElRef, role: "gridcell", className: ['fc-timegrid-col'].concat(classNames, props.extraClassNames || []).join(' ') }, dataAttrs, props.extraDataAttrs),
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-col-frame" },
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-col-bg" },
                                _this.renderFillSegs(props.businessHourSegs, 'non-business'),
                                _this.renderFillSegs(props.bgEventSegs, 'bg-event'),
                                _this.renderFillSegs(props.dateSelectionSegs, 'highlight')),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-col-events" }, _this.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-col-events" }, _this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror))),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-now-indicator-container" }, _this.renderNowIndicator(props.nowIndicatorSegs)),
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColMisc, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps })))); }));
                };
                TimeCol.prototype.renderFgSegs = function (sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting) {
                    var props = this.props;
                    if (props.forPrint) {
                        return renderPlainFgSegs(sortedFgSegs, props);
                    }
                    return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting);
                };
                TimeCol.prototype.renderPositionedFgSegs = function (segs, // if not mirror, needs to be sorted
                                                                     segIsInvisible, isDragging, isResizing, isDateSelecting) {
                    var _this = this;
                    var _a = this.context.options, eventMaxStack = _a.eventMaxStack, eventShortHeight = _a.eventShortHeight, eventOrderStrict = _a.eventOrderStrict, eventMinHeight = _a.eventMinHeight;
                    var _b = this.props, date = _b.date, slatCoords = _b.slatCoords, eventSelection = _b.eventSelection, todayRange = _b.todayRange, nowDate = _b.nowDate;
                    var isMirror = isDragging || isResizing || isDateSelecting;
                    var segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);
                    var _c = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack), segPlacements = _c.segPlacements, hiddenGroups = _c.hiddenGroups;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,
                        this.renderHiddenGroups(hiddenGroups, segs),
                        segPlacements.map(function (segPlacement) {
                            var seg = segPlacement.seg, rect = segPlacement.rect;
                            var instanceId = seg.eventRange.instance.instanceId;
                            var isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);
                            var vStyle = computeSegVStyle(rect && rect.span);
                            var hStyle = (!isMirror && rect) ? _this.computeSegHStyle(rect) : { left: 0, right: 0 };
                            var isInset = Boolean(rect) && rect.stackForward > 0;
                            var isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight; // look at other places for this problem
                            return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: 'fc-timegrid-event-harness' +
                                        (isInset ? ' fc-timegrid-event-harness-inset' : ''), key: instanceId, style: (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ visibility: isVisible ? '' : 'hidden' }, vStyle), hStyle) },
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: isShort }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, todayRange, nowDate)))));
                        })));
                };
                // will already have eventMinHeight applied because segInputs already had it
                TimeCol.prototype.renderHiddenGroups = function (hiddenGroups, segs) {
                    var _a = this.props, extraDateSpan = _a.extraDateSpan, dateProfile = _a.dateProfile, todayRange = _a.todayRange, nowDate = _a.nowDate, eventSelection = _a.eventSelection, eventDrag = _a.eventDrag, eventResize = _a.eventResize;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, hiddenGroups.map(function (hiddenGroup) {
                        var positionCss = computeSegVStyle(hiddenGroup.span);
                        var hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);
                        return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColMoreLink, { key: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildIsoString)((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.computeEarliestSegStart)(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));
                    })));
                };
                TimeCol.prototype.renderFillSegs = function (segs, fillType) {
                    var _a = this, props = _a.props, context = _a.context;
                    var segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated
                    var children = segVCoords.map(function (vcoords, i) {
                        var seg = segs[i];
                        return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { key: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.buildEventRangeKey)(seg.eventRange), className: "fc-timegrid-bg-harness", style: computeSegVStyle(vcoords) }, fillType === 'bg-event' ?
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BgEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ seg: seg }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, props.todayRange, props.nowDate))) :
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.renderFill)(fillType)));
                    });
                    return (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, children);
                };
                TimeCol.prototype.renderNowIndicator = function (segs) {
                    var _a = this.props, slatCoords = _a.slatCoords, date = _a.date;
                    if (!slatCoords) {
                        return null;
                    }
                    return segs.map(function (seg, i) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowIndicatorRoot, { isAxis: false, date: date,
                        // key doesn't matter. will only ever be one
                        key: i }, function (rootElRef, classNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: rootElRef, className: ['fc-timegrid-now-indicator-line'].concat(classNames).join(' '), style: { top: slatCoords.computeDateTop(seg.start, date) } }, innerContent)); })); });
                };
                TimeCol.prototype.computeSegHStyle = function (segHCoords) {
                    var _a = this.context, isRtl = _a.isRtl, options = _a.options;
                    var shouldOverlap = options.slotEventOverlap;
                    var nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point
                    var farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point
                    var left; // amount of space from left edge, a fraction of the total width
                    var right; // amount of space from right edge, a fraction of the total width
                    if (shouldOverlap) {
                        // double the width, but don't go beyond the maximum forward coordinate (1.0)
                        farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);
                    }
                    if (isRtl) {
                        left = 1 - farCoord;
                        right = nearCoord;
                    }
                    else {
                        left = nearCoord;
                        right = 1 - farCoord;
                    }
                    var props = {
                        zIndex: segHCoords.stackDepth + 1,
                        left: left * 100 + '%',
                        right: right * 100 + '%',
                    };
                    if (shouldOverlap && !segHCoords.stackForward) {
                        // add padding to the edge so that forward stacked events don't cover the resizer's icon
                        props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width
                    }
                    return props;
                };
                return TimeCol;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function renderPlainFgSegs(sortedFgSegs, _a) {
                var todayRange = _a.todayRange, nowDate = _a.nowDate, eventSelection = _a.eventSelection, eventDrag = _a.eventDrag, eventResize = _a.eventResize;
                var hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||
                    (eventResize ? eventResize.affectedInstances : null) ||
                    {};
                return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, sortedFgSegs.map(function (seg) {
                    var instanceId = seg.eventRange.instance.instanceId;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColEvent, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.getSegMeta)(seg, todayRange, nowDate)))));
                })));
            }
            function computeSegVStyle(segVCoords) {
                if (!segVCoords) {
                    return { top: '', bottom: '' };
                }
                return {
                    top: segVCoords.start,
                    bottom: -segVCoords.end,
                };
            }
            function compileSegsFromEntries(segEntries, allSegs) {
                return segEntries.map(function (segEntry) { return allSegs[segEntry.index]; });
            }

            var TimeColsContent = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeColsContent, _super);
                function TimeColsContent() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.splitFgEventSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByCol);
                    _this.splitBgEventSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByCol);
                    _this.splitBusinessHourSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByCol);
                    _this.splitNowIndicatorSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByCol);
                    _this.splitDateSelectionSegs = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitSegsByCol);
                    _this.splitEventDrag = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitInteractionByCol);
                    _this.splitEventResize = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(splitInteractionByCol);
                    _this.rootElRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    _this.cellElRefs = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.RefMap();
                    return _this;
                }
                TimeColsContent.prototype.render = function () {
                    var _this = this;
                    var _a = this, props = _a.props, context = _a.context;
                    var nowIndicatorTop = context.options.nowIndicator &&
                        props.slatCoords &&
                        props.slatCoords.safeComputeTop(props.nowDate); // might return void
                    var colCnt = props.cells.length;
                    var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);
                    var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);
                    var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);
                    var nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);
                    var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);
                    var eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);
                    var eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-cols", ref: this.rootElRef },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("table", { role: "presentation", style: {
                                    minWidth: props.tableMinWidth,
                                    width: props.clientWidth,
                                } },
                            props.tableColGroupNode,
                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tbody", { role: "presentation" },
                                (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("tr", { role: "row" },
                                    props.axis && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("td", { "aria-hidden": true, className: "fc-timegrid-col fc-timegrid-axis" },
                                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-col-frame" },
                                            (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-now-indicator-container" }, typeof nowIndicatorTop === 'number' && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowIndicatorRoot, { isAxis: true, date: props.nowDate }, function (rootElRef, classNames, innerElRef, innerContent) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { ref: rootElRef, className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '), style: { top: nowIndicatorTop } }, innerContent)); })))))),
                                    props.cells.map(function (cell, i) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeCol, { key: cell.key, elRef: _this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraHookProps: cell.extraHookProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint })); }))))));
                };
                TimeColsContent.prototype.componentDidMount = function () {
                    this.updateCoords();
                };
                TimeColsContent.prototype.componentDidUpdate = function () {
                    this.updateCoords();
                };
                TimeColsContent.prototype.updateCoords = function () {
                    var props = this.props;
                    if (props.onColCoords &&
                        props.clientWidth !== null // means sizing has stabilized
                    ) {
                        props.onColCoords(new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal
                            false));
                    }
                };
                return TimeColsContent;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.BaseComponent));
            function collectCellEls(elMap, cells) {
                return cells.map(function (cell) { return elMap[cell.key]; });
            }

            /* A component that renders one or more columns of vertical time slots
----------------------------------------------------------------------------------------------------------------------*/
            var TimeCols = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(TimeCols, _super);
                function TimeCols() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.processSlotOptions = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(processSlotOptions);
                    _this.state = {
                        slatCoords: null,
                    };
                    _this.handleRootEl = function (el) {
                        if (el) {
                            _this.context.registerInteractiveComponent(_this, {
                                el: el,
                                isHitComboAllowed: _this.props.isHitComboAllowed,
                            });
                        }
                        else {
                            _this.context.unregisterInteractiveComponent(_this);
                        }
                    };
                    _this.handleScrollRequest = function (request) {
                        var onScrollTopRequest = _this.props.onScrollTopRequest;
                        var slatCoords = _this.state.slatCoords;
                        if (onScrollTopRequest && slatCoords) {
                            if (request.time) {
                                var top_1 = slatCoords.computeTimeTop(request.time);
                                top_1 = Math.ceil(top_1); // zoom can give weird floating-point values. rather scroll a little bit further
                                if (top_1) {
                                    top_1 += 1; // to overcome top border that slots beyond the first have. looks better
                                }
                                onScrollTopRequest(top_1);
                            }
                            return true;
                        }
                        return false;
                    };
                    _this.handleColCoords = function (colCoords) {
                        _this.colCoords = colCoords;
                    };
                    _this.handleSlatCoords = function (slatCoords) {
                        _this.setState({ slatCoords: slatCoords });
                        if (_this.props.onSlatCoords) {
                            _this.props.onSlatCoords(slatCoords);
                        }
                    };
                    return _this;
                }
                TimeCols.prototype.render = function () {
                    var _a = this, props = _a.props, state = _a.state;
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", { className: "fc-timegrid-body", ref: this.handleRootEl, style: {
                                // these props are important to give this wrapper correct dimensions for interactions
                                // TODO: if we set it here, can we avoid giving to inner tables?
                                width: props.clientWidth,
                                minWidth: props.tableMinWidth,
                            } },
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),
                        (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));
                };
                TimeCols.prototype.componentDidMount = function () {
                    this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);
                };
                TimeCols.prototype.componentDidUpdate = function (prevProps) {
                    this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);
                };
                TimeCols.prototype.componentWillUnmount = function () {
                    this.scrollResponder.detach();
                };
                TimeCols.prototype.queryHit = function (positionLeft, positionTop) {
                    var _a = this.context, dateEnv = _a.dateEnv, options = _a.options;
                    var colCoords = this.colCoords;
                    var dateProfile = this.props.dateProfile;
                    var slatCoords = this.state.slatCoords;
                    var _b = this.processSlotOptions(this.props.slotDuration, options.snapDuration), snapDuration = _b.snapDuration, snapsPerSlot = _b.snapsPerSlot;
                    var colIndex = colCoords.leftToIndex(positionLeft);
                    var slatIndex = slatCoords.positions.topToIndex(positionTop);
                    if (colIndex != null && slatIndex != null) {
                        var cell = this.props.cells[colIndex];
                        var slatTop = slatCoords.positions.tops[slatIndex];
                        var slatHeight = slatCoords.positions.getHeight(slatIndex);
                        var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1
                        var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat
                        var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;
                        var dayDate = this.props.cells[colIndex].date;
                        var time = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDurations)(dateProfile.slotMinTime, (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.multiplyDuration)(snapDuration, snapIndex));
                        var start = dateEnv.add(dayDate, time);
                        var end = dateEnv.add(start, snapDuration);
                        return {
                            dateProfile: dateProfile,
                            dateSpan: (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ range: { start: start, end: end }, allDay: false }, cell.extraDateSpan),
                            dayEl: colCoords.els[colIndex],
                            rect: {
                                left: colCoords.lefts[colIndex],
                                right: colCoords.rights[colIndex],
                                top: slatTop,
                                bottom: slatTop + slatHeight,
                            },
                            layer: 0,
                        };
                    }
                    return null;
                };
                return TimeCols;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));
            function processSlotOptions(slotDuration, snapDurationOverride) {
                var snapDuration = snapDurationOverride || slotDuration;
                var snapsPerSlot = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.wholeDivideDurations)(slotDuration, snapDuration);
                if (snapsPerSlot === null) {
                    snapDuration = slotDuration;
                    snapsPerSlot = 1;
                    // TODO: say warning?
                }
                return { snapDuration: snapDuration, snapsPerSlot: snapsPerSlot };
            }

            var DayTimeColsSlicer = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(DayTimeColsSlicer, _super);
                function DayTimeColsSlicer() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                DayTimeColsSlicer.prototype.sliceRange = function (range, dayRanges) {
                    var segs = [];
                    for (var col = 0; col < dayRanges.length; col += 1) {
                        var segRange = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.intersectRanges)(range, dayRanges[col]);
                        if (segRange) {
                            segs.push({
                                start: segRange.start,
                                end: segRange.end,
                                isStart: segRange.start.valueOf() === range.start.valueOf(),
                                isEnd: segRange.end.valueOf() === range.end.valueOf(),
                                col: col,
                            });
                        }
                    }
                    return segs;
                };
                return DayTimeColsSlicer;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.Slicer));

            var DayTimeCols = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(DayTimeCols, _super);
                function DayTimeCols() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.buildDayRanges = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(buildDayRanges);
                    _this.slicer = new DayTimeColsSlicer();
                    _this.timeColsRef = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createRef)();
                    return _this;
                }
                DayTimeCols.prototype.render = function () {
                    var _this = this;
                    var _a = this, props = _a.props, context = _a.context;
                    var dateProfile = props.dateProfile, dayTableModel = props.dayTableModel;
                    var isNowIndicator = context.options.nowIndicator;
                    var dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);
                    // give it the first row of cells
                    // TODO: would move this further down hierarchy, but sliceNowDate needs it
                    return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.NowTimer, { unit: isNowIndicator ? 'minute' : 'day' }, function (nowDate, todayRange) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(TimeCols, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ ref: _this.timeColsRef }, _this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: isNowIndicator && _this.slicer.sliceNowDate(nowDate, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords }))); }));
                };
                return DayTimeCols;
            }(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DateComponent));
            function buildDayRanges(dayTableModel, dateProfile, dateEnv) {
                var ranges = [];
                for (var _i = 0, _a = dayTableModel.headerDates; _i < _a.length; _i++) {
                    var date = _a[_i];
                    ranges.push({
                        start: dateEnv.add(date, dateProfile.slotMinTime),
                        end: dateEnv.add(date, dateProfile.slotMaxTime),
                    });
                }
                return ranges;
            }

// potential nice values for the slot-duration and interval-duration
// from largest to smallest
            var STOCK_SUB_DURATIONS = [
                { hours: 1 },
                { minutes: 30 },
                { minutes: 15 },
                { seconds: 30 },
                { seconds: 15 },
            ];
            function buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {
                var dayStart = new Date(0);
                var slatTime = slotMinTime;
                var slatIterator = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createDuration)(0);
                var labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);
                var metas = [];
                while ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMs)(slatTime) < (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.asRoughMs)(slotMaxTime)) {
                    var date = dateEnv.add(dayStart, slatTime);
                    var isLabeled = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.wholeDivideDurations)(slatIterator, labelInterval) !== null;
                    metas.push({
                        date: date,
                        time: slatTime,
                        key: date.toISOString(),
                        isoTimeStr: (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.formatIsoTimeString)(date),
                        isLabeled: isLabeled,
                    });
                    slatTime = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDurations)(slatTime, slotDuration);
                    slatIterator = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.addDurations)(slatIterator, slotDuration);
                }
                return metas;
            }
// Computes an automatic value for slotLabelInterval
            function computeLabelInterval(slotDuration) {
                var i;
                var labelInterval;
                var slotsPerLabel;
                // find the smallest stock label interval that results in more than one slots-per-label
                for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {
                    labelInterval = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createDuration)(STOCK_SUB_DURATIONS[i]);
                    slotsPerLabel = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.wholeDivideDurations)(labelInterval, slotDuration);
                    if (slotsPerLabel !== null && slotsPerLabel > 1) {
                        return labelInterval;
                    }
                }
                return slotDuration; // fall back
            }

            var DayTimeColsView = /** @class */ (function (_super) {
                (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(DayTimeColsView, _super);
                function DayTimeColsView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.buildTimeColsModel = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(buildTimeColsModel);
                    _this.buildSlatMetas = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.memoize)(buildSlatMetas);
                    return _this;
                }
                DayTimeColsView.prototype.render = function () {
                    var _this = this;
                    var _a = this.context, options = _a.options, dateEnv = _a.dateEnv, dateProfileGenerator = _a.dateProfileGenerator;
                    var props = this.props;
                    var dateProfile = props.dateProfile;
                    var dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);
                    var splitProps = this.allDaySplitter.splitProps(props);
                    var slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);
                    var dayMinWidth = options.dayMinWidth;
                    var hasAttachedAxis = !dayMinWidth;
                    var hasDetachedAxis = dayMinWidth;
                    var headerContent = options.dayHeaders && ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));
                    var allDayContent = (options.allDaySlot !== false) && (function (contentArg) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(_fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_2__.DayTable, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? _this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: _this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, _this.getAllDayMaxEventProps()))); });
                    var timeGridContent = function (contentArg) { return ((0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createElement)(DayTimeCols, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: _this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: _this.handleScrollTopRequest }))); };
                    return hasDetachedAxis
                        ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)
                        : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);
                };
                return DayTimeColsView;
            }(TimeColsView));
            function buildTimeColsModel(dateProfile, dateProfileGenerator) {
                var daySeries = new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);
                return new _fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.DayTableModel(daySeries, false);
            }

            var OPTION_REFINERS = {
                allDaySlot: Boolean,
            };

            var main = (0,_fullcalendar_common__WEBPACK_IMPORTED_MODULE_1__.createPlugin)({
                initialView: 'timeGridWeek',
                optionRefiners: OPTION_REFINERS,
                views: {
                    timeGrid: {
                        component: DayTimeColsView,
                        usesMinMaxTime: true,
                        allDaySlot: true,
                        slotDuration: '00:30:00',
                        slotEventOverlap: true, // a bad name. confused with overlap/constraint system
                    },
                    timeGridDay: {
                        type: 'timeGrid',
                        duration: { days: 1 },
                    },
                    timeGridWeek: {
                        type: 'timeGrid',
                        duration: { weeks: 1 },
                    },
                },
            });

            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (main);

//# sourceMappingURL=main.js.map


            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js ***!
  \*********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   DOMRectReadOnly: () => (/* binding */ DOMRectReadOnly)
                /* harmony export */ });
            /* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/freeze */ "./node_modules/@juggle/resize-observer/lib/utils/freeze.js");

            var DOMRectReadOnly = (function () {
                function DOMRectReadOnly(x, y, width, height) {
                    this.x = x;
                    this.y = y;
                    this.width = width;
                    this.height = height;
                    this.top = this.y;
                    this.left = this.x;
                    this.bottom = this.top + this.height;
                    this.right = this.left + this.width;
                    return (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_0__.freeze)(this);
                }
                DOMRectReadOnly.prototype.toJSON = function () {
                    var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
                    return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };
                };
                DOMRectReadOnly.fromRect = function (rectangle) {
                    return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
                };
                return DOMRectReadOnly;
            }());



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/ResizeObservation.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObservation.js ***!
  \***********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObservation: () => (/* binding */ ResizeObservation)
                /* harmony export */ });
            /* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverBoxOptions */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js");
            /* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js");
            /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/element */ "./node_modules/@juggle/resize-observer/lib/utils/element.js");



            var skipNotifyOnElement = function (target) {
                return !(0,_utils_element__WEBPACK_IMPORTED_MODULE_2__.isSVG)(target)
                    && !(0,_utils_element__WEBPACK_IMPORTED_MODULE_2__.isReplacedElement)(target)
                    && getComputedStyle(target).display === 'inline';
            };
            var ResizeObservation = (function () {
                function ResizeObservation(target, observedBox) {
                    this.target = target;
                    this.observedBox = observedBox || _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverBoxOptions.CONTENT_BOX;
                    this.lastReportedSize = {
                        inlineSize: 0,
                        blockSize: 0
                    };
                }
                ResizeObservation.prototype.isActive = function () {
                    var size = (0,_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_1__.calculateBoxSize)(this.target, this.observedBox, true);
                    if (skipNotifyOnElement(this.target)) {
                        this.lastReportedSize = size;
                    }
                    if (this.lastReportedSize.inlineSize !== size.inlineSize
                        || this.lastReportedSize.blockSize !== size.blockSize) {
                        return true;
                    }
                    return false;
                };
                return ResizeObservation;
            }());



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserver.js":
        /*!********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserver.js ***!
  \********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObserver: () => (/* binding */ ResizeObserver)
                /* harmony export */ });
            /* harmony import */ var _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResizeObserverController */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js");
            /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/element */ "./node_modules/@juggle/resize-observer/lib/utils/element.js");


            var ResizeObserver = (function () {
                function ResizeObserver(callback) {
                    if (arguments.length === 0) {
                        throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
                    }
                    if (typeof callback !== 'function') {
                        throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
                    }
                    _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.connect(this, callback);
                }
                ResizeObserver.prototype.observe = function (target, options) {
                    if (arguments.length === 0) {
                        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
                    }
                    if (!(0,_utils_element__WEBPACK_IMPORTED_MODULE_1__.isElement)(target)) {
                        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
                    }
                    _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.observe(this, target, options);
                };
                ResizeObserver.prototype.unobserve = function (target) {
                    if (arguments.length === 0) {
                        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
                    }
                    if (!(0,_utils_element__WEBPACK_IMPORTED_MODULE_1__.isElement)(target)) {
                        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
                    }
                    _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.unobserve(this, target);
                };
                ResizeObserver.prototype.disconnect = function () {
                    _ResizeObserverController__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverController.disconnect(this);
                };
                ResizeObserver.toString = function () {
                    return 'function ResizeObserver () { [polyfill code] }';
                };
                return ResizeObserver;
            }());



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js":
        /*!******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js ***!
  \******************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObserverBoxOptions: () => (/* binding */ ResizeObserverBoxOptions)
                /* harmony export */ });
            var ResizeObserverBoxOptions;
            (function (ResizeObserverBoxOptions) {
                ResizeObserverBoxOptions["BORDER_BOX"] = "border-box";
                ResizeObserverBoxOptions["CONTENT_BOX"] = "content-box";
                ResizeObserverBoxOptions["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
            })(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js":
        /*!******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverController.js ***!
  \******************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObserverController: () => (/* binding */ ResizeObserverController)
                /* harmony export */ });
            /* harmony import */ var _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/scheduler */ "./node_modules/@juggle/resize-observer/lib/utils/scheduler.js");
            /* harmony import */ var _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResizeObservation */ "./node_modules/@juggle/resize-observer/lib/ResizeObservation.js");
            /* harmony import */ var _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ResizeObserverDetail */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js");
            /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/resizeObservers */ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");




            var observerMap = new WeakMap();
            var getObservationIndex = function (observationTargets, target) {
                for (var i = 0; i < observationTargets.length; i += 1) {
                    if (observationTargets[i].target === target) {
                        return i;
                    }
                }
                return -1;
            };
            var ResizeObserverController = (function () {
                function ResizeObserverController() {
                }
                ResizeObserverController.connect = function (resizeObserver, callback) {
                    var detail = new _ResizeObserverDetail__WEBPACK_IMPORTED_MODULE_2__.ResizeObserverDetail(resizeObserver, callback);
                    observerMap.set(resizeObserver, detail);
                };
                ResizeObserverController.observe = function (resizeObserver, target, options) {
                    var detail = observerMap.get(resizeObserver);
                    var firstObservation = detail.observationTargets.length === 0;
                    if (getObservationIndex(detail.observationTargets, target) < 0) {
                        firstObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__.resizeObservers.push(detail);
                        detail.observationTargets.push(new _ResizeObservation__WEBPACK_IMPORTED_MODULE_1__.ResizeObservation(target, options && options.box));
                        (0,_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__.updateCount)(1);
                        _utils_scheduler__WEBPACK_IMPORTED_MODULE_0__.scheduler.schedule();
                    }
                };
                ResizeObserverController.unobserve = function (resizeObserver, target) {
                    var detail = observerMap.get(resizeObserver);
                    var index = getObservationIndex(detail.observationTargets, target);
                    var lastObservation = detail.observationTargets.length === 1;
                    if (index >= 0) {
                        lastObservation && _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__.resizeObservers.splice(_utils_resizeObservers__WEBPACK_IMPORTED_MODULE_3__.resizeObservers.indexOf(detail), 1);
                        detail.observationTargets.splice(index, 1);
                        (0,_utils_scheduler__WEBPACK_IMPORTED_MODULE_0__.updateCount)(-1);
                    }
                };
                ResizeObserverController.disconnect = function (resizeObserver) {
                    var _this = this;
                    var detail = observerMap.get(resizeObserver);
                    detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });
                    detail.activeTargets.splice(0, detail.activeTargets.length);
                };
                return ResizeObserverController;
            }());



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js":
        /*!**************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js ***!
  \**************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObserverDetail: () => (/* binding */ ResizeObserverDetail)
                /* harmony export */ });
            var ResizeObserverDetail = (function () {
                function ResizeObserverDetail(resizeObserver, callback) {
                    this.activeTargets = [];
                    this.skippedTargets = [];
                    this.observationTargets = [];
                    this.observer = resizeObserver;
                    this.callback = callback;
                }
                return ResizeObserverDetail;
            }());



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js":
        /*!*************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js ***!
  \*************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObserverEntry: () => (/* binding */ ResizeObserverEntry)
                /* harmony export */ });
            /* harmony import */ var _algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./algorithms/calculateBoxSize */ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js");
            /* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/freeze */ "./node_modules/@juggle/resize-observer/lib/utils/freeze.js");


            var ResizeObserverEntry = (function () {
                function ResizeObserverEntry(target) {
                    var boxes = (0,_algorithms_calculateBoxSize__WEBPACK_IMPORTED_MODULE_0__.calculateBoxSizes)(target);
                    this.target = target;
                    this.contentRect = boxes.contentRect;
                    this.borderBoxSize = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_1__.freeze)([boxes.borderBoxSize]);
                    this.contentBoxSize = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_1__.freeze)([boxes.contentBoxSize]);
                    this.devicePixelContentBoxSize = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_1__.freeze)([boxes.devicePixelContentBoxSize]);
                }
                return ResizeObserverEntry;
            }());



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js":
        /*!************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js ***!
  \************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObserverSize: () => (/* binding */ ResizeObserverSize)
                /* harmony export */ });
            /* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/freeze */ "./node_modules/@juggle/resize-observer/lib/utils/freeze.js");

            var ResizeObserverSize = (function () {
                function ResizeObserverSize(inlineSize, blockSize) {
                    this.inlineSize = inlineSize;
                    this.blockSize = blockSize;
                    (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_0__.freeze)(this);
                }
                return ResizeObserverSize;
            }());



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js":
        /*!********************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js ***!
  \********************************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   broadcastActiveObservations: () => (/* binding */ broadcastActiveObservations)
                /* harmony export */ });
            /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");
            /* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js");
            /* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calculateDepthForNode */ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js");
            /* harmony import */ var _calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calculateBoxSize */ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js");




            var broadcastActiveObservations = function () {
                var shallowestDepth = Infinity;
                var callbacks = [];
                _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.forEach(function processObserver(ro) {
                    if (ro.activeTargets.length === 0) {
                        return;
                    }
                    var entries = [];
                    ro.activeTargets.forEach(function processTarget(ot) {
                        var entry = new _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__.ResizeObserverEntry(ot.target);
                        var targetDepth = (0,_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_2__.calculateDepthForNode)(ot.target);
                        entries.push(entry);
                        ot.lastReportedSize = (0,_calculateBoxSize__WEBPACK_IMPORTED_MODULE_3__.calculateBoxSize)(ot.target, ot.observedBox);
                        if (targetDepth < shallowestDepth) {
                            shallowestDepth = targetDepth;
                        }
                    });
                    callbacks.push(function resizeObserverCallback() {
                        ro.callback.call(ro.observer, entries, ro.observer);
                    });
                    ro.activeTargets.splice(0, ro.activeTargets.length);
                });
                for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
                    var callback = callbacks_1[_i];
                    callback();
                }
                return shallowestDepth;
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js":
        /*!*********************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js ***!
  \*********************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   calculateBoxSize: () => (/* binding */ calculateBoxSize),
                /* harmony export */   calculateBoxSizes: () => (/* binding */ calculateBoxSizes)
                /* harmony export */ });
            /* harmony import */ var _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserverBoxOptions */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js");
            /* harmony import */ var _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverSize */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js");
            /* harmony import */ var _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../DOMRectReadOnly */ "./node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js");
            /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/element */ "./node_modules/@juggle/resize-observer/lib/utils/element.js");
            /* harmony import */ var _utils_freeze__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/freeze */ "./node_modules/@juggle/resize-observer/lib/utils/freeze.js");
            /* harmony import */ var _utils_global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/global */ "./node_modules/@juggle/resize-observer/lib/utils/global.js");






            var cache = new WeakMap();
            var scrollRegexp = /auto|scroll/;
            var verticalRegexp = /^tb|vertical/;
            var IE = (/msie|trident/i).test(_utils_global__WEBPACK_IMPORTED_MODULE_5__.global.navigator && _utils_global__WEBPACK_IMPORTED_MODULE_5__.global.navigator.userAgent);
            var parseDimension = function (pixel) { return parseFloat(pixel || '0'); };
            var size = function (inlineSize, blockSize, switchSizes) {
                if (inlineSize === void 0) { inlineSize = 0; }
                if (blockSize === void 0) { blockSize = 0; }
                if (switchSizes === void 0) { switchSizes = false; }
                return new _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_1__.ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
            };
            var zeroBoxes = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_4__.freeze)({
                devicePixelContentBoxSize: size(),
                borderBoxSize: size(),
                contentBoxSize: size(),
                contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__.DOMRectReadOnly(0, 0, 0, 0)
            });
            var calculateBoxSizes = function (target, forceRecalculation) {
                if (forceRecalculation === void 0) { forceRecalculation = false; }
                if (cache.has(target) && !forceRecalculation) {
                    return cache.get(target);
                }
                if ((0,_utils_element__WEBPACK_IMPORTED_MODULE_3__.isHidden)(target)) {
                    cache.set(target, zeroBoxes);
                    return zeroBoxes;
                }
                var cs = getComputedStyle(target);
                var svg = (0,_utils_element__WEBPACK_IMPORTED_MODULE_3__.isSVG)(target) && target.ownerSVGElement && target.getBBox();
                var removePadding = !IE && cs.boxSizing === 'border-box';
                var switchSizes = verticalRegexp.test(cs.writingMode || '');
                var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');
                var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');
                var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
                var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
                var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
                var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
                var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
                var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
                var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
                var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
                var horizontalPadding = paddingLeft + paddingRight;
                var verticalPadding = paddingTop + paddingBottom;
                var horizontalBorderArea = borderLeft + borderRight;
                var verticalBorderArea = borderTop + borderBottom;
                var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
                var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
                var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
                var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
                var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
                var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
                var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
                var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
                var boxes = (0,_utils_freeze__WEBPACK_IMPORTED_MODULE_4__.freeze)({
                    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
                    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
                    contentBoxSize: size(contentWidth, contentHeight, switchSizes),
                    contentRect: new _DOMRectReadOnly__WEBPACK_IMPORTED_MODULE_2__.DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
                });
                cache.set(target, boxes);
                return boxes;
            };
            var calculateBoxSize = function (target, observedBox, forceRecalculation) {
                var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
                switch (observedBox) {
                    case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
                        return devicePixelContentBoxSize;
                    case _ResizeObserverBoxOptions__WEBPACK_IMPORTED_MODULE_0__.ResizeObserverBoxOptions.BORDER_BOX:
                        return borderBoxSize;
                    default:
                        return contentBoxSize;
                }
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js":
        /*!**************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js ***!
  \**************************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   calculateDepthForNode: () => (/* binding */ calculateDepthForNode)
                /* harmony export */ });
            /* harmony import */ var _utils_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/element */ "./node_modules/@juggle/resize-observer/lib/utils/element.js");

            var calculateDepthForNode = function (node) {
                if ((0,_utils_element__WEBPACK_IMPORTED_MODULE_0__.isHidden)(node)) {
                    return Infinity;
                }
                var depth = 0;
                var parent = node.parentNode;
                while (parent) {
                    depth += 1;
                    parent = parent.parentNode;
                }
                return depth;
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js":
        /*!***************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js ***!
  \***************************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   deliverResizeLoopError: () => (/* binding */ deliverResizeLoopError)
                /* harmony export */ });
            var msg = 'ResizeObserver loop completed with undelivered notifications.';
            var deliverResizeLoopError = function () {
                var event;
                if (typeof ErrorEvent === 'function') {
                    event = new ErrorEvent('error', {
                        message: msg
                    });
                }
                else {
                    event = document.createEvent('Event');
                    event.initEvent('error', false, false);
                    event.message = msg;
                }
                window.dispatchEvent(event);
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js":
        /*!************************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js ***!
  \************************************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   gatherActiveObservationsAtDepth: () => (/* binding */ gatherActiveObservationsAtDepth)
                /* harmony export */ });
            /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");
            /* harmony import */ var _calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calculateDepthForNode */ "./node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js");


            var gatherActiveObservationsAtDepth = function (depth) {
                _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.forEach(function processObserver(ro) {
                    ro.activeTargets.splice(0, ro.activeTargets.length);
                    ro.skippedTargets.splice(0, ro.skippedTargets.length);
                    ro.observationTargets.forEach(function processTarget(ot) {
                        if (ot.isActive()) {
                            if ((0,_calculateDepthForNode__WEBPACK_IMPORTED_MODULE_1__.calculateDepthForNode)(ot.target) > depth) {
                                ro.activeTargets.push(ot);
                            }
                            else {
                                ro.skippedTargets.push(ot);
                            }
                        }
                    });
                });
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js":
        /*!**************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js ***!
  \**************************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   hasActiveObservations: () => (/* binding */ hasActiveObservations)
                /* harmony export */ });
            /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");

            var hasActiveObservations = function () {
                return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js":
        /*!***************************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js ***!
  \***************************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   hasSkippedObservations: () => (/* binding */ hasSkippedObservations)
                /* harmony export */ });
            /* harmony import */ var _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/resizeObservers */ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js");

            var hasSkippedObservations = function () {
                return _utils_resizeObservers__WEBPACK_IMPORTED_MODULE_0__.resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js":
        /*!*****************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/exports/resize-observer.js ***!
  \*****************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   ResizeObserver: () => (/* reexport safe */ _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__.ResizeObserver),
                /* harmony export */   ResizeObserverEntry: () => (/* reexport safe */ _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__.ResizeObserverEntry),
                /* harmony export */   ResizeObserverSize: () => (/* reexport safe */ _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_2__.ResizeObserverSize)
                /* harmony export */ });
            /* harmony import */ var _ResizeObserver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ResizeObserver */ "./node_modules/@juggle/resize-observer/lib/ResizeObserver.js");
            /* harmony import */ var _ResizeObserverEntry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ResizeObserverEntry */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js");
            /* harmony import */ var _ResizeObserverSize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ResizeObserverSize */ "./node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js");





            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/element.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/element.js ***!
  \*******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   isElement: () => (/* binding */ isElement),
                /* harmony export */   isHidden: () => (/* binding */ isHidden),
                /* harmony export */   isReplacedElement: () => (/* binding */ isReplacedElement),
                /* harmony export */   isSVG: () => (/* binding */ isSVG)
                /* harmony export */ });
            var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };
            var isHidden = function (target) {
                if (isSVG(target)) {
                    var _a = target.getBBox(), width = _a.width, height = _a.height;
                    return !width && !height;
                }
                var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
                return !(offsetWidth || offsetHeight || target.getClientRects().length);
            };
            var isElement = function (obj) {
                var _a;
                if (obj instanceof Element) {
                    return true;
                }
                var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
                return !!(scope && obj instanceof scope.Element);
            };
            var isReplacedElement = function (target) {
                switch (target.tagName) {
                    case 'INPUT':
                        if (target.type !== 'image') {
                            break;
                        }
                    case 'VIDEO':
                    case 'AUDIO':
                    case 'EMBED':
                    case 'OBJECT':
                    case 'CANVAS':
                    case 'IFRAME':
                    case 'IMG':
                        return true;
                }
                return false;
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/freeze.js":
        /*!******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/freeze.js ***!
  \******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   freeze: () => (/* binding */ freeze)
                /* harmony export */ });
            var freeze = function (obj) { return Object.freeze(obj); };


            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/global.js":
        /*!******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/global.js ***!
  \******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   global: () => (/* binding */ global)
                /* harmony export */ });
            var global = typeof window !== 'undefined' ? window : {};


            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/process.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/process.js ***!
  \*******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   process: () => (/* binding */ process)
                /* harmony export */ });
            /* harmony import */ var _algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../algorithms/hasActiveObservations */ "./node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js");
            /* harmony import */ var _algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../algorithms/hasSkippedObservations */ "./node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js");
            /* harmony import */ var _algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../algorithms/deliverResizeLoopError */ "./node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js");
            /* harmony import */ var _algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../algorithms/broadcastActiveObservations */ "./node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js");
            /* harmony import */ var _algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../algorithms/gatherActiveObservationsAtDepth */ "./node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js");





            var process = function () {
                var depth = 0;
                (0,_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__.gatherActiveObservationsAtDepth)(depth);
                while ((0,_algorithms_hasActiveObservations__WEBPACK_IMPORTED_MODULE_0__.hasActiveObservations)()) {
                    depth = (0,_algorithms_broadcastActiveObservations__WEBPACK_IMPORTED_MODULE_3__.broadcastActiveObservations)();
                    (0,_algorithms_gatherActiveObservationsAtDepth__WEBPACK_IMPORTED_MODULE_4__.gatherActiveObservationsAtDepth)(depth);
                }
                if ((0,_algorithms_hasSkippedObservations__WEBPACK_IMPORTED_MODULE_1__.hasSkippedObservations)()) {
                    (0,_algorithms_deliverResizeLoopError__WEBPACK_IMPORTED_MODULE_2__.deliverResizeLoopError)();
                }
                return depth > 0;
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js":
        /*!**************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js ***!
  \**************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   queueMicroTask: () => (/* binding */ queueMicroTask)
                /* harmony export */ });
            var trigger;
            var callbacks = [];
            var notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };
            var queueMicroTask = function (callback) {
                if (!trigger) {
                    var toggle_1 = 0;
                    var el_1 = document.createTextNode('');
                    var config = { characterData: true };
                    new MutationObserver(function () { return notify(); }).observe(el_1, config);
                    trigger = function () { el_1.textContent = "".concat(toggle_1 ? toggle_1-- : toggle_1++); };
                }
                callbacks.push(callback);
                trigger();
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js":
        /*!*******************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js ***!
  \*******************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   queueResizeObserver: () => (/* binding */ queueResizeObserver)
                /* harmony export */ });
            /* harmony import */ var _queueMicroTask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queueMicroTask */ "./node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js");

            var queueResizeObserver = function (cb) {
                (0,_queueMicroTask__WEBPACK_IMPORTED_MODULE_0__.queueMicroTask)(function ResizeObserver() {
                    requestAnimationFrame(cb);
                });
            };



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js":
        /*!***************************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js ***!
  \***************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   resizeObservers: () => (/* binding */ resizeObservers)
                /* harmony export */ });
            var resizeObservers = [];



            /***/ }),

        /***/ "./node_modules/@juggle/resize-observer/lib/utils/scheduler.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/@juggle/resize-observer/lib/utils/scheduler.js ***!
  \*********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   scheduler: () => (/* binding */ scheduler),
                /* harmony export */   updateCount: () => (/* binding */ updateCount)
                /* harmony export */ });
            /* harmony import */ var _process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./process */ "./node_modules/@juggle/resize-observer/lib/utils/process.js");
            /* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global */ "./node_modules/@juggle/resize-observer/lib/utils/global.js");
            /* harmony import */ var _queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queueResizeObserver */ "./node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js");



            var watching = 0;
            var isWatching = function () { return !!watching; };
            var CATCH_PERIOD = 250;
            var observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };
            var events = [
                'resize',
                'load',
                'transitionend',
                'animationend',
                'animationstart',
                'animationiteration',
                'keyup',
                'keydown',
                'mouseup',
                'mousedown',
                'mouseover',
                'mouseout',
                'blur',
                'focus'
            ];
            var time = function (timeout) {
                if (timeout === void 0) { timeout = 0; }
                return Date.now() + timeout;
            };
            var scheduled = false;
            var Scheduler = (function () {
                function Scheduler() {
                    var _this = this;
                    this.stopped = true;
                    this.listener = function () { return _this.schedule(); };
                }
                Scheduler.prototype.run = function (timeout) {
                    var _this = this;
                    if (timeout === void 0) { timeout = CATCH_PERIOD; }
                    if (scheduled) {
                        return;
                    }
                    scheduled = true;
                    var until = time(timeout);
                    (0,_queueResizeObserver__WEBPACK_IMPORTED_MODULE_2__.queueResizeObserver)(function () {
                        var elementsHaveResized = false;
                        try {
                            elementsHaveResized = (0,_process__WEBPACK_IMPORTED_MODULE_0__.process)();
                        }
                        finally {
                            scheduled = false;
                            timeout = until - time();
                            if (!isWatching()) {
                                return;
                            }
                            if (elementsHaveResized) {
                                _this.run(1000);
                            }
                            else if (timeout > 0) {
                                _this.run(timeout);
                            }
                            else {
                                _this.start();
                            }
                        }
                    });
                };
                Scheduler.prototype.schedule = function () {
                    this.stop();
                    this.run();
                };
                Scheduler.prototype.observe = function () {
                    var _this = this;
                    var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };
                    document.body ? cb() : _global__WEBPACK_IMPORTED_MODULE_1__.global.addEventListener('DOMContentLoaded', cb);
                };
                Scheduler.prototype.start = function () {
                    var _this = this;
                    if (this.stopped) {
                        this.stopped = false;
                        this.observer = new MutationObserver(this.listener);
                        this.observe();
                        events.forEach(function (name) { return _global__WEBPACK_IMPORTED_MODULE_1__.global.addEventListener(name, _this.listener, true); });
                    }
                };
                Scheduler.prototype.stop = function () {
                    var _this = this;
                    if (!this.stopped) {
                        this.observer && this.observer.disconnect();
                        events.forEach(function (name) { return _global__WEBPACK_IMPORTED_MODULE_1__.global.removeEventListener(name, _this.listener, true); });
                        this.stopped = true;
                    }
                };
                return Scheduler;
            }());
            var scheduler = new Scheduler();
            var updateCount = function (n) {
                !watching && n > 0 && scheduler.start();
                watching += n;
                !watching && scheduler.stop();
            };



            /***/ }),

        /***/ "./node_modules/@left4code/tw-starter/dist/js/accordion.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/@left4code/tw-starter/dist/js/accordion.js ***!
  \*****************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@left4code/tw-starter/dist/js/dom.js");


            (function (dom) {
                "use strict";

                // Toggle accordion content
                dom("body").on("click", "[data-tw-toggle='collapse']", function () {
                    toggle(this);
                });

                function toggle(el, event = "toggle") {
                    dom(el)
                        .closest(".accordion")
                        .find("[data-tw-toggle='collapse']")
                        .each(function () {
                            // Trigger "hide.tw.accordion" callback function
                            if (
                                !dom(this).hasClass("collapsed") &&
                                this !== el &&
                                (event == "toggle" || event == "hide")
                            ) {
                                const event = new Event("hide.tw.accordion");
                                dom(this).closest(".accordion-header")[0].dispatchEvent(event);
                            }

                            // Trigger "show.tw.accordion" callback function
                            if (
                                dom(this).hasClass("collapsed") &&
                                this === el &&
                                (event == "toggle" || event == "show")
                            ) {
                                const event = new Event("show.tw.accordion");
                                dom(this).closest(".accordion-header")[0].dispatchEvent(event);
                            }
                        });

                    const collapsed = dom(el).hasClass("collapsed");

                    // Close active accordion
                    dom(el)
                        .closest(".accordion")
                        .find(".accordion-collapse")
                        .slideUp(300, (el) => {
                            dom(el).removeClass("show");
                            dom(el)
                                .closest(".accordion-item")
                                .find("[data-tw-toggle='collapse']")
                                .addClass("collapsed")
                                .attr("aria-expanded", false);
                        });

                    // Set active accordion
                    setTimeout(() => {
                        const accordionCollapse = dom(el)
                            .closest(".accordion-item")
                            .find(".accordion-collapse");

                        const hide = () => {
                            dom(accordionCollapse).removeClass("show");
                            dom(el).addClass("collapsed").attr("aria-expanded", false);
                            dom(el)
                                .closest(".accordion-item")
                                .find(".accordion-collapse")
                                .slideUp();
                        };

                        const show = () => {
                            dom(accordionCollapse).addClass("show");
                            dom(el).removeClass("collapsed").attr("aria-expanded", true);
                            dom(el)
                                .closest(".accordion-item")
                                .find(".accordion-collapse")
                                .slideDown();
                        };

                        if (event === "toggle") {
                            !collapsed ? hide() : show();
                        } else if (event === "show") {
                            show();
                        } else {
                            hide();
                        }
                    }, 300);
                }

                // Create instance
                function createInstance(el) {
                    return {
                        show() {
                            toggle(el, "show");
                        },
                        hide() {
                            toggle(el, "hide");
                        },
                        toggle() {
                            toggle(el);
                        },
                    };
                }

                // Register instance
                (function init() {
                    dom("[data-tw-toggle='collapse']").each(function () {
                        dom(this).closest(".accordion-header")[0]["__accordion"] =
                            createInstance(this);
                    });

                    if (window.tailwind === undefined) window.tailwind = {};
                    window.tailwind.Accordion = {
                        getInstance(el) {
                            return el.__accordion;
                        },
                        getOrCreateInstance(el) {
                            return el.__accordion === undefined
                                ? createInstance(el)
                                : el.__accordion;
                        },
                    };
                })();
            })(_dom__WEBPACK_IMPORTED_MODULE_0__["default"]);


            /***/ }),

        /***/ "./node_modules/@left4code/tw-starter/dist/js/alert.js":
        /*!*************************************************************!*\
  !*** ./node_modules/@left4code/tw-starter/dist/js/alert.js ***!
  \*************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@left4code/tw-starter/dist/js/dom.js");


            (function (dom) {
                "use strict";

                // Close active alert
                dom("body").on("click", "[data-tw-dismiss='alert']", function () {
                    hide(dom(this).closest(".alert"));
                });

                function show(el) {
                    dom(el).fadeIn(300, function () {
                        dom(this).addClass("show");

                        // Trigger "shown.tw.alert" callback function
                        const event = new Event("shown.tw.alert");
                        dom(el)[0].dispatchEvent(event);
                    });

                    // Trigger "show.tw.alert" callback function
                    const event = new Event("show.tw.alert");
                    dom(el)[0].dispatchEvent(event);
                }

                function hide(el) {
                    dom(el).fadeOut(300, function () {
                        dom(this).removeClass("show");

                        // Trigger "hidden.tw.alert" callback function
                        const event = new Event("hidden.tw.alert");
                        dom(el)[0].dispatchEvent(event);
                    });

                    // Trigger "hide.tw.alert" callback function
                    const event = new Event("hide.tw.alert");
                    dom(el)[0].dispatchEvent(event);
                }

                function toggle(el) {
                    dom(el).hasClass("show") ? hide(el) : show(el);
                }

                // Create instance
                function createInstance(el) {
                    return {
                        show() {
                            show(el);
                        },
                        hide() {
                            hide(el);
                        },
                        toggle() {
                            toggle(el);
                        },
                    };
                }

                // Register instance
                (function init() {
                    dom(".alert").each(function () {
                        this["__alert"] = createInstance(this);
                    });

                    if (window.tailwind === undefined) window.tailwind = {};
                    window.tailwind.Alert = {
                        getInstance(el) {
                            return el.__alert;
                        },
                        getOrCreateInstance(el) {
                            return el.__alert === undefined ? createInstance(el) : el.__alert;
                        },
                    };
                })();
            })(_dom__WEBPACK_IMPORTED_MODULE_0__["default"]);


            /***/ }),

        /***/ "./node_modules/@left4code/tw-starter/dist/js/dom.js":
        /*!***********************************************************!*\
  !*** ./node_modules/@left4code/tw-starter/dist/js/dom.js ***!
  \***********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dom = (() => {
                const getNodeList = (arg) => {
                    if (typeof arg === "string" && arg.trim().slice(0, 1) !== "<") {
                        return document.querySelectorAll(arg);
                    } else if (typeof arg === "string" && arg.trim().slice(0, 1) === "<") {
                        const dom = domParser(arg);
                        return [dom];
                    } else if (typeof arg === "object" && arg instanceof NodeList) {
                        return arg;
                    } else if (typeof arg === "object" && arg instanceof HTMLElement) {
                        return [arg];
                    } else if (typeof arg === "object" && arg instanceof SVGElement) {
                        return [arg];
                    } else {
                        return arg;
                    }
                };

                const domParser = (arg) => {
                    const parser = new DOMParser(),
                        content = "text/html",
                        DOM = parser.parseFromString(arg, content);
                    return DOM.body.childNodes[0];
                };

                const addEvent = (nodeList, event, callback) => {
                    nodeList[event] = callback;
                };

                const uuidv4 = () => {
                    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (c) => {
                        let r = (Math.random() * 16) | 0,
                            v = c == "x" ? r : (r & 0x3) | 0x8;
                        return v.toString(16);
                    });
                };

                const eventPath = (evt) => {
                    let path = (evt.composedPath && evt.composedPath()) || evt.path,
                        target = evt.target;

                    if (path != null) {
                        // Safari doesn't include Window, but it should.
                        return path.indexOf(window) < 0 ? path.concat(window) : path;
                    }

                    if (target === window) {
                        return [window];
                    }

                    function getParents(node, memo) {
                        memo = memo || [];
                        let parentNode = node.parentNode;

                        if (!parentNode) {
                            return memo;
                        } else {
                            return getParents(parentNode, memo.concat(parentNode));
                        }
                    }

                    return [target].concat(getParents(target), window);
                };

                const addEvents = (nodeList) => {
                    // .on()
                    addEvent(nodeList, "on", (arg1, arg2, arg3) => {
                        nodeList.forEach((node) => {
                            node.addEventListener(
                                arg1,
                                (e) => {
                                    const uuid = uuidv4();
                                    if (typeof arg2 === "string") {
                                        eventPath(e).every((parentNode) => {
                                            if (parentNode.matches && parentNode.matches(arg2)) {
                                                parentNode[uuid] = arg3;
                                                parentNode[uuid](parentNode);
                                                delete parentNode[uuid];
                                                return false;
                                            } else {
                                                return true;
                                            }
                                        });
                                    } else {
                                        node[uuid] = arg2;
                                        node[uuid](e);
                                        delete node[uuid];
                                    }
                                },
                                false
                            );
                        });

                        return nodeList;
                    });

                    // .css()
                    addEvent(nodeList, "css", (arg1, arg2) => {
                        // Get values
                        if (arg2 === undefined && typeof arg1 !== "object") {
                            return getComputedStyle(nodeList[0])[arg1];
                        }

                        // Set values
                        nodeList.forEach((node) => {
                            if (typeof arg1 === "object") {
                                for (const [key, val] of Object.entries(arg1)) {
                                    node.style[key] = val;
                                }
                            } else {
                                node.style[arg1] = arg2;
                            }
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .slideUp()
                    addEvent(nodeList, "slideUp", (arg1 = 300, arg2 = () => {}) => {
                        nodeList.forEach((node) => {
                            node.style.transitionProperty = "height, margin, padding";
                            node.style.transitionDuration = arg1 + "ms";
                            node.style.height = node.offsetHeight + "px";
                            node.offsetHeight;
                            node.style.overflow = "hidden";
                            node.style.height = 0;
                            node.style.paddingTop = 0;
                            node.style.paddingBottom = 0;
                            node.style.marginTop = 0;
                            node.style.marginBottom = 0;
                            window.setTimeout(() => {
                                node.style.display = "none";
                                node.style.removeProperty("height");
                                node.style.removeProperty("padding-top");
                                node.style.removeProperty("padding-bottom");
                                node.style.removeProperty("margin-top");
                                node.style.removeProperty("margin-bottom");
                                node.style.removeProperty("overflow");
                                node.style.removeProperty("transition-duration");
                                node.style.removeProperty("transition-property");

                                const uuid = uuidv4();
                                node[uuid] = arg2;
                                node[uuid](node);
                                delete node[uuid];
                            }, arg1);
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .slideDown()
                    addEvent(nodeList, "slideDown", (arg1 = 300, arg2 = () => {}) => {
                        nodeList.forEach((node) => {
                            node.style.removeProperty("display");
                            let display = window.getComputedStyle(node).display;
                            if (display === "none") display = "block";
                            node.style.display = display;
                            let height = node.offsetHeight;
                            node.style.overflow = "hidden";
                            node.style.height = 0;
                            node.style.paddingTop = 0;
                            node.style.paddingBottom = 0;
                            node.style.marginTop = 0;
                            node.style.marginBottom = 0;
                            node.offsetHeight;
                            node.style.transitionProperty = "height, margin, padding";
                            node.style.transitionDuration = arg1 + "ms";
                            node.style.height = height + "px";
                            node.style.removeProperty("padding-top");
                            node.style.removeProperty("padding-bottom");
                            node.style.removeProperty("margin-top");
                            node.style.removeProperty("margin-bottom");
                            window.setTimeout(() => {
                                node.style.removeProperty("height");
                                node.style.removeProperty("overflow");
                                node.style.removeProperty("transition-duration");
                                node.style.removeProperty("transition-property");

                                const uuid = uuidv4();
                                node[uuid] = arg2;
                                node[uuid](node);
                                delete node[uuid];
                            }, arg1);
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .fadeOut()
                    addEvent(nodeList, "fadeOut", (arg1 = 300, arg2 = () => {}) => {
                        nodeList.forEach((node) => {
                            node.style.opacity = 1;
                            node.style.transitionProperty = "opacity";
                            node.style.transitionDuration = arg1 + "ms";
                            node.style.opacity = 0;
                            window.setTimeout(() => {
                                node.style.display = "none";
                                node.style.removeProperty("transition-property");
                                node.style.removeProperty("transition-duration");
                                node.style.removeProperty("opacity");

                                const uuid = uuidv4();
                                node[uuid] = arg2;
                                node[uuid](node);
                                delete node[uuid];
                            }, arg1);
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .fadeIn()
                    addEvent(nodeList, "fadeIn", (arg1 = 300, arg2 = () => {}) => {
                        nodeList.forEach((node) => {
                            let display = window.getComputedStyle(node).display;
                            if (display === "none") display = "block";
                            node.style.display = display;
                            node.style.opacity = 0;
                            node.style.transitionProperty = "opacity";
                            node.style.transitionDuration = arg1 + "ms";
                            window.setTimeout(() => {
                                node.style.opacity = 1;
                                window.setTimeout(() => {
                                    node.style.removeProperty("transition-property");
                                    node.style.removeProperty("transition-duration");
                                    node.style.removeProperty("opacity");
                                }, arg1);

                                const uuid = uuidv4();
                                node[uuid] = arg2;
                                node[uuid](node);
                                delete node[uuid];
                            }, arg1);
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .hide()
                    addEvent(nodeList, "hide", () => {
                        nodeList.forEach((node) => {
                            node.style.display = "none";
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .show()
                    addEvent(nodeList, "show", () => {
                        nodeList.forEach((node) => {
                            if (node.style.display === "none") {
                                node.style.display = "block";
                            }
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .clone()
                    addEvent(nodeList, "clone", () => {
                        let clonedNodes = [];
                        nodeList.forEach((node) => {
                            clonedNodes.push(node.cloneNode(true));
                        });

                        addEvents(clonedNodes);
                        return clonedNodes;
                    });

                    // .each()
                    addEvent(nodeList, "each", (arg1) => {
                        nodeList.forEach((node, index) => {
                            const uuid = uuidv4();
                            node[uuid] = arg1;
                            node[uuid](index, node);
                            delete node[uuid];
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .find()
                    addEvent(nodeList, "find", (arg1) => {
                        let results = [];
                        nodeList.forEach((node) => {
                            const matchedNodes = node.querySelectorAll(arg1);
                            if (matchedNodes.length) {
                                matchedNodes.forEach((matchedNode) => {
                                    results.push(matchedNode);
                                });
                            }
                        });

                        addEvents(results);
                        return results;
                    });

                    // .hasClass()
                    addEvent(nodeList, "hasClass", (arg1) => {
                        let found = false;
                        nodeList.forEach((node) => {
                            if (node.classList.contains(arg1)) found = true;
                        });
                        return found;
                    });

                    // .removeClass()
                    addEvent(nodeList, "removeClass", (arg1) => {
                        if (arg1.length) {
                            arg1.split(" ").forEach((classname) => {
                                nodeList.forEach((node) => {
                                    node.classList.remove(classname);
                                });
                            });
                        }

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .addClass()
                    addEvent(nodeList, "addClass", (arg1) => {
                        if (arg1.length) {
                            arg1.split(" ").forEach((classname) => {
                                nodeList.forEach((node) => {
                                    node.classList.add(classname);
                                });
                            });
                        }

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .is()
                    addEvent(nodeList, "is", (arg1) => {
                        if (typeof arg1 === "string") {
                            return (
                                nodeList[0].matches ||
                                nodeList[0].matchesSelector ||
                                nodeList[0].msMatchesSelector ||
                                nodeList[0].mozMatchesSelector ||
                                nodeList[0].webkitMatchesSelector ||
                                nodeList[0].oMatchesSelector
                            ).call(nodeList[0], arg1);
                        } else {
                            return nodeList[0] === arg1;
                        }
                    });

                    // .attr()
                    addEvent(nodeList, "attr", (arg1, arg2) => {
                        if (arg2 === undefined && typeof arg1 !== "object") {
                            if (nodeList[0] !== undefined) {
                                const attr = nodeList[0].getAttribute(arg1);
                                return attr === null ? undefined : attr;
                            } else {
                                return undefined;
                            }
                        }

                        nodeList.forEach((node) => {
                            if (typeof arg1 === "object") {
                                for (const [key, val] of Object.entries(arg1)) {
                                    node.setAttribute(key, val);
                                }
                            } else {
                                node.setAttribute(arg1, arg2);
                            }
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .removeAttr()
                    addEvent(nodeList, "removeAttr", (arg1) => {
                        nodeList.forEach((node) => {
                            node.removeAttribute(arg1);
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .data()
                    addEvent(nodeList, "data", (arg1, arg2) => {
                        if (arg2 === undefined) {
                            const attr = nodeList[0].getAttribute(`data-${arg1}`);
                            return attr === null ? undefined : attr;
                        }

                        nodeList.forEach((node) => {
                            node.setAttribute(`data-${arg1}`, arg2);
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .width()
                    addEvent(nodeList, "width", (arg1) => {
                        if (arg1 === undefined) {
                            if (nodeList === window) {
                                return parseInt(window.innerWidth);
                            } else {
                                return typeof nodeList[0] !== "undefined"
                                    ? parseInt(getComputedStyle(nodeList[0])["width"])
                                    : null;
                            }
                        }

                        if (nodeList === window) {
                            window.resizeTo(arg1, window.innerHeight);
                        } else {
                            nodeList.forEach((node) => {
                                node.style["width"] = arg1;
                            });
                        }

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .height()
                    addEvent(nodeList, "height", (arg1) => {
                        if (arg1 === undefined) {
                            if (nodeList === window) {
                                return parseInt(window.innerHeight);
                            } else {
                                return typeof nodeList[0] !== "undefined"
                                    ? parseInt(getComputedStyle(nodeList[0])["height"])
                                    : null;
                            }
                        }

                        if (nodeList === window) {
                            window.resizeTo(window.innerWidth, arg1);
                        } else {
                            nodeList.forEach((node) => {
                                node.style["height"] = arg1;
                            });
                        }

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .css()
                    addEvent(nodeList, "css", (arg1, arg2) => {
                        if (arg2 === undefined && typeof arg1 !== "object") {
                            return getComputedStyle(nodeList[0])[arg1];
                        }

                        nodeList.forEach((node) => {
                            if (typeof arg1 === "object") {
                                for (const [key, val] of Object.entries(arg1)) {
                                    node.style[key] = val;
                                }
                            } else {
                                node.style[arg1] = arg2;
                            }
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .replaceWith()
                    addEvent(nodeList, "replaceWith", (arg1) => {
                        const replacerNodes = [];
                        const argumentTypes = getNodeList(arg1);

                        nodeList.forEach((node, key) => {
                            argumentTypes.forEach((replacerNode) => {
                                let dom = replacerNode;
                                if (key > 0) {
                                    dom = replacerNode.cloneNode(true);
                                }

                                node.parentNode.insertBefore(dom, node.nextSibling);
                                replacerNodes.push(dom);
                            });
                            node.remove();
                        });

                        addEvents(replacerNodes);
                        return replacerNodes;
                    });

                    // .insertAfter()
                    addEvent(nodeList, "insertAfter", (arg1) => {
                        const insertedNodes = [];
                        const argumentTypes = getNodeList(arg1);

                        nodeList.forEach((node) => {
                            argumentTypes.forEach((targetNode, key) => {
                                let dom = node;
                                if (key > 0) {
                                    dom = node.cloneNode(true);
                                }

                                targetNode.parentNode.insertBefore(dom, targetNode.nextSibling);
                                insertedNodes.push(dom);
                            });
                        });

                        addEvents(insertedNodes);
                        return insertedNodes;
                    });

                    // .appendTo()
                    addEvent(nodeList, "appendTo", (arg1) => {
                        const appendedNodes = [];
                        const argumentTypes = getNodeList(arg1);

                        nodeList.forEach((node) => {
                            argumentTypes.forEach((targetNode, key) => {
                                let dom = node;
                                if (key > 0) {
                                    dom = node.cloneNode(true);
                                }

                                targetNode.appendChild(dom);
                                appendedNodes.push(dom);
                            });
                        });

                        addEvents(appendedNodes);
                        return appendedNodes;
                    });

                    // .append()
                    addEvent(nodeList, "append", (arg1) => {
                        const argumentTypes = getNodeList(arg1);

                        nodeList.forEach((node, key) => {
                            argumentTypes.forEach((appendNode) => {
                                let dom = appendNode;
                                if (key > 0) {
                                    dom = appendNode.cloneNode(true);
                                }

                                node.appendChild(dom);
                            });
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .remove()
                    addEvent(nodeList, "remove", () => {
                        nodeList.forEach((node) => {
                            if (node.parentNode !== null) {
                                node.parentNode.removeChild(node);
                            }
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .first()
                    addEvent(nodeList, "first", () => {
                        const firstNode = nodeList[0] !== undefined ? [nodeList[0]] : [];
                        addEvents(firstNode);
                        return firstNode;
                    });

                    // .last()
                    addEvent(nodeList, "last", () => {
                        const lastNodeList =
                            nodeList[nodeList.length - 1] !== undefined
                                ? [nodeList[nodeList.length - 1]]
                                : [];

                        addEvents(lastNodeList);
                        return lastNodeList;
                    });

                    // .val()
                    addEvent(nodeList, "val", (arg1) => {
                        if (arg1 === undefined) {
                            if (nodeList[0] instanceof HTMLSelectElement && nodeList[0].multiple) {
                                const selectedOptions = [];
                                for (const selectedOption of nodeList[0].selectedOptions) {
                                    selectedOptions.push(selectedOption.value);
                                }
                                return selectedOptions;
                            } else {
                                return nodeList[0].value;
                            }
                        }

                        nodeList.forEach((node) => {
                            if (node instanceof HTMLSelectElement) {
                                node.value = "";

                                if (typeof arg1 !== "object") {
                                    arg1 = [arg1];
                                }

                                for (const value of arg1) {
                                    const selectedOption = Array.from(node).find(
                                        (option) => option.value == value
                                    );

                                    if (selectedOption !== undefined) {
                                        selectedOption.selected = true;
                                    }
                                }
                            } else {
                                node.value = arg1;
                            }
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .html()
                    addEvent(nodeList, "html", (arg1) => {
                        if (arg1 === undefined) {
                            return nodeList[0].innerHTML;
                        }

                        nodeList.forEach((node) => {
                            node.innerHTML = arg1;
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .text()
                    addEvent(nodeList, "text", (arg1) => {
                        if (arg1 === undefined) {
                            return nodeList[0].textContent;
                        }

                        nodeList.forEach((node) => {
                            node.textContent = arg1;
                        });

                        addEvents(nodeList);
                        return nodeList;
                    });

                    // .filter()
                    addEvent(nodeList, "filter", (arg1) => {
                        let results = [];
                        nodeList.forEach((node, index) => {
                            const uuid = uuidv4();
                            node[uuid] = arg1;
                            const filter = node[uuid](index, node);
                            delete node[uuid];

                            if (filter) {
                                results.push(node);
                            }
                        });

                        addEvents(results);
                        return results;
                    });

                    // .closest()
                    addEvent(nodeList, "closest", (arg1) => {
                        let results = [];
                        nodeList.forEach((node) => {
                            const matchedNode = node.closest(arg1);
                            if (
                                matchedNode !== null &&
                                !results.filter((resNode) => resNode === matchedNode).length
                            )
                                results.push(matchedNode);
                        });

                        addEvents(results);
                        return results;
                    });

                    // .children()
                    addEvent(nodeList, "children", (arg1) => {
                        let results = [];

                        nodeList.forEach((node) => {
                            for (const matchedNode of node.children) {
                                if (arg1 === undefined) {
                                    results.push(matchedNode);
                                } else {
                                    for (const childNode of node.querySelectorAll(arg1)) {
                                        if (childNode === matchedNode) results.push(childNode);
                                    }
                                }
                            }
                        });

                        addEvents(results);
                        return results;
                    });

                    // .parent()
                    addEvent(nodeList, "parent", () => {
                        let results = [];
                        nodeList.forEach((node) => {
                            const matchedNode = node.parentNode;
                            if (
                                matchedNode !== null &&
                                !results.filter((resNode) => resNode === matchedNode).length
                            )
                                results.push(matchedNode);
                        });

                        addEvents(results);
                        return results;
                    });

                    // .prev()
                    addEvent(nodeList, "prev", () => {
                        let results = [];
                        nodeList.forEach((node) => {
                            if (node.previousElementSibling !== null) {
                                results.push(node.previousElementSibling);
                            }
                        });

                        addEvents(results);
                        return results;
                    });

                    // .next()
                    addEvent(nodeList, "next", () => {
                        let results = [];
                        nodeList.forEach((node) => {
                            if (node.nextElementSibling !== null) {
                                results.push(node.nextElementSibling);
                            }
                        });

                        addEvents(results);
                        return results;
                    });

                    // .off()
                    addEvent(nodeList, "off", () => {
                        let results = [];
                        nodeList.forEach((node) => {
                            let dom = node.cloneNode(true);
                            node.parentNode.replaceChild(dom, node);
                            results.push(dom);
                        });

                        addEvents(results);
                        return results;
                    });
                };

                return (window.dom = (arg) => {
                    const nodeList = getNodeList(arg);
                    addEvents(nodeList);
                    return nodeList;
                });
            })());


            /***/ }),

        /***/ "./node_modules/@left4code/tw-starter/dist/js/dropdown.js":
        /*!****************************************************************!*\
  !*** ./node_modules/@left4code/tw-starter/dist/js/dropdown.js ***!
  \****************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/popper.js");
            /* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@left4code/tw-starter/dist/js/dom.js");



            (function (dom) {
                "use strict";

                // Hide dropdown
                function hide() {
                    dom(".dropdown-menu").each(async function () {
                        if (
                            dom(this).attr("id") !== undefined &&
                            dom('[data-dropdown-replacer="' + dom(this).attr("id") + '"]').length &&
                            dom(this).data("dropdown-programmatically") === undefined
                        ) {
                            let randId = dom(this).attr("id");
                            let dropdownToggle = dom('[data-dropdown-replacer="' + randId + '"]')
                                .parent()
                                .find("[data-tw-toggle='dropdown']");

                            // Animate dropdown
                            dom(this).removeClass("show");

                            // Trigger "hide.tw.dropdown" callback function
                            const event = new Event("hide.tw.dropdown");
                            dom(dropdownToggle).parent()[0].dispatchEvent(event);

                            await setTimeout(() => {
                                // Move dropdown element to body
                                dom('[data-dropdown-replacer="' + randId + '"]').replaceWith(this);

                                // Reset attribute
                                dom(this).removeAttr("style");
                                dom(this).removeAttr("data-popper-placement");

                                // Set aria-expanded to false
                                dom(dropdownToggle).attr("aria-expanded", false);

                                // Trigger "hidden.tw.dropdown" callback function
                                const event = new Event("hidden.tw.dropdown");
                                dom(dropdownToggle).parent()[0].dispatchEvent(event);
                            }, 200);
                        } else if (
                            dom(this).attr("id") !== undefined &&
                            !dom('[data-dropdown-replacer="' + dom(this).attr("id") + '"]')
                                .length &&
                            dom(this).hasClass("show") &&
                            dom(this).data("dropdown-programmatically") === undefined
                        ) {
                            dom(this).remove();
                        } else if (dom(this).data("dropdown-programmatically") == "initiate") {
                            // Set programmatically attribute state
                            dom(this).attr("data-dropdown-programmatically", "showed");
                        } else if (dom(this).data("dropdown-programmatically") == "showed") {
                            // Remove programmatically attribute state
                            dom(this).removeAttr("data-dropdown-programmatically");

                            // Hide dropdown
                            hide();
                        }
                    });
                }

                // Find visible dropdown toggle
                function findVisibleDropdownToggle(dropdownToggle) {
                    return dropdownToggle.filter((key, dropdownToggle) => {
                        return dropdownToggle.offsetParent !== null;
                    });
                }

                // Show dropdown
                async function show(dropdown) {
                    let dropdownBox = dom(dropdown).find(".dropdown-menu").first();
                    let dropdownToggle = findVisibleDropdownToggle(
                        dom(dropdown).find("[data-tw-toggle='dropdown']")
                    );
                    let placement = dom(dropdown).data("tw-placement")
                        ? dom(dropdown).data("tw-placement")
                        : "bottom-end";
                    let randId = "_" + Math.random().toString(36).substr(2, 9);

                    // Hide dropdown
                    hide();

                    if (dom(dropdownBox).length) {
                        // Set aria-expanded to true
                        dom(dropdownToggle).attr("aria-expanded", true);

                        // Set dropdown width
                        dom(dropdown).css("position") == "static"
                            ? dom(dropdown).css("position", "relative")
                            : "";
                        dom(dropdownBox).show();
                        dom(dropdownBox).css("width", dom(dropdownBox).css("width"));

                        // Move dropdown element to body
                        dom('<div data-dropdown-replacer="' + randId + '"></div>').insertAfter(
                            dropdownBox
                        );
                        dom(dropdownBox).attr("id", randId).appendTo("body");

                        // Check if dropdown is used inside modal
                        dom(".modal.show").each(function () {
                            if (dom(this).find('[data-dropdown-replacer="' + randId + '"]')) {
                                dom(dropdownBox).css("z-index", dom(this).css("z-index"));
                            }
                        });

                        // Init popper
                        _popperjs_core__WEBPACK_IMPORTED_MODULE_1__.createPopper(dropdownToggle[0], dropdownBox[0], {
                            placement: placement,
                        });

                        // Show dropdown
                        dom(dropdownBox).addClass("show");

                        // Trigger "show.tw.dropdown" callback function
                        const event = new Event("show.tw.dropdown");
                        dom(dropdown)[0].dispatchEvent(event);

                        await setTimeout(() => {
                            // Trigger "shown.tw.dropdown" callback function
                            const event = new Event("shown.tw.dropdown");
                            dom(dropdown)[0].dispatchEvent(event);
                        }, 200);
                    }
                }

                // Toggle dropdown programmatically
                function toggleProgrammatically(dropdown) {
                    let dropdownBox = dom(dropdown).find(".dropdown-menu").first();
                    if (dom(dropdownBox).length) {
                        showProgrammatically(dropdown);
                    } else {
                        hide();
                    }
                }

                // Show dropdown programmatically
                function showProgrammatically(dropdown) {
                    if (dom(dropdown).find(".dropdown-menu").length) {
                        dom(dropdown)
                            .find(".dropdown-menu")
                            .attr("data-dropdown-programmatically", "initiate");
                    } else {
                        let randId = dom("[data-dropdown-replacer]").data("dropdown-replacer");
                        dom("#" + randId).attr("data-dropdown-programmatically", "initiate");
                    }

                    show(dropdown);
                }

                // Create instance
                function createInstance(dropdownToggle) {
                    const dropdown = dom(dropdownToggle).closest(".dropdown");
                    return {
                        show() {
                            showProgrammatically(dropdown);
                        },
                        hide() {
                            hide();
                        },
                        toggle() {
                            toggleProgrammatically(dropdown);
                        },
                    };
                }

                // Dropdown event listener
                dom("body").on("click", function (event) {
                    let dropdown = dom(event.target).closest(".dropdown");
                    let dropdownToggle = dom(dropdown).find("[data-tw-toggle='dropdown']");
                    let dropdownBox = dom(dropdown).find(".dropdown-menu").first();
                    let activeDropdownBox = dom(event.target).closest(".dropdown-menu").first();
                    let dismissButton = dom(event.target).data("tw-dismiss");

                    if (
                        (!dom(dropdown).length && !dom(activeDropdownBox).length) ||
                        (dom(dropdownToggle).length && !dom(dropdownBox).length) ||
                        dismissButton == "dropdown"
                    ) {
                        // Hide dropdown
                        hide();
                    } else if (!dom(activeDropdownBox).length) {
                        // Show dropdown
                        show(dropdown);
                    }
                });

                // Keyboard event
                document.addEventListener("keydown", function (event) {
                    if (event.code == "Escape") {
                        hide();
                    }
                });

                // Register instance
                (function init() {
                    dom("[data-tw-toggle='dropdown']").each(function () {
                        this["__dropdown"] = createInstance(this);
                    });

                    if (window.tailwind === undefined) window.tailwind = {};
                    window.tailwind.Dropdown = {
                        getInstance(el) {
                            return el.__dropdown;
                        },
                        getOrCreateInstance(el) {
                            return el.__dropdown === undefined ? createInstance(el) : el.__dropdown;
                        },
                    };
                })();
            })(_dom__WEBPACK_IMPORTED_MODULE_0__["default"]);


            /***/ }),

        /***/ "./node_modules/@left4code/tw-starter/dist/js/modal.js":
        /*!*************************************************************!*\
  !*** ./node_modules/@left4code/tw-starter/dist/js/modal.js ***!
  \*************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@left4code/tw-starter/dist/js/dom.js");


            (function (dom) {
                // Get highest z-index
                function getHighestZindex() {
                    let zIndex = 9999;
                    dom(".modal").each(function () {
                        if (
                            dom(this).css("z-index") !== "auto" &&
                            dom(this).css("z-index") > zIndex
                        ) {
                            zIndex = parseInt(dom(this).css("z-index"));
                        }
                    });

                    return zIndex;
                }

                // Get scrollbar width
                function getScrollbarWidth(el) {
                    return window.innerWidth - dom(el)[0].clientWidth;
                }

                // Show modal with z-index
                function show(el) {
                    if (!dom("[data-modal-replacer='" + dom(el).attr("id") + "']").length) {
                        // Move modal element to body
                        dom(
                            '<div data-modal-replacer="' + dom(el).attr("id") + '"></div>'
                        ).insertAfter(el);
                        dom(el).css({
                            "margin-top": 0,
                            "margin-left": 0,
                        });
                        dom(el).attr("aria-hidden", false).appendTo("body");

                        // Show modal by highest z-index
                        setTimeout(() => {
                            dom(el)
                                .addClass("show")
                                .css("z-index", getHighestZindex() + 1);

                            // Trigger "shown.tw.modal" callback function
                            const event = new Event("shown.tw.modal");
                            dom(el)[0].dispatchEvent(event);
                        }, 200);

                        // Setting up modal scroll
                        dom("body")
                            .css(
                                "padding-right",
                                parseInt(dom("body").css("padding-right")) +
                                getScrollbarWidth("html") +
                                "px"
                            )
                            .addClass("overflow-y-hidden");
                        dom(".modal").removeClass("overflow-y-auto").css("padding-left", "0px");
                        dom(el)
                            .addClass("overflow-y-auto")
                            .css("padding-left", getScrollbarWidth(el) + "px")
                            .addClass(dom(".modal.show").length ? "modal-overlap" : "");

                        // Trigger "show.tw.modal" callback function
                        const event = new Event("show.tw.modal");
                        dom(el)[0].dispatchEvent(event);
                    }
                }

                // Hide modal & remove modal scroll
                function hide(el) {
                    if (dom(el).hasClass("modal") && dom(el).hasClass("show")) {
                        let transitionDuration =
                            parseFloat(dom(el).css("transition-duration").split(",")[1]) * 1000;
                        dom(el).attr("aria-hidden", true).removeClass("show");

                        setTimeout(() => {
                            dom(el)
                                .removeAttr("style")
                                .removeClass("modal-overlap")
                                .removeClass("overflow-y-auto");

                            // Add scroll to highest z-index modal if exist
                            dom(".modal").each(function () {
                                if (parseInt(dom(this).css("z-index")) === getHighestZindex()) {
                                    dom(this)
                                        .addClass("overflow-y-auto")
                                        .css("padding-left", getScrollbarWidth(this) + "px");
                                }
                            });

                            // Return back scroll to body if no more modal showed up
                            if (getHighestZindex() == 9999) {
                                dom("body").removeClass("overflow-y-hidden").css("padding-right", "");
                            }

                            // Return back modal element to it's first place
                            dom('[data-modal-replacer="' + dom(el).attr("id") + '"]').replaceWith(
                                el
                            );

                            // Trigger "hidden.tw.modal" callback function
                            const event = new Event("hidden.tw.modal");
                            dom(el)[0].dispatchEvent(event);
                        }, transitionDuration);

                        // Trigger "hide.tw.modal" callback function
                        const event = new Event("hide.tw.modal");
                        dom(el)[0].dispatchEvent(event);
                    }
                }

                // Toggle modal
                function toggle(el) {
                    if (dom(el).hasClass("modal") && dom(el).hasClass("show")) {
                        hide(el);
                    } else {
                        show(el);
                    }
                }

                // Create instance
                function createInstance(el) {
                    return {
                        show() {
                            show(el);
                        },
                        hide() {
                            hide(el);
                        },
                        toggle() {
                            toggle(el);
                        },
                    };
                }

                // Show modal
                dom("body").on("click", '[data-tw-toggle="modal"]', function () {
                    show(dom(this).attr("data-tw-target"));
                });

                // Hide modal
                dom("body").on("click", (event) => {
                    if (
                        dom(event.target).hasClass("modal") &&
                        dom(event.target).hasClass("show")
                    ) {
                        // Check if modal backdrop is not static
                        if (dom(event.target).data("tw-backdrop") !== "static") {
                            hide(event.target);
                        } else {
                            dom(event.target).addClass("modal-static");
                            setTimeout(() => {
                                dom(event.target).removeClass("modal-static");
                            }, 600);
                        }
                    }
                });

                // Dismiss modal by link
                dom("body").on("click", '[data-tw-dismiss="modal"]', function () {
                    let modal = dom(this).closest(".modal")[0];
                    hide(modal);
                });

                // Keyboard event
                document.addEventListener("keydown", (event) => {
                    if (event.code == "Escape") {
                        let el = dom(".modal.show").last();
                        if (
                            dom(el).hasClass("modal") &&
                            dom(el).hasClass("show") &&
                            (dom(el).data("tw-keyboard") === undefined ||
                                dom(el).data("tw-keyboard") !== "false")
                        ) {
                            // Check if modal backdrop is not static
                            if (dom(el).data("tw-backdrop") !== "static") {
                                hide(el);
                            } else {
                                dom(el).addClass("modal-static");
                                setTimeout(() => {
                                    dom(el).removeClass("modal-static");
                                }, 600);
                            }
                        }
                    }
                });

                // Register instance
                (function init() {
                    dom(".modal").each(function () {
                        this["__modal"] = createInstance(this);
                    });

                    if (window.tailwind === undefined) window.tailwind = {};
                    window.tailwind.Modal = {
                        getInstance(el) {
                            return el.__modal;
                        },
                        getOrCreateInstance(el) {
                            return el.__modal === undefined ? createInstance(el) : el.__modal;
                        },
                    };
                })();
            })(_dom__WEBPACK_IMPORTED_MODULE_0__["default"]);


            /***/ }),

        /***/ "./node_modules/@left4code/tw-starter/dist/js/svg-loader.js":
        /*!******************************************************************!*\
  !*** ./node_modules/@left4code/tw-starter/dist/js/svg-loader.js ***!
  \******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@left4code/tw-starter/dist/js/dom.js");


            (function (dom) {
                "use strict";

                let initSvgLoader = (function svgLoader(init) {
                    dom(`[data-loading-icon]`).each(function () {
                        let color =
                            dom(this).data("color") !== undefined
                                ? dom(this).data("color")
                                : dom("body").css("color");
                        let classAttr =
                            dom(this).attr("class") !== undefined ? dom(this).attr("class") : "";
                        let icons = [
                            {
                                name: "audio",
                                svg: `
                    <svg width="15" viewBox="0 0 55 80" xmlns="http://www.w3.org/2000/svg" fill="${color}" class="${classAttr}">
                        <g transform="matrix(1 0 0 -1 0 80)">
                            <rect width="10" height="20" rx="3">
                                <animate attributeName="height"
                                    begin="0s" dur="4.3s"
                                    values="20;45;57;80;64;32;66;45;64;23;66;13;64;56;34;34;2;23;76;79;20" calcMode="linear"
                                    repeatCount="indefinite" />
                            </rect>
                            <rect x="15" width="10" height="80" rx="3">
                                <animate attributeName="height"
                                    begin="0s" dur="2s"
                                    values="80;55;33;5;75;23;73;33;12;14;60;80" calcMode="linear"
                                    repeatCount="indefinite" />
                            </rect>
                            <rect x="30" width="10" height="50" rx="3">
                                <animate attributeName="height"
                                    begin="0s" dur="1.4s"
                                    values="50;34;78;23;56;23;34;76;80;54;21;50" calcMode="linear"
                                    repeatCount="indefinite" />
                            </rect>
                            <rect x="45" width="10" height="30" rx="3">
                                <animate attributeName="height"
                                    begin="0s" dur="2s"
                                    values="30;45;13;80;56;72;45;76;34;23;67;30" calcMode="linear"
                                    repeatCount="indefinite" />
                            </rect>
                        </g>
                    </svg>
                `,
                            },
                            {
                                name: "ball-triangle",
                                svg: `
                    <svg width="20" viewBox="0 0 57 57" xmlns="http://www.w3.org/2000/svg" class="${classAttr}">
                        <g fill="none" fill-rule="evenodd">
                            <g transform="translate(1 1)">
                                <circle cx="5" cy="50" r="5" fill="${color}">
                                    <animate attributeName="cy"
                                        begin="0s" dur="2.2s"
                                        values="50;5;50;50"
                                        calcMode="linear"
                                        repeatCount="indefinite" />
                                    <animate attributeName="cx"
                                        begin="0s" dur="2.2s"
                                        values="5;27;49;5"
                                        calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="27" cy="5" r="5" fill="${color}">
                                    <animate attributeName="cy"
                                        begin="0s" dur="2.2s"
                                        from="5" to="5"
                                        values="5;50;50;5"
                                        calcMode="linear"
                                        repeatCount="indefinite" />
                                    <animate attributeName="cx"
                                        begin="0s" dur="2.2s"
                                        from="27" to="27"
                                        values="27;49;5;27"
                                        calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="49" cy="50" r="5" fill="${color}">
                                    <animate attributeName="cy"
                                        begin="0s" dur="2.2s"
                                        values="50;50;5;50"
                                        calcMode="linear"
                                        repeatCount="indefinite" />
                                    <animate attributeName="cx"
                                        from="49" to="49"
                                        begin="0s" dur="2.2s"
                                        values="49;5;27;49"
                                        calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                            </g>
                        </g>
                    </svg>
                `,
                            },
                            {
                                name: "bars",
                                svg: `
                    <svg width="20" viewBox="0 0 135 140" xmlns="http://www.w3.org/2000/svg" fill="${color}" class="${classAttr}">
                        <rect y="10" width="15" height="120" rx="6">
                            <animate attributeName="height"
                                begin="0.5s" dur="1s"
                                values="120;110;100;90;80;70;60;50;40;140;120" calcMode="linear"
                                repeatCount="indefinite" />
                            <animate attributeName="y"
                                begin="0.5s" dur="1s"
                                values="10;15;20;25;30;35;40;45;50;0;10" calcMode="linear"
                                repeatCount="indefinite" />
                        </rect>
                        <rect x="30" y="10" width="15" height="120" rx="6">
                            <animate attributeName="height"
                                begin="0.25s" dur="1s"
                                values="120;110;100;90;80;70;60;50;40;140;120" calcMode="linear"
                                repeatCount="indefinite" />
                            <animate attributeName="y"
                                begin="0.25s" dur="1s"
                                values="10;15;20;25;30;35;40;45;50;0;10" calcMode="linear"
                                repeatCount="indefinite" />
                        </rect>
                        <rect x="60" width="15" height="140" rx="6">
                            <animate attributeName="height"
                                begin="0s" dur="1s"
                                values="120;110;100;90;80;70;60;50;40;140;120" calcMode="linear"
                                repeatCount="indefinite" />
                            <animate attributeName="y"
                                begin="0s" dur="1s"
                                values="10;15;20;25;30;35;40;45;50;0;10" calcMode="linear"
                                repeatCount="indefinite" />
                        </rect>
                        <rect x="90" y="10" width="15" height="120" rx="6">
                            <animate attributeName="height"
                                begin="0.25s" dur="1s"
                                values="120;110;100;90;80;70;60;50;40;140;120" calcMode="linear"
                                repeatCount="indefinite" />
                            <animate attributeName="y"
                                begin="0.25s" dur="1s"
                                values="10;15;20;25;30;35;40;45;50;0;10" calcMode="linear"
                                repeatCount="indefinite" />
                        </rect>
                        <rect x="120" y="10" width="15" height="120" rx="6">
                            <animate attributeName="height"
                                begin="0.5s" dur="1s"
                                values="120;110;100;90;80;70;60;50;40;140;120" calcMode="linear"
                                repeatCount="indefinite" />
                            <animate attributeName="y"
                                begin="0.5s" dur="1s"
                                values="10;15;20;25;30;35;40;45;50;0;10" calcMode="linear"
                                repeatCount="indefinite" />
                        </rect>
                    </svg>
                `,
                            },
                            {
                                name: "circles",
                                svg: `
                    <svg width="20" viewBox="0 0 135 135" xmlns="http://www.w3.org/2000/svg" fill="${color}" class="${classAttr}">
                        <path d="M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z">
                            <animateTransform
                                attributeName="transform"
                                type="rotate"
                                from="0 67 67"
                                to="-360 67 67"
                                dur="2.5s"
                                repeatCount="indefinite"/>
                        </path>
                        <path d="M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z">
                            <animateTransform
                                attributeName="transform"
                                type="rotate"
                                from="0 67 67"
                                to="360 67 67"
                                dur="8s"
                                repeatCount="indefinite"/>
                        </path>
                    </svg>
                `,
                            },
                            {
                                name: "grid",
                                svg: `
                    <svg width="20" viewBox="0 0 105 105" xmlns="http://www.w3.org/2000/svg" fill="${color}" class="${classAttr}">
                        <circle cx="12.5" cy="12.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="0s" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="12.5" cy="52.5" r="12.5" fill-opacity=".5">
                            <animate attributeName="fill-opacity"
                            begin="100ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="52.5" cy="12.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="300ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="52.5" cy="52.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="600ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="92.5" cy="12.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="800ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="92.5" cy="52.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="400ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="12.5" cy="92.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="700ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="52.5" cy="92.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="500ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                        <circle cx="92.5" cy="92.5" r="12.5">
                            <animate attributeName="fill-opacity"
                            begin="200ms" dur="1s"
                            values="1;.2;1" calcMode="linear"
                            repeatCount="indefinite" />
                        </circle>
                    </svg>
                `,
                            },
                            {
                                name: "hearts",
                                svg: `
                    <svg width="30" viewBox="0 0 140 64" xmlns="http://www.w3.org/2000/svg" fill="${color}" class="${classAttr}">
                        <path d="M30.262 57.02L7.195 40.723c-5.84-3.976-7.56-12.06-3.842-18.063 3.715-6 11.467-7.65 17.306-3.68l4.52 3.76 2.6-5.274c3.717-6.002 11.47-7.65 17.305-3.68 5.84 3.97 7.56 12.054 3.842 18.062L34.49 56.118c-.897 1.512-2.793 1.915-4.228.9z" fill-opacity=".5">
                            <animate attributeName="fill-opacity"
                                begin="0s" dur="1.4s"
                                values="0.5;1;0.5"
                                calcMode="linear"
                                repeatCount="indefinite" />
                        </path>
                        <path d="M105.512 56.12l-14.44-24.272c-3.716-6.008-1.996-14.093 3.843-18.062 5.835-3.97 13.588-2.322 17.306 3.68l2.6 5.274 4.52-3.76c5.84-3.97 13.592-2.32 17.307 3.68 3.718 6.003 1.998 14.088-3.842 18.064L109.74 57.02c-1.434 1.014-3.33.61-4.228-.9z" fill-opacity=".5">
                            <animate attributeName="fill-opacity"
                                begin="0.7s" dur="1.4s"
                                values="0.5;1;0.5"
                                calcMode="linear"
                                repeatCount="indefinite" />
                        </path>
                        <path d="M67.408 57.834l-23.01-24.98c-5.864-6.15-5.864-16.108 0-22.248 5.86-6.14 15.37-6.14 21.234 0L70 16.168l4.368-5.562c5.863-6.14 15.375-6.14 21.235 0 5.863 6.14 5.863 16.098 0 22.247l-23.007 24.98c-1.43 1.556-3.757 1.556-5.188 0z" />
                    </svg>
                `,
                            },
                            {
                                name: "oval",
                                svg: `
                    <svg width="25" viewBox="-2 -2 42 42" xmlns="http://www.w3.org/2000/svg" stroke="${color}" class="${classAttr}">
                        <g fill="none" fill-rule="evenodd">
                            <g transform="translate(1 1)" stroke-width="4">
                                <circle stroke-opacity=".5" cx="18" cy="18" r="18"/>
                                <path d="M36 18c0-9.94-8.06-18-18-18">
                                    <animateTransform
                                        attributeName="transform"
                                        type="rotate"
                                        from="0 18 18"
                                        to="360 18 18"
                                        dur="1s"
                                        repeatCount="indefinite"/>
                                </path>
                            </g>
                        </g>
                    </svg>
                `,
                            },
                            {
                                name: "puff",
                                svg: `
                    <svg width="25" viewBox="0 0 44 44" xmlns="http://www.w3.org/2000/svg" stroke="${color}" class="${classAttr}">
                        <g fill="none" fill-rule="evenodd" stroke-width="4">
                            <circle cx="22" cy="22" r="1">
                                <animate attributeName="r"
                                    begin="0s" dur="1.8s"
                                    values="1; 20"
                                    calcMode="spline"
                                    keyTimes="0; 1"
                                    keySplines="0.165, 0.84, 0.44, 1"
                                    repeatCount="indefinite" />
                                <animate attributeName="stroke-opacity"
                                    begin="0s" dur="1.8s"
                                    values="1; 0"
                                    calcMode="spline"
                                    keyTimes="0; 1"
                                    keySplines="0.3, 0.61, 0.355, 1"
                                    repeatCount="indefinite" />
                            </circle>
                            <circle cx="22" cy="22" r="1">
                                <animate attributeName="r"
                                    begin="-0.9s" dur="1.8s"
                                    values="1; 20"
                                    calcMode="spline"
                                    keyTimes="0; 1"
                                    keySplines="0.165, 0.84, 0.44, 1"
                                    repeatCount="indefinite" />
                                <animate attributeName="stroke-opacity"
                                    begin="-0.9s" dur="1.8s"
                                    values="1; 0"
                                    calcMode="spline"
                                    keyTimes="0; 1"
                                    keySplines="0.3, 0.61, 0.355, 1"
                                    repeatCount="indefinite" />
                            </circle>
                        </g>
                    </svg>
                `,
                            },
                            {
                                name: "rings",
                                svg: `
                    <svg width="30" viewBox="0 0 45 45" xmlns="http://www.w3.org/2000/svg" stroke="${color}" class="${classAttr}">
                        <g fill="none" fill-rule="evenodd" transform="translate(1 1)" stroke-width="3">
                            <circle cx="22" cy="22" r="6" stroke-opacity="0">
                                <animate attributeName="r"
                                    begin="1.5s" dur="3s"
                                    values="6;22"
                                    calcMode="linear"
                                    repeatCount="indefinite" />
                                <animate attributeName="stroke-opacity"
                                    begin="1.5s" dur="3s"
                                    values="1;0" calcMode="linear"
                                    repeatCount="indefinite" />
                                <animate attributeName="stroke-width"
                                    begin="1.5s" dur="3s"
                                    values="2;0" calcMode="linear"
                                    repeatCount="indefinite" />
                            </circle>
                            <circle cx="22" cy="22" r="6" stroke-opacity="0">
                                <animate attributeName="r"
                                    begin="3s" dur="3s"
                                    values="6;22"
                                    calcMode="linear"
                                    repeatCount="indefinite" />
                                <animate attributeName="stroke-opacity"
                                    begin="3s" dur="3s"
                                    values="1;0" calcMode="linear"
                                    repeatCount="indefinite" />
                                <animate attributeName="stroke-width"
                                    begin="3s" dur="3s"
                                    values="2;0" calcMode="linear"
                                    repeatCount="indefinite" />
                            </circle>
                            <circle cx="22" cy="22" r="8">
                                <animate attributeName="r"
                                    begin="0s" dur="1.5s"
                                    values="6;1;2;3;4;5;6"
                                    calcMode="linear"
                                    repeatCount="indefinite" />
                            </circle>
                        </g>
                    </svg>
                `,
                            },
                            {
                                name: "spinning-circles",
                                svg: `
                    <svg width="20" viewBox="0 0 58 58" xmlns="http://www.w3.org/2000/svg" class="${classAttr}">
                        <g fill="none" fill-rule="evenodd">
                            <g transform="translate(2 1)" stroke="${color}" stroke-width="1.5">
                                <circle cx="42.601" cy="11.462" r="5" fill-opacity="1" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="1;0;0;0;0;0;0;0" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="49.063" cy="27.063" r="5" fill-opacity="0" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="0;1;0;0;0;0;0;0" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="42.601" cy="42.663" r="5" fill-opacity="0" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="0;0;1;0;0;0;0;0" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="27" cy="49.125" r="5" fill-opacity="0" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="0;0;0;1;0;0;0;0" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="11.399" cy="42.663" r="5" fill-opacity="0" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="0;0;0;0;1;0;0;0" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="4.938" cy="27.063" r="5" fill-opacity="0" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="0;0;0;0;0;1;0;0" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="11.399" cy="11.462" r="5" fill-opacity="0" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="0;0;0;0;0;0;1;0" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                                <circle cx="27" cy="5" r="5" fill-opacity="0" fill="${color}">
                                    <animate attributeName="fill-opacity"
                                        begin="0s" dur="1.3s"
                                        values="0;0;0;0;0;0;0;1" calcMode="linear"
                                        repeatCount="indefinite" />
                                </circle>
                            </g>
                        </g>
                    </svg>
                `,
                            },
                            {
                                name: "tail-spin",
                                svg: `
                    <svg width="20" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg" class="${classAttr}">
                        <defs>
                            <linearGradient x1="8.042%" y1="0%" x2="65.682%" y2="23.865%" id="a">
                                <stop stop-color="${color}" stop-opacity="0" offset="0%"/>
                                <stop stop-color="${color}" stop-opacity=".631" offset="63.146%"/>
                                <stop stop-color="${color}" offset="100%"/>
                            </linearGradient>
                        </defs>
                        <g fill="none" fill-rule="evenodd">
                            <g transform="translate(1 1)">
                                <path d="M36 18c0-9.94-8.06-18-18-18" id="Oval-2" stroke="url(#a)" stroke-width="3">
                                    <animateTransform
                                        attributeName="transform"
                                        type="rotate"
                                        from="0 18 18"
                                        to="360 18 18"
                                        dur="0.9s"
                                        repeatCount="indefinite" />
                                </path>
                                <circle fill="${color}" cx="36" cy="18" r="1">
                                    <animateTransform
                                        attributeName="transform"
                                        type="rotate"
                                        from="0 18 18"
                                        to="360 18 18"
                                        dur="0.9s"
                                        repeatCount="indefinite" />
                                </circle>
                            </g>
                        </g>
                    </svg>
                `,
                            },
                            {
                                name: "three-dots",
                                svg: `
                    <svg width="25" viewBox="0 0 120 30" xmlns="http://www.w3.org/2000/svg" fill="${color}" class="${classAttr}">
                        <circle cx="15" cy="15" r="15">
                            <animate attributeName="r" from="15" to="15"
                                    begin="0s" dur="0.8s"
                                    values="15;9;15" calcMode="linear"
                                    repeatCount="indefinite" />
                            <animate attributeName="fill-opacity" from="1" to="1"
                                    begin="0s" dur="0.8s"
                                    values="1;.5;1" calcMode="linear"
                                    repeatCount="indefinite" />
                        </circle>
                        <circle cx="60" cy="15" r="9" fill-opacity="0.3">
                            <animate attributeName="r" from="9" to="9"
                                    begin="0s" dur="0.8s"
                                    values="9;15;9" calcMode="linear"
                                    repeatCount="indefinite" />
                            <animate attributeName="fill-opacity" from="0.5" to="0.5"
                                    begin="0s" dur="0.8s"
                                    values=".5;1;.5" calcMode="linear"
                                    repeatCount="indefinite" />
                        </circle>
                        <circle cx="105" cy="15" r="15">
                            <animate attributeName="r" from="15" to="15"
                                    begin="0s" dur="0.8s"
                                    values="15;9;15" calcMode="linear"
                                    repeatCount="indefinite" />
                            <animate attributeName="fill-opacity" from="1" to="1"
                                    begin="0s" dur="0.8s"
                                    values="1;.5;1" calcMode="linear"
                                    repeatCount="indefinite" />
                        </circle>
                    </svg>
                `,
                            },
                        ];

                        let self = this;
                        icons.forEach(function (icon) {
                            if (dom(self).data("loading-icon") == icon.name) {
                                dom(self).replaceWith(icon.svg);
                            }
                        });
                    });

                    return svgLoader;
                })();

                // Register instance
                (function init() {
                    if (window.tailwind === undefined) window.tailwind = {};
                    window.tailwind.svgLoader = function () {
                        initSvgLoader();
                    };
                })();
            })(_dom__WEBPACK_IMPORTED_MODULE_0__["default"]);


            /***/ }),

        /***/ "./node_modules/@left4code/tw-starter/dist/js/tab.js":
        /*!***********************************************************!*\
  !*** ./node_modules/@left4code/tw-starter/dist/js/tab.js ***!
  \***********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@left4code/tw-starter/dist/js/dom.js");


            (function (dom) {
                "use strict";

                // Show tab content
                dom("body").on("click", "[role='tab']", function () {
                    show(this);
                });

                function show(el) {
                    dom(el)
                        .closest("[role='tablist']")
                        .find("[role='tab']")
                        .each(function () {
                            // Trigger "hide.tw.tab" callback function
                            if (dom(this).hasClass("active") && this !== el) {
                                const event = new Event("hide.tw.tab");
                                dom(this)[0].dispatchEvent(event);
                            }

                            // Trigger "show.tw.tab" callback function
                            if (!dom(this).hasClass("active") && this === el) {
                                const event = new Event("show.tw.tab");
                                dom(this)[0].dispatchEvent(event);
                            }
                        });

                    // Set active tab nav
                    dom(el)
                        .closest("[role='tablist']")
                        .find("[role='tab']")
                        .removeClass("active")
                        .attr("aria-selected", false);
                    dom(el).addClass("active").attr("aria-selected", true);

                    // Set active tab content
                    let elementId = dom(el).attr("data-tw-target");
                    let tabContentWidth = dom(elementId).closest(".tab-content").width();
                    dom(elementId)
                        .closest(".tab-content")
                        .children(".tab-pane")
                        .removeAttr("style")
                        .removeClass("active");
                    dom(elementId)
                        .css("width", tabContentWidth + "px")
                        .addClass("active");
                }

                // On window resized
                (function onResized(el) {
                    addEventListener("resize", (event) => {
                        dom("[role='tabpanel']").each(function () {
                            if (dom(this).hasClass("active")) {
                                let tabContentWidth = dom(this).closest(".tab-content").width();
                                dom(this).css("width", tabContentWidth + "px");
                            }
                        });
                    });
                })();

                // Create instance
                function createInstance(el) {
                    return {
                        show() {
                            show(el);
                        },
                    };
                }

                // Register instance
                (function init() {
                    dom("[role='tab']").each(function () {
                        this["__tab"] = createInstance(this);
                    });

                    if (window.tailwind === undefined) window.tailwind = {};
                    window.tailwind.Tab = {
                        getInstance(el) {
                            return el.__tab;
                        },
                        getOrCreateInstance(el) {
                            return el.__tab === undefined ? createInstance(el) : el.__tab;
                        },
                    };
                })();
            })(_dom__WEBPACK_IMPORTED_MODULE_0__["default"]);


            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/createPopper.js":
        /*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/createPopper.js ***!
  \*********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   createPopper: () => (/* binding */ createPopper),
                /* harmony export */   detectOverflow: () => (/* reexport safe */ _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_8__["default"]),
                /* harmony export */   popperGenerator: () => (/* binding */ popperGenerator)
                /* harmony export */ });
            /* harmony import */ var _dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dom-utils/getCompositeRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js");
            /* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
            /* harmony import */ var _dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-utils/listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
            /* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
            /* harmony import */ var _utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/orderModifiers.js */ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js");
            /* harmony import */ var _utils_debounce_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/debounce.js */ "./node_modules/@popperjs/core/lib/utils/debounce.js");
            /* harmony import */ var _utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/mergeByName.js */ "./node_modules/@popperjs/core/lib/utils/mergeByName.js");
            /* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
            /* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");









            var DEFAULT_OPTIONS = {
                placement: 'bottom',
                modifiers: [],
                strategy: 'absolute'
            };

            function areValidElements() {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                return !args.some(function (element) {
                    return !(element && typeof element.getBoundingClientRect === 'function');
                });
            }

            function popperGenerator(generatorOptions) {
                if (generatorOptions === void 0) {
                    generatorOptions = {};
                }

                var _generatorOptions = generatorOptions,
                    _generatorOptions$def = _generatorOptions.defaultModifiers,
                    defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
                    _generatorOptions$def2 = _generatorOptions.defaultOptions,
                    defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
                return function createPopper(reference, popper, options) {
                    if (options === void 0) {
                        options = defaultOptions;
                    }

                    var state = {
                        placement: 'bottom',
                        orderedModifiers: [],
                        options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
                        modifiersData: {},
                        elements: {
                            reference: reference,
                            popper: popper
                        },
                        attributes: {},
                        styles: {}
                    };
                    var effectCleanupFns = [];
                    var isDestroyed = false;
                    var instance = {
                        state: state,
                        setOptions: function setOptions(setOptionsAction) {
                            var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
                            cleanupModifierEffects();
                            state.options = Object.assign({}, defaultOptions, state.options, options);
                            state.scrollParents = {
                                reference: (0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(reference) ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference) : reference.contextElement ? (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reference.contextElement) : [],
                                popper: (0,_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_1__["default"])(popper)
                            }; // Orders the modifiers based on their dependencies and `phase`
                            // properties

                            var orderedModifiers = (0,_utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_utils_mergeByName_js__WEBPACK_IMPORTED_MODULE_3__["default"])([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

                            state.orderedModifiers = orderedModifiers.filter(function (m) {
                                return m.enabled;
                            });
                            runModifierEffects();
                            return instance.update();
                        },
                        // Sync update – it will always be executed, even if not necessary. This
                        // is useful for low frequency updates where sync behavior simplifies the
                        // logic.
                        // For high frequency updates (e.g. `resize` and `scroll` events), always
                        // prefer the async Popper#update method
                        forceUpdate: function forceUpdate() {
                            if (isDestroyed) {
                                return;
                            }

                            var _state$elements = state.elements,
                                reference = _state$elements.reference,
                                popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
                            // anymore

                            if (!areValidElements(reference, popper)) {
                                return;
                            } // Store the reference and popper rects to be read by modifiers


                            state.rects = {
                                reference: (0,_dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_4__["default"])(reference, (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(popper), state.options.strategy === 'fixed'),
                                popper: (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(popper)
                            }; // Modifiers have the ability to reset the current update cycle. The
                            // most common use case for this is the `flip` modifier changing the
                            // placement, which then needs to re-run all the modifiers, because the
                            // logic was previously ran for the previous placement and is therefore
                            // stale/incorrect

                            state.reset = false;
                            state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
                            // is filled with the initial data specified by the modifier. This means
                            // it doesn't persist and is fresh on each update.
                            // To ensure persistent data, use `${name}#persistent`

                            state.orderedModifiers.forEach(function (modifier) {
                                return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
                            });

                            for (var index = 0; index < state.orderedModifiers.length; index++) {
                                if (state.reset === true) {
                                    state.reset = false;
                                    index = -1;
                                    continue;
                                }

                                var _state$orderedModifie = state.orderedModifiers[index],
                                    fn = _state$orderedModifie.fn,
                                    _state$orderedModifie2 = _state$orderedModifie.options,
                                    _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
                                    name = _state$orderedModifie.name;

                                if (typeof fn === 'function') {
                                    state = fn({
                                        state: state,
                                        options: _options,
                                        name: name,
                                        instance: instance
                                    }) || state;
                                }
                            }
                        },
                        // Async and optimistically optimized update – it will not be executed if
                        // not necessary (debounced to run at most once-per-tick)
                        update: (0,_utils_debounce_js__WEBPACK_IMPORTED_MODULE_7__["default"])(function () {
                            return new Promise(function (resolve) {
                                instance.forceUpdate();
                                resolve(state);
                            });
                        }),
                        destroy: function destroy() {
                            cleanupModifierEffects();
                            isDestroyed = true;
                        }
                    };

                    if (!areValidElements(reference, popper)) {
                        return instance;
                    }

                    instance.setOptions(options).then(function (state) {
                        if (!isDestroyed && options.onFirstUpdate) {
                            options.onFirstUpdate(state);
                        }
                    }); // Modifiers have the ability to execute arbitrary code before the first
                    // update cycle runs. They will be executed in the same order as the update
                    // cycle. This is useful when a modifier adds some persistent data that
                    // other modifiers need to use, but the modifier is run after the dependent
                    // one.

                    function runModifierEffects() {
                        state.orderedModifiers.forEach(function (_ref) {
                            var name = _ref.name,
                                _ref$options = _ref.options,
                                options = _ref$options === void 0 ? {} : _ref$options,
                                effect = _ref.effect;

                            if (typeof effect === 'function') {
                                var cleanupFn = effect({
                                    state: state,
                                    name: name,
                                    instance: instance,
                                    options: options
                                });

                                var noopFn = function noopFn() {};

                                effectCleanupFns.push(cleanupFn || noopFn);
                            }
                        });
                    }

                    function cleanupModifierEffects() {
                        effectCleanupFns.forEach(function (fn) {
                            return fn();
                        });
                        effectCleanupFns = [];
                    }

                    return instance;
                };
            }
            var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules



            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/contains.js":
        /*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/contains.js ***!
  \***************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ contains)
                /* harmony export */ });
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

            function contains(parent, child) {
                var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

                if (parent.contains(child)) {
                    return true;
                } // then fallback to custom implementation with Shadow DOM support
                else if (rootNode && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(rootNode)) {
                    var next = child;

                    do {
                        if (next && parent.isSameNode(next)) {
                            return true;
                        } // $FlowFixMe[prop-missing]: need a better way to handle this...


                        next = next.parentNode || next.host;
                    } while (next);
                } // Give up, the result is false


                return false;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js":
        /*!****************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js ***!
  \****************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getBoundingClientRect)
                /* harmony export */ });
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
            /* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
            /* harmony import */ var _isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isLayoutViewport.js */ "./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js");




            function getBoundingClientRect(element, includeScale, isFixedStrategy) {
                if (includeScale === void 0) {
                    includeScale = false;
                }

                if (isFixedStrategy === void 0) {
                    isFixedStrategy = false;
                }

                var clientRect = element.getBoundingClientRect();
                var scaleX = 1;
                var scaleY = 1;

                if (includeScale && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {
                    scaleX = element.offsetWidth > 0 ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(clientRect.width) / element.offsetWidth || 1 : 1;
                    scaleY = element.offsetHeight > 0 ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_1__.round)(clientRect.height) / element.offsetHeight || 1 : 1;
                }

                var _ref = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element) : window,
                    visualViewport = _ref.visualViewport;

                var addVisualOffsets = !(0,_isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_3__["default"])() && isFixedStrategy;
                var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
                var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
                var width = clientRect.width / scaleX;
                var height = clientRect.height / scaleY;
                return {
                    width: width,
                    height: height,
                    top: y,
                    right: x + width,
                    bottom: y + height,
                    left: x,
                    x: x,
                    y: y
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getClippingRect)
                /* harmony export */ });
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getViewportRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js");
            /* harmony import */ var _getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getDocumentRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js");
            /* harmony import */ var _listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./listScrollParents.js */ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js");
            /* harmony import */ var _getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
            /* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
            /* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
            /* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
            /* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
            /* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
            /* harmony import */ var _utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
            /* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");















            function getInnerBoundingClientRect(element, strategy) {
                var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element, false, strategy === 'fixed');
                rect.top = rect.top + element.clientTop;
                rect.left = rect.left + element.clientLeft;
                rect.bottom = rect.top + element.clientHeight;
                rect.right = rect.left + element.clientWidth;
                rect.width = element.clientWidth;
                rect.height = element.clientHeight;
                rect.x = rect.left;
                rect.y = rect.top;
                return rect;
            }

            function getClientRectFromMixedType(element, clippingParent, strategy) {
                return clippingParent === _enums_js__WEBPACK_IMPORTED_MODULE_1__.viewport ? (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getViewportRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, strategy)) : (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : (0,_utils_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_getDocumentRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element)));
            } // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


            function getClippingParents(element) {
                var clippingParents = (0,_listScrollParents_js__WEBPACK_IMPORTED_MODULE_7__["default"])((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_8__["default"])(element));
                var canEscapeClipping = ['absolute', 'fixed'].indexOf((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_9__["default"])(element).position) >= 0;
                var clipperElement = canEscapeClipping && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isHTMLElement)(element) ? (0,_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_10__["default"])(element) : element;

                if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clipperElement)) {
                    return [];
                } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


                return clippingParents.filter(function (clippingParent) {
                    return (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(clippingParent) && (0,_contains_js__WEBPACK_IMPORTED_MODULE_11__["default"])(clippingParent, clipperElement) && (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_12__["default"])(clippingParent) !== 'body';
                });
            } // Gets the maximum area that the element is visible in due to any number of
// clipping parents


            function getClippingRect(element, boundary, rootBoundary, strategy) {
                var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
                var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
                var firstClippingParent = clippingParents[0];
                var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
                    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
                    accRect.top = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.top, accRect.top);
                    accRect.right = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.right, accRect.right);
                    accRect.bottom = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.min)(rect.bottom, accRect.bottom);
                    accRect.left = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_13__.max)(rect.left, accRect.left);
                    return accRect;
                }, getClientRectFromMixedType(element, firstClippingParent, strategy));
                clippingRect.width = clippingRect.right - clippingRect.left;
                clippingRect.height = clippingRect.bottom - clippingRect.top;
                clippingRect.x = clippingRect.left;
                clippingRect.y = clippingRect.top;
                return clippingRect;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js ***!
  \***********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getCompositeRect)
                /* harmony export */ });
            /* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
            /* harmony import */ var _getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getNodeScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js");
            /* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
            /* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
            /* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
            /* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");









            function isElementScaled(element) {
                var rect = element.getBoundingClientRect();
                var scaleX = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.width) / element.offsetWidth || 1;
                var scaleY = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(rect.height) / element.offsetHeight || 1;
                return scaleX !== 1 || scaleY !== 1;
            } // Returns the composite rect of an element relative to its offsetParent.
// Composite means it takes into account transforms as well as layout.


            function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
                if (isFixed === void 0) {
                    isFixed = false;
                }

                var isOffsetParentAnElement = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent);
                var offsetParentIsScaled = (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent) && isElementScaled(offsetParent);
                var documentElement = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(offsetParent);
                var rect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(elementOrVirtualElement, offsetParentIsScaled, isFixed);
                var scroll = {
                    scrollLeft: 0,
                    scrollTop: 0
                };
                var offsets = {
                    x: 0,
                    y: 0
                };

                if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
                    if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
                        (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(documentElement)) {
                        scroll = (0,_getNodeScroll_js__WEBPACK_IMPORTED_MODULE_6__["default"])(offsetParent);
                    }

                    if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(offsetParent)) {
                        offsets = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])(offsetParent, true);
                        offsets.x += offsetParent.clientLeft;
                        offsets.y += offsetParent.clientTop;
                    } else if (documentElement) {
                        offsets.x = (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_7__["default"])(documentElement);
                    }
                }

                return {
                    x: rect.left + scroll.scrollLeft - offsets.x,
                    y: rect.top + scroll.scrollTop - offsets.y,
                    width: rect.width,
                    height: rect.height
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js ***!
  \***********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getComputedStyle)
                /* harmony export */ });
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

            function getComputedStyle(element) {
                return (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element).getComputedStyle(element);
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js":
        /*!*************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js ***!
  \*************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getDocumentElement)
                /* harmony export */ });
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

            function getDocumentElement(element) {
                // $FlowFixMe[incompatible-return]: assume body is always available
                return (((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
                    element.document) || window.document).documentElement;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getDocumentRect)
                /* harmony export */ });
            /* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
            /* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
            /* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
            /* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");




            // Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable

            function getDocumentRect(element) {
                var _element$ownerDocumen;

                var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
                var winScroll = (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
                var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
                var width = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
                var height = (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
                var x = -winScroll.scrollLeft + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element);
                var y = -winScroll.scrollTop;

                if ((0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_4__["default"])(body || html).direction === 'rtl') {
                    x += (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_2__.max)(html.clientWidth, body ? body.clientWidth : 0) - width;
                }

                return {
                    width: width,
                    height: height,
                    x: x,
                    y: y
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js":
        /*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js ***!
  \***************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getHTMLElementScroll)
                /* harmony export */ });
            function getHTMLElementScroll(element) {
                return {
                    scrollLeft: element.scrollLeft,
                    scrollTop: element.scrollTop
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js":
        /*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js ***!
  \********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getLayoutRect)
                /* harmony export */ });
            /* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
            // Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.

            function getLayoutRect(element) {
                var clientRect = (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element); // Use the clientRect sizes if it's not been transformed.
                // Fixes https://github.com/popperjs/popper-core/issues/1223

                var width = element.offsetWidth;
                var height = element.offsetHeight;

                if (Math.abs(clientRect.width - width) <= 1) {
                    width = clientRect.width;
                }

                if (Math.abs(clientRect.height - height) <= 1) {
                    height = clientRect.height;
                }

                return {
                    x: element.offsetLeft,
                    y: element.offsetTop,
                    width: width,
                    height: height
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js":
        /*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js ***!
  \******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getNodeName)
                /* harmony export */ });
            function getNodeName(element) {
                return element ? (element.nodeName || '').toLowerCase() : null;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js":
        /*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js ***!
  \********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getNodeScroll)
                /* harmony export */ });
            /* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
            /* harmony import */ var _getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getHTMLElementScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js");




            function getNodeScroll(node) {
                if (node === (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node) || !(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node)) {
                    return (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node);
                } else {
                    return (0,_getHTMLElementScroll_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node);
                }
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getOffsetParent)
                /* harmony export */ });
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
            /* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
            /* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
            /* harmony import */ var _isTableElement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isTableElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js");
            /* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
            /* harmony import */ var _utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/userAgent.js */ "./node_modules/@popperjs/core/lib/utils/userAgent.js");








            function getTrueOffsetParent(element) {
                if (!(0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837
                    (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element).position === 'fixed') {
                    return null;
                }

                return element.offsetParent;
            } // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


            function getContainingBlock(element) {
                var isFirefox = /firefox/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__["default"])());
                var isIE = /Trident/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_2__["default"])());

                if (isIE && (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element)) {
                    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
                    var elementCss = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);

                    if (elementCss.position === 'fixed') {
                        return null;
                    }
                }

                var currentNode = (0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element);

                if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isShadowRoot)(currentNode)) {
                    currentNode = currentNode.host;
                }

                while ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(currentNode) && ['html', 'body'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(currentNode)) < 0) {
                    var css = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(currentNode); // This is non-exhaustive but covers the most common CSS properties that
                    // create a containing block.
                    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

                    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
                        return currentNode;
                    } else {
                        currentNode = currentNode.parentNode;
                    }
                }

                return null;
            } // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


            function getOffsetParent(element) {
                var window = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element);
                var offsetParent = getTrueOffsetParent(element);

                while (offsetParent && (0,_isTableElement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(offsetParent) && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static') {
                    offsetParent = getTrueOffsetParent(offsetParent);
                }

                if (offsetParent && ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) === 'html' || (0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_4__["default"])(offsetParent) === 'body' && (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(offsetParent).position === 'static')) {
                    return window;
                }

                return offsetParent || getContainingBlock(element) || window;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js":
        /*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js ***!
  \********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getParentNode)
                /* harmony export */ });
            /* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
            /* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");



            function getParentNode(element) {
                if ((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element) === 'html') {
                    return element;
                }

                return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
                    // $FlowFixMe[incompatible-return]
                    // $FlowFixMe[prop-missing]
                    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
                    element.parentNode || ( // DOM Element detected
                        (0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected
                    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
                    (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element) // fallback

                );
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getScrollParent)
                /* harmony export */ });
            /* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
            /* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");
            /* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
            /* harmony import */ var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");




            function getScrollParent(node) {
                if (['html', 'body', '#document'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node)) >= 0) {
                    // $FlowFixMe[incompatible-return]: assume body is always available
                    return node.ownerDocument.body;
                }

                if ((0,_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(node) && (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(node)) {
                    return node;
                }

                return getScrollParent((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(node));
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getViewportRect)
                /* harmony export */ });
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
            /* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWindowScrollBarX.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js");
            /* harmony import */ var _isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isLayoutViewport.js */ "./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js");




            function getViewportRect(element, strategy) {
                var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
                var html = (0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
                var visualViewport = win.visualViewport;
                var width = html.clientWidth;
                var height = html.clientHeight;
                var x = 0;
                var y = 0;

                if (visualViewport) {
                    width = visualViewport.width;
                    height = visualViewport.height;
                    var layoutViewport = (0,_isLayoutViewport_js__WEBPACK_IMPORTED_MODULE_2__["default"])();

                    if (layoutViewport || !layoutViewport && strategy === 'fixed') {
                        x = visualViewport.offsetLeft;
                        y = visualViewport.offsetTop;
                    }
                }

                return {
                    width: width,
                    height: height,
                    x: x + (0,_getWindowScrollBarX_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element),
                    y: y
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js":
        /*!****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindow.js ***!
  \****************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getWindow)
                /* harmony export */ });
            function getWindow(node) {
                if (node == null) {
                    return window;
                }

                if (node.toString() !== '[object Window]') {
                    var ownerDocument = node.ownerDocument;
                    return ownerDocument ? ownerDocument.defaultView || window : window;
                }

                return node;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getWindowScroll)
                /* harmony export */ });
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");

            function getWindowScroll(node) {
                var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node);
                var scrollLeft = win.pageXOffset;
                var scrollTop = win.pageYOffset;
                return {
                    scrollLeft: scrollLeft,
                    scrollTop: scrollTop
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js":
        /*!**************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js ***!
  \**************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getWindowScrollBarX)
                /* harmony export */ });
            /* harmony import */ var _getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
            /* harmony import */ var _getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getWindowScroll.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js");



            function getWindowScrollBarX(element) {
                // If <html> has a CSS width greater than the viewport, then this will be
                // incorrect for RTL.
                // Popper 1 is broken in this case and never had a bug report so let's assume
                // it's not an issue. I don't think anyone ever specifies width on <html>
                // anyway.
                // Browsers where the left scrollbar doesn't cause an issue report `0` for
                // this (e.g. Edge 2019, IE11, Safari)
                return (0,_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_0__["default"])((0,_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)).left + (0,_getWindowScroll_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element).scrollLeft;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js ***!
  \*****************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   isElement: () => (/* binding */ isElement),
                /* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),
                /* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot)
                /* harmony export */ });
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");


            function isElement(node) {
                var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).Element;
                return node instanceof OwnElement || node instanceof Element;
            }

            function isHTMLElement(node) {
                var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).HTMLElement;
                return node instanceof OwnElement || node instanceof HTMLElement;
            }

            function isShadowRoot(node) {
                // IE 11 has no ShadowRoot
                if (typeof ShadowRoot === 'undefined') {
                    return false;
                }

                var OwnElement = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(node).ShadowRoot;
                return node instanceof OwnElement || node instanceof ShadowRoot;
            }



            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js ***!
  \***********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ isLayoutViewport)
                /* harmony export */ });
            /* harmony import */ var _utils_userAgent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/userAgent.js */ "./node_modules/@popperjs/core/lib/utils/userAgent.js");

            function isLayoutViewport() {
                return !/^((?!chrome|android).)*safari/i.test((0,_utils_userAgent_js__WEBPACK_IMPORTED_MODULE_0__["default"])());
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js ***!
  \*********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ isScrollParent)
                /* harmony export */ });
            /* harmony import */ var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");

            function isScrollParent(element) {
                // Firefox wants us to check `-x` and `-y` variations as well
                var _getComputedStyle = (0,_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element),
                    overflow = _getComputedStyle.overflow,
                    overflowX = _getComputedStyle.overflowX,
                    overflowY = _getComputedStyle.overflowY;

                return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/isTableElement.js ***!
  \*********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ isTableElement)
                /* harmony export */ });
            /* harmony import */ var _getNodeName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");

            function isTableElement(element) {
                return ['table', 'td', 'th'].indexOf((0,_getNodeName_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element)) >= 0;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js":
        /*!************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js ***!
  \************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ listScrollParents)
                /* harmony export */ });
            /* harmony import */ var _getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js");
            /* harmony import */ var _getParentNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getParentNode.js */ "./node_modules/@popperjs/core/lib/dom-utils/getParentNode.js");
            /* harmony import */ var _getWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
            /* harmony import */ var _isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isScrollParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js");




            /*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

            function listScrollParents(element, list) {
                var _element$ownerDocumen;

                if (list === void 0) {
                    list = [];
                }

                var scrollParent = (0,_getScrollParent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(element);
                var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
                var win = (0,_getWindow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scrollParent);
                var target = isBody ? [win].concat(win.visualViewport || [], (0,_isScrollParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(scrollParent) ? scrollParent : []) : scrollParent;
                var updatedList = list.concat(target);
                return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
                    updatedList.concat(listScrollParents((0,_getParentNode_js__WEBPACK_IMPORTED_MODULE_3__["default"])(target)));
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/enums.js":
        /*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/enums.js ***!
  \**************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   afterMain: () => (/* binding */ afterMain),
                /* harmony export */   afterRead: () => (/* binding */ afterRead),
                /* harmony export */   afterWrite: () => (/* binding */ afterWrite),
                /* harmony export */   auto: () => (/* binding */ auto),
                /* harmony export */   basePlacements: () => (/* binding */ basePlacements),
                /* harmony export */   beforeMain: () => (/* binding */ beforeMain),
                /* harmony export */   beforeRead: () => (/* binding */ beforeRead),
                /* harmony export */   beforeWrite: () => (/* binding */ beforeWrite),
                /* harmony export */   bottom: () => (/* binding */ bottom),
                /* harmony export */   clippingParents: () => (/* binding */ clippingParents),
                /* harmony export */   end: () => (/* binding */ end),
                /* harmony export */   left: () => (/* binding */ left),
                /* harmony export */   main: () => (/* binding */ main),
                /* harmony export */   modifierPhases: () => (/* binding */ modifierPhases),
                /* harmony export */   placements: () => (/* binding */ placements),
                /* harmony export */   popper: () => (/* binding */ popper),
                /* harmony export */   read: () => (/* binding */ read),
                /* harmony export */   reference: () => (/* binding */ reference),
                /* harmony export */   right: () => (/* binding */ right),
                /* harmony export */   start: () => (/* binding */ start),
                /* harmony export */   top: () => (/* binding */ top),
                /* harmony export */   variationPlacements: () => (/* binding */ variationPlacements),
                /* harmony export */   viewport: () => (/* binding */ viewport),
                /* harmony export */   write: () => (/* binding */ write)
                /* harmony export */ });
            var top = 'top';
            var bottom = 'bottom';
            var right = 'right';
            var left = 'left';
            var auto = 'auto';
            var basePlacements = [top, bottom, right, left];
            var start = 'start';
            var end = 'end';
            var clippingParents = 'clippingParents';
            var viewport = 'viewport';
            var popper = 'popper';
            var reference = 'reference';
            var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
                return acc.concat([placement + "-" + start, placement + "-" + end]);
            }, []);
            var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
                return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
            }, []); // modifiers that need to read the DOM

            var beforeRead = 'beforeRead';
            var read = 'read';
            var afterRead = 'afterRead'; // pure-logic modifiers

            var beforeMain = 'beforeMain';
            var main = 'main';
            var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

            var beforeWrite = 'beforeWrite';
            var write = 'write';
            var afterWrite = 'afterWrite';
            var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/index.js":
        /*!**************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/index.js ***!
  \**************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   afterMain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterMain),
                /* harmony export */   afterRead: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterRead),
                /* harmony export */   afterWrite: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.afterWrite),
                /* harmony export */   applyStyles: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.applyStyles),
                /* harmony export */   arrow: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.arrow),
                /* harmony export */   auto: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.auto),
                /* harmony export */   basePlacements: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements),
                /* harmony export */   beforeMain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeMain),
                /* harmony export */   beforeRead: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeRead),
                /* harmony export */   beforeWrite: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.beforeWrite),
                /* harmony export */   bottom: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom),
                /* harmony export */   clippingParents: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents),
                /* harmony export */   computeStyles: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.computeStyles),
                /* harmony export */   createPopper: () => (/* reexport safe */ _popper_js__WEBPACK_IMPORTED_MODULE_4__.createPopper),
                /* harmony export */   createPopperBase: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.createPopper),
                /* harmony export */   createPopperLite: () => (/* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__.createPopper),
                /* harmony export */   detectOverflow: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
                /* harmony export */   end: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.end),
                /* harmony export */   eventListeners: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.eventListeners),
                /* harmony export */   flip: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.flip),
                /* harmony export */   hide: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.hide),
                /* harmony export */   left: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.left),
                /* harmony export */   main: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.main),
                /* harmony export */   modifierPhases: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases),
                /* harmony export */   offset: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.offset),
                /* harmony export */   placements: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements),
                /* harmony export */   popper: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper),
                /* harmony export */   popperGenerator: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_2__.popperGenerator),
                /* harmony export */   popperOffsets: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.popperOffsets),
                /* harmony export */   preventOverflow: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__.preventOverflow),
                /* harmony export */   read: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.read),
                /* harmony export */   reference: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference),
                /* harmony export */   right: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.right),
                /* harmony export */   start: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.start),
                /* harmony export */   top: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.top),
                /* harmony export */   variationPlacements: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements),
                /* harmony export */   viewport: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport),
                /* harmony export */   write: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_0__.write)
                /* harmony export */ });
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/index.js */ "./node_modules/@popperjs/core/lib/modifiers/index.js");
            /* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
            /* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
            /* harmony import */ var _popper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./popper.js */ "./node_modules/@popperjs/core/lib/popper.js");
            /* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./popper-lite.js */ "./node_modules/@popperjs/core/lib/popper-lite.js");

            // eslint-disable-next-line import/no-unused-modules

            // eslint-disable-next-line import/no-unused-modules

            // eslint-disable-next-line import/no-unused-modules



            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js":
        /*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/applyStyles.js ***!
  \******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom-utils/getNodeName.js */ "./node_modules/@popperjs/core/lib/dom-utils/getNodeName.js");
            /* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");

            // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow

            function applyStyles(_ref) {
                var state = _ref.state;
                Object.keys(state.elements).forEach(function (name) {
                    var style = state.styles[name] || {};
                    var attributes = state.attributes[name] || {};
                    var element = state.elements[name]; // arrow is optional + virtual elements

                    if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
                        return;
                    } // Flow doesn't support to extend this property, but it's the most
                    // effective way to apply styles to an HTMLElement
                    // $FlowFixMe[cannot-write]


                    Object.assign(element.style, style);
                    Object.keys(attributes).forEach(function (name) {
                        var value = attributes[name];

                        if (value === false) {
                            element.removeAttribute(name);
                        } else {
                            element.setAttribute(name, value === true ? '' : value);
                        }
                    });
                });
            }

            function effect(_ref2) {
                var state = _ref2.state;
                var initialStyles = {
                    popper: {
                        position: state.options.strategy,
                        left: '0',
                        top: '0',
                        margin: '0'
                    },
                    arrow: {
                        position: 'absolute'
                    },
                    reference: {}
                };
                Object.assign(state.elements.popper.style, initialStyles.popper);
                state.styles = initialStyles;

                if (state.elements.arrow) {
                    Object.assign(state.elements.arrow.style, initialStyles.arrow);
                }

                return function () {
                    Object.keys(state.elements).forEach(function (name) {
                        var element = state.elements[name];
                        var attributes = state.attributes[name] || {};
                        var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

                        var style = styleProperties.reduce(function (style, property) {
                            style[property] = '';
                            return style;
                        }, {}); // arrow is optional + virtual elements

                        if (!(0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(element) || !(0,_dom_utils_getNodeName_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element)) {
                            return;
                        }

                        Object.assign(element.style, style);
                        Object.keys(attributes).forEach(function (attribute) {
                            element.removeAttribute(attribute);
                        });
                    });
                };
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'applyStyles',
                enabled: true,
                phase: 'write',
                fn: applyStyles,
                effect: effect,
                requires: ['computeStyles']
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/arrow.js":
        /*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/arrow.js ***!
  \************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
            /* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
            /* harmony import */ var _dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../dom-utils/contains.js */ "./node_modules/@popperjs/core/lib/dom-utils/contains.js");
            /* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
            /* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
            /* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
            /* harmony import */ var _utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
            /* harmony import */ var _utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");








            // eslint-disable-next-line import/no-unused-modules

            var toPaddingObject = function toPaddingObject(padding, state) {
                padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
                    placement: state.placement
                })) : padding;
                return (0,_utils_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(typeof padding !== 'number' ? padding : (0,_utils_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_1__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_2__.basePlacements));
            };

            function arrow(_ref) {
                var _state$modifiersData$;

                var state = _ref.state,
                    name = _ref.name,
                    options = _ref.options;
                var arrowElement = state.elements.arrow;
                var popperOffsets = state.modifiersData.popperOffsets;
                var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(state.placement);
                var axis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(basePlacement);
                var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_2__.left, _enums_js__WEBPACK_IMPORTED_MODULE_2__.right].indexOf(basePlacement) >= 0;
                var len = isVertical ? 'height' : 'width';

                if (!arrowElement || !popperOffsets) {
                    return;
                }

                var paddingObject = toPaddingObject(options.padding, state);
                var arrowRect = (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_5__["default"])(arrowElement);
                var minProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.top : _enums_js__WEBPACK_IMPORTED_MODULE_2__.left;
                var maxProp = axis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_2__.right;
                var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
                var startDiff = popperOffsets[axis] - state.rects.reference[axis];
                var arrowOffsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement);
                var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
                var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
                // outside of the popper bounds

                var min = paddingObject[minProp];
                var max = clientSize - arrowRect[len] - paddingObject[maxProp];
                var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
                var offset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_7__.within)(min, center, max); // Prevents breaking syntax highlighting...

                var axisProp = axis;
                state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
            }

            function effect(_ref2) {
                var state = _ref2.state,
                    options = _ref2.options;
                var _options$element = options.element,
                    arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

                if (arrowElement == null) {
                    return;
                } // CSS selector


                if (typeof arrowElement === 'string') {
                    arrowElement = state.elements.popper.querySelector(arrowElement);

                    if (!arrowElement) {
                        return;
                    }
                }

                if (!(0,_dom_utils_contains_js__WEBPACK_IMPORTED_MODULE_8__["default"])(state.elements.popper, arrowElement)) {
                    return;
                }

                state.elements.arrow = arrowElement;
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'arrow',
                enabled: true,
                phase: 'main',
                fn: arrow,
                effect: effect,
                requires: ['popperOffsets'],
                requiresIfExists: ['preventOverflow']
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js":
        /*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/computeStyles.js ***!
  \********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
                /* harmony export */   mapToStyles: () => (/* binding */ mapToStyles)
                /* harmony export */ });
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
            /* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
            /* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getComputedStyle.js */ "./node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js");
            /* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
            /* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
            /* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");







            // eslint-disable-next-line import/no-unused-modules

            var unsetSides = {
                top: 'auto',
                right: 'auto',
                bottom: 'auto',
                left: 'auto'
            }; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

            function roundOffsetsByDPR(_ref, win) {
                var x = _ref.x,
                    y = _ref.y;
                var dpr = win.devicePixelRatio || 1;
                return {
                    x: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(x * dpr) / dpr || 0,
                    y: (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_0__.round)(y * dpr) / dpr || 0
                };
            }

            function mapToStyles(_ref2) {
                var _Object$assign2;

                var popper = _ref2.popper,
                    popperRect = _ref2.popperRect,
                    placement = _ref2.placement,
                    variation = _ref2.variation,
                    offsets = _ref2.offsets,
                    position = _ref2.position,
                    gpuAcceleration = _ref2.gpuAcceleration,
                    adaptive = _ref2.adaptive,
                    roundOffsets = _ref2.roundOffsets,
                    isFixed = _ref2.isFixed;
                var _offsets$x = offsets.x,
                    x = _offsets$x === void 0 ? 0 : _offsets$x,
                    _offsets$y = offsets.y,
                    y = _offsets$y === void 0 ? 0 : _offsets$y;

                var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
                    x: x,
                    y: y
                }) : {
                    x: x,
                    y: y
                };

                x = _ref3.x;
                y = _ref3.y;
                var hasX = offsets.hasOwnProperty('x');
                var hasY = offsets.hasOwnProperty('y');
                var sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.left;
                var sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;
                var win = window;

                if (adaptive) {
                    var offsetParent = (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(popper);
                    var heightProp = 'clientHeight';
                    var widthProp = 'clientWidth';

                    if (offsetParent === (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__["default"])(popper)) {
                        offsetParent = (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(popper);

                        if ((0,_dom_utils_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_5__["default"])(offsetParent).position !== 'static' && position === 'absolute') {
                            heightProp = 'scrollHeight';
                            widthProp = 'scrollWidth';
                        }
                    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


                    offsetParent = offsetParent;

                    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.right) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
                        sideY = _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom;
                        var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
                            offsetParent[heightProp];
                        y -= offsetY - popperRect.height;
                        y *= gpuAcceleration ? 1 : -1;
                    }

                    if (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.left || (placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.top || placement === _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom) && variation === _enums_js__WEBPACK_IMPORTED_MODULE_1__.end) {
                        sideX = _enums_js__WEBPACK_IMPORTED_MODULE_1__.right;
                        var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
                            offsetParent[widthProp];
                        x -= offsetX - popperRect.width;
                        x *= gpuAcceleration ? 1 : -1;
                    }
                }

                var commonStyles = Object.assign({
                    position: position
                }, adaptive && unsetSides);

                var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
                    x: x,
                    y: y
                }, (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_3__["default"])(popper)) : {
                    x: x,
                    y: y
                };

                x = _ref4.x;
                y = _ref4.y;

                if (gpuAcceleration) {
                    var _Object$assign;

                    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
                }

                return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
            }

            function computeStyles(_ref5) {
                var state = _ref5.state,
                    options = _ref5.options;
                var _options$gpuAccelerat = options.gpuAcceleration,
                    gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
                    _options$adaptive = options.adaptive,
                    adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
                    _options$roundOffsets = options.roundOffsets,
                    roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
                var commonStyles = {
                    placement: (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.placement),
                    variation: (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_7__["default"])(state.placement),
                    popper: state.elements.popper,
                    popperRect: state.rects.popper,
                    gpuAcceleration: gpuAcceleration,
                    isFixed: state.options.strategy === 'fixed'
                };

                if (state.modifiersData.popperOffsets != null) {
                    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
                        offsets: state.modifiersData.popperOffsets,
                        position: state.options.strategy,
                        adaptive: adaptive,
                        roundOffsets: roundOffsets
                    })));
                }

                if (state.modifiersData.arrow != null) {
                    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
                        offsets: state.modifiersData.arrow,
                        position: 'absolute',
                        adaptive: false,
                        roundOffsets: roundOffsets
                    })));
                }

                state.attributes.popper = Object.assign({}, state.attributes.popper, {
                    'data-popper-placement': state.placement
                });
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'computeStyles',
                enabled: true,
                phase: 'beforeWrite',
                fn: computeStyles,
                data: {}
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/eventListeners.js ***!
  \*********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dom-utils/getWindow.js */ "./node_modules/@popperjs/core/lib/dom-utils/getWindow.js");
            // eslint-disable-next-line import/no-unused-modules

            var passive = {
                passive: true
            };

            function effect(_ref) {
                var state = _ref.state,
                    instance = _ref.instance,
                    options = _ref.options;
                var _options$scroll = options.scroll,
                    scroll = _options$scroll === void 0 ? true : _options$scroll,
                    _options$resize = options.resize,
                    resize = _options$resize === void 0 ? true : _options$resize;
                var window = (0,_dom_utils_getWindow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state.elements.popper);
                var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

                if (scroll) {
                    scrollParents.forEach(function (scrollParent) {
                        scrollParent.addEventListener('scroll', instance.update, passive);
                    });
                }

                if (resize) {
                    window.addEventListener('resize', instance.update, passive);
                }

                return function () {
                    if (scroll) {
                        scrollParents.forEach(function (scrollParent) {
                            scrollParent.removeEventListener('scroll', instance.update, passive);
                        });
                    }

                    if (resize) {
                        window.removeEventListener('resize', instance.update, passive);
                    }
                };
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'eventListeners',
                enabled: true,
                phase: 'write',
                fn: function fn() {},
                effect: effect,
                data: {}
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/flip.js":
        /*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/flip.js ***!
  \***********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getOppositePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js");
            /* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
            /* harmony import */ var _utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getOppositeVariationPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js");
            /* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
            /* harmony import */ var _utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/computeAutoPlacement.js */ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js");
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");






            // eslint-disable-next-line import/no-unused-modules

            function getExpandedFallbackPlacements(placement) {
                if ((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto) {
                    return [];
                }

                var oppositePlacement = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(placement);
                return [(0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement), oppositePlacement, (0,_utils_getOppositeVariationPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(oppositePlacement)];
            }

            function flip(_ref) {
                var state = _ref.state,
                    options = _ref.options,
                    name = _ref.name;

                if (state.modifiersData[name]._skip) {
                    return;
                }

                var _options$mainAxis = options.mainAxis,
                    checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
                    _options$altAxis = options.altAxis,
                    checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
                    specifiedFallbackPlacements = options.fallbackPlacements,
                    padding = options.padding,
                    boundary = options.boundary,
                    rootBoundary = options.rootBoundary,
                    altBoundary = options.altBoundary,
                    _options$flipVariatio = options.flipVariations,
                    flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
                    allowedAutoPlacements = options.allowedAutoPlacements;
                var preferredPlacement = state.options.placement;
                var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(preferredPlacement);
                var isBasePlacement = basePlacement === preferredPlacement;
                var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [(0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
                var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
                    return acc.concat((0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.auto ? (0,_utils_computeAutoPlacement_js__WEBPACK_IMPORTED_MODULE_4__["default"])(state, {
                        placement: placement,
                        boundary: boundary,
                        rootBoundary: rootBoundary,
                        padding: padding,
                        flipVariations: flipVariations,
                        allowedAutoPlacements: allowedAutoPlacements
                    }) : placement);
                }, []);
                var referenceRect = state.rects.reference;
                var popperRect = state.rects.popper;
                var checksMap = new Map();
                var makeFallbackChecks = true;
                var firstFittingPlacement = placements[0];

                for (var i = 0; i < placements.length; i++) {
                    var placement = placements[i];

                    var _basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);

                    var isStartVariation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_5__["default"])(placement) === _enums_js__WEBPACK_IMPORTED_MODULE_1__.start;
                    var isVertical = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.top, _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom].indexOf(_basePlacement) >= 0;
                    var len = isVertical ? 'width' : 'height';
                    var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state, {
                        placement: placement,
                        boundary: boundary,
                        rootBoundary: rootBoundary,
                        altBoundary: altBoundary,
                        padding: padding
                    });
                    var mainVariationSide = isVertical ? isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.right : _enums_js__WEBPACK_IMPORTED_MODULE_1__.left : isStartVariation ? _enums_js__WEBPACK_IMPORTED_MODULE_1__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_1__.top;

                    if (referenceRect[len] > popperRect[len]) {
                        mainVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
                    }

                    var altVariationSide = (0,_utils_getOppositePlacement_js__WEBPACK_IMPORTED_MODULE_2__["default"])(mainVariationSide);
                    var checks = [];

                    if (checkMainAxis) {
                        checks.push(overflow[_basePlacement] <= 0);
                    }

                    if (checkAltAxis) {
                        checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
                    }

                    if (checks.every(function (check) {
                        return check;
                    })) {
                        firstFittingPlacement = placement;
                        makeFallbackChecks = false;
                        break;
                    }

                    checksMap.set(placement, checks);
                }

                if (makeFallbackChecks) {
                    // `2` may be desired in some cases – research later
                    var numberOfChecks = flipVariations ? 3 : 1;

                    var _loop = function _loop(_i) {
                        var fittingPlacement = placements.find(function (placement) {
                            var checks = checksMap.get(placement);

                            if (checks) {
                                return checks.slice(0, _i).every(function (check) {
                                    return check;
                                });
                            }
                        });

                        if (fittingPlacement) {
                            firstFittingPlacement = fittingPlacement;
                            return "break";
                        }
                    };

                    for (var _i = numberOfChecks; _i > 0; _i--) {
                        var _ret = _loop(_i);

                        if (_ret === "break") break;
                    }
                }

                if (state.placement !== firstFittingPlacement) {
                    state.modifiersData[name]._skip = true;
                    state.placement = firstFittingPlacement;
                    state.reset = true;
                }
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'flip',
                enabled: true,
                phase: 'main',
                fn: flip,
                requiresIfExists: ['offset'],
                data: {
                    _skip: false
                }
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/hide.js":
        /*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/hide.js ***!
  \***********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");



            function getSideOffsets(overflow, rect, preventedOffsets) {
                if (preventedOffsets === void 0) {
                    preventedOffsets = {
                        x: 0,
                        y: 0
                    };
                }

                return {
                    top: overflow.top - rect.height - preventedOffsets.y,
                    right: overflow.right - rect.width + preventedOffsets.x,
                    bottom: overflow.bottom - rect.height + preventedOffsets.y,
                    left: overflow.left - rect.width - preventedOffsets.x
                };
            }

            function isAnySideFullyClipped(overflow) {
                return [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom, _enums_js__WEBPACK_IMPORTED_MODULE_0__.left].some(function (side) {
                    return overflow[side] >= 0;
                });
            }

            function hide(_ref) {
                var state = _ref.state,
                    name = _ref.name;
                var referenceRect = state.rects.reference;
                var popperRect = state.rects.popper;
                var preventedOffsets = state.modifiersData.preventOverflow;
                var referenceOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
                    elementContext: 'reference'
                });
                var popperAltOverflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state, {
                    altBoundary: true
                });
                var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
                var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
                var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
                var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
                state.modifiersData[name] = {
                    referenceClippingOffsets: referenceClippingOffsets,
                    popperEscapeOffsets: popperEscapeOffsets,
                    isReferenceHidden: isReferenceHidden,
                    hasPopperEscaped: hasPopperEscaped
                };
                state.attributes.popper = Object.assign({}, state.attributes.popper, {
                    'data-popper-reference-hidden': isReferenceHidden,
                    'data-popper-escaped': hasPopperEscaped
                });
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'hide',
                enabled: true,
                phase: 'main',
                requiresIfExists: ['preventOverflow'],
                fn: hide
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/index.js":
        /*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/index.js ***!
  \************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   applyStyles: () => (/* reexport safe */ _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
                /* harmony export */   arrow: () => (/* reexport safe */ _arrow_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
                /* harmony export */   computeStyles: () => (/* reexport safe */ _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
                /* harmony export */   eventListeners: () => (/* reexport safe */ _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
                /* harmony export */   flip: () => (/* reexport safe */ _flip_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
                /* harmony export */   hide: () => (/* reexport safe */ _hide_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
                /* harmony export */   offset: () => (/* reexport safe */ _offset_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
                /* harmony export */   popperOffsets: () => (/* reexport safe */ _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
                /* harmony export */   preventOverflow: () => (/* reexport safe */ _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__["default"])
                /* harmony export */ });
            /* harmony import */ var _applyStyles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
            /* harmony import */ var _arrow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
            /* harmony import */ var _computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
            /* harmony import */ var _eventListeners_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
            /* harmony import */ var _flip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
            /* harmony import */ var _hide_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
            /* harmony import */ var _offset_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
            /* harmony import */ var _popperOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
            /* harmony import */ var _preventOverflow_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");










            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/offset.js":
        /*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/offset.js ***!
  \*************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
                /* harmony export */   distanceAndSkiddingToXY: () => (/* binding */ distanceAndSkiddingToXY)
                /* harmony export */ });
            /* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");

            // eslint-disable-next-line import/no-unused-modules

            function distanceAndSkiddingToXY(placement, rects, offset) {
                var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement);
                var invertDistance = [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.top].indexOf(basePlacement) >= 0 ? -1 : 1;

                var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
                        placement: placement
                    })) : offset,
                    skidding = _ref[0],
                    distance = _ref[1];

                skidding = skidding || 0;
                distance = (distance || 0) * invertDistance;
                return [_enums_js__WEBPACK_IMPORTED_MODULE_1__.left, _enums_js__WEBPACK_IMPORTED_MODULE_1__.right].indexOf(basePlacement) >= 0 ? {
                    x: distance,
                    y: skidding
                } : {
                    x: skidding,
                    y: distance
                };
            }

            function offset(_ref2) {
                var state = _ref2.state,
                    options = _ref2.options,
                    name = _ref2.name;
                var _options$offset = options.offset,
                    offset = _options$offset === void 0 ? [0, 0] : _options$offset;
                var data = _enums_js__WEBPACK_IMPORTED_MODULE_1__.placements.reduce(function (acc, placement) {
                    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
                    return acc;
                }, {});
                var _data$state$placement = data[state.placement],
                    x = _data$state$placement.x,
                    y = _data$state$placement.y;

                if (state.modifiersData.popperOffsets != null) {
                    state.modifiersData.popperOffsets.x += x;
                    state.modifiersData.popperOffsets.y += y;
                }

                state.modifiersData[name] = data;
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'offset',
                enabled: true,
                phase: 'main',
                requires: ['popperOffsets'],
                fn: offset
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js":
        /*!********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js ***!
  \********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");


            function popperOffsets(_ref) {
                var state = _ref.state,
                    name = _ref.name;
                // Offsets are the actual position the popper needs to have to be
                // properly positioned near its reference element
                // This is the most basic placement, and will be adjusted by
                // the modifiers in the next step
                state.modifiersData[name] = (0,_utils_computeOffsets_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
                    reference: state.rects.reference,
                    element: state.rects.popper,
                    strategy: 'absolute',
                    placement: state.placement
                });
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'popperOffsets',
                enabled: true,
                phase: 'read',
                fn: popperOffsets,
                data: {}
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
            /* harmony import */ var _utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
            /* harmony import */ var _utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getAltAxis.js */ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js");
            /* harmony import */ var _utils_within_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/within.js */ "./node_modules/@popperjs/core/lib/utils/within.js");
            /* harmony import */ var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getLayoutRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js");
            /* harmony import */ var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom-utils/getOffsetParent.js */ "./node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js");
            /* harmony import */ var _utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
            /* harmony import */ var _utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
            /* harmony import */ var _utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");
            /* harmony import */ var _utils_math_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");












            function preventOverflow(_ref) {
                var state = _ref.state,
                    options = _ref.options,
                    name = _ref.name;
                var _options$mainAxis = options.mainAxis,
                    checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
                    _options$altAxis = options.altAxis,
                    checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
                    boundary = options.boundary,
                    rootBoundary = options.rootBoundary,
                    altBoundary = options.altBoundary,
                    padding = options.padding,
                    _options$tether = options.tether,
                    tether = _options$tether === void 0 ? true : _options$tether,
                    _options$tetherOffset = options.tetherOffset,
                    tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
                var overflow = (0,_utils_detectOverflow_js__WEBPACK_IMPORTED_MODULE_0__["default"])(state, {
                    boundary: boundary,
                    rootBoundary: rootBoundary,
                    padding: padding,
                    altBoundary: altBoundary
                });
                var basePlacement = (0,_utils_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_1__["default"])(state.placement);
                var variation = (0,_utils_getVariation_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state.placement);
                var isBasePlacement = !variation;
                var mainAxis = (0,_utils_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement);
                var altAxis = (0,_utils_getAltAxis_js__WEBPACK_IMPORTED_MODULE_4__["default"])(mainAxis);
                var popperOffsets = state.modifiersData.popperOffsets;
                var referenceRect = state.rects.reference;
                var popperRect = state.rects.popper;
                var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
                    placement: state.placement
                })) : tetherOffset;
                var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
                    mainAxis: tetherOffsetValue,
                    altAxis: tetherOffsetValue
                } : Object.assign({
                    mainAxis: 0,
                    altAxis: 0
                }, tetherOffsetValue);
                var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
                var data = {
                    x: 0,
                    y: 0
                };

                if (!popperOffsets) {
                    return;
                }

                if (checkMainAxis) {
                    var _offsetModifierState$;

                    var mainSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;
                    var altSide = mainAxis === 'y' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;
                    var len = mainAxis === 'y' ? 'height' : 'width';
                    var offset = popperOffsets[mainAxis];
                    var min = offset + overflow[mainSide];
                    var max = offset - overflow[altSide];
                    var additive = tether ? -popperRect[len] / 2 : 0;
                    var minLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? referenceRect[len] : popperRect[len];
                    var maxLen = variation === _enums_js__WEBPACK_IMPORTED_MODULE_5__.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
                    // outside the reference bounds

                    var arrowElement = state.elements.arrow;
                    var arrowRect = tether && arrowElement ? (0,_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(arrowElement) : {
                        width: 0,
                        height: 0
                    };
                    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0,_utils_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_7__["default"])();
                    var arrowPaddingMin = arrowPaddingObject[mainSide];
                    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
                    // to include its full size in the calculation. If the reference is small
                    // and near the edge of a boundary, the popper can overflow even if the
                    // reference is not overflowing as well (e.g. virtual elements with no
                    // width or height)

                    var arrowLen = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(0, referenceRect[len], arrowRect[len]);
                    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
                    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
                    var arrowOffsetParent = state.elements.arrow && (0,_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_9__["default"])(state.elements.arrow);
                    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
                    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
                    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
                    var tetherMax = offset + maxOffset - offsetModifierValue;
                    var preventedOffset = (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.min)(min, tetherMin) : min, offset, tether ? (0,_utils_math_js__WEBPACK_IMPORTED_MODULE_10__.max)(max, tetherMax) : max);
                    popperOffsets[mainAxis] = preventedOffset;
                    data[mainAxis] = preventedOffset - offset;
                }

                if (checkAltAxis) {
                    var _offsetModifierState$2;

                    var _mainSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.top : _enums_js__WEBPACK_IMPORTED_MODULE_5__.left;

                    var _altSide = mainAxis === 'x' ? _enums_js__WEBPACK_IMPORTED_MODULE_5__.bottom : _enums_js__WEBPACK_IMPORTED_MODULE_5__.right;

                    var _offset = popperOffsets[altAxis];

                    var _len = altAxis === 'y' ? 'height' : 'width';

                    var _min = _offset + overflow[_mainSide];

                    var _max = _offset - overflow[_altSide];

                    var isOriginSide = [_enums_js__WEBPACK_IMPORTED_MODULE_5__.top, _enums_js__WEBPACK_IMPORTED_MODULE_5__.left].indexOf(basePlacement) !== -1;

                    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

                    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

                    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

                    var _preventedOffset = tether && isOriginSide ? (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0,_utils_within_js__WEBPACK_IMPORTED_MODULE_8__.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

                    popperOffsets[altAxis] = _preventedOffset;
                    data[altAxis] = _preventedOffset - _offset;
                }

                state.modifiersData[name] = data;
            } // eslint-disable-next-line import/no-unused-modules


            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
                name: 'preventOverflow',
                enabled: true,
                phase: 'main',
                fn: preventOverflow,
                requiresIfExists: ['offset']
            });

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/popper-lite.js":
        /*!********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper-lite.js ***!
  \********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   createPopper: () => (/* binding */ createPopper),
                /* harmony export */   defaultModifiers: () => (/* binding */ defaultModifiers),
                /* harmony export */   detectOverflow: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
                /* harmony export */   popperGenerator: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)
                /* harmony export */ });
            /* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
            /* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
            /* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
            /* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
            /* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
            /* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");





            var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"]];
            var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_4__.popperGenerator)({
                defaultModifiers: defaultModifiers
            }); // eslint-disable-next-line import/no-unused-modules



            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/popper.js":
        /*!***************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/popper.js ***!
  \***************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   applyStyles: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.applyStyles),
                /* harmony export */   arrow: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.arrow),
                /* harmony export */   computeStyles: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.computeStyles),
                /* harmony export */   createPopper: () => (/* binding */ createPopper),
                /* harmony export */   createPopperLite: () => (/* reexport safe */ _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__.createPopper),
                /* harmony export */   defaultModifiers: () => (/* binding */ defaultModifiers),
                /* harmony export */   detectOverflow: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_10__["default"]),
                /* harmony export */   eventListeners: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.eventListeners),
                /* harmony export */   flip: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.flip),
                /* harmony export */   hide: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.hide),
                /* harmony export */   offset: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.offset),
                /* harmony export */   popperGenerator: () => (/* reexport safe */ _createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator),
                /* harmony export */   popperOffsets: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.popperOffsets),
                /* harmony export */   preventOverflow: () => (/* reexport safe */ _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__.preventOverflow)
                /* harmony export */ });
            /* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/createPopper.js");
            /* harmony import */ var _createPopper_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./createPopper.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
            /* harmony import */ var _modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modifiers/eventListeners.js */ "./node_modules/@popperjs/core/lib/modifiers/eventListeners.js");
            /* harmony import */ var _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modifiers/popperOffsets.js */ "./node_modules/@popperjs/core/lib/modifiers/popperOffsets.js");
            /* harmony import */ var _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modifiers/computeStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/computeStyles.js");
            /* harmony import */ var _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/applyStyles.js */ "./node_modules/@popperjs/core/lib/modifiers/applyStyles.js");
            /* harmony import */ var _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modifiers/offset.js */ "./node_modules/@popperjs/core/lib/modifiers/offset.js");
            /* harmony import */ var _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modifiers/flip.js */ "./node_modules/@popperjs/core/lib/modifiers/flip.js");
            /* harmony import */ var _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modifiers/preventOverflow.js */ "./node_modules/@popperjs/core/lib/modifiers/preventOverflow.js");
            /* harmony import */ var _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modifiers/arrow.js */ "./node_modules/@popperjs/core/lib/modifiers/arrow.js");
            /* harmony import */ var _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modifiers/hide.js */ "./node_modules/@popperjs/core/lib/modifiers/hide.js");
            /* harmony import */ var _popper_lite_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./popper-lite.js */ "./node_modules/@popperjs/core/lib/popper-lite.js");
            /* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modifiers/index.js */ "./node_modules/@popperjs/core/lib/modifiers/index.js");










            var defaultModifiers = [_modifiers_eventListeners_js__WEBPACK_IMPORTED_MODULE_0__["default"], _modifiers_popperOffsets_js__WEBPACK_IMPORTED_MODULE_1__["default"], _modifiers_computeStyles_js__WEBPACK_IMPORTED_MODULE_2__["default"], _modifiers_applyStyles_js__WEBPACK_IMPORTED_MODULE_3__["default"], _modifiers_offset_js__WEBPACK_IMPORTED_MODULE_4__["default"], _modifiers_flip_js__WEBPACK_IMPORTED_MODULE_5__["default"], _modifiers_preventOverflow_js__WEBPACK_IMPORTED_MODULE_6__["default"], _modifiers_arrow_js__WEBPACK_IMPORTED_MODULE_7__["default"], _modifiers_hide_js__WEBPACK_IMPORTED_MODULE_8__["default"]];
            var createPopper = /*#__PURE__*/(0,_createPopper_js__WEBPACK_IMPORTED_MODULE_9__.popperGenerator)({
                defaultModifiers: defaultModifiers
            }); // eslint-disable-next-line import/no-unused-modules

            // eslint-disable-next-line import/no-unused-modules

            // eslint-disable-next-line import/no-unused-modules



            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js ***!
  \***********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ computeAutoPlacement)
                /* harmony export */ });
            /* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detectOverflow.js */ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js");
            /* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");




            function computeAutoPlacement(state, options) {
                if (options === void 0) {
                    options = {};
                }

                var _options = options,
                    placement = _options.placement,
                    boundary = _options.boundary,
                    rootBoundary = _options.rootBoundary,
                    padding = _options.padding,
                    flipVariations = _options.flipVariations,
                    _options$allowedAutoP = _options.allowedAutoPlacements,
                    allowedAutoPlacements = _options$allowedAutoP === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.placements : _options$allowedAutoP;
                var variation = (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement);
                var placements = variation ? flipVariations ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements : _enums_js__WEBPACK_IMPORTED_MODULE_0__.variationPlacements.filter(function (placement) {
                    return (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) === variation;
                }) : _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements;
                var allowedPlacements = placements.filter(function (placement) {
                    return allowedAutoPlacements.indexOf(placement) >= 0;
                });

                if (allowedPlacements.length === 0) {
                    allowedPlacements = placements;
                } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


                var overflows = allowedPlacements.reduce(function (acc, placement) {
                    acc[placement] = (0,_detectOverflow_js__WEBPACK_IMPORTED_MODULE_2__["default"])(state, {
                        placement: placement,
                        boundary: boundary,
                        rootBoundary: rootBoundary,
                        padding: padding
                    })[(0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(placement)];
                    return acc;
                }, {});
                return Object.keys(overflows).sort(function (a, b) {
                    return overflows[a] - overflows[b];
                });
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/computeOffsets.js ***!
  \*****************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ computeOffsets)
                /* harmony export */ });
            /* harmony import */ var _getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getBasePlacement.js */ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js");
            /* harmony import */ var _getVariation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getVariation.js */ "./node_modules/@popperjs/core/lib/utils/getVariation.js");
            /* harmony import */ var _getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getMainAxisFromPlacement.js */ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js");
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");




            function computeOffsets(_ref) {
                var reference = _ref.reference,
                    element = _ref.element,
                    placement = _ref.placement;
                var basePlacement = placement ? (0,_getBasePlacement_js__WEBPACK_IMPORTED_MODULE_0__["default"])(placement) : null;
                var variation = placement ? (0,_getVariation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(placement) : null;
                var commonX = reference.x + reference.width / 2 - element.width / 2;
                var commonY = reference.y + reference.height / 2 - element.height / 2;
                var offsets;

                switch (basePlacement) {
                    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.top:
                        offsets = {
                            x: commonX,
                            y: reference.y - element.height
                        };
                        break;

                    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.bottom:
                        offsets = {
                            x: commonX,
                            y: reference.y + reference.height
                        };
                        break;

                    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.right:
                        offsets = {
                            x: reference.x + reference.width,
                            y: commonY
                        };
                        break;

                    case _enums_js__WEBPACK_IMPORTED_MODULE_2__.left:
                        offsets = {
                            x: reference.x - element.width,
                            y: commonY
                        };
                        break;

                    default:
                        offsets = {
                            x: reference.x,
                            y: reference.y
                        };
                }

                var mainAxis = basePlacement ? (0,_getMainAxisFromPlacement_js__WEBPACK_IMPORTED_MODULE_3__["default"])(basePlacement) : null;

                if (mainAxis != null) {
                    var len = mainAxis === 'y' ? 'height' : 'width';

                    switch (variation) {
                        case _enums_js__WEBPACK_IMPORTED_MODULE_2__.start:
                            offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
                            break;

                        case _enums_js__WEBPACK_IMPORTED_MODULE_2__.end:
                            offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
                            break;

                        default:
                    }
                }

                return offsets;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/debounce.js":
        /*!***********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/debounce.js ***!
  \***********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ debounce)
                /* harmony export */ });
            function debounce(fn) {
                var pending;
                return function () {
                    if (!pending) {
                        pending = new Promise(function (resolve) {
                            Promise.resolve().then(function () {
                                pending = undefined;
                                resolve(fn());
                            });
                        });
                    }

                    return pending;
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/detectOverflow.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/detectOverflow.js ***!
  \*****************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ detectOverflow)
                /* harmony export */ });
            /* harmony import */ var _dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom-utils/getClippingRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js");
            /* harmony import */ var _dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-utils/getDocumentElement.js */ "./node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js");
            /* harmony import */ var _dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dom-utils/getBoundingClientRect.js */ "./node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js");
            /* harmony import */ var _computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./computeOffsets.js */ "./node_modules/@popperjs/core/lib/utils/computeOffsets.js");
            /* harmony import */ var _rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rectToClientRect.js */ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js");
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            /* harmony import */ var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom-utils/instanceOf.js */ "./node_modules/@popperjs/core/lib/dom-utils/instanceOf.js");
            /* harmony import */ var _mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergePaddingObject.js */ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js");
            /* harmony import */ var _expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./expandToHashMap.js */ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js");








            // eslint-disable-next-line import/no-unused-modules

            function detectOverflow(state, options) {
                if (options === void 0) {
                    options = {};
                }

                var _options = options,
                    _options$placement = _options.placement,
                    placement = _options$placement === void 0 ? state.placement : _options$placement,
                    _options$strategy = _options.strategy,
                    strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
                    _options$boundary = _options.boundary,
                    boundary = _options$boundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.clippingParents : _options$boundary,
                    _options$rootBoundary = _options.rootBoundary,
                    rootBoundary = _options$rootBoundary === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.viewport : _options$rootBoundary,
                    _options$elementConte = _options.elementContext,
                    elementContext = _options$elementConte === void 0 ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper : _options$elementConte,
                    _options$altBoundary = _options.altBoundary,
                    altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
                    _options$padding = _options.padding,
                    padding = _options$padding === void 0 ? 0 : _options$padding;
                var paddingObject = (0,_mergePaddingObject_js__WEBPACK_IMPORTED_MODULE_1__["default"])(typeof padding !== 'number' ? padding : (0,_expandToHashMap_js__WEBPACK_IMPORTED_MODULE_2__["default"])(padding, _enums_js__WEBPACK_IMPORTED_MODULE_0__.basePlacements));
                var altContext = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? _enums_js__WEBPACK_IMPORTED_MODULE_0__.reference : _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper;
                var popperRect = state.rects.popper;
                var element = state.elements[altBoundary ? altContext : elementContext];
                var clippingClientRect = (0,_dom_utils_getClippingRect_js__WEBPACK_IMPORTED_MODULE_3__["default"])((0,_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_4__.isElement)(element) ? element : element.contextElement || (0,_dom_utils_getDocumentElement_js__WEBPACK_IMPORTED_MODULE_5__["default"])(state.elements.popper), boundary, rootBoundary, strategy);
                var referenceClientRect = (0,_dom_utils_getBoundingClientRect_js__WEBPACK_IMPORTED_MODULE_6__["default"])(state.elements.reference);
                var popperOffsets = (0,_computeOffsets_js__WEBPACK_IMPORTED_MODULE_7__["default"])({
                    reference: referenceClientRect,
                    element: popperRect,
                    strategy: 'absolute',
                    placement: placement
                });
                var popperClientRect = (0,_rectToClientRect_js__WEBPACK_IMPORTED_MODULE_8__["default"])(Object.assign({}, popperRect, popperOffsets));
                var elementClientRect = elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
                // 0 or negative = within the clipping rect

                var overflowOffsets = {
                    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
                    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
                    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
                    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
                };
                var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

                if (elementContext === _enums_js__WEBPACK_IMPORTED_MODULE_0__.popper && offsetData) {
                    var offset = offsetData[placement];
                    Object.keys(overflowOffsets).forEach(function (key) {
                        var multiply = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.right, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 1 : -1;
                        var axis = [_enums_js__WEBPACK_IMPORTED_MODULE_0__.top, _enums_js__WEBPACK_IMPORTED_MODULE_0__.bottom].indexOf(key) >= 0 ? 'y' : 'x';
                        overflowOffsets[key] += offset[axis] * multiply;
                    });
                }

                return overflowOffsets;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/expandToHashMap.js":
        /*!******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/expandToHashMap.js ***!
  \******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ expandToHashMap)
                /* harmony export */ });
            function expandToHashMap(value, keys) {
                return keys.reduce(function (hashMap, key) {
                    hashMap[key] = value;
                    return hashMap;
                }, {});
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/getAltAxis.js":
        /*!*************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getAltAxis.js ***!
  \*************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getAltAxis)
                /* harmony export */ });
            function getAltAxis(axis) {
                return axis === 'x' ? 'y' : 'x';
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/getBasePlacement.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getBasePlacement.js ***!
  \*******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getBasePlacement)
                /* harmony export */ });

            function getBasePlacement(placement) {
                return placement.split('-')[0];
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js ***!
  \*********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getFreshSideObject)
                /* harmony export */ });
            function getFreshSideObject() {
                return {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                };
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js":
        /*!***************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js ***!
  \***************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getMainAxisFromPlacement)
                /* harmony export */ });
            function getMainAxisFromPlacement(placement) {
                return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositePlacement.js ***!
  \***********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getOppositePlacement)
                /* harmony export */ });
            var hash = {
                left: 'right',
                right: 'left',
                bottom: 'top',
                top: 'bottom'
            };
            function getOppositePlacement(placement) {
                return placement.replace(/left|right|bottom|top/g, function (matched) {
                    return hash[matched];
                });
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js":
        /*!********************************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js ***!
  \********************************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getOppositeVariationPlacement)
                /* harmony export */ });
            var hash = {
                start: 'end',
                end: 'start'
            };
            function getOppositeVariationPlacement(placement) {
                return placement.replace(/start|end/g, function (matched) {
                    return hash[matched];
                });
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/getVariation.js":
        /*!***************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/getVariation.js ***!
  \***************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getVariation)
                /* harmony export */ });
            function getVariation(placement) {
                return placement.split('-')[1];
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/math.js":
        /*!*******************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/math.js ***!
  \*******************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   max: () => (/* binding */ max),
                /* harmony export */   min: () => (/* binding */ min),
                /* harmony export */   round: () => (/* binding */ round)
                /* harmony export */ });
            var max = Math.max;
            var min = Math.min;
            var round = Math.round;

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/mergeByName.js":
        /*!**************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergeByName.js ***!
  \**************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ mergeByName)
                /* harmony export */ });
            function mergeByName(modifiers) {
                var merged = modifiers.reduce(function (merged, current) {
                    var existing = merged[current.name];
                    merged[current.name] = existing ? Object.assign({}, existing, current, {
                        options: Object.assign({}, existing.options, current.options),
                        data: Object.assign({}, existing.data, current.data)
                    }) : current;
                    return merged;
                }, {}); // IE11 does not support Object.values

                return Object.keys(merged).map(function (key) {
                    return merged[key];
                });
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/mergePaddingObject.js ***!
  \*********************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ mergePaddingObject)
                /* harmony export */ });
            /* harmony import */ var _getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getFreshSideObject.js */ "./node_modules/@popperjs/core/lib/utils/getFreshSideObject.js");

            function mergePaddingObject(paddingObject) {
                return Object.assign({}, (0,_getFreshSideObject_js__WEBPACK_IMPORTED_MODULE_0__["default"])(), paddingObject);
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/orderModifiers.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/orderModifiers.js ***!
  \*****************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ orderModifiers)
                /* harmony export */ });
            /* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@popperjs/core/lib/enums.js");
            // source: https://stackoverflow.com/questions/49875255

            function order(modifiers) {
                var map = new Map();
                var visited = new Set();
                var result = [];
                modifiers.forEach(function (modifier) {
                    map.set(modifier.name, modifier);
                }); // On visiting object, check for its dependencies and visit them recursively

                function sort(modifier) {
                    visited.add(modifier.name);
                    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
                    requires.forEach(function (dep) {
                        if (!visited.has(dep)) {
                            var depModifier = map.get(dep);

                            if (depModifier) {
                                sort(depModifier);
                            }
                        }
                    });
                    result.push(modifier);
                }

                modifiers.forEach(function (modifier) {
                    if (!visited.has(modifier.name)) {
                        // check for visited object
                        sort(modifier);
                    }
                });
                return result;
            }

            function orderModifiers(modifiers) {
                // order based on dependencies
                var orderedModifiers = order(modifiers); // order based on phase

                return _enums_js__WEBPACK_IMPORTED_MODULE_0__.modifierPhases.reduce(function (acc, phase) {
                    return acc.concat(orderedModifiers.filter(function (modifier) {
                        return modifier.phase === phase;
                    }));
                }, []);
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/rectToClientRect.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/rectToClientRect.js ***!
  \*******************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ rectToClientRect)
                /* harmony export */ });
            function rectToClientRect(rect) {
                return Object.assign({}, rect, {
                    left: rect.x,
                    top: rect.y,
                    right: rect.x + rect.width,
                    bottom: rect.y + rect.height
                });
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/userAgent.js":
        /*!************************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/userAgent.js ***!
  \************************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (/* binding */ getUAString)
                /* harmony export */ });
            function getUAString() {
                var uaData = navigator.userAgentData;

                if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
                    return uaData.brands.map(function (item) {
                        return item.brand + "/" + item.version;
                    }).join(' ');
                }

                return navigator.userAgent;
            }

            /***/ }),

        /***/ "./node_modules/@popperjs/core/lib/utils/within.js":
        /*!*********************************************************!*\
  !*** ./node_modules/@popperjs/core/lib/utils/within.js ***!
  \*********************************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   within: () => (/* binding */ within),
                /* harmony export */   withinMaxClamp: () => (/* binding */ withinMaxClamp)
                /* harmony export */ });
            /* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/@popperjs/core/lib/utils/math.js");

            function within(min, value, max) {
                return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(min, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(value, max));
            }
            function withinMaxClamp(min, value, max) {
                var v = within(min, value, max);
                return v > max ? max : v;
            }

            /***/ }),

        /***/ "./src/js/app.js":
        /*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bootstrap */ "./src/js/bootstrap.js");
            /* harmony import */ var _left4code_tw_starter_dist_js_svg_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @left4code/tw-starter/dist/js/svg-loader */ "./node_modules/@left4code/tw-starter/dist/js/svg-loader.js");
            /* harmony import */ var _left4code_tw_starter_dist_js_accordion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @left4code/tw-starter/dist/js/accordion */ "./node_modules/@left4code/tw-starter/dist/js/accordion.js");
            /* harmony import */ var _left4code_tw_starter_dist_js_alert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @left4code/tw-starter/dist/js/alert */ "./node_modules/@left4code/tw-starter/dist/js/alert.js");
            /* harmony import */ var _left4code_tw_starter_dist_js_dropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @left4code/tw-starter/dist/js/dropdown */ "./node_modules/@left4code/tw-starter/dist/js/dropdown.js");
            /* harmony import */ var _left4code_tw_starter_dist_js_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @left4code/tw-starter/dist/js/modal */ "./node_modules/@left4code/tw-starter/dist/js/modal.js");
            /* harmony import */ var _left4code_tw_starter_dist_js_tab__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @left4code/tw-starter/dist/js/tab */ "./node_modules/@left4code/tw-starter/dist/js/tab.js");
            /* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chart */ "./src/js/chart.js");
            /* harmony import */ var _highlight__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./highlight */ "./src/js/highlight.js");
            /* harmony import */ var _lucide__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lucide */ "./src/js/lucide.js");
            /* harmony import */ var _tiny_slider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tiny-slider */ "./src/js/tiny-slider.js");
            /* harmony import */ var _tippy__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tippy */ "./src/js/tippy.js");
            /* harmony import */ var _datepicker__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./datepicker */ "./src/js/datepicker.js");
            /* harmony import */ var _tom_select__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./tom-select */ "./src/js/tom-select.js");
            /* harmony import */ var _dropzone__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dropzone */ "./src/js/dropzone.js");
            /* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./validation */ "./src/js/validation.js");
            /* harmony import */ var _zoom__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./zoom */ "./src/js/zoom.js");
            /* harmony import */ var _notification__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./notification */ "./src/js/notification.js");
            /* harmony import */ var _tabulator__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tabulator */ "./src/js/tabulator.js");
            /* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./calendar */ "./src/js/calendar.js");
            /* harmony import */ var _maps__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./maps */ "./src/js/maps.js");
            /* harmony import */ var _chat__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./chat */ "./src/js/chat.js");
            /* harmony import */ var _chat__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_chat__WEBPACK_IMPORTED_MODULE_21__);
            /* harmony import */ var _show_modal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./show-modal */ "./src/js/show-modal.js");
            /* harmony import */ var _show_modal__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_show_modal__WEBPACK_IMPORTED_MODULE_22__);
            /* harmony import */ var _show_slide_over__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./show-slide-over */ "./src/js/show-slide-over.js");
            /* harmony import */ var _show_slide_over__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_show_slide_over__WEBPACK_IMPORTED_MODULE_23__);
            /* harmony import */ var _show_dropdown__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./show-dropdown */ "./src/js/show-dropdown.js");
            /* harmony import */ var _show_dropdown__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_show_dropdown__WEBPACK_IMPORTED_MODULE_24__);
            /* harmony import */ var _search__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./search */ "./src/js/search.js");
            /* harmony import */ var _search__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_search__WEBPACK_IMPORTED_MODULE_25__);
            /* harmony import */ var _copy_code__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./copy-code */ "./src/js/copy-code.js");
            /* harmony import */ var _show_code__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./show-code */ "./src/js/show-code.js");
            /* harmony import */ var _show_code__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_show_code__WEBPACK_IMPORTED_MODULE_27__);
            /* harmony import */ var _side_menu__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./side-menu */ "./src/js/side-menu.js");
            /* harmony import */ var _side_menu__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_side_menu__WEBPACK_IMPORTED_MODULE_28__);
            /* harmony import */ var _mobile_menu__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./mobile-menu */ "./src/js/mobile-menu.js");
            /* harmony import */ var _side_menu_tooltip__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./side-menu-tooltip */ "./src/js/side-menu-tooltip.js");
            /* harmony import */ var _dark_mode_switcher__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./dark-mode-switcher */ "./src/js/dark-mode-switcher.js");
            /* harmony import */ var _dark_mode_switcher__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_dark_mode_switcher__WEBPACK_IMPORTED_MODULE_31__);
            /*
 |--------------------------------------------------------------------------
 | Midone Built-in Components
 |--------------------------------------------------------------------------
 |
 | Import Midone built-in components.
 |
 */








            /*
 |--------------------------------------------------------------------------
 | 3rd Party Libraries
 |--------------------------------------------------------------------------
 |
 | Import 3rd party library JS files.
 |
 */














            /*
 |--------------------------------------------------------------------------
 | Custom Components
 |--------------------------------------------------------------------------
 |
 | Import JS custom components.
 |
 */













            /***/ }),

        /***/ "./src/js/bootstrap.js":
        /*!*****************************!*\
  !*** ./src/js/bootstrap.js ***!
  \*****************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper */ "./src/js/helper.js");
            /* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @popperjs/core */ "./node_modules/@popperjs/core/lib/index.js");
            /* harmony import */ var _left4code_tw_starter_dist_js_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @left4code/tw-starter/dist/js/dom */ "./node_modules/@left4code/tw-starter/dist/js/dom.js");
// Load plugins




// Set plugins globally
            window.helper = _helper__WEBPACK_IMPORTED_MODULE_0__["default"];
            window.Popper = _popperjs_core__WEBPACK_IMPORTED_MODULE_2__;
            window.$ = _left4code_tw_starter_dist_js_dom__WEBPACK_IMPORTED_MODULE_1__["default"];

            /***/ }),

        /***/ "./src/js/calendar.js":
        /*!****************************!*\
  !*** ./src/js/calendar.js ***!
  \****************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fullcalendar/core */ "./node_modules/@fullcalendar/core/main.js");
            /* harmony import */ var _fullcalendar_interaction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/interaction */ "./node_modules/@fullcalendar/interaction/main.js");
            /* harmony import */ var _fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fullcalendar/daygrid */ "./node_modules/@fullcalendar/daygrid/main.js");
            /* harmony import */ var _fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fullcalendar/timegrid */ "./node_modules/@fullcalendar/timegrid/main.js");
            /* harmony import */ var _fullcalendar_list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fullcalendar/list */ "./node_modules/@fullcalendar/list/main.js");





            (function () {
                if ($("#calendar").length) {
                    if ($("#calendar-events").length) {
                        new _fullcalendar_interaction__WEBPACK_IMPORTED_MODULE_1__.Draggable($("#calendar-events")[0], {
                            itemSelector: ".event",
                            eventData: function eventData(eventEl) {
                                return {
                                    title: $(eventEl).find(".event__title").html(),
                                    duration: {
                                        days: parseInt($(eventEl).find(".event__days").text())
                                    }
                                };
                            }
                        });
                    }
                    var calendar = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__.Calendar($("#calendar")[0], {
                        plugins: [_fullcalendar_interaction__WEBPACK_IMPORTED_MODULE_1__["default"], _fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_2__["default"], _fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_3__["default"], _fullcalendar_list__WEBPACK_IMPORTED_MODULE_4__["default"]],
                        droppable: true,
                        headerToolbar: {
                            left: "prev,next today",
                            center: "title",
                            right: "dayGridMonth,timeGridWeek,timeGridDay,listWeek"
                        },
                        initialDate: "2021-01-12",
                        navLinks: true,
                        editable: true,
                        dayMaxEvents: true,
                        events: [{
                            title: "Vue Vixens Day",
                            start: "2021-01-05",
                            end: "2021-01-08"
                        }, {
                            title: "VueConfUS",
                            start: "2021-01-11",
                            end: "2021-01-15"
                        }, {
                            title: "VueJS Amsterdam",
                            start: "2021-01-17",
                            end: "2021-01-21"
                        }, {
                            title: "Vue Fes Japan 2019",
                            start: "2021-01-21",
                            end: "2021-01-24"
                        }, {
                            title: "Laracon 2021",
                            start: "2021-01-24",
                            end: "2021-01-27"
                        }],
                        drop: function drop(info) {
                            if ($("#checkbox-events").length && $("#checkbox-events")[0].checked) {
                                $(info.draggedEl).parent().remove();
                                if ($("#calendar-events").children().length == 1) {
                                    $("#calendar-no-events").removeClass("hidden");
                                }
                            }
                        }
                    });
                    calendar.render();
                }
            })();

            /***/ }),

        /***/ "./src/js/chart.js":
        /*!*************************!*\
  !*** ./src/js/chart.js ***!
  \*************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper */ "./src/js/helper.js");
            /* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colors */ "./src/js/colors.js");
            /* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chart.js/auto */ "./node_modules/chart.js/auto/auto.mjs");
            function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
            function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
            function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
            function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
            function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
            function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
            function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
            function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
            function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
            function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }



            (function () {
                "use strict";

                // Chart
                if ($("#report-line-chart").length) {
                    var ctx = $("#report-line-chart")[0].getContext("2d");
                    var myChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](ctx, {
                        type: "line",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "# of Votes",
                                data: [0, 200, 250, 200, 700, 550, 650, 1050, 950, 1100, 900, 1200],
                                borderWidth: 2,
                                borderColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.8),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }, {
                                label: "# of Votes",
                                data: [0, 300, 400, 560, 320, 600, 720, 850, 690, 805, 1200, 1010],
                                borderWidth: 2,
                                borderDash: [2, 2],
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["400"](0.6) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["400"](),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                x: {
                                    ticks: {
                                        font: {
                                            size: 12
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        font: {
                                            size: 12
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8),
                                        callback: function callback(value, index, values) {
                                            return "$" + value;
                                        }
                                    },
                                    grid: {
                                        color: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.3) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                        borderDash: [2, 2],
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($("#report-pie-chart").length) {
                    var _ctx = $("#report-pie-chart")[0].getContext("2d");
                    var myPieChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx, {
                        type: "pie",
                        data: {
                            labels: ["31 - 50 Years old", ">= 50 Years old", "17 - 30 Years old"],
                            datasets: [{
                                data: [15, 10, 65],
                                backgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                hoverBackgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                borderWidth: 5,
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode[700]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].white
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                }
                if ($("#report-donut-chart").length) {
                    var _ctx2 = $("#report-donut-chart")[0].getContext("2d");
                    var myDoughnutChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx2, {
                        type: "doughnut",
                        data: {
                            labels: ["31 - 50 Years old", ">= 50 Years old", "17 - 30 Years old"],
                            datasets: [{
                                data: [15, 10, 65],
                                backgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                hoverBackgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                borderWidth: 5,
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode[700]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].white
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            cutout: "80%"
                        }
                    });
                }
                if ($("#report-bar-chart").length) {
                    // Fake visitor data
                    var reportBarChartData = new Array(40).fill(0).map(function (data, key) {
                        if (key % 3 == 0 || key % 5 == 0) {
                            return Math.ceil(Math.random() * (0 - 20) + 20);
                        } else {
                            return Math.ceil(Math.random() * (0 - 7) + 7);
                        }
                    });

                    // Fake visitor bar color
                    var reportBarChartColor = reportBarChartData.map(function (data) {
                        if (data >= 8 && data <= 14) {
                            return $("html").hasClass("dark") ? "#2E51BBA6" : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.65);
                        } else if (data >= 15) {
                            return $("html").hasClass("dark") ? "#2E51BB" : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary();
                        }
                        return $("html").hasClass("dark") ? "#2E51BB59" : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.35);
                    });
                    var _ctx3 = $("#report-bar-chart")[0].getContext("2d");
                    var myBarChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx3, {
                        type: "bar",
                        data: {
                            labels: reportBarChartData,
                            datasets: [{
                                label: "Html Template",
                                barThickness: 6,
                                data: reportBarChartData,
                                backgroundColor: reportBarChartColor
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                x: {
                                    ticks: {
                                        display: false
                                    },
                                    grid: {
                                        display: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        display: false
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                    setInterval(function () {
                        // Swap visitor data
                        var newData = reportBarChartData[0];
                        reportBarChartData.shift();
                        reportBarChartData.push(newData);

                        // Swap visitor bar color
                        var newColor = reportBarChartColor[0];
                        reportBarChartColor.shift();
                        reportBarChartColor.push(newColor);
                        myBarChart.update();
                    }, 1000);
                }
                if ($("#report-bar-chart-1").length) {
                    var _ctx4 = $("#report-bar-chart-1")[0].getContext("2d");
                    var _myChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx4, {
                        type: "bar",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "Html Template",
                                barThickness: 8,
                                maxBarThickness: 6,
                                data: [60, 150, 30, 200, 180, 50, 180, 120, 230, 180, 250, 270],
                                backgroundColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)
                            }, {
                                label: "VueJs Template",
                                barThickness: 8,
                                maxBarThickness: 6,
                                data: [50, 135, 40, 180, 190, 60, 150, 90, 250, 170, 240, 250],
                                backgroundColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["400"]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"]()
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                x: {
                                    ticks: {
                                        font: {
                                            size: 11
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        display: false
                                    },
                                    grid: {
                                        color: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["300"](0.8) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                        borderDash: [2, 2],
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($("#report-donut-chart-1").length) {
                    var _ctx5 = $("#report-donut-chart-1")[0].getContext("2d");
                    var _myDoughnutChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx5, {
                        type: "doughnut",
                        data: {
                            labels: ["Yellow", "Dark"],
                            datasets: [{
                                data: [15, 10, 65],
                                backgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                hoverBackgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                borderWidth: 2,
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode[700]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].white
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            cutout: "83%"
                        }
                    });
                }
                if ($("#report-donut-chart-2").length) {
                    var _ctx6 = $("#report-donut-chart-2")[0].getContext("2d");
                    var _myDoughnutChart2 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx6, {
                        type: "doughnut",
                        data: {
                            labels: ["Yellow", "Dark"],
                            datasets: [{
                                data: [15, 10, 65],
                                backgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                hoverBackgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                borderWidth: 2,
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode[700]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].white
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            cutout: "83%"
                        }
                    });
                }
                if ($("#report-donut-chart-3").length) {
                    var _ctx7 = $("#report-donut-chart-3")[0].getContext("2d");
                    var _myDoughnutChart3 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx7, {
                        type: "doughnut",
                        data: {
                            labels: ["Yellow", "Dark"],
                            datasets: [{
                                data: [15, 10, 65],
                                backgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                hoverBackgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                borderWidth: 5,
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode[700]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate[200]()
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            cutout: "82%"
                        }
                    });
                }
                if ($(".simple-line-chart-1").length) {
                    $(".simple-line-chart-1").each(function () {
                        var ctx = $(this)[0].getContext("2d");
                        var myChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](ctx, {
                            type: "line",
                            data: {
                                labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                                datasets: [{
                                    label: "# of Votes",
                                    data: $(this).data("random") !== undefined ? _helper__WEBPACK_IMPORTED_MODULE_0__["default"].randomNumbers(0, 5, 12) : [0, 200, 250, 200, 500, 450, 850, 1050, 950, 1100, 900, 1200],
                                    borderWidth: 2,
                                    borderColor: $(this).data("line-color") !== undefined ? $(this).data("line-color") : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.8),
                                    backgroundColor: "transparent",
                                    pointBorderColor: "transparent",
                                    tension: 0.4
                                }]
                            },
                            options: {
                                maintainAspectRatio: false,
                                plugins: {
                                    legend: {
                                        display: false
                                    }
                                },
                                scales: {
                                    x: {
                                        ticks: {
                                            display: false
                                        },
                                        grid: {
                                            display: false,
                                            drawBorder: false
                                        }
                                    },
                                    y: {
                                        ticks: {
                                            display: false
                                        },
                                        grid: {
                                            display: false,
                                            drawBorder: false
                                        }
                                    }
                                }
                            }
                        });
                    });
                }
                if ($(".simple-line-chart-2").length) {
                    $(".simple-line-chart-2").each(function () {
                        var ctx = $(this)[0].getContext("2d");
                        var myChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](ctx, {
                            type: "line",
                            data: {
                                labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                                datasets: [{
                                    label: "# of Votes",
                                    data: $(this).data("random") !== undefined ? _helper__WEBPACK_IMPORTED_MODULE_0__["default"].randomNumbers(0, 5, 12) : [0, 300, 400, 560, 320, 600, 720, 850, 690, 805, 1200, 1010],
                                    borderWidth: 2,
                                    borderDash: [2, 2],
                                    borderColor: $(this).data("line-color") !== undefined ? $(this).data("line-color") : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                    backgroundColor: "transparent",
                                    pointBorderColor: "transparent"
                                }]
                            },
                            options: {
                                maintainAspectRatio: false,
                                plugins: {
                                    legend: {
                                        display: false
                                    }
                                },
                                scales: {
                                    x: {
                                        ticks: {
                                            display: false
                                        },
                                        grid: {
                                            display: false,
                                            drawBorder: false
                                        }
                                    },
                                    y: {
                                        ticks: {
                                            display: false
                                        },
                                        grid: {
                                            display: false,
                                            drawBorder: false
                                        }
                                    }
                                }
                            }
                        });
                    });
                }
                if ($(".simple-line-chart-3").length) {
                    var _ctx8 = $(".simple-line-chart-3")[0].getContext("2d");
                    var _myChart2 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx8, {
                        type: "line",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "# of Votes",
                                data: [0, 200, 250, 200, 700, 550, 650, 1050, 950, 1100, 900, 1200],
                                borderWidth: 2,
                                borderColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.8),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }, {
                                label: "# of Votes",
                                data: [0, 300, 400, 560, 320, 600, 720, 850, 690, 805, 1200, 1010],
                                borderWidth: 2,
                                borderDash: [2, 2],
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["100"]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["400"](),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                x: {
                                    ticks: {
                                        display: false
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        display: false
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($(".simple-line-chart-4").length) {
                    var _ctx9 = $(".simple-line-chart-4")[0].getContext("2d");
                    var _myChart3 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx9, {
                        type: "line",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "# of Votes",
                                data: [0, 200, 250, 200, 700, 550, 650, 1050, 950, 1100, 900, 1200],
                                borderWidth: 2,
                                borderColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.8),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }, {
                                label: "# of Votes",
                                data: [0, 300, 400, 560, 320, 600, 720, 850, 690, 805, 1200, 1010],
                                borderWidth: 2,
                                borderDash: [2, 2],
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["100"]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["400"](),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                x: {
                                    ticks: {
                                        display: false
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        display: false
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }

                // Chart widget page
                if ($("#vertical-bar-chart-widget").length) {
                    var _ctx10 = $("#vertical-bar-chart-widget")[0].getContext("2d");
                    var _myChart4 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx10, {
                        type: "bar",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug"],
                            datasets: [{
                                label: "Html Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                data: [0, 200, 250, 200, 500, 450, 850, 1050],
                                backgroundColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary()
                            }, {
                                label: "VueJs Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                data: [0, 300, 400, 560, 320, 600, 720, 850],
                                backgroundColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["200"]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"]()
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    labels: {
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    ticks: {
                                        font: {
                                            size: 12
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8),
                                        callback: function callback(value, index, values) {
                                            return "$" + value;
                                        }
                                    },
                                    grid: {
                                        color: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.3) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                        borderDash: [2, 2],
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($("#horizontal-bar-chart-widget").length) {
                    var _ctx11 = $("#horizontal-bar-chart-widget")[0].getContext("2d");
                    var _myChart5 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx11, {
                        type: "bar",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug"],
                            datasets: [{
                                label: "Html Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                data: [0, 200, 250, 200, 500, 450, 850, 1050],
                                backgroundColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary()
                            }, {
                                label: "VueJs Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                data: [0, 300, 400, 560, 320, 600, 720, 850],
                                backgroundColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["200"]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"]()
                            }]
                        },
                        options: {
                            indexAxis: "y",
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    labels: {
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8),
                                        callback: function callback(value, index, values) {
                                            return "$" + value;
                                        }
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    },
                                    grid: {
                                        color: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.3) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                        borderDash: [2, 2],
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($("#stacked-bar-chart-widget").length) {
                    var _ctx12 = $("#stacked-bar-chart-widget")[0].getContext("2d");
                    var _myChart6 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx12, {
                        type: "bar",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "Html Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                backgroundColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(),
                                data: _helper__WEBPACK_IMPORTED_MODULE_0__["default"].randomNumbers(-100, 100, 12)
                            }, {
                                label: "VueJs Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                backgroundColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["200"]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                data: _helper__WEBPACK_IMPORTED_MODULE_0__["default"].randomNumbers(-100, 100, 12)
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    labels: {
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    stacked: true,
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    stacked: true,
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8),
                                        callback: function callback(value, index, values) {
                                            return "$" + value;
                                        }
                                    },
                                    grid: {
                                        color: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.3) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                        borderDash: [2, 2],
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($("#stacked-bar-chart-1").length) {
                    var _ctx13 = $("#stacked-bar-chart-1")[0].getContext("2d");
                    var _myChart7 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx13, {
                        type: "bar",
                        data: {
                            labels: _toConsumableArray(Array(16).keys()),
                            datasets: [{
                                label: "Html Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                backgroundColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.8),
                                data: _helper__WEBPACK_IMPORTED_MODULE_0__["default"].randomNumbers(-100, 100, 16)
                            }, {
                                label: "VueJs Template",
                                barPercentage: 0.5,
                                barThickness: 6,
                                maxBarThickness: 8,
                                minBarLength: 2,
                                backgroundColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode["200"]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                data: _helper__WEBPACK_IMPORTED_MODULE_0__["default"].randomNumbers(-100, 100, 16)
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                x: {
                                    stacked: true,
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    },
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    stacked: true,
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8),
                                        callback: function callback(value, index, values) {
                                            return "$" + value;
                                        }
                                    },
                                    grid: {
                                        color: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.3) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                        borderDash: [2, 2],
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($("#line-chart-widget").length) {
                    var _ctx14 = $("#line-chart-widget")[0].getContext("2d");
                    var _myChart8 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx14, {
                        type: "line",
                        data: {
                            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "Html Template",
                                data: [0, 200, 250, 200, 500, 450, 850, 1050, 950, 1100, 900, 1200],
                                borderWidth: 2,
                                borderColor: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }, {
                                label: "VueJs Template",
                                data: [0, 300, 400, 560, 320, 600, 720, 850, 690, 805, 1200, 1010],
                                borderWidth: 2,
                                borderDash: [2, 2],
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["400"](0.6) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["400"](),
                                backgroundColor: "transparent",
                                pointBorderColor: "transparent",
                                tension: 0.4
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    labels: {
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    ticks: _defineProperty({
                                        font: {
                                            size: "12"
                                        }
                                    }, "font", _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)),
                                    grid: {
                                        display: false,
                                        drawBorder: false
                                    }
                                },
                                y: {
                                    ticks: {
                                        font: {
                                            size: "12"
                                        },
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8),
                                        callback: function callback(value, index, values) {
                                            return "$" + value;
                                        }
                                    },
                                    grid: {
                                        color: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.3) : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["300"](),
                                        borderDash: [2, 2],
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                }
                if ($("#donut-chart-widget").length) {
                    var _ctx15 = $("#donut-chart-widget")[0].getContext("2d");
                    var _myDoughnutChart4 = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx15, {
                        type: "doughnut",
                        data: {
                            labels: ["Html", "Vuejs", "Laravel"],
                            datasets: [{
                                data: [15, 10, 65],
                                backgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                hoverBackgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                borderWidth: 5,
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode[700]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].white
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    labels: {
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    }
                                }
                            },
                            cutout: "80%"
                        }
                    });
                }
                if ($("#pie-chart-widget").length) {
                    var _ctx16 = $("#pie-chart-widget")[0].getContext("2d");
                    var _myPieChart = new chart_js_auto__WEBPACK_IMPORTED_MODULE_2__["default"](_ctx16, {
                        type: "pie",
                        data: {
                            labels: ["Html", "Vuejs", "Laravel"],
                            datasets: [{
                                data: [15, 10, 65],
                                backgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                hoverBackgroundColor: [_colors__WEBPACK_IMPORTED_MODULE_1__["default"].pending(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].warning(0.9), _colors__WEBPACK_IMPORTED_MODULE_1__["default"].primary(0.9)],
                                borderWidth: 5,
                                borderColor: $("html").hasClass("dark") ? _colors__WEBPACK_IMPORTED_MODULE_1__["default"].darkmode[700]() : _colors__WEBPACK_IMPORTED_MODULE_1__["default"].white
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    labels: {
                                        color: _colors__WEBPACK_IMPORTED_MODULE_1__["default"].slate["500"](0.8)
                                    }
                                }
                            }
                        }
                    });
                }
            })();

            /***/ }),

        /***/ "./src/js/chat.js":
        /*!************************!*\
  !*** ./src/js/chat.js ***!
  \************************/
        /***/ (() => {

            (function () {
                "use strict";

                $(".chat__chat-list").children().each(function () {
                    $(this).on("click", function () {
                        $(".chat__box").children("div:nth-child(2)").fadeOut(300, function () {
                            $(".chat__box").children("div:nth-child(1)").fadeIn(300, function (el) {
                                $(el).removeClass("hidden").removeAttr("style");
                            });
                        });
                    });
                });
            })();

            /***/ }),

        /***/ "./src/js/colors.js":
        /*!**************************!*\
  !*** ./src/js/colors.js ***!
  \**************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tailwindcss/colors */ "./node_modules/tailwindcss/colors.js");
            /* harmony import */ var tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__);
            /* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ "./src/js/helper.js");
            function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
            function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
            function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
            function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
            function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
            function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


            var el = getComputedStyle(document.body);
            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_objectSpread(_objectSpread({}, _helper__WEBPACK_IMPORTED_MODULE_1__["default"].toRGB({
                inherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.inherit,
                currentinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.currentinherit,
                transparentinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.transparentinherit,
                blackinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.blackinherit,
                whiteinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.whiteinherit,
                slateinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.slateinherit,
                grayinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.grayinherit,
                zincinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.zincinherit,
                neutralinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.neutralinherit,
                stoneinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.stoneinherit,
                redinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.redinherit,
                orangeinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.orangeinherit,
                amberinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.amberinherit,
                yellowinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.yellowinherit,
                limeinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.limeinherit,
                greeninherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.greeninherit,
                emeraldinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.emeraldinherit,
                tealinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.tealinherit,
                cyaninherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.cyaninherit,
                skyinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.skyinherit,
                blueinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.blueinherit,
                indigoinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.indigoinherit,
                violetinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.violetinherit,
                purpleinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.purpleinherit,
                fuchsiainherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.fuchsiainherit,
                pinkinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.pinkinherit,
                roseinherit: tailwindcss_colors__WEBPACK_IMPORTED_MODULE_0__.roseinherit
            })), {}, {
                primary: function primary() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-primary"), " / ").concat(opacity, ")");
                },
                secondary: function secondary() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-secondary"), " / ").concat(opacity, ")");
                },
                success: function success() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-success"), " / ").concat(opacity, ")");
                },
                info: function info() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-info"), " / ").concat(opacity, ")");
                },
                warning: function warning() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-warning"), " / ").concat(opacity, ")");
                },
                pending: function pending() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-pending"), " / ").concat(opacity, ")");
                },
                danger: function danger() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-danger"), " / ").concat(opacity, ")");
                },
                light: function light() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-light"), " / ").concat(opacity, ")");
                },
                dark: function dark() {
                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                    return "rgb(".concat(el.getPropertyValue("--color-dark"), " / ").concat(opacity, ")");
                },
                slate: {
                    50: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-50"), " / ").concat(opacity, ")");
                    },
                    100: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-100"), " / ").concat(opacity, ")");
                    },
                    200: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-200"), " / ").concat(opacity, ")");
                    },
                    300: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-300"), " / ").concat(opacity, ")");
                    },
                    400: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-400"), " / ").concat(opacity, ")");
                    },
                    500: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-500"), " / ").concat(opacity, ")");
                    },
                    600: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-600"), " / ").concat(opacity, ")");
                    },
                    700: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-700"), " / ").concat(opacity, ")");
                    },
                    800: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-800"), " / ").concat(opacity, ")");
                    },
                    900: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-slate-900"), " / ").concat(opacity, ")");
                    }
                },
                darkmode: {
                    50: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-50"), " / ").concat(opacity, ")");
                    },
                    100: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-100"), " / ").concat(opacity, ")");
                    },
                    200: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-200"), " / ").concat(opacity, ")");
                    },
                    300: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-300"), " / ").concat(opacity, ")");
                    },
                    400: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-400"), " / ").concat(opacity, ")");
                    },
                    500: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-500"), " / ").concat(opacity, ")");
                    },
                    600: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-600"), " / ").concat(opacity, ")");
                    },
                    700: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-700"), " / ").concat(opacity, ")");
                    },
                    800: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-800"), " / ").concat(opacity, ")");
                    },
                    900: function _() {
                        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                        return "rgb(".concat(el.getPropertyValue("--color-darkmode-900"), " / ").concat(opacity, ")");
                    }
                }
            }));

            /***/ }),

        /***/ "./src/js/copy-code.js":
        /*!*****************************!*\
  !*** ./src/js/copy-code.js ***!
  \*****************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! toastify-js */ "./node_modules/toastify-js/src/toastify.js");
            /* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(toastify_js__WEBPACK_IMPORTED_MODULE_0__);

            (function () {
                "use strict";

                // Copy original code
                $("body").on("click", ".copy-code", function () {
                    var content = $(this).html();
                    var self = this;
                    $(self).html(content.replace("Copy example code", "Copied!"));
                    setTimeout(function () {
                        $(self).html(content);
                    }, 1500);
                    var elementId = $(this).data("target");
                    $(elementId).find("textarea")[0].select();
                    $(elementId).find("textarea")[0].setSelectionRange(0, 99999);
                    document.execCommand("copy");
                });
            })();

            /***/ }),

        /***/ "./src/js/dark-mode-switcher.js":
        /*!**************************************!*\
  !*** ./src/js/dark-mode-switcher.js ***!
  \**************************************/
        /***/ (() => {

            (function () {
                "use strict";

                // Dark mode switcher
                $(".dark-mode-switcher").on("click", function () {
                    var switcher = $(this).find(".dark-mode-switcher__toggle");
                    if ($(switcher).hasClass("dark-mode-switcher__toggle--active")) {
                        $(switcher).removeClass("dark-mode-switcher__toggle--active");
                    } else {
                        $(switcher).addClass("dark-mode-switcher__toggle--active");
                    }
                    setTimeout(function () {
                        var link = $(".dark-mode-switcher").data("url");
                        window.location.href = link;
                    }, 500);
                });
            })();

            /***/ }),

        /***/ "./src/js/datepicker.js":
        /*!******************************!*\
  !*** ./src/js/datepicker.js ***!
  \******************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ "./node_modules/dayjs/dayjs.min.js");
            /* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
            /* harmony import */ var litepicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! litepicker */ "./node_modules/litepicker/dist/litepicker.umd.js");
            /* harmony import */ var litepicker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(litepicker__WEBPACK_IMPORTED_MODULE_1__);
            function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
            function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
            function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
            function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
            function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
            function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


            (function () {
                "use strict";

                // Litepicker
                $(".datepicker").each(function () {
                    var options = {
                        autoApply: false,
                        singleMode: false,
                        numberOfColumns: 2,
                        numberOfMonths: 2,
                        showWeekNumbers: true,
                        format: "D MMM, YYYY",
                        dropdowns: {
                            minYear: 1990,
                            maxYear: null,
                            months: true,
                            years: true
                        }
                    };
                    if ($(this).data("single-mode")) {
                        options.singleMode = true;
                        options.numberOfColumns = 1;
                        options.numberOfMonths = 1;
                    }
                    if ($(this).data("format")) {
                        options.format = $(this).data("format");
                    }
                    if (!$(this).val()) {
                        var date = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().format(options.format);
                        date += !options.singleMode ? " - " + dayjs__WEBPACK_IMPORTED_MODULE_0___default()().add(1, "month").format(options.format) : "";
                        $(this).val(date);
                    }
                    new (litepicker__WEBPACK_IMPORTED_MODULE_1___default())(_objectSpread({
                        element: this
                    }, options));
                });
            })();

            /***/ }),

        /***/ "./src/js/dropzone.js":
        /*!****************************!*\
  !*** ./src/js/dropzone.js ***!
  \****************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var dropzone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dropzone */ "./node_modules/dropzone/dist/dropzone.js");
            /* harmony import */ var dropzone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dropzone__WEBPACK_IMPORTED_MODULE_0__);

            (function () {
                "use strict";

                // Dropzone
                (dropzone__WEBPACK_IMPORTED_MODULE_0___default().autoDiscover) = false;
                $(".dropzone").each(function () {
                    var _this = this;
                    var options = {
                        accept: function accept(file, done) {
                            console.log("Uploaded");
                            done();
                        }
                    };
                    if ($(this).data("single")) {
                        options.maxFiles = 1;
                    }
                    if ($(this).data("file-types")) {
                        options.accept = function (file, done) {
                            if ($(_this).data("file-types").split("|").indexOf(file.type) === -1) {
                                alert("Error! Files of this type are not accepted");
                                done("Error! Files of this type are not accepted");
                            } else {
                                console.log("Uploaded");
                                done();
                            }
                        };
                    }
                    var dz = new (dropzone__WEBPACK_IMPORTED_MODULE_0___default())(this, options);
                    dz.on("maxfilesexceeded", function (file) {
                        alert("No more files please!");
                    });
                });
            })();

            /***/ }),

        /***/ "./src/js/helper.js":
        /*!**************************!*\
  !*** ./src/js/helper.js ***!
  \**************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ "./node_modules/dayjs/dayjs.min.js");
            /* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
            function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
            function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
            function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
            function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
            function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
            function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

            var helpers = {
                cutText: function cutText(text, length) {
                    if (text.split(" ").length > 1) {
                        var string = text.substring(0, length);
                        var splitText = string.split(" ");
                        splitText.pop();
                        return splitText.join(" ") + "...";
                    } else {
                        return text;
                    }
                },
                formatDate: function formatDate(date, format) {
                    return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(date).format(format);
                },
                capitalizeFirstLetter: function capitalizeFirstLetter(string) {
                    if (string) {
                        return string.charAt(0).toUpperCase() + string.slice(1);
                    }
                },
                onlyNumber: function onlyNumber(number) {
                    if (number) {
                        return number.replace(/\D/g, "");
                    } else {
                        return "";
                    }
                },
                formatCurrency: function formatCurrency(number) {
                    if (number) {
                        var formattedNumber = number.toString().replace(/\D/g, "");
                        var rest = formattedNumber.length % 3;
                        var currency = formattedNumber.substr(0, rest);
                        var thousand = formattedNumber.substr(rest).match(/\d{3}/g);
                        var separator;
                        if (thousand) {
                            separator = rest ? "." : "";
                            currency += separator + thousand.join(".");
                        }
                        return currency;
                    } else {
                        return "";
                    }
                },
                timeAgo: function timeAgo(time) {
                    var date = new Date((time || "").replace(/-/g, "/").replace(/[TZ]/g, " ")),
                        diff = (new Date().getTime() - date.getTime()) / 1000,
                        dayDiff = Math.floor(diff / 86400);
                    if (isNaN(dayDiff) || dayDiff < 0 || dayDiff >= 31) return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(time).format("MMMM DD, YYYY");
                    return dayDiff == 0 && (diff < 60 && "just now" || diff < 120 && "1 minute ago" || diff < 3600 && Math.floor(diff / 60) + " minutes ago" || diff < 7200 && "1 hour ago" || diff < 86400 && Math.floor(diff / 3600) + " hours ago") || dayDiff == 1 && "Yesterday" || dayDiff < 7 && dayDiff + " days ago" || dayDiff < 31 && Math.ceil(dayDiff / 7) + " weeks ago";
                },
                diffTimeByNow: function diffTimeByNow(time) {
                    var startDate = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(dayjs__WEBPACK_IMPORTED_MODULE_0___default()().format("YYYY-MM-DD HH:mm:ss").toString());
                    var endDate = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(time).format("YYYY-MM-DD HH:mm:ss").toString());
                    var duration = dayjs__WEBPACK_IMPORTED_MODULE_0___default().duration(endDate.diff(startDate));
                    var milliseconds = Math.floor(duration.asMilliseconds());
                    var days = Math.round(milliseconds / 86400000);
                    var hours = Math.round(milliseconds % 86400000 / 3600000);
                    var minutes = Math.round(milliseconds % 86400000 % 3600000 / 60000);
                    var seconds = Math.round(milliseconds % 86400000 % 3600000 % 60000 / 1000);
                    if (seconds < 30 && seconds >= 0) {
                        minutes += 1;
                    }
                    return {
                        days: days.toString().length < 2 ? "0" + days : days,
                        hours: hours.toString().length < 2 ? "0" + hours : hours,
                        minutes: minutes.toString().length < 2 ? "0" + minutes : minutes,
                        seconds: seconds.toString().length < 2 ? "0" + seconds : seconds
                    };
                },
                isset: function isset(obj) {
                    return Object.keys(obj).length;
                },
                assign: function assign(obj) {
                    return JSON.parse(JSON.stringify(obj));
                },
                delay: function delay(time) {
                    return new Promise(function (resolve, reject) {
                        setTimeout(function () {
                            resolve();
                        }, time);
                    });
                },
                randomNumbers: function randomNumbers(from, to, length) {
                    var numbers = [0];
                    for (var i = 1; i < length; i++) {
                        numbers.push(Math.ceil(Math.random() * (from - to) + to));
                    }
                    return numbers;
                },
                replaceAll: function replaceAll(str, find, replace) {
                    return str.replace(new RegExp(find, "g"), replace);
                },
                toRGB: function toRGB(colors) {
                    var tempColors = Object.assign({}, colors);
                    var rgbColors = Object.entries(tempColors);
                    var _loop = function _loop() {
                        var _rgbColors$_i = _slicedToArray(_rgbColors[_i], 2),
                            key = _rgbColors$_i[0],
                            value = _rgbColors$_i[1];
                        if (typeof value === "string") {
                            if (value.replace("#", "").length == 6) {
                                var aRgbHex = value.replace("#", "").match(/.{1,2}/g);
                                tempColors[key] = function () {
                                    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
                                    return "rgb(".concat(parseInt(aRgbHex[0], 16), " ").concat(parseInt(aRgbHex[1], 16), " ").concat(parseInt(aRgbHex[2], 16), " / ").concat(opacity, ")");
                                };
                            }
                        } else {
                            tempColors[key] = helpers.toRGB(value);
                        }
                    };
                    for (var _i = 0, _rgbColors = rgbColors; _i < _rgbColors.length; _i++) {
                        _loop();
                    }
                    return tempColors;
                }
            };
            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpers);

            /***/ }),

        /***/ "./src/js/highlight.js":
        /*!*****************************!*\
  !*** ./src/js/highlight.js ***!
  \*****************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper */ "./src/js/helper.js");
            /* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! highlight.js */ "./node_modules/highlight.js/lib/index.js");
            /* harmony import */ var highlight_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_1__);
            /* harmony import */ var js_beautify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-beautify */ "./node_modules/js-beautify/js/index.js");
            /* harmony import */ var js_beautify__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_beautify__WEBPACK_IMPORTED_MODULE_2__);



            (function () {
                "use strict";

                // Highlight code
                $(".source-preview").each(function () {
                    var source = $(this).find("code").html();

                    // First replace
                    var replace = _helper__WEBPACK_IMPORTED_MODULE_0__["default"].replaceAll(source, "HTMLOpenTag", "<");
                    replace = _helper__WEBPACK_IMPORTED_MODULE_0__["default"].replaceAll(replace, "HTMLCloseTag", ">");

                    // Save for copy code function
                    var originalSource = $('<textarea class="absolute w-0 h-0 p-0"></textarea>').val(replace);
                    $(this).append(originalSource);

                    // Beautify code
                    if ($(this).find("code").hasClass("javascript")) {
                        replace = js_beautify__WEBPACK_IMPORTED_MODULE_2___default()(replace);
                    } else {
                        replace = js_beautify__WEBPACK_IMPORTED_MODULE_2___default().html(replace);
                    }

                    // Format for highlight.js
                    replace = _helper__WEBPACK_IMPORTED_MODULE_0__["default"].replaceAll(replace, "<", "&lt;");
                    replace = _helper__WEBPACK_IMPORTED_MODULE_0__["default"].replaceAll(replace, ">", "&gt;");
                    $(this).find("code").html(replace);
                });
                highlight_js__WEBPACK_IMPORTED_MODULE_1___default().highlightAll();
            })();

            /***/ }),

        /***/ "./src/js/lucide.js":
        /*!**************************!*\
  !*** ./src/js/lucide.js ***!
  \**************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var lucide__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lucide */ "./node_modules/lucide/dist/esm/lucide.js");
            /* harmony import */ var lucide__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lucide */ "./node_modules/lucide/dist/esm/icons/index.js");

            (function () {
                "use strict";

                // Lucide Icons
                (0,lucide__WEBPACK_IMPORTED_MODULE_0__.createIcons)({
                    icons: lucide__WEBPACK_IMPORTED_MODULE_1__,
                    "stroke-width": 1.5,
                    nameAttr: "data-lucide"
                });
                window.lucide = {
                    createIcons: lucide__WEBPACK_IMPORTED_MODULE_0__.createIcons,
                    icons: lucide__WEBPACK_IMPORTED_MODULE_1__
                };
            })();

            /***/ }),

        /***/ "./src/js/maps.js":
        /*!************************!*\
  !*** ./src/js/maps.js ***!
  \************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! leaflet */ "./node_modules/leaflet/dist/leaflet-src.js");
            /* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_0__);
            /* harmony import */ var leaflet_markercluster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! leaflet.markercluster */ "./node_modules/leaflet.markercluster/dist/leaflet.markercluster-src.js");
            /* harmony import */ var leaflet_markercluster__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(leaflet_markercluster__WEBPACK_IMPORTED_MODULE_1__);
            /* harmony import */ var _json_location_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../json/location.json */ "./src/json/location.json");



            function getColor(colorKey) {
                var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
                return "rgb(".concat(getComputedStyle(document.body).getPropertyValue("--color-" + colorKey), " / ").concat(opacity, ")");
            }
            (function () {
                "use strict";

                // Google Maps
                if ($(".report-maps").length) {
                    $(".report-maps").each(function (key, el) {
                        $(this).addClass("leaflet");
                        if ($("html").hasClass("dark")) {
                            $(this).addClass("[&_.leaflet-tile-pane]:grayscale [&_.leaflet-tile-pane]:invert [&_.leaflet-tile-pane]:brightness-90 [&_.leaflet-tile-pane]:hue-rotate-15");
                        } else {
                            $(this).addClass("[&_.leaflet-tile-pane]:saturate-[.3]");
                        }
                        var map = leaflet__WEBPACK_IMPORTED_MODULE_0___default().map(this, {
                            center: [-6.2425342, 106.8626478],
                            zoom: 9
                        });
                        if (map) {
                            leaflet__WEBPACK_IMPORTED_MODULE_0___default().tileLayer("https://tile.thunderforest.com/atlas/{z}/{x}/{y}@2x.png?apikey=1e86fd5a7f60486a8e899411776f60d5", {
                                attribution: "Map data &copy; OpenStreetMap contributors, Tiles &copy; Thunderforest"
                            }).addTo(map);
                            var markers = leaflet__WEBPACK_IMPORTED_MODULE_0___default().markerClusterGroup({
                                maxClusterRadius: 30,
                                iconCreateFunction: function iconCreateFunction(cluster) {
                                    var color = $("html").hasClass("dark") ? "rgb(74 90 121 / 0.6)" : getColor("primary", 0.8);
                                    var mapMarkerRegionSvg = window.btoa("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"55.066\" height=\"47.691\" viewBox=\"0 0 55.066 47.691\">\n                            <g id=\"Group_15\" data-name=\"Group 15\" transform=\"translate(-319.467 -83.991)\">\n                                <g id=\"Group_14\" data-name=\"Group 14\">\n                                <path id=\"Intersection_4\" data-name=\"Intersection 4\" d=\"M12.789,17.143a15,15,0,0,1,20.7,0l-1.6,2.141-.018-.018a12.352,12.352,0,0,0-17.469,0l-.018.018Z\" transform=\"translate(323.861 78.999)\" fill=\"".concat(color, "\" opacity=\"0.845\"/>\n                                <path id=\"Intersection_5\" data-name=\"Intersection 5\" d=\"M10.384,13.919a19,19,0,0,1,25.511,0l-2.016,2.7a15.647,15.647,0,0,0-21.479,0Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.652\"/>\n                                <path id=\"Intersection_6\" data-name=\"Intersection 6\" d=\"M7.982,10.7a22.978,22.978,0,0,1,30.313,0l-2,2.679a19.652,19.652,0,0,0-26.316,0Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.453\"/>\n                                </g>\n                                <g id=\"Group_13\" data-name=\"Group 13\" transform=\"translate(427.806 461.061) rotate(-120)\">\n                                <path id=\"Intersection_4-2\" data-name=\"Intersection 4\" d=\"M12.789,17.143a15,15,0,0,1,20.7,0l-1.6,2.141-.018-.018a12.352,12.352,0,0,0-17.469,0l-.018.018Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.845\"/>\n                                <path id=\"Intersection_5-2\" data-name=\"Intersection 5\" d=\"M10.384,13.919a19,19,0,0,1,25.511,0l-2.016,2.7a15.647,15.647,0,0,0-21.479,0Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.652\"/>\n                                <path id=\"Intersection_6-2\" data-name=\"Intersection 6\" d=\"M7.982,10.7a22.978,22.978,0,0,1,30.313,0l-2,2.679a19.652,19.652,0,0,0-26.316,0Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.453\"/>\n                                </g>\n                                <circle id=\"Ellipse_9\" data-name=\"Ellipse 9\" cx=\"11\" cy=\"11\" r=\"11\" transform=\"translate(336 96)\" fill=\"").concat(color, "\"/>\n                                <g id=\"Group_12\" data-name=\"Group 12\" transform=\"translate(613.194 -139.96) rotate(120)\">\n                                <path id=\"Intersection_4-3\" data-name=\"Intersection 4\" d=\"M12.789,17.143a15,15,0,0,1,20.7,0l-1.6,2.141-.018-.018a12.352,12.352,0,0,0-17.469,0l-.018.018Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.845\"/>\n                                <path id=\"Intersection_5-3\" data-name=\"Intersection 5\" d=\"M10.384,13.919a19,19,0,0,1,25.511,0l-2.016,2.7a15.647,15.647,0,0,0-21.479,0Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.652\"/>\n                                <path id=\"Intersection_6-3\" data-name=\"Intersection 6\" d=\"M7.982,10.7a22.978,22.978,0,0,1,30.313,0l-2,2.679a19.652,19.652,0,0,0-26.316,0Z\" transform=\"translate(323.861 78.999)\" fill=\"").concat(color, "\" opacity=\"0.453\"/>\n                                </g>\n                            </g>\n                            </svg>\n                        "));
                                    return leaflet__WEBPACK_IMPORTED_MODULE_0___default().divIcon({
                                        html: "<div class=\"relative w-full h-full\">\n                                <div class=\"absolute inset-0 flex items-center justify-center ml-1.5 mb-0.5 font-medium text-white\">".concat(cluster.getChildCount(), "</div>\n                                <img class=\"w-full h-full\" src=\"data:image/svg+xml;base64,").concat(mapMarkerRegionSvg, "\">\n                            </div>"),
                                        className: "",
                                        iconSize: leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(42, 42),
                                        iconAnchor: leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(20, 45)
                                    });
                                },
                                spiderfyOnMaxZoom: false,
                                showCoverageOnHover: false
                            });
                            map.addLayer(markers);
                            var color = $("html").hasClass("dark") ? "rgb(74 90 121 / 1)" : getColor("primary");
                            var mapMarkerSvg = window.btoa("<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"31.063\" viewBox=\"0 0 20 31.063\">\n                        <g id=\"Group_16\" data-name=\"Group 16\" transform=\"translate(-408 -150.001)\">\n                        <path id=\"Subtraction_21\" data-name=\"Subtraction 21\" d=\"M10,31.064h0L1.462,15.208A10,10,0,1,1,20,10a9.9,9.9,0,0,1-1.078,4.522l-.056.108c-.037.071-.077.146-.121.223L10,31.062ZM10,2a8,8,0,1,0,8,8,8,8,0,0,0-8-8Z\" transform=\"translate(408 150)\" fill=\"".concat(color, "\"/>\n                        <circle id=\"Ellipse_26\" data-name=\"Ellipse 26\" cx=\"6\" cy=\"6\" r=\"6\" transform=\"translate(412 154)\" fill=\"").concat(color, "\"/>\n                        </g>\n                    </svg>\n                    "));
                            _json_location_json__WEBPACK_IMPORTED_MODULE_2__.map(function (markerElem) {
                                var marker = leaflet__WEBPACK_IMPORTED_MODULE_0___default().marker({
                                    lat: parseFloat(markerElem.latitude),
                                    lng: parseFloat(markerElem.longitude)
                                }, {
                                    title: markerElem.name,
                                    icon: leaflet__WEBPACK_IMPORTED_MODULE_0___default().icon({
                                        iconUrl: "data:image/svg+xml;base64,".concat(mapMarkerSvg),
                                        iconAnchor: leaflet__WEBPACK_IMPORTED_MODULE_0___default().point(10, 35)
                                    })
                                });
                                markers.addLayer(marker);
                            });
                        }
                    });
                }
            })();

            /***/ }),

        /***/ "./src/js/mobile-menu.js":
        /*!*******************************!*\
  !*** ./src/js/mobile-menu.js ***!
  \*******************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var simplebar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! simplebar */ "./node_modules/simplebar/dist/simplebar.esm.js");

            (function () {
                "use strict";

                // Scrollbar
                if ($(".mobile-menu .scrollable").length) {
                    new simplebar__WEBPACK_IMPORTED_MODULE_0__["default"]($(".mobile-menu .scrollable")[0]);
                }

                // Mobile Menu
                $(".mobile-menu-toggler").on("click", function () {
                    if ($(".mobile-menu").hasClass("mobile-menu--active")) {
                        $(".mobile-menu").removeClass("mobile-menu--active");
                    } else {
                        $(".mobile-menu").addClass("mobile-menu--active");
                    }
                });
                $(".mobile-menu").find(".menu").on("click", function () {
                    if ($(this).parent().find("ul").length) {
                        if ($(this).parent().find("ul").first()[0].offsetParent !== null) {
                            $(this).find(".menu__sub-icon").removeClass("transform rotate-180");
                            $(this).parent().find("ul").first().slideUp(300, function () {
                                $(this).removeClass("menu__sub-open");
                            });
                        } else {
                            $(this).find(".menu__sub-icon").addClass("transform rotate-180");
                            $(this).parent().find("ul").first().slideDown(300, function () {
                                $(this).addClass("menu__sub-open");
                            });
                        }
                    }
                });
            })();

            /***/ }),

        /***/ "./src/js/notification.js":
        /*!********************************!*\
  !*** ./src/js/notification.js ***!
  \********************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! toastify-js */ "./node_modules/toastify-js/src/toastify.js");
            /* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(toastify_js__WEBPACK_IMPORTED_MODULE_0__);

            (function () {
                "use strict";

                // Basic non sticky notification
                $("#basic-non-sticky-notification-toggle").on("click", function () {
                    toastify_js__WEBPACK_IMPORTED_MODULE_0___default()({
                        node: $("#basic-non-sticky-notification-content").clone().removeClass("hidden")[0],
                        duration: 3000,
                        newWindow: true,
                        close: true,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true
                    }).showToast();
                });

                // Basic sticky notification
                $("#basic-sticky-notification-toggle").on("click", function () {
                    toastify_js__WEBPACK_IMPORTED_MODULE_0___default()({
                        node: $("#basic-non-sticky-notification-content").clone().removeClass("hidden")[0],
                        duration: -1,
                        newWindow: true,
                        close: true,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true
                    }).showToast();
                });

                // Success notification
                $("#success-notification-toggle").on("click", function () {
                    toastify_js__WEBPACK_IMPORTED_MODULE_0___default()({
                        node: $("#success-notification-content").clone().removeClass("hidden")[0],
                        duration: -1,
                        newWindow: true,
                        close: true,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true
                    }).showToast();
                });

                // Notification with actions
                $("#notification-with-actions-toggle").on("click", function () {
                    toastify_js__WEBPACK_IMPORTED_MODULE_0___default()({
                        node: $("#notification-with-actions-content").clone().removeClass("hidden")[0],
                        duration: -1,
                        newWindow: true,
                        close: true,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true
                    }).showToast();
                });

                // Notification with avatar
                $("#notification-with-avatar-toggle").on("click", function () {
                    // Init toastify
                    var avatarNotification = toastify_js__WEBPACK_IMPORTED_MODULE_0___default()({
                        node: $("#notification-with-avatar-content").clone().removeClass("hidden")[0],
                        duration: -1,
                        newWindow: true,
                        close: false,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true
                    }).showToast();

                    // Close notification event
                    $(avatarNotification.toastElement).find('[data-dismiss="notification"]').on("click", function () {
                        avatarNotification.hideToast();
                    });
                });

                // Notification with split buttons
                $("#notification-with-split-buttons-toggle").on("click", function () {
                    // Init toastify
                    var splitButtonsNotification = toastify_js__WEBPACK_IMPORTED_MODULE_0___default()({
                        node: $("#notification-with-split-buttons-content").clone().removeClass("hidden")[0],
                        duration: -1,
                        newWindow: true,
                        close: false,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true
                    }).showToast();

                    // Close notification event
                    $(splitButtonsNotification.toastElement).find('[data-dismiss="notification"]').on("click", function () {
                        splitButtonsNotification.hideToast();
                    });
                });

                // Notification with buttons below
                $("#notification-with-buttons-below-toggle").on("click", function () {
                    // Init toastify
                    toastify_js__WEBPACK_IMPORTED_MODULE_0___default()({
                        node: $("#notification-with-buttons-below-content").clone().removeClass("hidden")[0],
                        duration: -1,
                        newWindow: true,
                        close: true,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true
                    }).showToast();
                });
            })();

            /***/ }),

        /***/ "./src/js/search.js":
        /*!**************************!*\
  !*** ./src/js/search.js ***!
  \**************************/
        /***/ (() => {

            (function () {
                "use strict";

                $(".top-bar, .top-bar-boxed").find(".search").find("input").each(function () {
                    $(this).on("focus", function () {
                        $(".top-bar, .top-bar-boxed").find(".search-result").addClass("show");
                    });
                    $(this).on("focusout", function () {
                        $(".top-bar, .top-bar-boxed").find(".search-result").removeClass("show");
                    });
                });
            })();

            /***/ }),

        /***/ "./src/js/show-code.js":
        /*!*****************************!*\
  !*** ./src/js/show-code.js ***!
  \*****************************/
        /***/ (() => {

            (function () {
                "use strict";

                // Show code or preview
                $("body").on("change", ".show-code", function () {
                    var elementId = $(this).data("target");
                    if ($(this).is(":checked")) {
                        $(elementId).find(".preview").hide();
                        $(elementId).find(".source-code").fadeIn(200);
                    } else {
                        $(elementId).find(".preview").fadeIn(200);
                        $(elementId).find(".source-code").hide();
                    }
                });
            })();

            /***/ }),

        /***/ "./src/js/show-dropdown.js":
        /*!*********************************!*\
  !*** ./src/js/show-dropdown.js ***!
  \*********************************/
        /***/ (() => {

            (function () {
                "use strict";

                // Show dropdown
                $("#programmatically-show-dropdown").on("click", function () {
                    setTimeout(function () {
                        var el = document.querySelector("#programmatically-dropdown");
                        var dropdown = tailwind.Dropdown.getOrCreateInstance(el);
                        dropdown.show();
                    }, 100);
                });

                // Hide dropdown
                $("#programmatically-hide-dropdown").on("click", function () {
                    setTimeout(function () {
                        var el = document.querySelector("#programmatically-dropdown");
                        var dropdown = tailwind.Dropdown.getOrCreateInstance(el);
                        dropdown.hide();
                    }, 100);
                });

                // Toggle dropdown
                $("#programmatically-toggle-dropdown").on("click", function () {
                    setTimeout(function () {
                        var el = document.querySelector("#programmatically-dropdown");
                        var dropdown = tailwind.Dropdown.getOrCreateInstance(el);
                        dropdown.toggle();
                    }, 100);
                });
            })();

            /***/ }),

        /***/ "./src/js/show-modal.js":
        /*!******************************!*\
  !*** ./src/js/show-modal.js ***!
  \******************************/
        /***/ (() => {

            (function () {
                "use strict";

                // Show modal
                $("#programmatically-show-modal").on("click", function () {
                    var el = document.querySelector("#programmatically-modal");
                    var modal = tailwind.Modal.getOrCreateInstance(el);
                    modal.show();
                });

                // Hide modal
                $("#programmatically-hide-modal").on("click", function () {
                    var el = document.querySelector("#programmatically-modal");
                    var modal = tailwind.Modal.getOrCreateInstance(el);
                    modal.hide();
                });

                // Toggle modal
                $("#programmatically-toggle-modal").on("click", function () {
                    var el = document.querySelector("#programmatically-modal");
                    var modal = tailwind.Modal.getOrCreateInstance(el);
                    modal.toggle();
                });
            })();

            /***/ }),

        /***/ "./src/js/show-slide-over.js":
        /*!***********************************!*\
  !*** ./src/js/show-slide-over.js ***!
  \***********************************/
        /***/ (() => {

            (function () {
                "use strict";

                // Show slide over
                $("#programmatically-show-slide-over").on("click", function () {
                    var el = document.querySelector("#programmatically-slide-over");
                    var slideOver = tailwind.Modal.getOrCreateInstance(el);
                    slideOver.show();
                });

                // Hide slide over
                $("#programmatically-hide-slide-over").on("click", function () {
                    var el = document.querySelector("#programmatically-slide-over");
                    var slideOver = tailwind.Modal.getOrCreateInstance(el);
                    slideOver.hide();
                });

                // Toggle slide over
                $("#programmatically-toggle-slide-over").on("click", function () {
                    var el = document.querySelector("#programmatically-slide-over");
                    var slideOver = tailwind.Modal.getOrCreateInstance(el);
                    slideOver.toggle();
                });
            })();

            /***/ }),

        /***/ "./src/js/side-menu-tooltip.js":
        /*!*************************************!*\
  !*** ./src/js/side-menu-tooltip.js ***!
  \*************************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var tippy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tippy.js */ "./node_modules/tippy.js/dist/tippy.esm.js");

            (function () {
                "use strict";

                // Side menu tooltips
                var initTooltips = function tooltips() {
                    $(".side-menu").each(function () {
                        if (this._tippy == undefined) {
                            var content = $(this).find(".side-menu__title").html().replace(/<[^>]*>?/gm, "").trim();
                            (0,tippy_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, {
                                content: content,
                                arrow: tippy_js__WEBPACK_IMPORTED_MODULE_0__.roundArrow,
                                animation: "shift-away",
                                placement: "right"
                            });
                        }
                        if ($(window).width() <= 1260 || $(this).closest(".side-nav").hasClass("side-nav--simple")) {
                            this._tippy.enable();
                        } else {
                            this._tippy.disable();
                        }
                    });
                    return tooltips;
                }();
                window.addEventListener("resize", function () {
                    initTooltips();
                });
            })();

            /***/ }),

        /***/ "./src/js/side-menu.js":
        /*!*****************************!*\
  !*** ./src/js/side-menu.js ***!
  \*****************************/
        /***/ (() => {

            (function () {
                "use strict";

                // Side Menu
                $(".side-menu").on("click", function () {
                    if ($(this).parent().find("ul").length) {
                        if ($(this).parent().find("ul").first()[0].offsetParent !== null) {
                            $(this).find(".side-menu__sub-icon").removeClass("transform rotate-180");
                            $(this).removeClass("side-menu--open");
                            $(this).parent().find("ul").first().slideUp(300, function () {
                                $(this).removeClass("side-menu__sub-open");
                            });
                        } else {
                            $(this).find(".side-menu__sub-icon").addClass("transform rotate-180");
                            $(this).addClass("side-menu--open");
                            $(this).parent().find("ul").first().slideDown(300, function () {
                                $(this).addClass("side-menu__sub-open");
                            });
                        }
                    }
                });
            })();

            /***/ }),

        /***/ "./src/js/tabulator.js":
        /*!*****************************!*\
  !*** ./src/js/tabulator.js ***!
  \*****************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xlsx */ "./node_modules/xlsx/xlsx.js");
            /* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_0__);
            /* harmony import */ var lucide__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide */ "./node_modules/lucide/dist/esm/lucide.js");
            /* harmony import */ var lucide__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide */ "./node_modules/lucide/dist/esm/icons/index.js");
            /* harmony import */ var tabulator_tables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tabulator-tables */ "./node_modules/tabulator-tables/dist/js/tabulator.es2015.js");



            (function () {
                "use strict";

                // Tabulator
                if ($("#tabulator").length) {
                    // Filter function
                    var filterHTMLForm = function filterHTMLForm() {
                        var field = $("#tabulator-html-filter-field").val();
                        var type = $("#tabulator-html-filter-type").val();
                        var value = $("#tabulator-html-filter-value").val();
                        table.setFilter(field, type, value);
                    }; // On submit filter form
                    // Setup Tabulator
                    var table = new tabulator_tables__WEBPACK_IMPORTED_MODULE_1__["default"]("#tabulator", {
                        ajaxURL: "https://dummy-data.left4code.com",
                        ajaxFiltering: true,
                        ajaxSorting: true,
                        printAsHtml: true,
                        printStyled: true,
                        pagination: "remote",
                        paginationSize: 10,
                        paginationSizeSelector: [10, 20, 30, 40],
                        layout: "fitColumns",
                        responsiveLayout: "collapse",
                        placeholder: "No matching records found",
                        columns: [{
                            formatter: "responsiveCollapse",
                            width: 40,
                            minWidth: 30,
                            hozAlign: "center",
                            resizable: false,
                            headerSort: false
                        },
                            // For HTML table
                            {
                                title: "PRODUCT NAME",
                                minWidth: 200,
                                responsive: 0,
                                field: "name",
                                vertAlign: "middle",
                                print: false,
                                download: false,
                                formatter: function formatter(cell, formatterParams) {
                                    return "<div>\n                            <div class=\"font-medium whitespace-nowrap\">".concat(cell.getData().name, "</div>\n                            <div class=\"text-slate-500 text-xs whitespace-nowrap\">").concat(cell.getData().category, "</div>\n                        </div>");
                                }
                            }, {
                                title: "IMAGES",
                                minWidth: 200,
                                field: "images",
                                hozAlign: "center",
                                vertAlign: "middle",
                                print: false,
                                download: false,
                                formatter: function formatter(cell, formatterParams) {
                                    return "<div class=\"flex lg:justify-center\">\n                            <div class=\"intro-x w-10 h-10 image-fit\">\n                                <img alt=\"Midone - HTML Admin Template\" class=\"rounded-full\" src=\"/dist/images/".concat(cell.getData().images[0], "\">\n                            </div>\n                            <div class=\"intro-x w-10 h-10 image-fit -ml-5\">\n                                <img alt=\"Midone - HTML Admin Template\" class=\"rounded-full\" src=\"/dist/images/").concat(cell.getData().images[1], "\">\n                            </div>\n                            <div class=\"intro-x w-10 h-10 image-fit -ml-5\">\n                                <img alt=\"Midone - HTML Admin Template\" class=\"rounded-full\" src=\"/dist/images/").concat(cell.getData().images[2], "\">\n                            </div>\n                        </div>");
                                }
                            }, {
                                title: "REMAINING STOCK",
                                minWidth: 200,
                                field: "remaining_stock",
                                hozAlign: "center",
                                vertAlign: "middle",
                                print: false,
                                download: false
                            }, {
                                title: "STATUS",
                                minWidth: 200,
                                field: "status",
                                hozAlign: "center",
                                vertAlign: "middle",
                                print: false,
                                download: false,
                                formatter: function formatter(cell, formatterParams) {
                                    return "<div class=\"flex items-center lg:justify-center ".concat(cell.getData().status ? "text-success" : "text-danger", "\">\n                            <i data-lucide=\"check-square\" class=\"w-4 h-4 mr-2\"></i> ").concat(cell.getData().status ? "Active" : "Inactive", "\n                        </div>");
                                }
                            }, {
                                title: "ACTIONS",
                                minWidth: 200,
                                field: "actions",
                                responsive: 1,
                                hozAlign: "center",
                                vertAlign: "middle",
                                print: false,
                                download: false,
                                formatter: function formatter(cell, formatterParams) {
                                    var a = $("<div class=\"flex lg:justify-center items-center\">\n                            <a class=\"edit flex items-center mr-3\" href=\"javascript:;\">\n                                <i data-lucide=\"check-square\" class=\"w-4 h-4 mr-1\"></i> Edit\n                            </a>\n                            <a class=\"delete flex items-center text-danger\" href=\"javascript:;\">\n                                <i data-lucide=\"trash-2\" class=\"w-4 h-4 mr-1\"></i> Delete\n                            </a>\n                        </div>");
                                    $(a).find(".edit").on("click", function () {
                                        alert("EDIT");
                                    });
                                    $(a).find(".delete").on("click", function () {
                                        alert("DELETE");
                                    });
                                    return a[0];
                                }
                            },
                            // For print format
                            {
                                title: "PRODUCT NAME",
                                field: "name",
                                visible: false,
                                print: true,
                                download: true
                            }, {
                                title: "CATEGORY",
                                field: "category",
                                visible: false,
                                print: true,
                                download: true
                            }, {
                                title: "REMAINING STOCK",
                                field: "remaining_stock",
                                visible: false,
                                print: true,
                                download: true
                            }, {
                                title: "STATUS",
                                field: "status",
                                visible: false,
                                print: true,
                                download: true,
                                formatterPrint: function formatterPrint(cell) {
                                    return cell.getValue() ? "Active" : "Inactive";
                                }
                            }, {
                                title: "IMAGE 1",
                                field: "images",
                                visible: false,
                                print: true,
                                download: true,
                                formatterPrint: function formatterPrint(cell) {
                                    return cell.getValue()[0];
                                }
                            }, {
                                title: "IMAGE 2",
                                field: "images",
                                visible: false,
                                print: true,
                                download: true,
                                formatterPrint: function formatterPrint(cell) {
                                    return cell.getValue()[1];
                                }
                            }, {
                                title: "IMAGE 3",
                                field: "images",
                                visible: false,
                                print: true,
                                download: true,
                                formatterPrint: function formatterPrint(cell) {
                                    return cell.getValue()[2];
                                }
                            }],
                        renderComplete: function renderComplete() {
                            (0,lucide__WEBPACK_IMPORTED_MODULE_2__.createIcons)({
                                icons: lucide__WEBPACK_IMPORTED_MODULE_3__,
                                "stroke-width": 1.5,
                                nameAttr: "data-lucide"
                            });
                        }
                    });

                    // Redraw table onresize
                    window.addEventListener("resize", function () {
                        table.redraw();
                        (0,lucide__WEBPACK_IMPORTED_MODULE_2__.createIcons)({
                            icons: lucide__WEBPACK_IMPORTED_MODULE_3__,
                            "stroke-width": 1.5,
                            nameAttr: "data-lucide"
                        });
                    });
                    $("#tabulator-html-filter-form")[0].addEventListener("keypress", function (event) {
                        var keycode = event.keyCode ? event.keyCode : event.which;
                        if (keycode == "13") {
                            event.preventDefault();
                            filterHTMLForm();
                        }
                    });

                    // On click go button
                    $("#tabulator-html-filter-go").on("click", function (event) {
                        filterHTMLForm();
                    });

                    // On reset filter form
                    $("#tabulator-html-filter-reset").on("click", function (event) {
                        $("#tabulator-html-filter-field").val("name");
                        $("#tabulator-html-filter-type").val("like");
                        $("#tabulator-html-filter-value").val("");
                        filterHTMLForm();
                    });

                    // Export
                    $("#tabulator-export-csv").on("click", function (event) {
                        table.download("csv", "data.csv");
                    });
                    $("#tabulator-export-json").on("click", function (event) {
                        table.download("json", "data.json");
                    });
                    $("#tabulator-export-xlsx").on("click", function (event) {
                        window.XLSX = (xlsx__WEBPACK_IMPORTED_MODULE_0___default());
                        table.download("xlsx", "data.xlsx", {
                            sheetName: "Products"
                        });
                    });
                    $("#tabulator-export-html").on("click", function (event) {
                        table.download("html", "data.html", {
                            style: true
                        });
                    });

                    // Print
                    $("#tabulator-print").on("click", function (event) {
                        table.print();
                    });
                }
            })();

            /***/ }),

        /***/ "./src/js/tiny-slider.js":
        /*!*******************************!*\
  !*** ./src/js/tiny-slider.js ***!
  \*******************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var tiny_slider_src_tiny_slider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-slider/src/tiny-slider */ "./node_modules/tiny-slider/src/tiny-slider.js");

            (function () {
                "use strict";

                // Tiny Slider
                if ($(".tiny-slider").length) {
                    $(".tiny-slider").each(function () {
                        this.tns = (0,tiny_slider_src_tiny_slider__WEBPACK_IMPORTED_MODULE_0__.tns)({
                            container: this,
                            slideBy: "page",
                            mouseDrag: true,
                            autoplay: true,
                            controls: false,
                            nav: false,
                            speed: 500
                        });
                    });
                }
                if ($(".tiny-slider-navigator").length) {
                    $(".tiny-slider-navigator").each(function () {
                        $(this).on("click", function () {
                            if ($(this).data("target") == "prev") {
                                $("#" + $(this).data("carousel"))[0].tns.goTo("prev");
                            } else {
                                $("#" + $(this).data("carousel"))[0].tns.goTo("next");
                            }
                        });
                    });
                }

                // Slider widget page
                if ($(".single-item").length) {
                    $(".single-item").each(function () {
                        (0,tiny_slider_src_tiny_slider__WEBPACK_IMPORTED_MODULE_0__.tns)({
                            container: this,
                            slideBy: "page",
                            mouseDrag: true,
                            autoplay: false,
                            controls: true,
                            nav: false,
                            speed: 500
                        });
                    });
                }
                if ($(".multiple-items").length) {
                    $(".multiple-items").each(function () {
                        (0,tiny_slider_src_tiny_slider__WEBPACK_IMPORTED_MODULE_0__.tns)({
                            container: this,
                            slideBy: "page",
                            mouseDrag: true,
                            autoplay: false,
                            controls: true,
                            items: 1,
                            nav: false,
                            speed: 500,
                            responsive: {
                                600: {
                                    items: 3
                                },
                                480: {
                                    items: 2
                                }
                            }
                        });
                    });
                }
                if ($(".responsive-mode").length) {
                    $(".responsive-mode").each(function () {
                        (0,tiny_slider_src_tiny_slider__WEBPACK_IMPORTED_MODULE_0__.tns)({
                            container: this,
                            slideBy: "page",
                            mouseDrag: true,
                            autoplay: false,
                            controls: true,
                            items: 1,
                            nav: true,
                            speed: 500,
                            responsive: {
                                600: {
                                    items: 3
                                },
                                480: {
                                    items: 2
                                }
                            }
                        });
                    });
                }
                if ($(".center-mode").length) {
                    $(".center-mode").each(function () {
                        (0,tiny_slider_src_tiny_slider__WEBPACK_IMPORTED_MODULE_0__.tns)({
                            container: this,
                            mouseDrag: true,
                            autoplay: false,
                            controls: true,
                            center: true,
                            items: 1,
                            nav: false,
                            speed: 500,
                            responsive: {
                                600: {
                                    items: 2
                                }
                            }
                        });
                    });
                }
                if ($(".fade-mode").length) {
                    $(".fade-mode").each(function () {
                        (0,tiny_slider_src_tiny_slider__WEBPACK_IMPORTED_MODULE_0__.tns)({
                            mode: "gallery",
                            container: this,
                            slideBy: "page",
                            mouseDrag: true,
                            autoplay: true,
                            controls: true,
                            nav: true,
                            speed: 500
                        });
                    });
                }
            })();

            /***/ }),

        /***/ "./src/js/tippy.js":
        /*!*************************!*\
  !*** ./src/js/tippy.js ***!
  \*************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var tippy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tippy.js */ "./node_modules/tippy.js/dist/tippy.esm.js");
            function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
            function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
            function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
            function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
            function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
            function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

            (function () {
                "use strict";

                // Tooltips
                $(".tooltip").each(function () {
                    var options = {
                        content: $(this).attr("title")
                    };
                    if ($(this).data("trigger") !== undefined) {
                        options.trigger = $(this).data("trigger");
                    }
                    if ($(this).data("placement") !== undefined) {
                        options.placement = $(this).data("placement");
                    }
                    if ($(this).data("theme") !== undefined) {
                        options.theme = $(this).data("theme");
                    }
                    if ($(this).data("tooltip-content") !== undefined) {
                        options.content = $($(this).data("tooltip-content"))[0];
                    }
                    $(this).removeAttr("title");
                    (0,tippy_js__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _objectSpread({
                        arrow: tippy_js__WEBPACK_IMPORTED_MODULE_0__.roundArrow,
                        animation: "shift-away"
                    }, options));
                });
            })();

            /***/ }),

        /***/ "./src/js/tom-select.js":
        /*!******************************!*\
  !*** ./src/js/tom-select.js ***!
  \******************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var tom_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tom-select */ "./node_modules/tom-select/dist/js/tom-select.complete.js");
            /* harmony import */ var tom_select__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tom_select__WEBPACK_IMPORTED_MODULE_0__);
            function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
            function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
            function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
            function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
            function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
            function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

            (function () {
                "use strict";

                // Tom Select
                $(".tom-select").each(function () {
                    var options = {
                        plugins: {
                            dropdown_input: {}
                        }
                    };
                    if ($(this).data("placeholder")) {
                        options.placeholder = $(this).data("placeholder");
                    }
                    if ($(this).attr("multiple") !== undefined) {
                        options = _objectSpread(_objectSpread({}, options), {}, {
                            plugins: _objectSpread(_objectSpread({}, options.plugins), {}, {
                                remove_button: {
                                    title: "Remove this item"
                                }
                            }),
                            persist: false,
                            create: true,
                            onDelete: function onDelete(values) {
                                return confirm(values.length > 1 ? "Are you sure you want to remove these " + values.length + " items?" : 'Are you sure you want to remove "' + values[0] + '"?');
                            }
                        });
                    }
                    if ($(this).data("header")) {
                        options = _objectSpread(_objectSpread({}, options), {}, {
                            plugins: _objectSpread(_objectSpread({}, options.plugins), {}, {
                                dropdown_header: {
                                    title: $(this).data("header")
                                }
                            })
                        });
                    }
                    new (tom_select__WEBPACK_IMPORTED_MODULE_0___default())(this, options);
                });
            })();

            /***/ }),

        /***/ "./src/js/validation.js":
        /*!******************************!*\
  !*** ./src/js/validation.js ***!
  \******************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var pristinejs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pristinejs */ "./node_modules/pristinejs/dist/pristine.js");
            /* harmony import */ var pristinejs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pristinejs__WEBPACK_IMPORTED_MODULE_0__);
            /* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! toastify-js */ "./node_modules/toastify-js/src/toastify.js");
            /* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(toastify_js__WEBPACK_IMPORTED_MODULE_1__);


            (function () {
                "use strict";

                function onSubmit(pristine) {
                    var valid = pristine.validate();
                    if (valid) {
                        toastify_js__WEBPACK_IMPORTED_MODULE_1___default()({
                            node: $("#success-notification-content").clone().removeClass("hidden")[0],
                            duration: 3000,
                            newWindow: true,
                            close: true,
                            gravity: "top",
                            position: "right",
                            stopOnFocus: true
                        }).showToast();
                    } else {
                        toastify_js__WEBPACK_IMPORTED_MODULE_1___default()({
                            node: $("#failed-notification-content").clone().removeClass("hidden")[0],
                            duration: 3000,
                            newWindow: true,
                            close: true,
                            gravity: "top",
                            position: "right",
                            stopOnFocus: true
                        }).showToast();
                    }
                }
                $(".validate-form").each(function () {
                    var pristine = new (pristinejs__WEBPACK_IMPORTED_MODULE_0___default())(this, {
                        classTo: "input-form",
                        errorClass: "has-error",
                        errorTextParent: "input-form",
                        errorTextClass: "text-danger mt-2"
                    });
                    pristine.addValidator($(this).find('input[type="url"]')[0], function (value) {
                        var expression = /[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)?/gi;
                        var regex = new RegExp(expression);
                        if (!value.length || value.length && value.match(regex)) {
                            return true;
                        }
                        return false;
                    }, "This field is URL format only", 2, false);
                    $(this).on("submit", function (e) {
                        e.preventDefault();
                        onSubmit(pristine);
                    });
                });
            })();

            /***/ }),

        /***/ "./src/js/zoom.js":
        /*!************************!*\
  !*** ./src/js/zoom.js ***!
  \************************/
        /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony import */ var zoom_vanilla_js_dist_zoom_vanilla_min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zoom-vanilla.js/dist/zoom-vanilla.min.js */ "./node_modules/zoom-vanilla.js/dist/zoom-vanilla.min.js");
            /* harmony import */ var zoom_vanilla_js_dist_zoom_vanilla_min_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(zoom_vanilla_js_dist_zoom_vanilla_min_js__WEBPACK_IMPORTED_MODULE_0__);


            /***/ }),

        /***/ "./node_modules/can-use-dom/index.js":
        /*!*******************************************!*\
  !*** ./node_modules/can-use-dom/index.js ***!
  \*******************************************/
        /***/ ((module) => {

            var canUseDOM = !!(
                typeof window !== 'undefined' &&
                window.document &&
                window.document.createElement
            );

            module.exports = canUseDOM;

            /***/ }),

        /***/ "./node_modules/core-js/internals/a-callable.js":
        /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

            var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
            module.exports = function (argument) {
                if (isCallable(argument)) return argument;
                throw $TypeError(tryToString(argument) + ' is not a function');
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/a-possible-prototype.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

            var $String = String;
            var $TypeError = TypeError;

            module.exports = function (argument) {
                if (typeof argument == 'object' || isCallable(argument)) return argument;
                throw $TypeError("Can't set " + $String(argument) + ' as a prototype');
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/add-to-unscopables.js":
        /*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
            var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
            var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

            var UNSCOPABLES = wellKnownSymbol('unscopables');
            var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
            if (ArrayPrototype[UNSCOPABLES] == undefined) {
                defineProperty(ArrayPrototype, UNSCOPABLES, {
                    configurable: true,
                    value: create(null)
                });
            }

// add a key to Array.prototype[@@unscopables]
            module.exports = function (key) {
                ArrayPrototype[UNSCOPABLES][key] = true;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/advance-string-index.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/advance-string-index.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
            module.exports = function (S, index, unicode) {
                return index + (unicode ? charAt(S, index).length : 1);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/an-instance.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/an-instance.js ***!
  \*******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");

            var $TypeError = TypeError;

            module.exports = function (it, Prototype) {
                if (isPrototypeOf(Prototype, it)) return it;
                throw $TypeError('Incorrect invocation');
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/an-object.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

            var $String = String;
            var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
            module.exports = function (argument) {
                if (isObject(argument)) return argument;
                throw $TypeError($String(argument) + ' is not an object');
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-buffer-non-extensible.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-buffer-non-extensible.js ***!
  \***********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

            module.exports = fails(function () {
                if (typeof ArrayBuffer == 'function') {
                    var buffer = new ArrayBuffer(8);
                    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
                    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
                }
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-for-each.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-for-each.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);
            var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

            var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
            module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
                return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
            } : [].forEach;


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-includes.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
            var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
            var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
            var createMethod = function (IS_INCLUDES) {
                return function ($this, el, fromIndex) {
                    var O = toIndexedObject($this);
                    var length = lengthOfArrayLike(O);
                    var index = toAbsoluteIndex(fromIndex, length);
                    var value;
                    // Array#includes uses SameValueZero equality algorithm
                    // eslint-disable-next-line no-self-compare -- NaN check
                    if (IS_INCLUDES && el != el) while (length > index) {
                        value = O[index++];
                        // eslint-disable-next-line no-self-compare -- NaN check
                        if (value != value) return true;
                        // Array#indexOf ignores holes, Array#includes - not
                    } else for (;length > index; index++) {
                        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
                    } return !IS_INCLUDES && -1;
                };
            };

            module.exports = {
                // `Array.prototype.includes` method
                // https://tc39.es/ecma262/#sec-array.prototype.includes
                includes: createMethod(true),
                // `Array.prototype.indexOf` method
                // https://tc39.es/ecma262/#sec-array.prototype.indexof
                indexOf: createMethod(false)
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-iteration.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
            var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
            var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
            var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

            var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
            var createMethod = function (TYPE) {
                var IS_MAP = TYPE == 1;
                var IS_FILTER = TYPE == 2;
                var IS_SOME = TYPE == 3;
                var IS_EVERY = TYPE == 4;
                var IS_FIND_INDEX = TYPE == 6;
                var IS_FILTER_REJECT = TYPE == 7;
                var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
                return function ($this, callbackfn, that, specificCreate) {
                    var O = toObject($this);
                    var self = IndexedObject(O);
                    var boundFunction = bind(callbackfn, that);
                    var length = lengthOfArrayLike(self);
                    var index = 0;
                    var create = specificCreate || arraySpeciesCreate;
                    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
                    var value, result;
                    for (;length > index; index++) if (NO_HOLES || index in self) {
                        value = self[index];
                        result = boundFunction(value, index, O);
                        if (TYPE) {
                            if (IS_MAP) target[index] = result; // map
                            else if (result) switch (TYPE) {
                                case 3: return true;              // some
                                case 5: return value;             // find
                                case 6: return index;             // findIndex
                                case 2: push(target, value);      // filter
                            } else switch (TYPE) {
                                case 4: return false;             // every
                                case 7: push(target, value);      // filterReject
                            }
                        }
                    }
                    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
                };
            };

            module.exports = {
                // `Array.prototype.forEach` method
                // https://tc39.es/ecma262/#sec-array.prototype.foreach
                forEach: createMethod(0),
                // `Array.prototype.map` method
                // https://tc39.es/ecma262/#sec-array.prototype.map
                map: createMethod(1),
                // `Array.prototype.filter` method
                // https://tc39.es/ecma262/#sec-array.prototype.filter
                filter: createMethod(2),
                // `Array.prototype.some` method
                // https://tc39.es/ecma262/#sec-array.prototype.some
                some: createMethod(3),
                // `Array.prototype.every` method
                // https://tc39.es/ecma262/#sec-array.prototype.every
                every: createMethod(4),
                // `Array.prototype.find` method
                // https://tc39.es/ecma262/#sec-array.prototype.find
                find: createMethod(5),
                // `Array.prototype.findIndex` method
                // https://tc39.es/ecma262/#sec-array.prototype.findIndex
                findIndex: createMethod(6),
                // `Array.prototype.filterReject` method
                // https://github.com/tc39/proposal-array-filtering
                filterReject: createMethod(7)
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-method-has-species-support.js":
        /*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-has-species-support.js ***!
  \****************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
            var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");

            var SPECIES = wellKnownSymbol('species');

            module.exports = function (METHOD_NAME) {
                // We can't use this feature detection in V8 since it causes
                // deoptimization and serious performance degradation
                // https://github.com/zloirock/core-js/issues/677
                return V8_VERSION >= 51 || !fails(function () {
                    var array = [];
                    var constructor = array.constructor = {};
                    constructor[SPECIES] = function () {
                        return { foo: 1 };
                    };
                    return array[METHOD_NAME](Boolean).foo !== 1;
                });
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-method-is-strict.js":
        /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-is-strict.js ***!
  \******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

            module.exports = function (METHOD_NAME, argument) {
                var method = [][METHOD_NAME];
                return !!method && fails(function () {
                    // eslint-disable-next-line no-useless-call -- required for testing
                    method.call(null, argument || function () { return 1; }, 1);
                });
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-reduce.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/array-reduce.js ***!
  \********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
            var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
            var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
            var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

            var $TypeError = TypeError;

// `Array.prototype.{ reduce, reduceRight }` methods implementation
            var createMethod = function (IS_RIGHT) {
                return function (that, callbackfn, argumentsLength, memo) {
                    aCallable(callbackfn);
                    var O = toObject(that);
                    var self = IndexedObject(O);
                    var length = lengthOfArrayLike(O);
                    var index = IS_RIGHT ? length - 1 : 0;
                    var i = IS_RIGHT ? -1 : 1;
                    if (argumentsLength < 2) while (true) {
                        if (index in self) {
                            memo = self[index];
                            index += i;
                            break;
                        }
                        index += i;
                        if (IS_RIGHT ? index < 0 : length <= index) {
                            throw $TypeError('Reduce of empty array with no initial value');
                        }
                    }
                    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
                        memo = callbackfn(memo, self[index], index, O);
                    }
                    return memo;
                };
            };

            module.exports = {
                // `Array.prototype.reduce` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduce
                left: createMethod(false),
                // `Array.prototype.reduceRight` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduceright
                right: createMethod(true)
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-slice-simple.js":
        /*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice-simple.js ***!
  \**************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
            var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
            var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");

            var $Array = Array;
            var max = Math.max;

            module.exports = function (O, start, end) {
                var length = lengthOfArrayLike(O);
                var k = toAbsoluteIndex(start, length);
                var fin = toAbsoluteIndex(end === undefined ? length : end, length);
                var result = $Array(max(fin - k, 0));
                for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
                result.length = n;
                return result;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-species-constructor.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
            var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var SPECIES = wellKnownSymbol('species');
            var $Array = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
            module.exports = function (originalArray) {
                var C;
                if (isArray(originalArray)) {
                    C = originalArray.constructor;
                    // cross-realm fallback
                    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;
                    else if (isObject(C)) {
                        C = C[SPECIES];
                        if (C === null) C = undefined;
                    }
                } return C === undefined ? $Array : C;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/array-species-create.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
            module.exports = function (originalArray, length) {
                return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/check-correctness-of-iteration.js":
        /*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \**************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var ITERATOR = wellKnownSymbol('iterator');
            var SAFE_CLOSING = false;

            try {
                var called = 0;
                var iteratorWithReturn = {
                    next: function () {
                        return { done: !!called++ };
                    },
                    'return': function () {
                        SAFE_CLOSING = true;
                    }
                };
                iteratorWithReturn[ITERATOR] = function () {
                    return this;
                };
                // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
                Array.from(iteratorWithReturn, function () { throw 2; });
            } catch (error) { /* empty */ }

            module.exports = function (exec, SKIP_CLOSING) {
                if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
                var ITERATION_SUPPORT = false;
                try {
                    var object = {};
                    object[ITERATOR] = function () {
                        return {
                            next: function () {
                                return { done: ITERATION_SUPPORT = true };
                            }
                        };
                    };
                    exec(object);
                } catch (error) { /* empty */ }
                return ITERATION_SUPPORT;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/classof-raw.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

            var toString = uncurryThis({}.toString);
            var stringSlice = uncurryThis(''.slice);

            module.exports = function (it) {
                return stringSlice(toString(it), 8, -1);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/classof.js":
        /*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var TO_STRING_TAG = wellKnownSymbol('toStringTag');
            var $Object = Object;

// ES3 wrong here
            var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
            var tryGet = function (it, key) {
                try {
                    return it[key];
                } catch (error) { /* empty */ }
            };

// getting tag from ES6+ `Object.prototype.toString`
            module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
                var O, tag, result;
                return it === undefined ? 'Undefined' : it === null ? 'Null'
                    // @@toStringTag case
                    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
                        // builtinTag case
                        : CORRECT_ARGUMENTS ? classofRaw(O)
                            // ES3 arguments fallback
                            : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/collection-weak.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/collection-weak.js ***!
  \***********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
            var getWeakData = (__webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js").getWeakData);
            var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
            var ArrayIterationModule = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

            var setInternalState = InternalStateModule.set;
            var internalStateGetterFor = InternalStateModule.getterFor;
            var find = ArrayIterationModule.find;
            var findIndex = ArrayIterationModule.findIndex;
            var splice = uncurryThis([].splice);
            var id = 0;

// fallback for uncaught frozen keys
            var uncaughtFrozenStore = function (state) {
                return state.frozen || (state.frozen = new UncaughtFrozenStore());
            };

            var UncaughtFrozenStore = function () {
                this.entries = [];
            };

            var findUncaughtFrozen = function (store, key) {
                return find(store.entries, function (it) {
                    return it[0] === key;
                });
            };

            UncaughtFrozenStore.prototype = {
                get: function (key) {
                    var entry = findUncaughtFrozen(this, key);
                    if (entry) return entry[1];
                },
                has: function (key) {
                    return !!findUncaughtFrozen(this, key);
                },
                set: function (key, value) {
                    var entry = findUncaughtFrozen(this, key);
                    if (entry) entry[1] = value;
                    else this.entries.push([key, value]);
                },
                'delete': function (key) {
                    var index = findIndex(this.entries, function (it) {
                        return it[0] === key;
                    });
                    if (~index) splice(this.entries, index, 1);
                    return !!~index;
                }
            };

            module.exports = {
                getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
                    var Constructor = wrapper(function (that, iterable) {
                        anInstance(that, Prototype);
                        setInternalState(that, {
                            type: CONSTRUCTOR_NAME,
                            id: id++,
                            frozen: undefined
                        });
                        if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
                    });

                    var Prototype = Constructor.prototype;

                    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

                    var define = function (that, key, value) {
                        var state = getInternalState(that);
                        var data = getWeakData(anObject(key), true);
                        if (data === true) uncaughtFrozenStore(state).set(key, value);
                        else data[state.id] = value;
                        return that;
                    };

                    defineBuiltIns(Prototype, {
                        // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
                        // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
                        // https://tc39.es/ecma262/#sec-weakset.prototype.delete
                        'delete': function (key) {
                            var state = getInternalState(this);
                            if (!isObject(key)) return false;
                            var data = getWeakData(key);
                            if (data === true) return uncaughtFrozenStore(state)['delete'](key);
                            return data && hasOwn(data, state.id) && delete data[state.id];
                        },
                        // `{ WeakMap, WeakSet }.prototype.has(key)` methods
                        // https://tc39.es/ecma262/#sec-weakmap.prototype.has
                        // https://tc39.es/ecma262/#sec-weakset.prototype.has
                        has: function has(key) {
                            var state = getInternalState(this);
                            if (!isObject(key)) return false;
                            var data = getWeakData(key);
                            if (data === true) return uncaughtFrozenStore(state).has(key);
                            return data && hasOwn(data, state.id);
                        }
                    });

                    defineBuiltIns(Prototype, IS_MAP ? {
                        // `WeakMap.prototype.get(key)` method
                        // https://tc39.es/ecma262/#sec-weakmap.prototype.get
                        get: function get(key) {
                            var state = getInternalState(this);
                            if (isObject(key)) {
                                var data = getWeakData(key);
                                if (data === true) return uncaughtFrozenStore(state).get(key);
                                return data ? data[state.id] : undefined;
                            }
                        },
                        // `WeakMap.prototype.set(key, value)` method
                        // https://tc39.es/ecma262/#sec-weakmap.prototype.set
                        set: function set(key, value) {
                            return define(this, key, value);
                        }
                    } : {
                        // `WeakSet.prototype.add(value)` method
                        // https://tc39.es/ecma262/#sec-weakset.prototype.add
                        add: function add(value) {
                            return define(this, value, true);
                        }
                    });

                    return Constructor;
                }
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/collection.js":
        /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/collection.js ***!
  \******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
            var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
            var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
            var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
            var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
            var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
            var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");

            module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
                var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
                var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
                var ADDER = IS_MAP ? 'set' : 'add';
                var NativeConstructor = global[CONSTRUCTOR_NAME];
                var NativePrototype = NativeConstructor && NativeConstructor.prototype;
                var Constructor = NativeConstructor;
                var exported = {};

                var fixMethod = function (KEY) {
                    var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
                    defineBuiltIn(NativePrototype, KEY,
                        KEY == 'add' ? function add(value) {
                            uncurriedNativeMethod(this, value === 0 ? 0 : value);
                            return this;
                        } : KEY == 'delete' ? function (key) {
                            return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
                        } : KEY == 'get' ? function get(key) {
                            return IS_WEAK && !isObject(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
                        } : KEY == 'has' ? function has(key) {
                            return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
                        } : function set(key, value) {
                            uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
                            return this;
                        }
                    );
                };

                var REPLACE = isForced(
                    CONSTRUCTOR_NAME,
                    !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
                        new NativeConstructor().entries().next();
                    }))
                );

                if (REPLACE) {
                    // create collection constructor
                    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
                    InternalMetadataModule.enable();
                } else if (isForced(CONSTRUCTOR_NAME, true)) {
                    var instance = new Constructor();
                    // early implementations not supports chaining
                    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
                    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
                    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
                    // most early implementations doesn't supports iterables, most modern - not close it correctly
                    // eslint-disable-next-line no-new -- required for testing
                    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
                    // for early implementations -0 and +0 not the same
                    var BUGGY_ZERO = !IS_WEAK && fails(function () {
                        // V8 ~ Chromium 42- fails only with 5+ elements
                        var $instance = new NativeConstructor();
                        var index = 5;
                        while (index--) $instance[ADDER](index, index);
                        return !$instance.has(-0);
                    });

                    if (!ACCEPT_ITERABLES) {
                        Constructor = wrapper(function (dummy, iterable) {
                            anInstance(dummy, NativePrototype);
                            var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
                            if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
                            return that;
                        });
                        Constructor.prototype = NativePrototype;
                        NativePrototype.constructor = Constructor;
                    }

                    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
                        fixMethod('delete');
                        fixMethod('has');
                        IS_MAP && fixMethod('get');
                    }

                    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

                    // weak collections should not contains .clear method
                    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
                }

                exported[CONSTRUCTOR_NAME] = Constructor;
                $({ global: true, constructor: true, forced: Constructor != NativeConstructor }, exported);

                setToStringTag(Constructor, CONSTRUCTOR_NAME);

                if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

                return Constructor;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
            var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
            var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

            module.exports = function (target, source, exceptions) {
                var keys = ownKeys(source);
                var defineProperty = definePropertyModule.f;
                var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                for (var i = 0; i < keys.length; i++) {
                    var key = keys[i];
                    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
                        defineProperty(target, key, getOwnPropertyDescriptor(source, key));
                    }
                }
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/correct-prototype-getter.js":
        /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-prototype-getter.js ***!
  \********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

            module.exports = !fails(function () {
                function F() { /* empty */ }
                F.prototype.constructor = null;
                // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
                return Object.getPrototypeOf(new F()) !== F.prototype;
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/create-iter-result-object.js":
        /*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-iter-result-object.js ***!
  \*********************************************************************/
        /***/ ((module) => {

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
            module.exports = function (value, done) {
                return { value: value, done: done };
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
        /*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
            var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

            module.exports = DESCRIPTORS ? function (object, key, value) {
                return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
            } : function (object, key, value) {
                object[key] = value;
                return object;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/create-property-descriptor.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
        /***/ ((module) => {

            module.exports = function (bitmap, value) {
                return {
                    enumerable: !(bitmap & 1),
                    configurable: !(bitmap & 2),
                    writable: !(bitmap & 4),
                    value: value
                };
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/create-property.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/create-property.js ***!
  \***********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
            var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
            var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

            module.exports = function (object, key, value) {
                var propertyKey = toPropertyKey(key);
                if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
                else object[propertyKey] = value;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/define-built-in-accessor.js":
        /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in-accessor.js ***!
  \********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
            var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

            module.exports = function (target, name, descriptor) {
                if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });
                if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });
                return defineProperty.f(target, name, descriptor);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/define-built-in.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
            var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
            var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

            module.exports = function (O, key, value, options) {
                if (!options) options = {};
                var simple = options.enumerable;
                var name = options.name !== undefined ? options.name : key;
                if (isCallable(value)) makeBuiltIn(value, name, options);
                if (options.global) {
                    if (simple) O[key] = value;
                    else defineGlobalProperty(key, value);
                } else {
                    try {
                        if (!options.unsafe) delete O[key];
                        else if (O[key]) simple = true;
                    } catch (error) { /* empty */ }
                    if (simple) O[key] = value;
                    else definePropertyModule.f(O, key, {
                        value: value,
                        enumerable: false,
                        configurable: !options.nonConfigurable,
                        writable: !options.nonWritable
                    });
                } return O;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/define-built-ins.js":
        /*!************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-ins.js ***!
  \************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

            module.exports = function (target, src, options) {
                for (var key in src) defineBuiltIn(target, key, src[key], options);
                return target;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/define-global-property.js":
        /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
            var defineProperty = Object.defineProperty;

            module.exports = function (key, value) {
                try {
                    defineProperty(global, key, { value: value, configurable: true, writable: true });
                } catch (error) {
                    global[key] = value;
                } return value;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/descriptors.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
            module.exports = !fails(function () {
                // eslint-disable-next-line es/no-object-defineproperty -- required for testing
                return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/document-all.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/document-all.js ***!
  \********************************************************/
        /***/ ((module) => {

            var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
            var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

            module.exports = {
                all: documentAll,
                IS_HTMLDDA: IS_HTMLDDA
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/document-create-element.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

            var document = global.document;
// typeof document.createElement is 'object' in old IE
            var EXISTS = isObject(document) && isObject(document.createElement);

            module.exports = function (it) {
                return EXISTS ? document.createElement(it) : {};
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/dom-iterables.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/dom-iterables.js ***!
  \*********************************************************/
        /***/ ((module) => {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
            module.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/dom-token-list-prototype.js":
        /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/dom-token-list-prototype.js ***!
  \********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
            var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

            var classList = documentCreateElement('span').classList;
            var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;

            module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;


            /***/ }),

        /***/ "./node_modules/core-js/internals/engine-is-node.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-node.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            /* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
            var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

            module.exports = typeof process != 'undefined' && classof(process) == 'process';


            /***/ }),

        /***/ "./node_modules/core-js/internals/engine-user-agent.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
        /***/ ((module) => {

            module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


            /***/ }),

        /***/ "./node_modules/core-js/internals/engine-v8-version.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

            var process = global.process;
            var Deno = global.Deno;
            var versions = process && process.versions || Deno && Deno.version;
            var v8 = versions && versions.v8;
            var match, version;

            if (v8) {
                match = v8.split('.');
                // in old Chrome, versions of V8 isn't V8 = Chrome / 10
                // but their correct versions are not interesting for us
                version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
            }

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
            if (!version && userAgent) {
                match = userAgent.match(/Edge\/(\d+)/);
                if (!match || match[1] >= 74) {
                    match = userAgent.match(/Chrome\/(\d+)/);
                    if (match) version = +match[1];
                }
            }

            module.exports = version;


            /***/ }),

        /***/ "./node_modules/core-js/internals/enum-bug-keys.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
        /***/ ((module) => {

// IE8- don't enum bug keys
            module.exports = [
                'constructor',
                'hasOwnProperty',
                'isPrototypeOf',
                'propertyIsEnumerable',
                'toLocaleString',
                'toString',
                'valueOf'
            ];


            /***/ }),

        /***/ "./node_modules/core-js/internals/export.js":
        /*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
            var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
            var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
            var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");
            var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
            var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

            /*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
            module.exports = function (options, source) {
                var TARGET = options.target;
                var GLOBAL = options.global;
                var STATIC = options.stat;
                var FORCED, target, key, targetProperty, sourceProperty, descriptor;
                if (GLOBAL) {
                    target = global;
                } else if (STATIC) {
                    target = global[TARGET] || defineGlobalProperty(TARGET, {});
                } else {
                    target = (global[TARGET] || {}).prototype;
                }
                if (target) for (key in source) {
                    sourceProperty = source[key];
                    if (options.dontCallGetSet) {
                        descriptor = getOwnPropertyDescriptor(target, key);
                        targetProperty = descriptor && descriptor.value;
                    } else targetProperty = target[key];
                    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
                    // contained in target
                    if (!FORCED && targetProperty !== undefined) {
                        if (typeof sourceProperty == typeof targetProperty) continue;
                        copyConstructorProperties(sourceProperty, targetProperty);
                    }
                    // add a flag to not completely full polyfills
                    if (options.sham || (targetProperty && targetProperty.sham)) {
                        createNonEnumerableProperty(sourceProperty, 'sham', true);
                    }
                    defineBuiltIn(target, key, sourceProperty, options);
                }
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/fails.js":
        /*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
        /***/ ((module) => {

            module.exports = function (exec) {
                try {
                    return !!exec();
                } catch (error) {
                    return true;
                }
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":
        /*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js ***!
  \******************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
            __webpack_require__(/*! ../modules/es.regexp.exec */ "./node_modules/core-js/modules/es.regexp.exec.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
            var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
            var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
            var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

            var SPECIES = wellKnownSymbol('species');
            var RegExpPrototype = RegExp.prototype;

            module.exports = function (KEY, exec, FORCED, SHAM) {
                var SYMBOL = wellKnownSymbol(KEY);

                var DELEGATES_TO_SYMBOL = !fails(function () {
                    // String methods call symbol-named RegEp methods
                    var O = {};
                    O[SYMBOL] = function () { return 7; };
                    return ''[KEY](O) != 7;
                });

                var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
                    // Symbol-named RegExp methods call .exec
                    var execCalled = false;
                    var re = /a/;

                    if (KEY === 'split') {
                        // We can't use real regex here since it causes deoptimization
                        // and serious performance degradation in V8
                        // https://github.com/zloirock/core-js/issues/306
                        re = {};
                        // RegExp[@@split] doesn't call the regex's exec method, but first creates
                        // a new one. We need to return the patched regex when creating the new one.
                        re.constructor = {};
                        re.constructor[SPECIES] = function () { return re; };
                        re.flags = '';
                        re[SYMBOL] = /./[SYMBOL];
                    }

                    re.exec = function () { execCalled = true; return null; };

                    re[SYMBOL]('');
                    return !execCalled;
                });

                if (
                    !DELEGATES_TO_SYMBOL ||
                    !DELEGATES_TO_EXEC ||
                    FORCED
                ) {
                    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
                    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
                        var uncurriedNativeMethod = uncurryThis(nativeMethod);
                        var $exec = regexp.exec;
                        if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
                            if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                                // The native String method already delegates to @@method (this
                                // polyfilled function), leasing to infinite recursion.
                                // We avoid it by directly calling the native @@method method.
                                return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
                            }
                            return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
                        }
                        return { done: false };
                    });

                    defineBuiltIn(String.prototype, KEY, methods[0]);
                    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
                }

                if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/freezing.js":
        /*!****************************************************!*\
  !*** ./node_modules/core-js/internals/freezing.js ***!
  \****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

            module.exports = !fails(function () {
                // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
                return Object.isExtensible(Object.preventExtensions({}));
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-apply.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/function-apply.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

            var FunctionPrototype = Function.prototype;
            var apply = FunctionPrototype.apply;
            var call = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
            module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
                return call.apply(apply, arguments);
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-bind-context.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
            var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
            var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

            var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
            module.exports = function (fn, that) {
                aCallable(fn);
                return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
                    return fn.apply(that, arguments);
                };
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-bind-native.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

            module.exports = !fails(function () {
                // eslint-disable-next-line es/no-function-prototype-bind -- safe
                var test = (function () { /* empty */ }).bind();
                // eslint-disable-next-line no-prototype-builtins -- safe
                return typeof test != 'function' || test.hasOwnProperty('prototype');
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-call.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

            var call = Function.prototype.call;

            module.exports = NATIVE_BIND ? call.bind(call) : function () {
                return call.apply(call, arguments);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-name.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

            var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
            var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

            var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
            var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
            var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

            module.exports = {
                EXISTS: EXISTS,
                PROPER: PROPER,
                CONFIGURABLE: CONFIGURABLE
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-uncurry-this-accessor.js":
        /*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-accessor.js ***!
  \**************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

            module.exports = function (object, key, method) {
                try {
                    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
                    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
                } catch (error) { /* empty */ }
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-uncurry-this-clause.js":
        /*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

            module.exports = function (fn) {
                // Nashorn bug:
                //   https://github.com/zloirock/core-js/issues/1128
                //   https://github.com/zloirock/core-js/issues/1130
                if (classofRaw(fn) === 'Function') return uncurryThis(fn);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/function-uncurry-this.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

            var FunctionPrototype = Function.prototype;
            var call = FunctionPrototype.call;
            var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

            module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
                return function () {
                    return call.apply(fn, arguments);
                };
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/get-built-in.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

            var aFunction = function (argument) {
                return isCallable(argument) ? argument : undefined;
            };

            module.exports = function (namespace, method) {
                return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/get-iterator-method.js":
        /*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator-method.js ***!
  \***************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
            var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
            var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
            var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var ITERATOR = wellKnownSymbol('iterator');

            module.exports = function (it) {
                if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)
                    || getMethod(it, '@@iterator')
                    || Iterators[classof(it)];
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/get-iterator.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator.js ***!
  \********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
            var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

            var $TypeError = TypeError;

            module.exports = function (argument, usingIterator) {
                var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
                if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
                throw $TypeError(tryToString(argument) + ' is not iterable');
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/get-method.js":
        /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
            var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
            module.exports = function (V, P) {
                var func = V[P];
                return isNullOrUndefined(func) ? undefined : aCallable(func);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/get-substitution.js":
        /*!************************************************************!*\
  !*** ./node_modules/core-js/internals/get-substitution.js ***!
  \************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

            var floor = Math.floor;
            var charAt = uncurryThis(''.charAt);
            var replace = uncurryThis(''.replace);
            var stringSlice = uncurryThis(''.slice);
// eslint-disable-next-line redos/no-vulnerable -- safe
            var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
            var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
            module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
                var tailPos = position + matched.length;
                var m = captures.length;
                var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
                if (namedCaptures !== undefined) {
                    namedCaptures = toObject(namedCaptures);
                    symbols = SUBSTITUTION_SYMBOLS;
                }
                return replace(replacement, symbols, function (match, ch) {
                    var capture;
                    switch (charAt(ch, 0)) {
                        case '$': return '$';
                        case '&': return matched;
                        case '`': return stringSlice(str, 0, position);
                        case "'": return stringSlice(str, tailPos);
                        case '<':
                            capture = namedCaptures[stringSlice(ch, 1, -1)];
                            break;
                        default: // \d\d?
                            var n = +ch;
                            if (n === 0) return match;
                            if (n > m) {
                                var f = floor(n / 10);
                                if (f === 0) return match;
                                if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
                                return match;
                            }
                            capture = captures[n - 1];
                    }
                    return capture === undefined ? '' : capture;
                });
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/global.js":
        /*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
        /***/ (function(module, __unused_webpack_exports, __webpack_require__) {

            var check = function (it) {
                return it && it.Math == Math && it;
            };

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
            module.exports =
                // eslint-disable-next-line es/no-global-this -- safe
                check(typeof globalThis == 'object' && globalThis) ||
                check(typeof window == 'object' && window) ||
                // eslint-disable-next-line no-restricted-globals -- safe
                check(typeof self == 'object' && self) ||
                check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
                // eslint-disable-next-line no-new-func -- fallback
                (function () { return this; })() || this || Function('return this')();


            /***/ }),

        /***/ "./node_modules/core-js/internals/has-own-property.js":
        /*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

            var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
            module.exports = Object.hasOwn || function hasOwn(it, key) {
                return hasOwnProperty(toObject(it), key);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/hidden-keys.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
        /***/ ((module) => {

            module.exports = {};


            /***/ }),

        /***/ "./node_modules/core-js/internals/html.js":
        /*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

            module.exports = getBuiltIn('document', 'documentElement');


            /***/ }),

        /***/ "./node_modules/core-js/internals/ie8-dom-define.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
            module.exports = !DESCRIPTORS && !fails(function () {
                // eslint-disable-next-line es/no-object-defineproperty -- required for testing
                return Object.defineProperty(createElement('div'), 'a', {
                    get: function () { return 7; }
                }).a != 7;
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/indexed-object.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

            var $Object = Object;
            var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
            module.exports = fails(function () {
                // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
                // eslint-disable-next-line no-prototype-builtins -- safe
                return !$Object('z').propertyIsEnumerable(0);
            }) ? function (it) {
                return classof(it) == 'String' ? split(it, '') : $Object(it);
            } : $Object;


            /***/ }),

        /***/ "./node_modules/core-js/internals/inherit-if-required.js":
        /*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/inherit-if-required.js ***!
  \***************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");

// makes subclassing work correct for wrapped built-ins
            module.exports = function ($this, dummy, Wrapper) {
                var NewTarget, NewTargetPrototype;
                if (
                    // it can work only with native `setPrototypeOf`
                    setPrototypeOf &&
                    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
                    isCallable(NewTarget = dummy.constructor) &&
                    NewTarget !== Wrapper &&
                    isObject(NewTargetPrototype = NewTarget.prototype) &&
                    NewTargetPrototype !== Wrapper.prototype
                ) setPrototypeOf($this, NewTargetPrototype);
                return $this;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/inspect-source.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

            var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
            if (!isCallable(store.inspectSource)) {
                store.inspectSource = function (it) {
                    return functionToString(it);
                };
            }

            module.exports = store.inspectSource;


            /***/ }),

        /***/ "./node_modules/core-js/internals/internal-metadata.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/internal-metadata.js ***!
  \*************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
            var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
            var getOwnPropertyNamesExternalModule = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "./node_modules/core-js/internals/object-get-own-property-names-external.js");
            var isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "./node_modules/core-js/internals/object-is-extensible.js");
            var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
            var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");

            var REQUIRED = false;
            var METADATA = uid('meta');
            var id = 0;

            var setMetadata = function (it) {
                defineProperty(it, METADATA, { value: {
                        objectID: 'O' + id++, // object ID
                        weakData: {}          // weak collections IDs
                    } });
            };

            var fastKey = function (it, create) {
                // return a primitive with prefix
                if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
                if (!hasOwn(it, METADATA)) {
                    // can't set metadata to uncaught frozen object
                    if (!isExtensible(it)) return 'F';
                    // not necessary to add metadata
                    if (!create) return 'E';
                    // add missing metadata
                    setMetadata(it);
                    // return object ID
                } return it[METADATA].objectID;
            };

            var getWeakData = function (it, create) {
                if (!hasOwn(it, METADATA)) {
                    // can't set metadata to uncaught frozen object
                    if (!isExtensible(it)) return true;
                    // not necessary to add metadata
                    if (!create) return false;
                    // add missing metadata
                    setMetadata(it);
                    // return the store of weak collections IDs
                } return it[METADATA].weakData;
            };

// add metadata on freeze-family methods calling
            var onFreeze = function (it) {
                if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);
                return it;
            };

            var enable = function () {
                meta.enable = function () { /* empty */ };
                REQUIRED = true;
                var getOwnPropertyNames = getOwnPropertyNamesModule.f;
                var splice = uncurryThis([].splice);
                var test = {};
                test[METADATA] = 1;

                // prevent exposing of metadata key
                if (getOwnPropertyNames(test).length) {
                    getOwnPropertyNamesModule.f = function (it) {
                        var result = getOwnPropertyNames(it);
                        for (var i = 0, length = result.length; i < length; i++) {
                            if (result[i] === METADATA) {
                                splice(result, i, 1);
                                break;
                            }
                        } return result;
                    };

                    $({ target: 'Object', stat: true, forced: true }, {
                        getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
                    });
                }
            };

            var meta = module.exports = {
                enable: enable,
                fastKey: fastKey,
                getWeakData: getWeakData,
                onFreeze: onFreeze
            };

            hiddenKeys[METADATA] = true;


            /***/ }),

        /***/ "./node_modules/core-js/internals/internal-state.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");
            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
            var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
            var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

            var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
            var TypeError = global.TypeError;
            var WeakMap = global.WeakMap;
            var set, get, has;

            var enforce = function (it) {
                return has(it) ? get(it) : set(it, {});
            };

            var getterFor = function (TYPE) {
                return function (it) {
                    var state;
                    if (!isObject(it) || (state = get(it)).type !== TYPE) {
                        throw TypeError('Incompatible receiver, ' + TYPE + ' required');
                    } return state;
                };
            };

            if (NATIVE_WEAK_MAP || shared.state) {
                var store = shared.state || (shared.state = new WeakMap());
                /* eslint-disable no-self-assign -- prototype methods protection */
                store.get = store.get;
                store.has = store.has;
                store.set = store.set;
                /* eslint-enable no-self-assign -- prototype methods protection */
                set = function (it, metadata) {
                    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
                    metadata.facade = it;
                    store.set(it, metadata);
                    return metadata;
                };
                get = function (it) {
                    return store.get(it) || {};
                };
                has = function (it) {
                    return store.has(it);
                };
            } else {
                var STATE = sharedKey('state');
                hiddenKeys[STATE] = true;
                set = function (it, metadata) {
                    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
                    metadata.facade = it;
                    createNonEnumerableProperty(it, STATE, metadata);
                    return metadata;
                };
                get = function (it) {
                    return hasOwn(it, STATE) ? it[STATE] : {};
                };
                has = function (it) {
                    return hasOwn(it, STATE);
                };
            }

            module.exports = {
                set: set,
                get: get,
                has: has,
                enforce: enforce,
                getterFor: getterFor
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-array-iterator-method.js":
        /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/is-array-iterator-method.js ***!
  \********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
            var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

            var ITERATOR = wellKnownSymbol('iterator');
            var ArrayPrototype = Array.prototype;

// check on default Array iterator
            module.exports = function (it) {
                return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-array.js":
        /*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
            module.exports = Array.isArray || function isArray(argument) {
                return classof(argument) == 'Array';
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-callable.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

            var documentAll = $documentAll.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
            module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
                return typeof argument == 'function' || argument === documentAll;
            } : function (argument) {
                return typeof argument == 'function';
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-constructor.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
            var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
            var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

            var noop = function () { /* empty */ };
            var empty = [];
            var construct = getBuiltIn('Reflect', 'construct');
            var constructorRegExp = /^\s*(?:class|function)\b/;
            var exec = uncurryThis(constructorRegExp.exec);
            var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

            var isConstructorModern = function isConstructor(argument) {
                if (!isCallable(argument)) return false;
                try {
                    construct(noop, empty, argument);
                    return true;
                } catch (error) {
                    return false;
                }
            };

            var isConstructorLegacy = function isConstructor(argument) {
                if (!isCallable(argument)) return false;
                switch (classof(argument)) {
                    case 'AsyncFunction':
                    case 'GeneratorFunction':
                    case 'AsyncGeneratorFunction': return false;
                }
                try {
                    // we can't check .prototype since constructors produced by .bind haven't it
                    // `Function#toString` throws on some built-it function in some legacy engines
                    // (for example, `DOMQuad` and similar in FF41-)
                    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
                } catch (error) {
                    return true;
                }
            };

            isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
            module.exports = !construct || fails(function () {
                var called;
                return isConstructorModern(isConstructorModern.call)
                    || !isConstructorModern(Object)
                    || !isConstructorModern(function () { called = true; })
                    || called;
            }) ? isConstructorLegacy : isConstructorModern;


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-forced.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

            var replacement = /#|\.prototype\./;

            var isForced = function (feature, detection) {
                var value = data[normalize(feature)];
                return value == POLYFILL ? true
                    : value == NATIVE ? false
                        : isCallable(detection) ? fails(detection)
                            : !!detection;
            };

            var normalize = isForced.normalize = function (string) {
                return String(string).replace(replacement, '.').toLowerCase();
            };

            var data = isForced.data = {};
            var NATIVE = isForced.NATIVE = 'N';
            var POLYFILL = isForced.POLYFILL = 'P';

            module.exports = isForced;


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-null-or-undefined.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
        /***/ ((module) => {

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
            module.exports = function (it) {
                return it === null || it === undefined;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-object.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

            var documentAll = $documentAll.all;

            module.exports = $documentAll.IS_HTMLDDA ? function (it) {
                return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
            } : function (it) {
                return typeof it == 'object' ? it !== null : isCallable(it);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-pure.js":
        /*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
        /***/ ((module) => {

            module.exports = false;


            /***/ }),

        /***/ "./node_modules/core-js/internals/is-symbol.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
            var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

            var $Object = Object;

            module.exports = USE_SYMBOL_AS_UID ? function (it) {
                return typeof it == 'symbol';
            } : function (it) {
                var $Symbol = getBuiltIn('Symbol');
                return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/iterate.js":
        /*!***************************************************!*\
  !*** ./node_modules/core-js/internals/iterate.js ***!
  \***************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
            var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
            var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
            var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
            var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
            var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
            var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

            var $TypeError = TypeError;

            var Result = function (stopped, result) {
                this.stopped = stopped;
                this.result = result;
            };

            var ResultPrototype = Result.prototype;

            module.exports = function (iterable, unboundFunction, options) {
                var that = options && options.that;
                var AS_ENTRIES = !!(options && options.AS_ENTRIES);
                var IS_RECORD = !!(options && options.IS_RECORD);
                var IS_ITERATOR = !!(options && options.IS_ITERATOR);
                var INTERRUPTED = !!(options && options.INTERRUPTED);
                var fn = bind(unboundFunction, that);
                var iterator, iterFn, index, length, result, next, step;

                var stop = function (condition) {
                    if (iterator) iteratorClose(iterator, 'normal', condition);
                    return new Result(true, condition);
                };

                var callFn = function (value) {
                    if (AS_ENTRIES) {
                        anObject(value);
                        return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
                    } return INTERRUPTED ? fn(value, stop) : fn(value);
                };

                if (IS_RECORD) {
                    iterator = iterable.iterator;
                } else if (IS_ITERATOR) {
                    iterator = iterable;
                } else {
                    iterFn = getIteratorMethod(iterable);
                    if (!iterFn) throw $TypeError(tryToString(iterable) + ' is not iterable');
                    // optimisation for array iterators
                    if (isArrayIteratorMethod(iterFn)) {
                        for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
                            result = callFn(iterable[index]);
                            if (result && isPrototypeOf(ResultPrototype, result)) return result;
                        } return new Result(false);
                    }
                    iterator = getIterator(iterable, iterFn);
                }

                next = IS_RECORD ? iterable.next : iterator.next;
                while (!(step = call(next, iterator)).done) {
                    try {
                        result = callFn(step.value);
                    } catch (error) {
                        iteratorClose(iterator, 'throw', error);
                    }
                    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
                } return new Result(false);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/iterator-close.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-close.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");

            module.exports = function (iterator, kind, value) {
                var innerResult, innerError;
                anObject(iterator);
                try {
                    innerResult = getMethod(iterator, 'return');
                    if (!innerResult) {
                        if (kind === 'throw') throw value;
                        return value;
                    }
                    innerResult = call(innerResult, iterator);
                } catch (error) {
                    innerError = true;
                    innerResult = error;
                }
                if (kind === 'throw') throw value;
                if (innerError) throw innerResult;
                anObject(innerResult);
                return value;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/iterator-create-constructor.js":
        /*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-create-constructor.js ***!
  \***********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js").IteratorPrototype);
            var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
            var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
            var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
            var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

            var returnThis = function () { return this; };

            module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
                var TO_STRING_TAG = NAME + ' Iterator';
                IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
                setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
                Iterators[TO_STRING_TAG] = returnThis;
                return IteratorConstructor;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/iterator-define.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-define.js ***!
  \***********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
            var FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var createIteratorConstructor = __webpack_require__(/*! ../internals/iterator-create-constructor */ "./node_modules/core-js/internals/iterator-create-constructor.js");
            var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
            var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
            var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
            var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
            var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
            var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
            var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js");

            var PROPER_FUNCTION_NAME = FunctionName.PROPER;
            var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
            var IteratorPrototype = IteratorsCore.IteratorPrototype;
            var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
            var ITERATOR = wellKnownSymbol('iterator');
            var KEYS = 'keys';
            var VALUES = 'values';
            var ENTRIES = 'entries';

            var returnThis = function () { return this; };

            module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
                createIteratorConstructor(IteratorConstructor, NAME, next);

                var getIterationMethod = function (KIND) {
                    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
                    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
                    switch (KIND) {
                        case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
                        case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
                        case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
                    } return function () { return new IteratorConstructor(this); };
                };

                var TO_STRING_TAG = NAME + ' Iterator';
                var INCORRECT_VALUES_NAME = false;
                var IterablePrototype = Iterable.prototype;
                var nativeIterator = IterablePrototype[ITERATOR]
                    || IterablePrototype['@@iterator']
                    || DEFAULT && IterablePrototype[DEFAULT];
                var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
                var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
                var CurrentIteratorPrototype, methods, KEY;

                // fix native
                if (anyNativeIterator) {
                    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
                    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
                        if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
                            if (setPrototypeOf) {
                                setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                            } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
                                defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
                            }
                        }
                        // Set @@toStringTag to native iterators
                        setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
                        if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
                    }
                }

                // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
                if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
                    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
                        createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
                    } else {
                        INCORRECT_VALUES_NAME = true;
                        defaultIterator = function values() { return call(nativeIterator, this); };
                    }
                }

                // export additional methods
                if (DEFAULT) {
                    methods = {
                        values: getIterationMethod(VALUES),
                        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
                        entries: getIterationMethod(ENTRIES)
                    };
                    if (FORCED) for (KEY in methods) {
                        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                            defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
                        }
                    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
                }

                // define iterator
                if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
                    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
                }
                Iterators[NAME] = defaultIterator;

                return methods;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/iterators-core.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterators-core.js ***!
  \**********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
            var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
            var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
            var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

            var ITERATOR = wellKnownSymbol('iterator');
            var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
            var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

            /* eslint-disable es/no-array-prototype-keys -- safe */
            if ([].keys) {
                arrayIterator = [].keys();
                // Safari 8 has buggy iterators w/o `next`
                if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
                else {
                    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
                    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
                }
            }

            var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {
                var test = {};
                // FF44- legacy iterators case
                return IteratorPrototype[ITERATOR].call(test) !== test;
            });

            if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
            else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
            if (!isCallable(IteratorPrototype[ITERATOR])) {
                defineBuiltIn(IteratorPrototype, ITERATOR, function () {
                    return this;
                });
            }

            module.exports = {
                IteratorPrototype: IteratorPrototype,
                BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/iterators.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
        /***/ ((module) => {

            module.exports = {};


            /***/ }),

        /***/ "./node_modules/core-js/internals/length-of-array-like.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
            module.exports = function (obj) {
                return toLength(obj.length);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/make-built-in.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);
            var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
            var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

            var enforceInternalState = InternalStateModule.enforce;
            var getInternalState = InternalStateModule.get;
            var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
            var defineProperty = Object.defineProperty;
            var stringSlice = uncurryThis(''.slice);
            var replace = uncurryThis(''.replace);
            var join = uncurryThis([].join);

            var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
                return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
            });

            var TEMPLATE = String(String).split('String');

            var makeBuiltIn = module.exports = function (value, name, options) {
                if (stringSlice($String(name), 0, 7) === 'Symbol(') {
                    name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
                }
                if (options && options.getter) name = 'get ' + name;
                if (options && options.setter) name = 'set ' + name;
                if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
                    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
                    else value.name = name;
                }
                if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
                    defineProperty(value, 'length', { value: options.arity });
                }
                try {
                    if (options && hasOwn(options, 'constructor') && options.constructor) {
                        if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
                        // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
                    } else if (value.prototype) value.prototype = undefined;
                } catch (error) { /* empty */ }
                var state = enforceInternalState(value);
                if (!hasOwn(state, 'source')) {
                    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
                } return value;
            };

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
            Function.prototype.toString = makeBuiltIn(function toString() {
                return isCallable(this) && getInternalState(this).source || inspectSource(this);
            }, 'toString');


            /***/ }),

        /***/ "./node_modules/core-js/internals/math-trunc.js":
        /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
        /***/ ((module) => {

            var ceil = Math.ceil;
            var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
            module.exports = Math.trunc || function trunc(x) {
                var n = +x;
                return (n > 0 ? floor : ceil)(n);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/number-parse-int.js":
        /*!************************************************************!*\
  !*** ./node_modules/core-js/internals/number-parse-int.js ***!
  \************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
            var trim = (__webpack_require__(/*! ../internals/string-trim */ "./node_modules/core-js/internals/string-trim.js").trim);
            var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "./node_modules/core-js/internals/whitespaces.js");

            var $parseInt = global.parseInt;
            var Symbol = global.Symbol;
            var ITERATOR = Symbol && Symbol.iterator;
            var hex = /^[+-]?0x/i;
            var exec = uncurryThis(hex.exec);
            var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22
                // MS Edge 18- broken with boxed symbols
                || (ITERATOR && !fails(function () { $parseInt(Object(ITERATOR)); }));

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
            module.exports = FORCED ? function parseInt(string, radix) {
                var S = trim(toString(string));
                return $parseInt(S, (radix >>> 0) || (exec(hex, S) ? 16 : 10));
            } : $parseInt;


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-assign.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-assign.js ***!
  \*********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
            var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
            var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
            var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
            var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
            var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
            var defineProperty = Object.defineProperty;
            var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
            module.exports = !$assign || fails(function () {
                // should have correct order of operations (Edge bug)
                if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
                    enumerable: true,
                    get: function () {
                        defineProperty(this, 'b', {
                            value: 3,
                            enumerable: false
                        });
                    }
                }), { b: 2 })).b !== 1) return true;
                // should work with symbols and should have deterministic property order (V8 bug)
                var A = {};
                var B = {};
                // eslint-disable-next-line es/no-symbol -- safe
                var symbol = Symbol();
                var alphabet = 'abcdefghijklmnopqrst';
                A[symbol] = 7;
                alphabet.split('').forEach(function (chr) { B[chr] = chr; });
                return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
            }) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
                var T = toObject(target);
                var argumentsLength = arguments.length;
                var index = 1;
                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                var propertyIsEnumerable = propertyIsEnumerableModule.f;
                while (argumentsLength > index) {
                    var S = IndexedObject(arguments[index++]);
                    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
                    var length = keys.length;
                    var j = 0;
                    var key;
                    while (length > j) {
                        key = keys[j++];
                        if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
                    }
                } return T;
            } : $assign;


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-create.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            /* global ActiveXObject -- old IE, WSH */
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
            var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
            var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
            var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
            var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
            var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

            var GT = '>';
            var LT = '<';
            var PROTOTYPE = 'prototype';
            var SCRIPT = 'script';
            var IE_PROTO = sharedKey('IE_PROTO');

            var EmptyConstructor = function () { /* empty */ };

            var scriptTag = function (content) {
                return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
            };

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
            var NullProtoObjectViaActiveX = function (activeXDocument) {
                activeXDocument.write(scriptTag(''));
                activeXDocument.close();
                var temp = activeXDocument.parentWindow.Object;
                activeXDocument = null; // avoid memory leak
                return temp;
            };

// Create object with fake `null` prototype: use iframe Object with cleared prototype
            var NullProtoObjectViaIFrame = function () {
                // Thrash, waste and sodomy: IE GC bug
                var iframe = documentCreateElement('iframe');
                var JS = 'java' + SCRIPT + ':';
                var iframeDocument;
                iframe.style.display = 'none';
                html.appendChild(iframe);
                // https://github.com/zloirock/core-js/issues/475
                iframe.src = String(JS);
                iframeDocument = iframe.contentWindow.document;
                iframeDocument.open();
                iframeDocument.write(scriptTag('document.F=Object'));
                iframeDocument.close();
                return iframeDocument.F;
            };

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
            var activeXDocument;
            var NullProtoObject = function () {
                try {
                    activeXDocument = new ActiveXObject('htmlfile');
                } catch (error) { /* ignore */ }
                NullProtoObject = typeof document != 'undefined'
                    ? document.domain && activeXDocument
                        ? NullProtoObjectViaActiveX(activeXDocument) // old IE
                        : NullProtoObjectViaIFrame()
                    : NullProtoObjectViaActiveX(activeXDocument); // WSH
                var length = enumBugKeys.length;
                while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
                return NullProtoObject();
            };

            hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
            module.exports = Object.create || function create(O, Properties) {
                var result;
                if (O !== null) {
                    EmptyConstructor[PROTOTYPE] = anObject(O);
                    result = new EmptyConstructor();
                    EmptyConstructor[PROTOTYPE] = null;
                    // add "__proto__" for Object.getPrototypeOf polyfill
                    result[IE_PROTO] = O;
                } else result = NullProtoObject();
                return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-define-properties.js":
        /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
        /***/ ((__unused_webpack_module, exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
            var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
            var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
            exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
                anObject(O);
                var props = toIndexedObject(Properties);
                var keys = objectKeys(Properties);
                var length = keys.length;
                var index = 0;
                var key;
                while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
                return O;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-define-property.js":
        /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
        /***/ ((__unused_webpack_module, exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
            var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

            var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
            var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
            var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            var ENUMERABLE = 'enumerable';
            var CONFIGURABLE = 'configurable';
            var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
            exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
                anObject(O);
                P = toPropertyKey(P);
                anObject(Attributes);
                if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
                    var current = $getOwnPropertyDescriptor(O, P);
                    if (current && current[WRITABLE]) {
                        O[P] = Attributes.value;
                        Attributes = {
                            configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
                            enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
                            writable: false
                        };
                    }
                } return $defineProperty(O, P, Attributes);
            } : $defineProperty : function defineProperty(O, P, Attributes) {
                anObject(O);
                P = toPropertyKey(P);
                anObject(Attributes);
                if (IE8_DOM_DEFINE) try {
                    return $defineProperty(O, P, Attributes);
                } catch (error) { /* empty */ }
                if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');
                if ('value' in Attributes) O[P] = Attributes.value;
                return O;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
        /*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
        /***/ ((__unused_webpack_module, exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
            var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
            var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
            var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
            var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
            exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
                O = toIndexedObject(O);
                P = toPropertyKey(P);
                if (IE8_DOM_DEFINE) try {
                    return $getOwnPropertyDescriptor(O, P);
                } catch (error) { /* empty */ }
                if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-get-own-property-names-external.js":
        /*!**********************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \**********************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            /* eslint-disable es/no-object-getownpropertynames -- safe */
            var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
            var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
            var $getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
            var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");

            var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
                ? Object.getOwnPropertyNames(window) : [];

            var getWindowNames = function (it) {
                try {
                    return $getOwnPropertyNames(it);
                } catch (error) {
                    return arraySlice(windowNames);
                }
            };

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
            module.exports.f = function getOwnPropertyNames(it) {
                return windowNames && classof(it) == 'Window'
                    ? getWindowNames(it)
                    : $getOwnPropertyNames(toIndexedObject(it));
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
        /*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
        /***/ ((__unused_webpack_module, exports, __webpack_require__) => {

            var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
            var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

            var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
            exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
                return internalObjectKeys(O, hiddenKeys);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
        /*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
        /***/ ((__unused_webpack_module, exports) => {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
            exports.f = Object.getOwnPropertySymbols;


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-get-prototype-of.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-prototype-of.js ***!
  \*******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
            var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
            var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

            var IE_PROTO = sharedKey('IE_PROTO');
            var $Object = Object;
            var ObjectPrototype = $Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
            module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
                var object = toObject(O);
                if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
                var constructor = object.constructor;
                if (isCallable(constructor) && object instanceof constructor) {
                    return constructor.prototype;
                } return object instanceof $Object ? ObjectPrototype : null;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-is-extensible.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-extensible.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
            var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(/*! ../internals/array-buffer-non-extensible */ "./node_modules/core-js/internals/array-buffer-non-extensible.js");

// eslint-disable-next-line es/no-object-isextensible -- safe
            var $isExtensible = Object.isExtensible;
            var FAILS_ON_PRIMITIVES = fails(function () { $isExtensible(1); });

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
            module.exports = (FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {
                if (!isObject(it)) return false;
                if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return false;
                return $isExtensible ? $isExtensible(it) : true;
            } : $isExtensible;


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
        /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

            module.exports = uncurryThis({}.isPrototypeOf);


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-keys-internal.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
            var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
            var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

            var push = uncurryThis([].push);

            module.exports = function (object, names) {
                var O = toIndexedObject(object);
                var i = 0;
                var result = [];
                var key;
                for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
                // Don't enum bug & hidden keys
                while (names.length > i) if (hasOwn(O, key = names[i++])) {
                    ~indexOf(result, key) || push(result, key);
                }
                return result;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-keys.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
            var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
            module.exports = Object.keys || function keys(O) {
                return internalObjectKeys(O, enumBugKeys);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
        /*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
        /***/ ((__unused_webpack_module, exports) => {

            "use strict";

            var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
            var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
            var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
            exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
                var descriptor = getOwnPropertyDescriptor(this, V);
                return !!descriptor && descriptor.enumerable;
            } : $propertyIsEnumerable;


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-set-prototype-of.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            /* eslint-disable no-proto -- safe */
            var uncurryThisAccessor = __webpack_require__(/*! ../internals/function-uncurry-this-accessor */ "./node_modules/core-js/internals/function-uncurry-this-accessor.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
            module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
                var CORRECT_SETTER = false;
                var test = {};
                var setter;
                try {
                    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
                    setter(test, []);
                    CORRECT_SETTER = test instanceof Array;
                } catch (error) { /* empty */ }
                return function setPrototypeOf(O, proto) {
                    anObject(O);
                    aPossiblePrototype(proto);
                    if (CORRECT_SETTER) setter(O, proto);
                    else O.__proto__ = proto;
                    return O;
                };
            }() : undefined);


            /***/ }),

        /***/ "./node_modules/core-js/internals/object-to-string.js":
        /*!************************************************************!*\
  !*** ./node_modules/core-js/internals/object-to-string.js ***!
  \************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
            var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
            module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
                return '[object ' + classof(this) + ']';
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

            var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
            module.exports = function (input, pref) {
                var fn, val;
                if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
                if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
                if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
                throw $TypeError("Can't convert object to primitive value");
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/own-keys.js":
        /*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
            var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

            var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
            module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
                var keys = getOwnPropertyNamesModule.f(anObject(it));
                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/regexp-exec-abstract.js":
        /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-exec-abstract.js ***!
  \****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
            var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");

            var $TypeError = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
            module.exports = function (R, S) {
                var exec = R.exec;
                if (isCallable(exec)) {
                    var result = call(exec, R, S);
                    if (result !== null) anObject(result);
                    return result;
                }
                if (classof(R) === 'RegExp') return call(regexpExec, R, S);
                throw $TypeError('RegExp#exec called on incompatible receiver');
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/regexp-exec.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-exec.js ***!
  \*******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            /* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
            /* eslint-disable regexp/no-useless-quantifier -- testing */
            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
            var regexpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "./node_modules/core-js/internals/regexp-flags.js");
            var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "./node_modules/core-js/internals/regexp-sticky-helpers.js");
            var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
            var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
            var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").get);
            var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js");
            var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "./node_modules/core-js/internals/regexp-unsupported-ncg.js");

            var nativeReplace = shared('native-string-replace', String.prototype.replace);
            var nativeExec = RegExp.prototype.exec;
            var patchedExec = nativeExec;
            var charAt = uncurryThis(''.charAt);
            var indexOf = uncurryThis(''.indexOf);
            var replace = uncurryThis(''.replace);
            var stringSlice = uncurryThis(''.slice);

            var UPDATES_LAST_INDEX_WRONG = (function () {
                var re1 = /a/;
                var re2 = /b*/g;
                call(nativeExec, re1, 'a');
                call(nativeExec, re2, 'a');
                return re1.lastIndex !== 0 || re2.lastIndex !== 0;
            })();

            var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
            var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

            var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

            if (PATCH) {
                patchedExec = function exec(string) {
                    var re = this;
                    var state = getInternalState(re);
                    var str = toString(string);
                    var raw = state.raw;
                    var result, reCopy, lastIndex, match, i, object, group;

                    if (raw) {
                        raw.lastIndex = re.lastIndex;
                        result = call(patchedExec, raw, str);
                        re.lastIndex = raw.lastIndex;
                        return result;
                    }

                    var groups = state.groups;
                    var sticky = UNSUPPORTED_Y && re.sticky;
                    var flags = call(regexpFlags, re);
                    var source = re.source;
                    var charsAdded = 0;
                    var strCopy = str;

                    if (sticky) {
                        flags = replace(flags, 'y', '');
                        if (indexOf(flags, 'g') === -1) {
                            flags += 'g';
                        }

                        strCopy = stringSlice(str, re.lastIndex);
                        // Support anchored sticky behavior.
                        if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
                            source = '(?: ' + source + ')';
                            strCopy = ' ' + strCopy;
                            charsAdded++;
                        }
                        // ^(? + rx + ) is needed, in combination with some str slicing, to
                        // simulate the 'y' flag.
                        reCopy = new RegExp('^(?:' + source + ')', flags);
                    }

                    if (NPCG_INCLUDED) {
                        reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
                    }
                    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

                    match = call(nativeExec, sticky ? reCopy : re, strCopy);

                    if (sticky) {
                        if (match) {
                            match.input = stringSlice(match.input, charsAdded);
                            match[0] = stringSlice(match[0], charsAdded);
                            match.index = re.lastIndex;
                            re.lastIndex += match[0].length;
                        } else re.lastIndex = 0;
                    } else if (UPDATES_LAST_INDEX_WRONG && match) {
                        re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
                    }
                    if (NPCG_INCLUDED && match && match.length > 1) {
                        // Fix browsers whose `exec` methods don't consistently return `undefined`
                        // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
                        call(nativeReplace, match[0], reCopy, function () {
                            for (i = 1; i < arguments.length - 2; i++) {
                                if (arguments[i] === undefined) match[i] = undefined;
                            }
                        });
                    }

                    if (match && groups) {
                        match.groups = object = create(null);
                        for (i = 0; i < groups.length; i++) {
                            group = groups[i];
                            object[group[0]] = match[group[1]];
                        }
                    }

                    return match;
                };
            }

            module.exports = patchedExec;


            /***/ }),

        /***/ "./node_modules/core-js/internals/regexp-flags.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-flags.js ***!
  \********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
            module.exports = function () {
                var that = anObject(this);
                var result = '';
                if (that.hasIndices) result += 'd';
                if (that.global) result += 'g';
                if (that.ignoreCase) result += 'i';
                if (that.multiline) result += 'm';
                if (that.dotAll) result += 's';
                if (that.unicode) result += 'u';
                if (that.unicodeSets) result += 'v';
                if (that.sticky) result += 'y';
                return result;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/regexp-sticky-helpers.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-sticky-helpers.js ***!
  \*****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
            var $RegExp = global.RegExp;

            var UNSUPPORTED_Y = fails(function () {
                var re = $RegExp('a', 'y');
                re.lastIndex = 2;
                return re.exec('abcd') != null;
            });

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
            var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
                return !$RegExp('a', 'y').sticky;
            });

            var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
                // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
                var re = $RegExp('^r', 'gy');
                re.lastIndex = 2;
                return re.exec('str') != null;
            });

            module.exports = {
                BROKEN_CARET: BROKEN_CARET,
                MISSED_STICKY: MISSED_STICKY,
                UNSUPPORTED_Y: UNSUPPORTED_Y
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-dot-all.js ***!
  \**********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
            var $RegExp = global.RegExp;

            module.exports = fails(function () {
                var re = $RegExp('.', 's');
                return !(re.dotAll && re.exec('\n') && re.flags === 's');
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/regexp-unsupported-ncg.js":
        /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-ncg.js ***!
  \******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
            var $RegExp = global.RegExp;

            module.exports = fails(function () {
                var re = $RegExp('(?<a>b)', 'g');
                return re.exec('b').groups.a !== 'b' ||
                    'b'.replace(re, '$<a>c') !== 'bc';
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/require-object-coercible.js":
        /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

            var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
            module.exports = function (it) {
                if (isNullOrUndefined(it)) throw $TypeError("Can't call method on " + it);
                return it;
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/set-to-string-tag.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var TO_STRING_TAG = wellKnownSymbol('toStringTag');

            module.exports = function (target, TAG, STATIC) {
                if (target && !STATIC) target = target.prototype;
                if (target && !hasOwn(target, TO_STRING_TAG)) {
                    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
                }
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/shared-key.js":
        /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
            var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

            var keys = shared('keys');

            module.exports = function (key) {
                return keys[key] || (keys[key] = uid(key));
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/shared-store.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

            var SHARED = '__core-js_shared__';
            var store = global[SHARED] || defineGlobalProperty(SHARED, {});

            module.exports = store;


            /***/ }),

        /***/ "./node_modules/core-js/internals/shared.js":
        /*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
            var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

            (module.exports = function (key, value) {
                return store[key] || (store[key] = value !== undefined ? value : {});
            })('versions', []).push({
                version: '3.30.2',
                mode: IS_PURE ? 'pure' : 'global',
                copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
                license: 'https://github.com/zloirock/core-js/blob/v3.30.2/LICENSE',
                source: 'https://github.com/zloirock/core-js'
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/string-multibyte.js":
        /*!************************************************************!*\
  !*** ./node_modules/core-js/internals/string-multibyte.js ***!
  \************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
            var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
            var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

            var charAt = uncurryThis(''.charAt);
            var charCodeAt = uncurryThis(''.charCodeAt);
            var stringSlice = uncurryThis(''.slice);

            var createMethod = function (CONVERT_TO_STRING) {
                return function ($this, pos) {
                    var S = toString(requireObjectCoercible($this));
                    var position = toIntegerOrInfinity(pos);
                    var size = S.length;
                    var first, second;
                    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
                    first = charCodeAt(S, position);
                    return first < 0xD800 || first > 0xDBFF || position + 1 === size
                    || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
                        ? CONVERT_TO_STRING
                            ? charAt(S, position)
                            : first
                        : CONVERT_TO_STRING
                            ? stringSlice(S, position, position + 2)
                            : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
                };
            };

            module.exports = {
                // `String.prototype.codePointAt` method
                // https://tc39.es/ecma262/#sec-string.prototype.codepointat
                codeAt: createMethod(false),
                // `String.prototype.at` method
                // https://github.com/mathiasbynens/String.prototype.at
                charAt: createMethod(true)
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/string-trim.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/string-trim.js ***!
  \*******************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
            var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
            var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "./node_modules/core-js/internals/whitespaces.js");

            var replace = uncurryThis(''.replace);
            var ltrim = RegExp('^[' + whitespaces + ']+');
            var rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
            var createMethod = function (TYPE) {
                return function ($this) {
                    var string = toString(requireObjectCoercible($this));
                    if (TYPE & 1) string = replace(string, ltrim, '');
                    if (TYPE & 2) string = replace(string, rtrim, '$1');
                    return string;
                };
            };

            module.exports = {
                // `String.prototype.{ trimLeft, trimStart }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimstart
                start: createMethod(1),
                // `String.prototype.{ trimRight, trimEnd }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimend
                end: createMethod(2),
                // `String.prototype.trim` method
                // https://tc39.es/ecma262/#sec-string.prototype.trim
                trim: createMethod(3)
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/symbol-constructor-detection.js":
        /*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            /* eslint-disable es/no-symbol -- required for testing */
            var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

            var $String = global.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
            module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
                var symbol = Symbol();
                // Chrome 38 Symbol has incorrect toString conversion
                // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
                // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
                // of course, fail.
                return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
                    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
                    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-absolute-index.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

            var max = Math.max;
            var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
            module.exports = function (index, length) {
                var integer = toIntegerOrInfinity(index);
                return integer < 0 ? max(integer + length, 0) : min(integer, length);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-indexed-object.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// toObject with fallback for non-array-like ES3 strings
            var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
            var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

            module.exports = function (it) {
                return IndexedObject(requireObjectCoercible(it));
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
        /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/core-js/internals/math-trunc.js");

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
            module.exports = function (argument) {
                var number = +argument;
                // eslint-disable-next-line no-self-compare -- NaN check
                return number !== number || number === 0 ? 0 : trunc(number);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-length.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

            var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
            module.exports = function (argument) {
                return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-object.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

            var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
            module.exports = function (argument) {
                return $Object(requireObjectCoercible(argument));
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-primitive.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
            var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
            var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var $TypeError = TypeError;
            var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
            module.exports = function (input, pref) {
                if (!isObject(input) || isSymbol(input)) return input;
                var exoticToPrim = getMethod(input, TO_PRIMITIVE);
                var result;
                if (exoticToPrim) {
                    if (pref === undefined) pref = 'default';
                    result = call(exoticToPrim, input, pref);
                    if (!isObject(result) || isSymbol(result)) return result;
                    throw $TypeError("Can't convert object to primitive value");
                }
                if (pref === undefined) pref = 'number';
                return ordinaryToPrimitive(input, pref);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-property-key.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
            var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
            module.exports = function (argument) {
                var key = toPrimitive(argument, 'string');
                return isSymbol(key) ? key : key + '';
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-string-tag-support.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var TO_STRING_TAG = wellKnownSymbol('toStringTag');
            var test = {};

            test[TO_STRING_TAG] = 'z';

            module.exports = String(test) === '[object z]';


            /***/ }),

        /***/ "./node_modules/core-js/internals/to-string.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-string.js ***!
  \*****************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

            var $String = String;

            module.exports = function (argument) {
                if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
                return $String(argument);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/try-to-string.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
        /***/ ((module) => {

            var $String = String;

            module.exports = function (argument) {
                try {
                    return $String(argument);
                } catch (error) {
                    return 'Object';
                }
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/uid.js":
        /*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

            var id = 0;
            var postfix = Math.random();
            var toString = uncurryThis(1.0.toString);

            module.exports = function (key) {
                return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            /* eslint-disable es/no-symbol -- required for testing */
            var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

            module.exports = NATIVE_SYMBOL
                && !Symbol.sham
                && typeof Symbol.iterator == 'symbol';


            /***/ }),

        /***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
        /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
            module.exports = DESCRIPTORS && fails(function () {
                // eslint-disable-next-line es/no-object-defineproperty -- required for testing
                return Object.defineProperty(function () { /* empty */ }, 'prototype', {
                    value: 42,
                    writable: false
                }).prototype != 42;
            });


            /***/ }),

        /***/ "./node_modules/core-js/internals/weak-map-basic-detection.js":
        /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

            var WeakMap = global.WeakMap;

            module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


            /***/ }),

        /***/ "./node_modules/core-js/internals/well-known-symbol.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
            var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
            var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
            var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
            var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

            var Symbol = global.Symbol;
            var WellKnownSymbolsStore = shared('wks');
            var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;

            module.exports = function (name) {
                if (!hasOwn(WellKnownSymbolsStore, name)) {
                    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
                        ? Symbol[name]
                        : createWellKnownSymbol('Symbol.' + name);
                } return WellKnownSymbolsStore[name];
            };


            /***/ }),

        /***/ "./node_modules/core-js/internals/whitespaces.js":
        /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/whitespaces.js ***!
  \*******************************************************/
        /***/ ((module) => {

// a string of all valid unicode whitespaces
            module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
                '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.array.filter.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.filter.js ***!
  \*********************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var $filter = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").filter);
            var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
            $({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
                filter: function filter(callbackfn /* , thisArg */) {
                    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                }
            });


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.array.iterator.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.iterator.js ***!
  \***********************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
            var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
            var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
            var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
            var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
            var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
            var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");
            var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

            var ARRAY_ITERATOR = 'Array Iterator';
            var setInternalState = InternalStateModule.set;
            var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
            module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
                setInternalState(this, {
                    type: ARRAY_ITERATOR,
                    target: toIndexedObject(iterated), // target
                    index: 0,                          // next index
                    kind: kind                         // kind
                });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
            }, function () {
                var state = getInternalState(this);
                var target = state.target;
                var kind = state.kind;
                var index = state.index++;
                if (!target || index >= target.length) {
                    state.target = undefined;
                    return createIterResultObject(undefined, true);
                }
                if (kind == 'keys') return createIterResultObject(index, false);
                if (kind == 'values') return createIterResultObject(target[index], false);
                return createIterResultObject([index, target[index]], false);
            }, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
            var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
            addToUnscopables('keys');
            addToUnscopables('values');
            addToUnscopables('entries');

// V8 ~ Chrome 45- bug
            if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
                defineProperty(values, 'name', { value: 'values' });
            } catch (error) { /* empty */ }


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.array.reduce.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.reduce.js ***!
  \*********************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var $reduce = (__webpack_require__(/*! ../internals/array-reduce */ "./node_modules/core-js/internals/array-reduce.js").left);
            var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");
            var CHROME_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
            var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
            var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;
            var FORCED = CHROME_BUG || !arrayMethodIsStrict('reduce');

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
            $({ target: 'Array', proto: true, forced: FORCED }, {
                reduce: function reduce(callbackfn /* , initialValue */) {
                    var length = arguments.length;
                    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
                }
            });


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.function.name.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.function.name.js ***!
  \**********************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
            var FUNCTION_NAME_EXISTS = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").EXISTS);
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");

            var FunctionPrototype = Function.prototype;
            var functionToString = uncurryThis(FunctionPrototype.toString);
            var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
            var regExpExec = uncurryThis(nameRE.exec);
            var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
            if (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {
                defineBuiltInAccessor(FunctionPrototype, NAME, {
                    configurable: true,
                    get: function () {
                        try {
                            return regExpExec(nameRE, functionToString(this))[1];
                        } catch (error) {
                            return '';
                        }
                    }
                });
            }


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.object.assign.js":
        /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.assign.js ***!
  \**********************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
            $({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
                assign: assign
            });


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.object.to-string.js":
        /*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.to-string.js ***!
  \*************************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
            var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
            var toString = __webpack_require__(/*! ../internals/object-to-string */ "./node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
            if (!TO_STRING_TAG_SUPPORT) {
                defineBuiltIn(Object.prototype, 'toString', toString, { unsafe: true });
            }


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.parse-int.js":
        /*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es.parse-int.js ***!
  \******************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var $parseInt = __webpack_require__(/*! ../internals/number-parse-int */ "./node_modules/core-js/internals/number-parse-int.js");

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
            $({ global: true, forced: parseInt != $parseInt }, {
                parseInt: $parseInt
            });


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.regexp.exec.js":
        /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.exec.js ***!
  \********************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
            var exec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
            $({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
                exec: exec
            });


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.string.iterator.js":
        /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.iterator.js ***!
  \************************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);
            var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
            var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
            var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
            var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");

            var STRING_ITERATOR = 'String Iterator';
            var setInternalState = InternalStateModule.set;
            var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
            defineIterator(String, 'String', function (iterated) {
                setInternalState(this, {
                    type: STRING_ITERATOR,
                    string: toString(iterated),
                    index: 0
                });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
            }, function next() {
                var state = getInternalState(this);
                var string = state.string;
                var index = state.index;
                var point;
                if (index >= string.length) return createIterResultObject(undefined, true);
                point = charAt(string, index);
                state.index += point.length;
                return createIterResultObject(point, false);
            });


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.string.match.js":
        /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.match.js ***!
  \*********************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
            var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
            var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
            var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
            var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
            var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "./node_modules/core-js/internals/advance-string-index.js");
            var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "./node_modules/core-js/internals/regexp-exec-abstract.js");

// @@match logic
            fixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {
                return [
                    // `String.prototype.match` method
                    // https://tc39.es/ecma262/#sec-string.prototype.match
                    function match(regexp) {
                        var O = requireObjectCoercible(this);
                        var matcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, MATCH);
                        return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));
                    },
                    // `RegExp.prototype[@@match]` method
                    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
                    function (string) {
                        var rx = anObject(this);
                        var S = toString(string);
                        var res = maybeCallNative(nativeMatch, rx, S);

                        if (res.done) return res.value;

                        if (!rx.global) return regExpExec(rx, S);

                        var fullUnicode = rx.unicode;
                        rx.lastIndex = 0;
                        var A = [];
                        var n = 0;
                        var result;
                        while ((result = regExpExec(rx, S)) !== null) {
                            var matchStr = toString(result[0]);
                            A[n] = matchStr;
                            if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                            n++;
                        }
                        return n === 0 ? null : A;
                    }
                ];
            });


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.string.replace.js":
        /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.replace.js ***!
  \***********************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
            var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
            var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
            var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
            var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
            var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
            var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
            var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
            var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "./node_modules/core-js/internals/advance-string-index.js");
            var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
            var getSubstitution = __webpack_require__(/*! ../internals/get-substitution */ "./node_modules/core-js/internals/get-substitution.js");
            var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "./node_modules/core-js/internals/regexp-exec-abstract.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var REPLACE = wellKnownSymbol('replace');
            var max = Math.max;
            var min = Math.min;
            var concat = uncurryThis([].concat);
            var push = uncurryThis([].push);
            var stringIndexOf = uncurryThis(''.indexOf);
            var stringSlice = uncurryThis(''.slice);

            var maybeToString = function (it) {
                return it === undefined ? it : String(it);
            };

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
            var REPLACE_KEEPS_$0 = (function () {
                // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
                return 'a'.replace(/./, '$0') === '$0';
            })();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
            var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
                if (/./[REPLACE]) {
                    return /./[REPLACE]('a', '$0') === '';
                }
                return false;
            })();

            var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
                var re = /./;
                re.exec = function () {
                    var result = [];
                    result.groups = { a: '7' };
                    return result;
                };
                // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
                return ''.replace(re, '$<a>') !== '7';
            });

// @@replace logic
            fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
                var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

                return [
                    // `String.prototype.replace` method
                    // https://tc39.es/ecma262/#sec-string.prototype.replace
                    function replace(searchValue, replaceValue) {
                        var O = requireObjectCoercible(this);
                        var replacer = isNullOrUndefined(searchValue) ? undefined : getMethod(searchValue, REPLACE);
                        return replacer
                            ? call(replacer, searchValue, O, replaceValue)
                            : call(nativeReplace, toString(O), searchValue, replaceValue);
                    },
                    // `RegExp.prototype[@@replace]` method
                    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
                    function (string, replaceValue) {
                        var rx = anObject(this);
                        var S = toString(string);

                        if (
                            typeof replaceValue == 'string' &&
                            stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
                            stringIndexOf(replaceValue, '$<') === -1
                        ) {
                            var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
                            if (res.done) return res.value;
                        }

                        var functionalReplace = isCallable(replaceValue);
                        if (!functionalReplace) replaceValue = toString(replaceValue);

                        var global = rx.global;
                        if (global) {
                            var fullUnicode = rx.unicode;
                            rx.lastIndex = 0;
                        }
                        var results = [];
                        while (true) {
                            var result = regExpExec(rx, S);
                            if (result === null) break;

                            push(results, result);
                            if (!global) break;

                            var matchStr = toString(result[0]);
                            if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                        }

                        var accumulatedResult = '';
                        var nextSourcePosition = 0;
                        for (var i = 0; i < results.length; i++) {
                            result = results[i];

                            var matched = toString(result[0]);
                            var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
                            var captures = [];
                            // NOTE: This is equivalent to
                            //   captures = result.slice(1).map(maybeToString)
                            // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
                            // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
                            // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
                            for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));
                            var namedCaptures = result.groups;
                            if (functionalReplace) {
                                var replacerArgs = concat([matched], captures, position, S);
                                if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);
                                var replacement = toString(apply(replaceValue, undefined, replacerArgs));
                            } else {
                                replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
                            }
                            if (position >= nextSourcePosition) {
                                accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
                                nextSourcePosition = position + matched.length;
                            }
                        }
                        return accumulatedResult + stringSlice(S, nextSourcePosition);
                    }
                ];
            }, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.weak-map.constructor.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.weak-map.constructor.js ***!
  \*****************************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            "use strict";

            var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");
            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
            var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
            var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
            var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
            var collectionWeak = __webpack_require__(/*! ../internals/collection-weak */ "./node_modules/core-js/internals/collection-weak.js");
            var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
            var enforceInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").enforce);
            var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
            var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");

            var $Object = Object;
// eslint-disable-next-line es/no-array-isarray -- safe
            var isArray = Array.isArray;
// eslint-disable-next-line es/no-object-isextensible -- safe
            var isExtensible = $Object.isExtensible;
// eslint-disable-next-line es/no-object-isfrozen -- safe
            var isFrozen = $Object.isFrozen;
// eslint-disable-next-line es/no-object-issealed -- safe
            var isSealed = $Object.isSealed;
// eslint-disable-next-line es/no-object-freeze -- safe
            var freeze = $Object.freeze;
// eslint-disable-next-line es/no-object-seal -- safe
            var seal = $Object.seal;

            var FROZEN = {};
            var SEALED = {};
            var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
            var InternalWeakMap;

            var wrapper = function (init) {
                return function WeakMap() {
                    return init(this, arguments.length ? arguments[0] : undefined);
                };
            };

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
            var $WeakMap = collection('WeakMap', wrapper, collectionWeak);
            var WeakMapPrototype = $WeakMap.prototype;
            var nativeSet = uncurryThis(WeakMapPrototype.set);

// Chakra Edge bug: adding frozen arrays to WeakMap unfreeze them
            var hasMSEdgeFreezingBug = function () {
                return FREEZING && fails(function () {
                    var frozenArray = freeze([]);
                    nativeSet(new $WeakMap(), frozenArray, 1);
                    return !isFrozen(frozenArray);
                });
            };

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
            if (NATIVE_WEAK_MAP) if (IS_IE11) {
                InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
                InternalMetadataModule.enable();
                var nativeDelete = uncurryThis(WeakMapPrototype['delete']);
                var nativeHas = uncurryThis(WeakMapPrototype.has);
                var nativeGet = uncurryThis(WeakMapPrototype.get);
                defineBuiltIns(WeakMapPrototype, {
                    'delete': function (key) {
                        if (isObject(key) && !isExtensible(key)) {
                            var state = enforceInternalState(this);
                            if (!state.frozen) state.frozen = new InternalWeakMap();
                            return nativeDelete(this, key) || state.frozen['delete'](key);
                        } return nativeDelete(this, key);
                    },
                    has: function has(key) {
                        if (isObject(key) && !isExtensible(key)) {
                            var state = enforceInternalState(this);
                            if (!state.frozen) state.frozen = new InternalWeakMap();
                            return nativeHas(this, key) || state.frozen.has(key);
                        } return nativeHas(this, key);
                    },
                    get: function get(key) {
                        if (isObject(key) && !isExtensible(key)) {
                            var state = enforceInternalState(this);
                            if (!state.frozen) state.frozen = new InternalWeakMap();
                            return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
                        } return nativeGet(this, key);
                    },
                    set: function set(key, value) {
                        if (isObject(key) && !isExtensible(key)) {
                            var state = enforceInternalState(this);
                            if (!state.frozen) state.frozen = new InternalWeakMap();
                            nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
                        } else nativeSet(this, key, value);
                        return this;
                    }
                });
// Chakra Edge frozen keys fix
            } else if (hasMSEdgeFreezingBug()) {
                defineBuiltIns(WeakMapPrototype, {
                    set: function set(key, value) {
                        var arrayIntegrityLevel;
                        if (isArray(key)) {
                            if (isFrozen(key)) arrayIntegrityLevel = FROZEN;
                            else if (isSealed(key)) arrayIntegrityLevel = SEALED;
                        }
                        nativeSet(this, key, value);
                        if (arrayIntegrityLevel == FROZEN) freeze(key);
                        if (arrayIntegrityLevel == SEALED) seal(key);
                        return this;
                    }
                });
            }


            /***/ }),

        /***/ "./node_modules/core-js/modules/es.weak-map.js":
        /*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es.weak-map.js ***!
  \*****************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove this module from `core-js@4` since it's replaced to module below
            __webpack_require__(/*! ../modules/es.weak-map.constructor */ "./node_modules/core-js/modules/es.weak-map.constructor.js");


            /***/ }),

        /***/ "./node_modules/core-js/modules/web.dom-collections.for-each.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.for-each.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
            var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
            var forEach = __webpack_require__(/*! ../internals/array-for-each */ "./node_modules/core-js/internals/array-for-each.js");
            var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

            var handlePrototype = function (CollectionPrototype) {
                // some Chrome versions have non-configurable methods on DOMTokenList
                if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
                    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
                } catch (error) {
                    CollectionPrototype.forEach = forEach;
                }
            };

            for (var COLLECTION_NAME in DOMIterables) {
                if (DOMIterables[COLLECTION_NAME]) {
                    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
                }
            }

            handlePrototype(DOMTokenListPrototype);


            /***/ }),

        /***/ "./node_modules/core-js/modules/web.dom-collections.iterator.js":
        /*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \**********************************************************************/
        /***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

            var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
            var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
            var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
            var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
            var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
            var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

            var ITERATOR = wellKnownSymbol('iterator');
            var TO_STRING_TAG = wellKnownSymbol('toStringTag');
            var ArrayValues = ArrayIteratorMethods.values;

            var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
                if (CollectionPrototype) {
                    // some Chrome versions have non-configurable methods on DOMTokenList
                    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
                        createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
                    } catch (error) {
                        CollectionPrototype[ITERATOR] = ArrayValues;
                    }
                    if (!CollectionPrototype[TO_STRING_TAG]) {
                        createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
                    }
                    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
                        // some Chrome versions have non-configurable methods on DOMTokenList
                        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
                            createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
                        } catch (error) {
                            CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
                        }
                    }
                }
            };

            for (var COLLECTION_NAME in DOMIterables) {
                handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
            }

            handlePrototype(DOMTokenListPrototype, 'DOMTokenList');


            /***/ }),

        /***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/common/main.css":
        /*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/common/main.css ***!
  \**************************************************************************************************************************************************************************************************************/
        /***/ ((module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

            var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
            ___CSS_LOADER_EXPORT___.push([module.id, "\n/* classes attached to <body> */\n/* TODO: make fc-event selector work when calender in shadow DOM */\n.fc-not-allowed,\n.fc-not-allowed .fc-event { /* override events' custom cursors */\n  cursor: not-allowed;\n}\n/* TODO: not attached to body. attached to specific els. move */\n.fc-unselectable {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  -webkit-touch-callout: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.fc {\n  /* layout of immediate children */\n  display: flex;\n  flex-direction: column;\n\n  font-size: 1em\n}\n.fc,\n  .fc *,\n  .fc *:before,\n  .fc *:after {\n    box-sizing: border-box;\n  }\n.fc table {\n    border-collapse: collapse;\n    border-spacing: 0;\n    font-size: 1em; /* normalize cross-browser */\n  }\n.fc th {\n    text-align: center;\n  }\n.fc th,\n  .fc td {\n    vertical-align: top;\n    padding: 0;\n  }\n.fc a[data-navlink] {\n    cursor: pointer;\n  }\n.fc a[data-navlink]:hover {\n    text-decoration: underline;\n  }\n.fc-direction-ltr {\n  direction: ltr;\n  text-align: left;\n}\n.fc-direction-rtl {\n  direction: rtl;\n  text-align: right;\n}\n.fc-theme-standard td,\n  .fc-theme-standard th {\n    border: 1px solid #ddd;\n    border: 1px solid var(--fc-border-color, #ddd);\n  }\n/* for FF, which doesn't expand a 100% div within a table cell. use absolute positioning */\n/* inner-wrappers are responsible for being absolute */\n/* TODO: best place for this? */\n.fc-liquid-hack td,\n  .fc-liquid-hack th {\n    position: relative;\n  }\n@font-face {\n  font-family: 'fcicons';\n  src: url(\"data:application/x-font-ttf;charset=utf-8;base64,AAEAAAALAIAAAwAwT1MvMg8SBfAAAAC8AAAAYGNtYXAXVtKNAAABHAAAAFRnYXNwAAAAEAAAAXAAAAAIZ2x5ZgYydxIAAAF4AAAFNGhlYWQUJ7cIAAAGrAAAADZoaGVhB20DzAAABuQAAAAkaG10eCIABhQAAAcIAAAALGxvY2ED4AU6AAAHNAAAABhtYXhwAA8AjAAAB0wAAAAgbmFtZXsr690AAAdsAAABhnBvc3QAAwAAAAAI9AAAACAAAwPAAZAABQAAApkCzAAAAI8CmQLMAAAB6wAzAQkAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAAABAAADpBgPA/8AAQAPAAEAAAAABAAAAAAAAAAAAAAAgAAAAAAADAAAAAwAAABwAAQADAAAAHAADAAEAAAAcAAQAOAAAAAoACAACAAIAAQAg6Qb//f//AAAAAAAg6QD//f//AAH/4xcEAAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAABAWIAjQKeAskAEwAAJSc3NjQnJiIHAQYUFwEWMjc2NCcCnuLiDQ0MJAz/AA0NAQAMJAwNDcni4gwjDQwM/wANIwz/AA0NDCMNAAAAAQFiAI0CngLJABMAACUBNjQnASYiBwYUHwEHBhQXFjI3AZ4BAA0N/wAMJAwNDeLiDQ0MJAyNAQAMIw0BAAwMDSMM4uINIwwNDQAAAAIA4gC3Ax4CngATACcAACUnNzY0JyYiDwEGFB8BFjI3NjQnISc3NjQnJiIPAQYUHwEWMjc2NCcB87e3DQ0MIw3VDQ3VDSMMDQ0BK7e3DQ0MJAzVDQ3VDCQMDQ3zuLcMJAwNDdUNIwzWDAwNIwy4twwkDA0N1Q0jDNYMDA0jDAAAAgDiALcDHgKeABMAJwAAJTc2NC8BJiIHBhQfAQcGFBcWMjchNzY0LwEmIgcGFB8BBwYUFxYyNwJJ1Q0N1Q0jDA0Nt7cNDQwjDf7V1Q0N1QwkDA0Nt7cNDQwkDLfWDCMN1Q0NDCQMt7gMIw0MDNYMIw3VDQ0MJAy3uAwjDQwMAAADAFUAAAOrA1UAMwBoAHcAABMiBgcOAQcOAQcOARURFBYXHgEXHgEXHgEzITI2Nz4BNz4BNz4BNRE0JicuAScuAScuASMFITIWFx4BFx4BFx4BFREUBgcOAQcOAQcOASMhIiYnLgEnLgEnLgE1ETQ2Nz4BNz4BNz4BMxMhMjY1NCYjISIGFRQWM9UNGAwLFQkJDgUFBQUFBQ4JCRULDBgNAlYNGAwLFQkJDgUFBQUFBQ4JCRULDBgN/aoCVgQIBAQHAwMFAQIBAQIBBQMDBwQECAT9qgQIBAQHAwMFAQIBAQIBBQMDBwQECASAAVYRGRkR/qoRGRkRA1UFBAUOCQkVDAsZDf2rDRkLDBUJCA4FBQUFBQUOCQgVDAsZDQJVDRkLDBUJCQ4FBAVVAgECBQMCBwQECAX9qwQJAwQHAwMFAQICAgIBBQMDBwQDCQQCVQUIBAQHAgMFAgEC/oAZEhEZGRESGQAAAAADAFUAAAOrA1UAMwBoAIkAABMiBgcOAQcOAQcOARURFBYXHgEXHgEXHgEzITI2Nz4BNz4BNz4BNRE0JicuAScuAScuASMFITIWFx4BFx4BFx4BFREUBgcOAQcOAQcOASMhIiYnLgEnLgEnLgE1ETQ2Nz4BNz4BNz4BMxMzFRQWMzI2PQEzMjY1NCYrATU0JiMiBh0BIyIGFRQWM9UNGAwLFQkJDgUFBQUFBQ4JCRULDBgNAlYNGAwLFQkJDgUFBQUFBQ4JCRULDBgN/aoCVgQIBAQHAwMFAQIBAQIBBQMDBwQECAT9qgQIBAQHAwMFAQIBAQIBBQMDBwQECASAgBkSEhmAERkZEYAZEhIZgBEZGREDVQUEBQ4JCRUMCxkN/asNGQsMFQkIDgUFBQUFBQ4JCBUMCxkNAlUNGQsMFQkJDgUEBVUCAQIFAwIHBAQIBf2rBAkDBAcDAwUBAgICAgEFAwMHBAMJBAJVBQgEBAcCAwUCAQL+gIASGRkSgBkSERmAEhkZEoAZERIZAAABAOIAjQMeAskAIAAAExcHBhQXFjI/ARcWMjc2NC8BNzY0JyYiDwEnJiIHBhQX4uLiDQ0MJAzi4gwkDA0N4uINDQwkDOLiDCQMDQ0CjeLiDSMMDQ3h4Q0NDCMN4uIMIw0MDOLiDAwNIwwAAAABAAAAAQAAa5n0y18PPPUACwQAAAAAANivOVsAAAAA2K85WwAAAAADqwNVAAAACAACAAAAAAAAAAEAAAPA/8AAAAQAAAAAAAOrAAEAAAAAAAAAAAAAAAAAAAALBAAAAAAAAAAAAAAAAgAAAAQAAWIEAAFiBAAA4gQAAOIEAABVBAAAVQQAAOIAAAAAAAoAFAAeAEQAagCqAOoBngJkApoAAQAAAAsAigADAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA4ArgABAAAAAAABAAcAAAABAAAAAAACAAcAYAABAAAAAAADAAcANgABAAAAAAAEAAcAdQABAAAAAAAFAAsAFQABAAAAAAAGAAcASwABAAAAAAAKABoAigADAAEECQABAA4ABwADAAEECQACAA4AZwADAAEECQADAA4APQADAAEECQAEAA4AfAADAAEECQAFABYAIAADAAEECQAGAA4AUgADAAEECQAKADQApGZjaWNvbnMAZgBjAGkAYwBvAG4Ac1ZlcnNpb24gMS4wAFYAZQByAHMAaQBvAG4AIAAxAC4AMGZjaWNvbnMAZgBjAGkAYwBvAG4Ac2ZjaWNvbnMAZgBjAGkAYwBvAG4Ac1JlZ3VsYXIAUgBlAGcAdQBsAGEAcmZjaWNvbnMAZgBjAGkAYwBvAG4Ac0ZvbnQgZ2VuZXJhdGVkIGJ5IEljb01vb24uAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAGIAeQAgAEkAYwBvAE0AbwBvAG4ALgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\") format('truetype');\n  font-weight: normal;\n  font-style: normal;\n}\n.fc-icon {\n  /* added for fc */\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  text-align: center;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: 'fcicons' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.fc-icon-chevron-left:before {\n  content: \"\\e900\";\n}\n.fc-icon-chevron-right:before {\n  content: \"\\e901\";\n}\n.fc-icon-chevrons-left:before {\n  content: \"\\e902\";\n}\n.fc-icon-chevrons-right:before {\n  content: \"\\e903\";\n}\n.fc-icon-minus-square:before {\n  content: \"\\e904\";\n}\n.fc-icon-plus-square:before {\n  content: \"\\e905\";\n}\n.fc-icon-x:before {\n  content: \"\\e906\";\n}\n/*\nLots taken from Flatly (MIT): https://bootswatch.com/4/flatly/bootstrap.css\n\nThese styles only apply when the standard-theme is activated.\nWhen it's NOT activated, the fc-button classes won't even be in the DOM.\n*/\n.fc {\n\n  /* reset */\n\n}\n.fc .fc-button {\n    border-radius: 0;\n    overflow: visible;\n    text-transform: none;\n    margin: 0;\n    font-family: inherit;\n    font-size: inherit;\n    line-height: inherit;\n  }\n.fc .fc-button:focus {\n    outline: 1px dotted;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n.fc .fc-button {\n    -webkit-appearance: button;\n  }\n.fc .fc-button:not(:disabled) {\n    cursor: pointer;\n  }\n.fc .fc-button::-moz-focus-inner {\n    padding: 0;\n    border-style: none;\n  }\n.fc {\n\n  /* theme */\n\n}\n.fc .fc-button {\n    display: inline-block;\n    font-weight: 400;\n    text-align: center;\n    vertical-align: middle;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n            user-select: none;\n    background-color: transparent;\n    border: 1px solid transparent;\n    padding: 0.4em 0.65em;\n    font-size: 1em;\n    line-height: 1.5;\n    border-radius: 0.25em;\n  }\n.fc .fc-button:hover {\n    text-decoration: none;\n  }\n.fc .fc-button:focus {\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(44, 62, 80, 0.25);\n  }\n.fc .fc-button:disabled {\n    opacity: 0.65;\n  }\n.fc {\n\n  /* \"primary\" coloring */\n\n}\n.fc .fc-button-primary {\n    color: #fff;\n    color: var(--fc-button-text-color, #fff);\n    background-color: #2C3E50;\n    background-color: var(--fc-button-bg-color, #2C3E50);\n    border-color: #2C3E50;\n    border-color: var(--fc-button-border-color, #2C3E50);\n  }\n.fc .fc-button-primary:hover {\n    color: #fff;\n    color: var(--fc-button-text-color, #fff);\n    background-color: #1e2b37;\n    background-color: var(--fc-button-hover-bg-color, #1e2b37);\n    border-color: #1a252f;\n    border-color: var(--fc-button-hover-border-color, #1a252f);\n  }\n.fc .fc-button-primary:disabled { /* not DRY */\n    color: #fff;\n    color: var(--fc-button-text-color, #fff);\n    background-color: #2C3E50;\n    background-color: var(--fc-button-bg-color, #2C3E50);\n    border-color: #2C3E50;\n    border-color: var(--fc-button-border-color, #2C3E50); /* overrides :hover */\n  }\n.fc .fc-button-primary:focus {\n    box-shadow: 0 0 0 0.2rem rgba(76, 91, 106, 0.5);\n  }\n.fc .fc-button-primary:not(:disabled):active,\n  .fc .fc-button-primary:not(:disabled).fc-button-active {\n    color: #fff;\n    color: var(--fc-button-text-color, #fff);\n    background-color: #1a252f;\n    background-color: var(--fc-button-active-bg-color, #1a252f);\n    border-color: #151e27;\n    border-color: var(--fc-button-active-border-color, #151e27);\n  }\n.fc .fc-button-primary:not(:disabled):active:focus,\n  .fc .fc-button-primary:not(:disabled).fc-button-active:focus {\n    box-shadow: 0 0 0 0.2rem rgba(76, 91, 106, 0.5);\n  }\n.fc {\n\n  /* icons within buttons */\n\n}\n.fc .fc-button .fc-icon {\n    vertical-align: middle;\n    font-size: 1.5em; /* bump up the size (but don't make it bigger than line-height of button, which is 1.5em also) */\n  }\n.fc .fc-button-group {\n    position: relative;\n    display: inline-flex;\n    vertical-align: middle;\n  }\n.fc .fc-button-group > .fc-button {\n    position: relative;\n    flex: 1 1 auto;\n  }\n.fc .fc-button-group > .fc-button:hover {\n    z-index: 1;\n  }\n.fc .fc-button-group > .fc-button:focus,\n  .fc .fc-button-group > .fc-button:active,\n  .fc .fc-button-group > .fc-button.fc-button-active {\n    z-index: 1;\n  }\n.fc-direction-ltr .fc-button-group > .fc-button:not(:first-child) {\n    margin-left: -1px;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n.fc-direction-ltr .fc-button-group > .fc-button:not(:last-child) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n.fc-direction-rtl .fc-button-group > .fc-button:not(:first-child) {\n    margin-right: -1px;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n.fc-direction-rtl .fc-button-group > .fc-button:not(:last-child) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n.fc .fc-toolbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n.fc .fc-toolbar.fc-header-toolbar {\n    margin-bottom: 1.5em;\n  }\n.fc .fc-toolbar.fc-footer-toolbar {\n    margin-top: 1.5em;\n  }\n.fc .fc-toolbar-title {\n    font-size: 1.75em;\n    margin: 0;\n  }\n.fc-direction-ltr .fc-toolbar > * > :not(:first-child) {\n    margin-left: .75em; /* space between */\n  }\n.fc-direction-rtl .fc-toolbar > * > :not(:first-child) {\n    margin-right: .75em; /* space between */\n  }\n.fc-direction-rtl .fc-toolbar-ltr { /* when the toolbar-chunk positioning system is explicitly left-to-right */\n    flex-direction: row-reverse;\n  }\n.fc .fc-scroller {\n    -webkit-overflow-scrolling: touch;\n    position: relative; /* for abs-positioned elements within */\n  }\n.fc .fc-scroller-liquid {\n    height: 100%;\n  }\n.fc .fc-scroller-liquid-absolute {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n  }\n.fc .fc-scroller-harness {\n    position: relative;\n    overflow: hidden;\n    direction: ltr;\n      /* hack for chrome computing the scroller's right/left wrong for rtl. undone below... */\n      /* TODO: demonstrate in codepen */\n  }\n.fc .fc-scroller-harness-liquid {\n    height: 100%;\n  }\n.fc-direction-rtl .fc-scroller-harness > .fc-scroller { /* undo above hack */\n    direction: rtl;\n  }\n.fc-theme-standard .fc-scrollgrid {\n    border: 1px solid #ddd;\n    border: 1px solid var(--fc-border-color, #ddd); /* bootstrap does this. match */\n  }\n.fc .fc-scrollgrid,\n    .fc .fc-scrollgrid table { /* all tables (self included) */\n      width: 100%; /* because tables don't normally do this */\n      table-layout: fixed;\n    }\n.fc .fc-scrollgrid table { /* inner tables */\n      border-top-style: hidden;\n      border-left-style: hidden;\n      border-right-style: hidden;\n    }\n.fc .fc-scrollgrid {\n\n    border-collapse: separate;\n    border-right-width: 0;\n    border-bottom-width: 0;\n\n  }\n.fc .fc-scrollgrid-liquid {\n    height: 100%;\n  }\n.fc .fc-scrollgrid-section { /* a <tr> */\n    height: 1px /* better than 0, for firefox */\n\n  }\n.fc .fc-scrollgrid-section > td {\n      height: 1px; /* needs a height so inner div within grow. better than 0, for firefox */\n    }\n.fc .fc-scrollgrid-section table {\n      height: 1px;\n        /* for most browsers, if a height isn't set on the table, can't do liquid-height within cells */\n        /* serves as a min-height. harmless */\n    }\n.fc .fc-scrollgrid-section-liquid > td {\n      height: 100%; /* better than `auto`, for firefox */\n    }\n.fc .fc-scrollgrid-section > * {\n    border-top-width: 0;\n    border-left-width: 0;\n  }\n.fc .fc-scrollgrid-section-header > *,\n  .fc .fc-scrollgrid-section-footer > * {\n    border-bottom-width: 0;\n  }\n.fc .fc-scrollgrid-section-body table,\n  .fc .fc-scrollgrid-section-footer table {\n    border-bottom-style: hidden; /* head keeps its bottom border tho */\n  }\n.fc {\n\n  /* stickiness */\n\n}\n.fc .fc-scrollgrid-section-sticky > * {\n    background: #fff;\n    background: var(--fc-page-bg-color, #fff);\n    position: sticky;\n    z-index: 3; /* TODO: var */\n    /* TODO: box-shadow when sticking */\n  }\n.fc .fc-scrollgrid-section-header.fc-scrollgrid-section-sticky > * {\n    top: 0; /* because border-sharing causes a gap at the top */\n      /* TODO: give safari -1. has bug */\n  }\n.fc .fc-scrollgrid-section-footer.fc-scrollgrid-section-sticky > * {\n    bottom: 0; /* known bug: bottom-stickiness doesn't work in safari */\n  }\n.fc .fc-scrollgrid-sticky-shim { /* for horizontal scrollbar */\n    height: 1px; /* needs height to create scrollbars */\n    margin-bottom: -1px;\n  }\n.fc-sticky { /* no .fc wrap because used as child of body */\n  position: sticky;\n}\n.fc .fc-view-harness {\n    flex-grow: 1; /* because this harness is WITHIN the .fc's flexbox */\n    position: relative;\n  }\n.fc {\n\n  /* when the harness controls the height, make the view liquid */\n\n}\n.fc .fc-view-harness-active > .fc-view {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n.fc .fc-col-header-cell-cushion {\n    display: inline-block; /* x-browser for when sticky (when multi-tier header) */\n    padding: 2px 4px;\n  }\n.fc .fc-bg-event,\n  .fc .fc-non-business,\n  .fc .fc-highlight {\n    /* will always have a harness with position:relative/absolute, so absolutely expand */\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n.fc .fc-non-business {\n    background: rgba(215, 215, 215, 0.3);\n    background: var(--fc-non-business-color, rgba(215, 215, 215, 0.3));\n  }\n.fc .fc-bg-event {\n    background: rgb(143, 223, 130);\n    background: var(--fc-bg-event-color, rgb(143, 223, 130));\n    opacity: 0.3;\n    opacity: var(--fc-bg-event-opacity, 0.3)\n  }\n.fc .fc-bg-event .fc-event-title {\n      margin: .5em;\n      font-size: .85em;\n      font-size: var(--fc-small-font-size, .85em);\n      font-style: italic;\n    }\n.fc .fc-highlight {\n    background: rgba(188, 232, 241, 0.3);\n    background: var(--fc-highlight-color, rgba(188, 232, 241, 0.3));\n  }\n.fc .fc-cell-shaded,\n  .fc .fc-day-disabled {\n    background: rgba(208, 208, 208, 0.3);\n    background: var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3));\n  }\n/* link resets */\n/* ---------------------------------------------------------------------------------------------------- */\na.fc-event,\na.fc-event:hover {\n  text-decoration: none;\n}\n/* cursor */\n.fc-event[href],\n.fc-event.fc-event-draggable {\n  cursor: pointer;\n}\n/* event text content */\n/* ---------------------------------------------------------------------------------------------------- */\n.fc-event .fc-event-main {\n    position: relative;\n    z-index: 2;\n  }\n/* dragging */\n/* ---------------------------------------------------------------------------------------------------- */\n.fc-event-dragging:not(.fc-event-selected) { /* MOUSE */\n    opacity: 0.75;\n  }\n.fc-event-dragging.fc-event-selected { /* TOUCH */\n    box-shadow: 0 2px 7px rgba(0, 0, 0, 0.3);\n  }\n/* resizing */\n/* ---------------------------------------------------------------------------------------------------- */\n/* (subclasses should hone positioning for touch and non-touch) */\n.fc-event .fc-event-resizer {\n    display: none;\n    position: absolute;\n    z-index: 4;\n  }\n.fc-event:hover, /* MOUSE */\n.fc-event-selected { /* TOUCH */\n\n}\n.fc-event:hover .fc-event-resizer, .fc-event-selected .fc-event-resizer {\n    display: block;\n  }\n.fc-event-selected .fc-event-resizer {\n    border-radius: 4px;\n    border-radius: calc(var(--fc-event-resizer-dot-total-width, 8px) / 2);\n    border-width: 1px;\n    border-width: var(--fc-event-resizer-dot-border-width, 1px);\n    width: 8px;\n    width: var(--fc-event-resizer-dot-total-width, 8px);\n    height: 8px;\n    height: var(--fc-event-resizer-dot-total-width, 8px);\n    border-style: solid;\n    border-color: inherit;\n    background: #fff;\n    background: var(--fc-page-bg-color, #fff)\n\n    /* expand hit area */\n\n  }\n.fc-event-selected .fc-event-resizer:before {\n      content: '';\n      position: absolute;\n      top: -20px;\n      left: -20px;\n      right: -20px;\n      bottom: -20px;\n    }\n/* selecting (always TOUCH) */\n/* OR, focused by tab-index */\n/* (TODO: maybe not the best focus-styling for .fc-daygrid-dot-event) */\n/* ---------------------------------------------------------------------------------------------------- */\n.fc-event-selected,\n.fc-event:focus {\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2)\n\n  /* expand hit area (subclasses should expand) */\n\n}\n.fc-event-selected:before, .fc-event:focus:before {\n    content: \"\";\n    position: absolute;\n    z-index: 3;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n.fc-event-selected,\n.fc-event:focus {\n\n  /* dimmer effect */\n\n}\n.fc-event-selected:after, .fc-event:focus:after {\n    content: \"\";\n    background: rgba(0, 0, 0, 0.25);\n    background: var(--fc-event-selected-overlay-color, rgba(0, 0, 0, 0.25));\n    position: absolute;\n    z-index: 1;\n\n    /* assume there's a border on all sides. overcome it. */\n    /* sometimes there's NOT a border, in which case the dimmer will go over */\n    /* an adjacent border, which looks fine. */\n    top: -1px;\n    left: -1px;\n    right: -1px;\n    bottom: -1px;\n  }\n/*\nA HORIZONTAL event\n*/\n.fc-h-event { /* allowed to be top-level */\n  display: block;\n  border: 1px solid #3788d8;\n  border: 1px solid var(--fc-event-border-color, #3788d8);\n  background-color: #3788d8;\n  background-color: var(--fc-event-bg-color, #3788d8)\n\n}\n.fc-h-event .fc-event-main {\n    color: #fff;\n    color: var(--fc-event-text-color, #fff);\n  }\n.fc-h-event .fc-event-main-frame {\n    display: flex; /* for make fc-event-title-container expand */\n  }\n.fc-h-event .fc-event-time {\n    max-width: 100%; /* clip overflow on this element */\n    overflow: hidden;\n  }\n.fc-h-event .fc-event-title-container { /* serves as a container for the sticky cushion */\n    flex-grow: 1;\n    flex-shrink: 1;\n    min-width: 0; /* important for allowing to shrink all the way */\n  }\n.fc-h-event .fc-event-title {\n    display: inline-block; /* need this to be sticky cross-browser */\n    vertical-align: top; /* for not messing up line-height */\n    left: 0;  /* for sticky */\n    right: 0; /* for sticky */\n    max-width: 100%; /* clip overflow on this element */\n    overflow: hidden;\n  }\n.fc-h-event.fc-event-selected:before {\n    /* expand hit area */\n    top: -10px;\n    bottom: -10px;\n  }\n/* adjust border and border-radius (if there is any) for non-start/end */\n.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-start),\n.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-end) {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-left-width: 0;\n}\n.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-end),\n.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-start) {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right-width: 0;\n}\n/* resizers */\n.fc-h-event:not(.fc-event-selected) .fc-event-resizer {\n  top: 0;\n  bottom: 0;\n  width: 8px;\n  width: var(--fc-event-resizer-thickness, 8px);\n}\n.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start,\n.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end {\n  cursor: w-resize;\n  left: -4px;\n  left: calc(-0.5 * var(--fc-event-resizer-thickness, 8px));\n}\n.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end,\n.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start {\n  cursor: e-resize;\n  right: -4px;\n  right: calc(-0.5 * var(--fc-event-resizer-thickness, 8px));\n}\n/* resizers for TOUCH */\n.fc-h-event.fc-event-selected .fc-event-resizer {\n  top: 50%;\n  margin-top: -4px;\n  margin-top: calc(-0.5 * var(--fc-event-resizer-dot-total-width, 8px));\n}\n.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-start,\n.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-end {\n  left: -4px;\n  left: calc(-0.5 * var(--fc-event-resizer-dot-total-width, 8px));\n}\n.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-end,\n.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-start {\n  right: -4px;\n  right: calc(-0.5 * var(--fc-event-resizer-dot-total-width, 8px));\n}\n.fc .fc-popover {\n    position: absolute;\n    z-index: 9999;\n    box-shadow: 0 2px 6px rgba(0,0,0,.15);\n  }\n.fc .fc-popover-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 3px 4px;\n  }\n.fc .fc-popover-title {\n    margin: 0 2px;\n  }\n.fc .fc-popover-close {\n    cursor: pointer;\n    opacity: 0.65;\n    font-size: 1.1em;\n  }\n.fc-theme-standard .fc-popover {\n    border: 1px solid #ddd;\n    border: 1px solid var(--fc-border-color, #ddd);\n    background: #fff;\n    background: var(--fc-page-bg-color, #fff);\n  }\n.fc-theme-standard .fc-popover-header {\n    background: rgba(208, 208, 208, 0.3);\n    background: var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3));\n  }\n", ""]);
// Exports
            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


            /***/ }),

        /***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/daygrid/main.css":
        /*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/daygrid/main.css ***!
  \***************************************************************************************************************************************************************************************************************/
        /***/ ((module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

            var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
            ___CSS_LOADER_EXPORT___.push([module.id, "\n:root {\n  --fc-daygrid-event-dot-width: 8px;\n}\n/* help things clear margins of inner content */\n.fc-daygrid-day-frame,\n.fc-daygrid-day-events,\n.fc-daygrid-event-harness { /* for event top/bottom margins */\n}\n.fc-daygrid-day-frame:before, .fc-daygrid-day-events:before, .fc-daygrid-event-harness:before {\n  content: \"\";\n  clear: both;\n  display: table; }\n.fc-daygrid-day-frame:after, .fc-daygrid-day-events:after, .fc-daygrid-event-harness:after {\n  content: \"\";\n  clear: both;\n  display: table; }\n.fc .fc-daygrid-body { /* a <div> that wraps the table */\n    position: relative;\n    z-index: 1; /* container inner z-index's because <tr>s can't do it */\n  }\n.fc .fc-daygrid-day.fc-day-today {\n      background-color: rgba(255, 220, 40, 0.15);\n      background-color: var(--fc-today-bg-color, rgba(255, 220, 40, 0.15));\n    }\n.fc .fc-daygrid-day-frame {\n    position: relative;\n    min-height: 100%; /* seems to work better than `height` because sets height after rows/cells naturally do it */\n  }\n.fc {\n\n  /* cell top */\n\n}\n.fc .fc-daygrid-day-top {\n    display: flex;\n    flex-direction: row-reverse;\n  }\n.fc .fc-day-other .fc-daygrid-day-top {\n    opacity: 0.3;\n  }\n.fc {\n\n  /* day number (within cell top) */\n\n}\n.fc .fc-daygrid-day-number {\n    position: relative;\n    z-index: 4;\n    padding: 4px;\n  }\n.fc {\n\n  /* event container */\n\n}\n.fc .fc-daygrid-day-events {\n    margin-top: 1px; /* needs to be margin, not padding, so that available cell height can be computed */\n  }\n.fc {\n\n  /* positioning for balanced vs natural */\n\n}\n.fc .fc-daygrid-body-balanced .fc-daygrid-day-events {\n      position: absolute;\n      left: 0;\n      right: 0;\n    }\n.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events {\n      position: relative; /* for containing abs positioned event harnesses */\n      min-height: 2em; /* in addition to being a min-height during natural height, equalizes the heights a little bit */\n    }\n.fc .fc-daygrid-body-natural { /* can coexist with -unbalanced */\n  }\n.fc .fc-daygrid-body-natural .fc-daygrid-day-events {\n      margin-bottom: 1em;\n    }\n.fc {\n\n  /* event harness */\n\n}\n.fc .fc-daygrid-event-harness {\n    position: relative;\n  }\n.fc .fc-daygrid-event-harness-abs {\n    position: absolute;\n    top: 0; /* fallback coords for when cannot yet be computed */\n    left: 0; /* */\n    right: 0; /* */\n  }\n.fc .fc-daygrid-bg-harness {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n  }\n.fc {\n\n  /* bg content */\n\n}\n.fc .fc-daygrid-day-bg .fc-non-business { z-index: 1 }\n.fc .fc-daygrid-day-bg .fc-bg-event { z-index: 2 }\n.fc .fc-daygrid-day-bg .fc-highlight { z-index: 3 }\n.fc {\n\n  /* events */\n\n}\n.fc .fc-daygrid-event {\n    z-index: 6;\n    margin-top: 1px;\n  }\n.fc .fc-daygrid-event.fc-event-mirror {\n    z-index: 7;\n  }\n.fc {\n\n  /* cell bottom (within day-events) */\n\n}\n.fc .fc-daygrid-day-bottom {\n    font-size: .85em;\n    padding: 2px 3px 0\n  }\n.fc .fc-daygrid-day-bottom:before {\n  content: \"\";\n  clear: both;\n  display: table; }\n.fc .fc-daygrid-more-link {\n    position: relative;\n    z-index: 4;\n    cursor: pointer;\n  }\n.fc {\n\n  /* week number (within frame) */\n\n}\n.fc .fc-daygrid-week-number {\n    position: absolute;\n    z-index: 5;\n    top: 0;\n    padding: 2px;\n    min-width: 1.5em;\n    text-align: center;\n    background-color: rgba(208, 208, 208, 0.3);\n    background-color: var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3));\n    color: #808080;\n    color: var(--fc-neutral-text-color, #808080);\n  }\n.fc {\n\n  /* popover */\n\n}\n.fc .fc-more-popover .fc-popover-body {\n    min-width: 220px;\n    padding: 10px;\n  }\n.fc-direction-ltr .fc-daygrid-event.fc-event-start,\n.fc-direction-rtl .fc-daygrid-event.fc-event-end {\n  margin-left: 2px;\n}\n.fc-direction-ltr .fc-daygrid-event.fc-event-end,\n.fc-direction-rtl .fc-daygrid-event.fc-event-start {\n  margin-right: 2px;\n}\n.fc-direction-ltr .fc-daygrid-week-number {\n    left: 0;\n    border-radius: 0 0 3px 0;\n  }\n.fc-direction-rtl .fc-daygrid-week-number {\n    right: 0;\n    border-radius: 0 0 0 3px;\n  }\n.fc-liquid-hack .fc-daygrid-day-frame {\n    position: static; /* will cause inner absolute stuff to expand to <td> */\n  }\n.fc-daygrid-event { /* make root-level, because will be dragged-and-dropped outside of a component root */\n  position: relative; /* for z-indexes assigned later */\n  white-space: nowrap;\n  border-radius: 3px; /* dot event needs this to when selected */\n  font-size: .85em;\n  font-size: var(--fc-small-font-size, .85em);\n}\n/* --- the rectangle (\"block\") style of event --- */\n.fc-daygrid-block-event .fc-event-time {\n    font-weight: bold;\n  }\n.fc-daygrid-block-event .fc-event-time,\n  .fc-daygrid-block-event .fc-event-title {\n    padding: 1px;\n  }\n/* --- the dot style of event --- */\n.fc-daygrid-dot-event {\n  display: flex;\n  align-items: center;\n  padding: 2px 0\n\n}\n.fc-daygrid-dot-event .fc-event-title {\n    flex-grow: 1;\n    flex-shrink: 1;\n    min-width: 0; /* important for allowing to shrink all the way */\n    overflow: hidden;\n    font-weight: bold;\n  }\n.fc-daygrid-dot-event:hover,\n  .fc-daygrid-dot-event.fc-event-mirror {\n    background: rgba(0, 0, 0, 0.1);\n  }\n.fc-daygrid-dot-event.fc-event-selected:before {\n    /* expand hit area */\n    top: -10px;\n    bottom: -10px;\n  }\n.fc-daygrid-event-dot { /* the actual dot */\n  margin: 0 4px;\n  box-sizing: content-box;\n  width: 0;\n  height: 0;\n  border: 4px solid #3788d8;\n  border: calc(var(--fc-daygrid-event-dot-width, 8px) / 2) solid var(--fc-event-border-color, #3788d8);\n  border-radius: 4px;\n  border-radius: calc(var(--fc-daygrid-event-dot-width, 8px) / 2);\n}\n/* --- spacing between time and title --- */\n.fc-direction-ltr .fc-daygrid-event .fc-event-time {\n    margin-right: 3px;\n  }\n.fc-direction-rtl .fc-daygrid-event .fc-event-time {\n    margin-left: 3px;\n  }\n", ""]);
// Exports
            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


            /***/ }),

        /***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/list/main.css":
        /*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/list/main.css ***!
  \************************************************************************************************************************************************************************************************************/
        /***/ ((module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

            var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
            ___CSS_LOADER_EXPORT___.push([module.id, "\n:root {\n  --fc-list-event-dot-width: 10px;\n  --fc-list-event-hover-bg-color: #f5f5f5;\n}\n.fc-theme-standard .fc-list {\n    border: 1px solid #ddd;\n    border: 1px solid var(--fc-border-color, #ddd);\n  }\n.fc {\n\n  /* message when no events */\n\n}\n.fc .fc-list-empty {\n    background-color: rgba(208, 208, 208, 0.3);\n    background-color: var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3));\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center; /* vertically aligns fc-list-empty-inner */\n  }\n.fc .fc-list-empty-cushion {\n    margin: 5em 0;\n  }\n.fc {\n\n  /* table within the scroller */\n  /* ---------------------------------------------------------------------------------------------------- */\n\n}\n.fc .fc-list-table {\n    width: 100%;\n    border-style: hidden; /* kill outer border on theme */\n  }\n.fc .fc-list-table tr > * {\n    border-left: 0;\n    border-right: 0;\n  }\n.fc .fc-list-sticky .fc-list-day > * { /* the cells */\n      position: sticky;\n      top: 0;\n      background: #fff;\n      background: var(--fc-page-bg-color, #fff); /* for when headers are styled to be transparent and sticky */\n    }\n.fc {\n\n  /* only exists for aria reasons, hide for non-screen-readers */\n\n}\n.fc .fc-list-table thead {\n    position: absolute;\n    left: -10000px;\n  }\n.fc {\n\n  /* the table's border-style:hidden gets confused by hidden thead. force-hide top border of first cell */\n\n}\n.fc .fc-list-table tbody > tr:first-child th {\n    border-top: 0;\n  }\n.fc .fc-list-table th {\n    padding: 0; /* uses an inner-wrapper instead... */\n  }\n.fc .fc-list-table td,\n  .fc .fc-list-day-cushion {\n    padding: 8px 14px;\n  }\n.fc {\n\n\n  /* date heading rows */\n  /* ---------------------------------------------------------------------------------------------------- */\n\n}\n.fc .fc-list-day-cushion:after {\n  content: \"\";\n  clear: both;\n  display: table; /* clear floating */\n    }\n.fc-theme-standard .fc-list-day-cushion {\n    background-color: rgba(208, 208, 208, 0.3);\n    background-color: var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3));\n  }\n.fc-direction-ltr .fc-list-day-text,\n.fc-direction-rtl .fc-list-day-side-text {\n  float: left;\n}\n.fc-direction-ltr .fc-list-day-side-text,\n.fc-direction-rtl .fc-list-day-text {\n  float: right;\n}\n/* make the dot closer to the event title */\n.fc-direction-ltr .fc-list-table .fc-list-event-graphic { padding-right: 0 }\n.fc-direction-rtl .fc-list-table .fc-list-event-graphic { padding-left: 0 }\n.fc .fc-list-event.fc-event-forced-url {\n    cursor: pointer; /* whole row will seem clickable */\n  }\n.fc .fc-list-event:hover td {\n    background-color: #f5f5f5;\n    background-color: var(--fc-list-event-hover-bg-color, #f5f5f5);\n  }\n.fc {\n\n  /* shrink certain cols */\n\n}\n.fc .fc-list-event-graphic,\n  .fc .fc-list-event-time {\n    white-space: nowrap;\n    width: 1px;\n  }\n.fc .fc-list-event-dot {\n    display: inline-block;\n    box-sizing: content-box;\n    width: 0;\n    height: 0;\n    border: 5px solid #3788d8;\n    border: calc(var(--fc-list-event-dot-width, 10px) / 2) solid var(--fc-event-border-color, #3788d8);\n    border-radius: 5px;\n    border-radius: calc(var(--fc-list-event-dot-width, 10px) / 2);\n  }\n.fc {\n\n  /* reset <a> styling */\n\n}\n.fc .fc-list-event-title a {\n    color: inherit;\n    text-decoration: none;\n  }\n.fc {\n\n  /* underline link when hovering over any part of row */\n\n}\n.fc .fc-list-event.fc-event-forced-url:hover a {\n    text-decoration: underline;\n  }\n", ""]);
// Exports
            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


            /***/ }),

        /***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/timegrid/main.css":
        /*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@fullcalendar/timegrid/main.css ***!
  \****************************************************************************************************************************************************************************************************************/
        /***/ ((module, __webpack_exports__, __webpack_require__) => {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
            /* harmony export */ __webpack_require__.d(__webpack_exports__, {
                /* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
                /* harmony export */ });
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
            /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

            var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
            ___CSS_LOADER_EXPORT___.push([module.id, "\n/*\nA VERTICAL event\n*/\n\n.fc-v-event { /* allowed to be top-level */\n  display: block;\n  border: 1px solid #3788d8;\n  border: 1px solid var(--fc-event-border-color, #3788d8);\n  background-color: #3788d8;\n  background-color: var(--fc-event-bg-color, #3788d8)\n\n}\n\n.fc-v-event .fc-event-main {\n    color: #fff;\n    color: var(--fc-event-text-color, #fff);\n    height: 100%;\n  }\n\n.fc-v-event .fc-event-main-frame {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n\n.fc-v-event .fc-event-time {\n    flex-grow: 0;\n    flex-shrink: 0;\n    max-height: 100%;\n    overflow: hidden;\n  }\n\n.fc-v-event .fc-event-title-container { /* a container for the sticky cushion */\n    flex-grow: 1;\n    flex-shrink: 1;\n    min-height: 0; /* important for allowing to shrink all the way */\n  }\n\n.fc-v-event .fc-event-title { /* will have fc-sticky on it */\n    top: 0;\n    bottom: 0;\n    max-height: 100%; /* clip overflow */\n    overflow: hidden;\n  }\n\n.fc-v-event:not(.fc-event-start) {\n    border-top-width: 0;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n.fc-v-event:not(.fc-event-end) {\n    border-bottom-width: 0;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n.fc-v-event.fc-event-selected:before {\n    /* expand hit area */\n    left: -10px;\n    right: -10px;\n  }\n\n.fc-v-event {\n\n  /* resizer (mouse AND touch) */\n\n}\n\n.fc-v-event .fc-event-resizer-start {\n    cursor: n-resize;\n  }\n\n.fc-v-event .fc-event-resizer-end {\n    cursor: s-resize;\n  }\n\n.fc-v-event {\n\n  /* resizer for MOUSE */\n\n}\n\n.fc-v-event:not(.fc-event-selected) .fc-event-resizer {\n      height: 8px;\n      height: var(--fc-event-resizer-thickness, 8px);\n      left: 0;\n      right: 0;\n    }\n\n.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start {\n      top: -4px;\n      top: calc(var(--fc-event-resizer-thickness, 8px) / -2);\n    }\n\n.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end {\n      bottom: -4px;\n      bottom: calc(var(--fc-event-resizer-thickness, 8px) / -2);\n    }\n\n.fc-v-event {\n\n  /* resizer for TOUCH (when event is \"selected\") */\n\n}\n\n.fc-v-event.fc-event-selected .fc-event-resizer {\n      left: 50%;\n      margin-left: -4px;\n      margin-left: calc(var(--fc-event-resizer-dot-total-width, 8px) / -2);\n    }\n\n.fc-v-event.fc-event-selected .fc-event-resizer-start {\n      top: -4px;\n      top: calc(var(--fc-event-resizer-dot-total-width, 8px) / -2);\n    }\n\n.fc-v-event.fc-event-selected .fc-event-resizer-end {\n      bottom: -4px;\n      bottom: calc(var(--fc-event-resizer-dot-total-width, 8px) / -2);\n    }\n\n.fc .fc-timegrid .fc-daygrid-body { /* the all-day daygrid within the timegrid view */\n    z-index: 2; /* put above the timegrid-body so that more-popover is above everything. TODO: better solution */\n  }\n\n.fc .fc-timegrid-divider {\n    padding: 0 0 2px; /* browsers get confused when you set height. use padding instead */\n  }\n\n.fc .fc-timegrid-body {\n    position: relative;\n    z-index: 1; /* scope the z-indexes of slots and cols */\n    min-height: 100%; /* fill height always, even when slat table doesn't grow */\n  }\n\n.fc .fc-timegrid-axis-chunk { /* for advanced ScrollGrid */\n    position: relative /* offset parent for now-indicator-container */\n\n  }\n\n.fc .fc-timegrid-axis-chunk > table {\n      position: relative;\n      z-index: 1; /* above the now-indicator-container */\n    }\n\n.fc .fc-timegrid-slots {\n    position: relative;\n    z-index: 1;\n  }\n\n.fc .fc-timegrid-slot { /* a <td> */\n    height: 1.5em;\n    border-bottom: 0 /* each cell owns its top border */\n  }\n\n.fc .fc-timegrid-slot:empty:before {\n      content: '\\00a0'; /* make sure there's at least an empty space to create height for height syncing */\n    }\n\n.fc .fc-timegrid-slot-minor {\n    border-top-style: dotted;\n  }\n\n.fc .fc-timegrid-slot-label-cushion {\n    display: inline-block;\n    white-space: nowrap;\n  }\n\n.fc .fc-timegrid-slot-label {\n    vertical-align: middle; /* vertical align the slots */\n  }\n\n.fc {\n\n\n  /* slots AND axis cells (top-left corner of view including the \"all-day\" text) */\n\n}\n\n.fc .fc-timegrid-axis-cushion,\n  .fc .fc-timegrid-slot-label-cushion {\n    padding: 0 4px;\n  }\n\n.fc {\n\n\n  /* axis cells (top-left corner of view including the \"all-day\" text) */\n  /* vertical align is more complicated, uses flexbox */\n\n}\n\n.fc .fc-timegrid-axis-frame-liquid {\n    height: 100%; /* will need liquid-hack in FF */\n  }\n\n.fc .fc-timegrid-axis-frame {\n    overflow: hidden;\n    display: flex;\n    align-items: center; /* vertical align */\n    justify-content: flex-end; /* horizontal align. matches text-align below */\n  }\n\n.fc .fc-timegrid-axis-cushion {\n    max-width: 60px; /* limits the width of the \"all-day\" text */\n    flex-shrink: 0; /* allows text to expand how it normally would, regardless of constrained width */\n  }\n\n.fc-direction-ltr .fc-timegrid-slot-label-frame {\n    text-align: right;\n  }\n\n.fc-direction-rtl .fc-timegrid-slot-label-frame {\n    text-align: left;\n  }\n\n.fc-liquid-hack .fc-timegrid-axis-frame-liquid {\n  height: auto;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  }\n\n.fc .fc-timegrid-col.fc-day-today {\n      background-color: rgba(255, 220, 40, 0.15);\n      background-color: var(--fc-today-bg-color, rgba(255, 220, 40, 0.15));\n    }\n\n.fc .fc-timegrid-col-frame {\n    min-height: 100%; /* liquid-hack is below */\n    position: relative;\n  }\n\n.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame {\n  height: auto;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n    }\n\n.fc-media-screen .fc-timegrid-cols {\n    position: absolute; /* no z-index. children will decide and go above slots */\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0\n  }\n\n.fc-media-screen .fc-timegrid-cols > table {\n      height: 100%;\n    }\n\n.fc-media-screen .fc-timegrid-col-bg,\n  .fc-media-screen .fc-timegrid-col-events,\n  .fc-media-screen .fc-timegrid-now-indicator-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n  }\n\n.fc {\n\n  /* bg */\n\n}\n\n.fc .fc-timegrid-col-bg {\n    z-index: 2; /* TODO: kill */\n  }\n\n.fc .fc-timegrid-col-bg .fc-non-business { z-index: 1 }\n\n.fc .fc-timegrid-col-bg .fc-bg-event { z-index: 2 }\n\n.fc .fc-timegrid-col-bg .fc-highlight { z-index: 3 }\n\n.fc .fc-timegrid-bg-harness {\n    position: absolute; /* top/bottom will be set by JS */\n    left: 0;\n    right: 0;\n  }\n\n.fc {\n\n  /* fg events */\n  /* (the mirror segs are put into a separate container with same classname, */\n  /* and they must be after the normal seg container to appear at a higher z-index) */\n\n}\n\n.fc .fc-timegrid-col-events {\n    z-index: 3;\n    /* child event segs have z-indexes that are scoped within this div */\n  }\n\n.fc {\n\n  /* now indicator */\n\n}\n\n.fc .fc-timegrid-now-indicator-container {\n    bottom: 0;\n    overflow: hidden; /* don't let overflow of lines/arrows cause unnecessary scrolling */\n    /* z-index is set on the individual elements */\n  }\n\n.fc-direction-ltr .fc-timegrid-col-events {\n    margin: 0 2.5% 0 2px;\n  }\n\n.fc-direction-rtl .fc-timegrid-col-events {\n    margin: 0 2px 0 2.5%;\n  }\n\n.fc-timegrid-event-harness {\n  position: absolute /* top/left/right/bottom will all be set by JS */\n}\n\n.fc-timegrid-event-harness > .fc-timegrid-event {\n    position: absolute; /* absolute WITHIN the harness */\n    top: 0; /* for when not yet positioned */\n    bottom: 0; /* \" */\n    left: 0;\n    right: 0;\n  }\n\n.fc-timegrid-event-harness-inset .fc-timegrid-event,\n.fc-timegrid-event.fc-event-mirror,\n.fc-timegrid-more-link {\n  box-shadow: 0px 0px 0px 1px #fff;\n  box-shadow: 0px 0px 0px 1px var(--fc-page-bg-color, #fff);\n}\n\n.fc-timegrid-event,\n.fc-timegrid-more-link { /* events need to be root */\n  font-size: .85em;\n  font-size: var(--fc-small-font-size, .85em);\n  border-radius: 3px;\n}\n\n.fc-timegrid-event { /* events need to be root */\n  margin-bottom: 1px /* give some space from bottom */\n}\n\n.fc-timegrid-event .fc-event-main {\n    padding: 1px 1px 0;\n  }\n\n.fc-timegrid-event .fc-event-time {\n    white-space: nowrap;\n    font-size: .85em;\n    font-size: var(--fc-small-font-size, .85em);\n    margin-bottom: 1px;\n  }\n\n.fc-timegrid-event-short .fc-event-main-frame {\n    flex-direction: row;\n    overflow: hidden;\n  }\n\n.fc-timegrid-event-short .fc-event-time:after {\n    content: '\\00a0-\\00a0'; /* dash surrounded by non-breaking spaces */\n  }\n\n.fc-timegrid-event-short .fc-event-title {\n    font-size: .85em;\n    font-size: var(--fc-small-font-size, .85em)\n  }\n\n.fc-timegrid-more-link { /* does NOT inherit from fc-timegrid-event */\n  position: absolute;\n  z-index: 9999; /* hack */\n  color: inherit;\n  color: var(--fc-more-link-text-color, inherit);\n  background: #d0d0d0;\n  background: var(--fc-more-link-bg-color, #d0d0d0);\n  cursor: pointer;\n  margin-bottom: 1px; /* match space below fc-timegrid-event */\n}\n\n.fc-timegrid-more-link-inner { /* has fc-sticky */\n  padding: 3px 2px;\n  top: 0;\n}\n\n.fc-direction-ltr .fc-timegrid-more-link {\n    right: 0;\n  }\n\n.fc-direction-rtl .fc-timegrid-more-link {\n    left: 0;\n  }\n\n.fc {\n\n  /* line */\n\n}\n\n.fc .fc-timegrid-now-indicator-line {\n    position: absolute;\n    z-index: 4;\n    left: 0;\n    right: 0;\n    border-style: solid;\n    border-color: red;\n    border-color: var(--fc-now-indicator-color, red);\n    border-width: 1px 0 0;\n  }\n\n.fc {\n\n  /* arrow */\n\n}\n\n.fc .fc-timegrid-now-indicator-arrow {\n    position: absolute;\n    z-index: 4;\n    margin-top: -5px; /* vertically center on top coordinate */\n    border-style: solid;\n    border-color: red;\n    border-color: var(--fc-now-indicator-color, red);\n  }\n\n.fc-direction-ltr .fc-timegrid-now-indicator-arrow {\n    left: 0;\n\n    /* triangle pointing right. TODO: mixin */\n    border-width: 5px 0 5px 6px;\n    border-top-color: transparent;\n    border-bottom-color: transparent;\n  }\n\n.fc-direction-rtl .fc-timegrid-now-indicator-arrow {\n    right: 0;\n\n    /* triangle pointing left. TODO: mixin */\n    border-width: 5px 6px 5px 0;\n    border-top-color: transparent;\n    border-bottom-color: transparent;\n  }\n", ""]);
// Exports
            /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


            /***/ }),

        /***/ "./node_modules/css-loader/dist/runtime/api.js":
        /*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
        /***/ ((module) => {

            "use strict";


            /*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
            module.exports = function (cssWithMappingToString) {
                var list = []; // return the list of modules as css string

                list.toString = function toString() {
                    return this.map(function (item) {
                        var content = cssWithMappingToString(item);

                        if (item[2]) {
                            return "@media ".concat(item[2], " {").concat(content, "}");
                        }

                        return content;
                    }).join("");
                }; // import a list of modules into the list
                // eslint-disable-next-line func-names


                list.i = function (modules, mediaQuery, dedupe) {
                    if (typeof modules === "string") {
                        // eslint-disable-next-line no-param-reassign
                        modules = [[null, modules, ""]];
                    }

                    var alreadyImportedModules = {};

                    if (dedupe) {
                        for (var i = 0; i < this.length; i++) {
                            // eslint-disable-next-line prefer-destructuring
                            var id = this[i][0];

                            if (id != null) {
                                alreadyImportedModules[id] = true;
                            }
                        }
                    }

                    for (var _i = 0; _i < modules.length; _i++) {
                        var item = [].concat(modules[_i]);

                        if (dedupe && alreadyImportedModules[item[0]]) {
                            // eslint-disable-next-line no-continue
                            continue;
                        }

                        if (mediaQuery) {
                            if (!item[2]) {
                                item[2] = mediaQuery;
                            } else {
                                item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
                            }
                        }

                        list.push(item);
                    }
                };

                return list;
            };

            /***/ }),

        /***/ "./node_modules/dayjs/dayjs.min.js":
        /*!*****************************************!*\
  !*** ./node_modules/dayjs/dayjs.min.js ***!
  \*****************************************/
        /***/ (function(module) {

            !function(t,e){ true?module.exports=e():0}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",l="Invalid Date",$=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},g="en",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if("string"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split("-");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v="set"+(this.$u?"UTC":"");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+"Hours",0);case u:return $(v+"Minutes",1);case s:return $(v+"Seconds",2);case i:return $(v+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h="set"+(this.$u?"UTC":""),l=(n={},n[a]=h+"Date",n[d]=h+"Date",n[f]=h+"Month",n[c]=h+"FullYear",n[u]=h+"Hours",n[s]=h+"Minutes",n[i]=h+"Seconds",n[r]=h+"Milliseconds",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,"0")},d=n.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:O.s(this.$y,4,"0"),M:a+1,MM:O.s(a+1,2,"0"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,"0"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));

            /***/ }),

        /***/ "./node_modules/dropzone/dist/dropzone.js":
        /*!************************************************!*\
  !*** ./node_modules/dropzone/dist/dropzone.js ***!
  \************************************************/
        /***/ ((module) => {

            (function webpackUniversalModuleDefinition(root, factory) {
                if(true)
                    module.exports = factory();
                else { var i, a; }
            })(self, function() {
                return /******/ (function() { // webpackBootstrap
                    /******/ 	var __webpack_modules__ = ({

                        /***/ 3099:
                        /***/ (function(module) {

                            module.exports = function (it) {
                                if (typeof it != 'function') {
                                    throw TypeError(String(it) + ' is not a function');
                                } return it;
                            };


                            /***/ }),

                        /***/ 6077:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_703__) {

                            var isObject = __nested_webpack_require_703__(111);

                            module.exports = function (it) {
                                if (!isObject(it) && it !== null) {
                                    throw TypeError("Can't set " + String(it) + ' as a prototype');
                                } return it;
                            };


                            /***/ }),

                        /***/ 1223:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_1001__) {

                            var wellKnownSymbol = __nested_webpack_require_1001__(5112);
                            var create = __nested_webpack_require_1001__(30);
                            var definePropertyModule = __nested_webpack_require_1001__(3070);

                            var UNSCOPABLES = wellKnownSymbol('unscopables');
                            var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
                            if (ArrayPrototype[UNSCOPABLES] == undefined) {
                                definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
                                    configurable: true,
                                    value: create(null)
                                });
                            }

// add a key to Array.prototype[@@unscopables]
                            module.exports = function (key) {
                                ArrayPrototype[UNSCOPABLES][key] = true;
                            };


                            /***/ }),

                        /***/ 1530:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_1715__) {

                            "use strict";

                            var charAt = __nested_webpack_require_1715__(8710).charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
                            module.exports = function (S, index, unicode) {
                                return index + (unicode ? charAt(S, index).length : 1);
                            };


                            /***/ }),

                        /***/ 5787:
                        /***/ (function(module) {

                            module.exports = function (it, Constructor, name) {
                                if (!(it instanceof Constructor)) {
                                    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
                                } return it;
                            };


                            /***/ }),

                        /***/ 9670:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_2317__) {

                            var isObject = __nested_webpack_require_2317__(111);

                            module.exports = function (it) {
                                if (!isObject(it)) {
                                    throw TypeError(String(it) + ' is not an object');
                                } return it;
                            };


                            /***/ }),

                        /***/ 4019:
                        /***/ (function(module) {

                            module.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';


                            /***/ }),

                        /***/ 260:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_2726__) {

                            "use strict";

                            var NATIVE_ARRAY_BUFFER = __nested_webpack_require_2726__(4019);
                            var DESCRIPTORS = __nested_webpack_require_2726__(9781);
                            var global = __nested_webpack_require_2726__(7854);
                            var isObject = __nested_webpack_require_2726__(111);
                            var has = __nested_webpack_require_2726__(6656);
                            var classof = __nested_webpack_require_2726__(648);
                            var createNonEnumerableProperty = __nested_webpack_require_2726__(8880);
                            var redefine = __nested_webpack_require_2726__(1320);
                            var defineProperty = __nested_webpack_require_2726__(3070).f;
                            var getPrototypeOf = __nested_webpack_require_2726__(9518);
                            var setPrototypeOf = __nested_webpack_require_2726__(7674);
                            var wellKnownSymbol = __nested_webpack_require_2726__(5112);
                            var uid = __nested_webpack_require_2726__(9711);

                            var Int8Array = global.Int8Array;
                            var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
                            var Uint8ClampedArray = global.Uint8ClampedArray;
                            var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
                            var TypedArray = Int8Array && getPrototypeOf(Int8Array);
                            var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
                            var ObjectPrototype = Object.prototype;
                            var isPrototypeOf = ObjectPrototype.isPrototypeOf;

                            var TO_STRING_TAG = wellKnownSymbol('toStringTag');
                            var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
// Fixing native typed arrays in Opera Presto crashes the browser, see #595
                            var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';
                            var TYPED_ARRAY_TAG_REQIRED = false;
                            var NAME;

                            var TypedArrayConstructorsList = {
                                Int8Array: 1,
                                Uint8Array: 1,
                                Uint8ClampedArray: 1,
                                Int16Array: 2,
                                Uint16Array: 2,
                                Int32Array: 4,
                                Uint32Array: 4,
                                Float32Array: 4,
                                Float64Array: 8
                            };

                            var BigIntArrayConstructorsList = {
                                BigInt64Array: 8,
                                BigUint64Array: 8
                            };

                            var isView = function isView(it) {
                                if (!isObject(it)) return false;
                                var klass = classof(it);
                                return klass === 'DataView'
                                    || has(TypedArrayConstructorsList, klass)
                                    || has(BigIntArrayConstructorsList, klass);
                            };

                            var isTypedArray = function (it) {
                                if (!isObject(it)) return false;
                                var klass = classof(it);
                                return has(TypedArrayConstructorsList, klass)
                                    || has(BigIntArrayConstructorsList, klass);
                            };

                            var aTypedArray = function (it) {
                                if (isTypedArray(it)) return it;
                                throw TypeError('Target is not a typed array');
                            };

                            var aTypedArrayConstructor = function (C) {
                                if (setPrototypeOf) {
                                    if (isPrototypeOf.call(TypedArray, C)) return C;
                                } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME)) {
                                    var TypedArrayConstructor = global[ARRAY];
                                    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {
                                        return C;
                                    }
                                } throw TypeError('Target is not a typed array constructor');
                            };

                            var exportTypedArrayMethod = function (KEY, property, forced) {
                                if (!DESCRIPTORS) return;
                                if (forced) for (var ARRAY in TypedArrayConstructorsList) {
                                    var TypedArrayConstructor = global[ARRAY];
                                    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {
                                        delete TypedArrayConstructor.prototype[KEY];
                                    }
                                }
                                if (!TypedArrayPrototype[KEY] || forced) {
                                    redefine(TypedArrayPrototype, KEY, forced ? property
                                        : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);
                                }
                            };

                            var exportTypedArrayStaticMethod = function (KEY, property, forced) {
                                var ARRAY, TypedArrayConstructor;
                                if (!DESCRIPTORS) return;
                                if (setPrototypeOf) {
                                    if (forced) for (ARRAY in TypedArrayConstructorsList) {
                                        TypedArrayConstructor = global[ARRAY];
                                        if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {
                                            delete TypedArrayConstructor[KEY];
                                        }
                                    }
                                    if (!TypedArray[KEY] || forced) {
                                        // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
                                        try {
                                            return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY] || property);
                                        } catch (error) { /* empty */ }
                                    } else return;
                                }
                                for (ARRAY in TypedArrayConstructorsList) {
                                    TypedArrayConstructor = global[ARRAY];
                                    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
                                        redefine(TypedArrayConstructor, KEY, property);
                                    }
                                }
                            };

                            for (NAME in TypedArrayConstructorsList) {
                                if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;
                            }

// WebKit bug - typed arrays constructors prototype is Object.prototype
                            if (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {
                                // eslint-disable-next-line no-shadow -- safe
                                TypedArray = function TypedArray() {
                                    throw TypeError('Incorrect invocation');
                                };
                                if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
                                    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
                                }
                            }

                            if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
                                TypedArrayPrototype = TypedArray.prototype;
                                if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
                                    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
                                }
                            }

// WebKit bug - one more object in Uint8ClampedArray prototype chain
                            if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
                                setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
                            }

                            if (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {
                                TYPED_ARRAY_TAG_REQIRED = true;
                                defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {
                                        return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
                                    } });
                                for (NAME in TypedArrayConstructorsList) if (global[NAME]) {
                                    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
                                }
                            }

                            module.exports = {
                                NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
                                TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,
                                aTypedArray: aTypedArray,
                                aTypedArrayConstructor: aTypedArrayConstructor,
                                exportTypedArrayMethod: exportTypedArrayMethod,
                                exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
                                isView: isView,
                                isTypedArray: isTypedArray,
                                TypedArray: TypedArray,
                                TypedArrayPrototype: TypedArrayPrototype
                            };


                            /***/ }),

                        /***/ 3331:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_8934__) {

                            "use strict";

                            var global = __nested_webpack_require_8934__(7854);
                            var DESCRIPTORS = __nested_webpack_require_8934__(9781);
                            var NATIVE_ARRAY_BUFFER = __nested_webpack_require_8934__(4019);
                            var createNonEnumerableProperty = __nested_webpack_require_8934__(8880);
                            var redefineAll = __nested_webpack_require_8934__(2248);
                            var fails = __nested_webpack_require_8934__(7293);
                            var anInstance = __nested_webpack_require_8934__(5787);
                            var toInteger = __nested_webpack_require_8934__(9958);
                            var toLength = __nested_webpack_require_8934__(7466);
                            var toIndex = __nested_webpack_require_8934__(7067);
                            var IEEE754 = __nested_webpack_require_8934__(1179);
                            var getPrototypeOf = __nested_webpack_require_8934__(9518);
                            var setPrototypeOf = __nested_webpack_require_8934__(7674);
                            var getOwnPropertyNames = __nested_webpack_require_8934__(8006).f;
                            var defineProperty = __nested_webpack_require_8934__(3070).f;
                            var arrayFill = __nested_webpack_require_8934__(1285);
                            var setToStringTag = __nested_webpack_require_8934__(8003);
                            var InternalStateModule = __nested_webpack_require_8934__(9909);

                            var getInternalState = InternalStateModule.get;
                            var setInternalState = InternalStateModule.set;
                            var ARRAY_BUFFER = 'ArrayBuffer';
                            var DATA_VIEW = 'DataView';
                            var PROTOTYPE = 'prototype';
                            var WRONG_LENGTH = 'Wrong length';
                            var WRONG_INDEX = 'Wrong index';
                            var NativeArrayBuffer = global[ARRAY_BUFFER];
                            var $ArrayBuffer = NativeArrayBuffer;
                            var $DataView = global[DATA_VIEW];
                            var $DataViewPrototype = $DataView && $DataView[PROTOTYPE];
                            var ObjectPrototype = Object.prototype;
                            var RangeError = global.RangeError;

                            var packIEEE754 = IEEE754.pack;
                            var unpackIEEE754 = IEEE754.unpack;

                            var packInt8 = function (number) {
                                return [number & 0xFF];
                            };

                            var packInt16 = function (number) {
                                return [number & 0xFF, number >> 8 & 0xFF];
                            };

                            var packInt32 = function (number) {
                                return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
                            };

                            var unpackInt32 = function (buffer) {
                                return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
                            };

                            var packFloat32 = function (number) {
                                return packIEEE754(number, 23, 4);
                            };

                            var packFloat64 = function (number) {
                                return packIEEE754(number, 52, 8);
                            };

                            var addGetter = function (Constructor, key) {
                                defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });
                            };

                            var get = function (view, count, index, isLittleEndian) {
                                var intIndex = toIndex(index);
                                var store = getInternalState(view);
                                if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
                                var bytes = getInternalState(store.buffer).bytes;
                                var start = intIndex + store.byteOffset;
                                var pack = bytes.slice(start, start + count);
                                return isLittleEndian ? pack : pack.reverse();
                            };

                            var set = function (view, count, index, conversion, value, isLittleEndian) {
                                var intIndex = toIndex(index);
                                var store = getInternalState(view);
                                if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
                                var bytes = getInternalState(store.buffer).bytes;
                                var start = intIndex + store.byteOffset;
                                var pack = conversion(+value);
                                for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
                            };

                            if (!NATIVE_ARRAY_BUFFER) {
                                $ArrayBuffer = function ArrayBuffer(length) {
                                    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
                                    var byteLength = toIndex(length);
                                    setInternalState(this, {
                                        bytes: arrayFill.call(new Array(byteLength), 0),
                                        byteLength: byteLength
                                    });
                                    if (!DESCRIPTORS) this.byteLength = byteLength;
                                };

                                $DataView = function DataView(buffer, byteOffset, byteLength) {
                                    anInstance(this, $DataView, DATA_VIEW);
                                    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
                                    var bufferLength = getInternalState(buffer).byteLength;
                                    var offset = toInteger(byteOffset);
                                    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
                                    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
                                    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
                                    setInternalState(this, {
                                        buffer: buffer,
                                        byteLength: byteLength,
                                        byteOffset: offset
                                    });
                                    if (!DESCRIPTORS) {
                                        this.buffer = buffer;
                                        this.byteLength = byteLength;
                                        this.byteOffset = offset;
                                    }
                                };

                                if (DESCRIPTORS) {
                                    addGetter($ArrayBuffer, 'byteLength');
                                    addGetter($DataView, 'buffer');
                                    addGetter($DataView, 'byteLength');
                                    addGetter($DataView, 'byteOffset');
                                }

                                redefineAll($DataView[PROTOTYPE], {
                                    getInt8: function getInt8(byteOffset) {
                                        return get(this, 1, byteOffset)[0] << 24 >> 24;
                                    },
                                    getUint8: function getUint8(byteOffset) {
                                        return get(this, 1, byteOffset)[0];
                                    },
                                    getInt16: function getInt16(byteOffset /* , littleEndian */) {
                                        var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
                                        return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
                                    },
                                    getUint16: function getUint16(byteOffset /* , littleEndian */) {
                                        var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
                                        return bytes[1] << 8 | bytes[0];
                                    },
                                    getInt32: function getInt32(byteOffset /* , littleEndian */) {
                                        return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
                                    },
                                    getUint32: function getUint32(byteOffset /* , littleEndian */) {
                                        return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
                                    },
                                    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
                                        return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
                                    },
                                    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
                                        return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
                                    },
                                    setInt8: function setInt8(byteOffset, value) {
                                        set(this, 1, byteOffset, packInt8, value);
                                    },
                                    setUint8: function setUint8(byteOffset, value) {
                                        set(this, 1, byteOffset, packInt8, value);
                                    },
                                    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
                                        set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
                                    },
                                    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
                                        set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
                                    },
                                    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
                                        set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
                                    },
                                    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
                                        set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
                                    },
                                    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
                                        set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
                                    },
                                    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
                                        set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
                                    }
                                });
                            } else {
                                /* eslint-disable no-new -- required for testing */
                                if (!fails(function () {
                                    NativeArrayBuffer(1);
                                }) || !fails(function () {
                                    new NativeArrayBuffer(-1);
                                }) || fails(function () {
                                    new NativeArrayBuffer();
                                    new NativeArrayBuffer(1.5);
                                    new NativeArrayBuffer(NaN);
                                    return NativeArrayBuffer.name != ARRAY_BUFFER;
                                })) {
                                    /* eslint-enable no-new -- required for testing */
                                    $ArrayBuffer = function ArrayBuffer(length) {
                                        anInstance(this, $ArrayBuffer);
                                        return new NativeArrayBuffer(toIndex(length));
                                    };
                                    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];
                                    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
                                        if (!((key = keys[j++]) in $ArrayBuffer)) {
                                            createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
                                        }
                                    }
                                    ArrayBufferPrototype.constructor = $ArrayBuffer;
                                }

                                // WebKit bug - the same parent prototype for typed arrays and data view
                                if (setPrototypeOf && getPrototypeOf($DataViewPrototype) !== ObjectPrototype) {
                                    setPrototypeOf($DataViewPrototype, ObjectPrototype);
                                }

                                // iOS Safari 7.x bug
                                var testView = new $DataView(new $ArrayBuffer(2));
                                var nativeSetInt8 = $DataViewPrototype.setInt8;
                                testView.setInt8(0, 2147483648);
                                testView.setInt8(1, 2147483649);
                                if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {
                                    setInt8: function setInt8(byteOffset, value) {
                                        nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
                                    },
                                    setUint8: function setUint8(byteOffset, value) {
                                        nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
                                    }
                                }, { unsafe: true });
                            }

                            setToStringTag($ArrayBuffer, ARRAY_BUFFER);
                            setToStringTag($DataView, DATA_VIEW);

                            module.exports = {
                                ArrayBuffer: $ArrayBuffer,
                                DataView: $DataView
                            };


                            /***/ }),

                        /***/ 1048:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_17881__) {

                            "use strict";

                            var toObject = __nested_webpack_require_17881__(7908);
                            var toAbsoluteIndex = __nested_webpack_require_17881__(1400);
                            var toLength = __nested_webpack_require_17881__(7466);

                            var min = Math.min;

// `Array.prototype.copyWithin` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
                            module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
                                var O = toObject(this);
                                var len = toLength(O.length);
                                var to = toAbsoluteIndex(target, len);
                                var from = toAbsoluteIndex(start, len);
                                var end = arguments.length > 2 ? arguments[2] : undefined;
                                var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
                                var inc = 1;
                                if (from < to && to < from + count) {
                                    inc = -1;
                                    from += count - 1;
                                    to += count - 1;
                                }
                                while (count-- > 0) {
                                    if (from in O) O[to] = O[from];
                                    else delete O[to];
                                    to += inc;
                                    from += inc;
                                } return O;
                            };


                            /***/ }),

                        /***/ 1285:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_18911__) {

                            "use strict";

                            var toObject = __nested_webpack_require_18911__(7908);
                            var toAbsoluteIndex = __nested_webpack_require_18911__(1400);
                            var toLength = __nested_webpack_require_18911__(7466);

// `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill
                            module.exports = function fill(value /* , start = 0, end = @length */) {
                                var O = toObject(this);
                                var length = toLength(O.length);
                                var argumentsLength = arguments.length;
                                var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
                                var end = argumentsLength > 2 ? arguments[2] : undefined;
                                var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
                                while (endPos > index) O[index++] = value;
                                return O;
                            };


                            /***/ }),

                        /***/ 8533:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_19717__) {

                            "use strict";

                            var $forEach = __nested_webpack_require_19717__(2092).forEach;
                            var arrayMethodIsStrict = __nested_webpack_require_19717__(9341);

                            var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
                            module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
                                return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                            } : [].forEach;


                            /***/ }),

                        /***/ 8457:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_20278__) {

                            "use strict";

                            var bind = __nested_webpack_require_20278__(9974);
                            var toObject = __nested_webpack_require_20278__(7908);
                            var callWithSafeIterationClosing = __nested_webpack_require_20278__(3411);
                            var isArrayIteratorMethod = __nested_webpack_require_20278__(7659);
                            var toLength = __nested_webpack_require_20278__(7466);
                            var createProperty = __nested_webpack_require_20278__(6135);
                            var getIteratorMethod = __nested_webpack_require_20278__(1246);

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
                            module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
                                var O = toObject(arrayLike);
                                var C = typeof this == 'function' ? this : Array;
                                var argumentsLength = arguments.length;
                                var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
                                var mapping = mapfn !== undefined;
                                var iteratorMethod = getIteratorMethod(O);
                                var index = 0;
                                var length, result, step, iterator, next, value;
                                if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
                                // if the target is not iterable or it's an array with the default iterator - use a simple case
                                if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
                                    iterator = iteratorMethod.call(O);
                                    next = iterator.next;
                                    result = new C();
                                    for (;!(step = next.call(iterator)).done; index++) {
                                        value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
                                        createProperty(result, index, value);
                                    }
                                } else {
                                    length = toLength(O.length);
                                    result = new C(length);
                                    for (;length > index; index++) {
                                        value = mapping ? mapfn(O[index], index) : O[index];
                                        createProperty(result, index, value);
                                    }
                                }
                                result.length = index;
                                return result;
                            };


                            /***/ }),

                        /***/ 1318:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_22092__) {

                            var toIndexedObject = __nested_webpack_require_22092__(5656);
                            var toLength = __nested_webpack_require_22092__(7466);
                            var toAbsoluteIndex = __nested_webpack_require_22092__(1400);

// `Array.prototype.{ indexOf, includes }` methods implementation
                            var createMethod = function (IS_INCLUDES) {
                                return function ($this, el, fromIndex) {
                                    var O = toIndexedObject($this);
                                    var length = toLength(O.length);
                                    var index = toAbsoluteIndex(fromIndex, length);
                                    var value;
                                    // Array#includes uses SameValueZero equality algorithm
                                    // eslint-disable-next-line no-self-compare -- NaN check
                                    if (IS_INCLUDES && el != el) while (length > index) {
                                        value = O[index++];
                                        // eslint-disable-next-line no-self-compare -- NaN check
                                        if (value != value) return true;
                                        // Array#indexOf ignores holes, Array#includes - not
                                    } else for (;length > index; index++) {
                                        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
                                    } return !IS_INCLUDES && -1;
                                };
                            };

                            module.exports = {
                                // `Array.prototype.includes` method
                                // https://tc39.es/ecma262/#sec-array.prototype.includes
                                includes: createMethod(true),
                                // `Array.prototype.indexOf` method
                                // https://tc39.es/ecma262/#sec-array.prototype.indexof
                                indexOf: createMethod(false)
                            };


                            /***/ }),

                        /***/ 2092:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_23446__) {

                            var bind = __nested_webpack_require_23446__(9974);
                            var IndexedObject = __nested_webpack_require_23446__(8361);
                            var toObject = __nested_webpack_require_23446__(7908);
                            var toLength = __nested_webpack_require_23446__(7466);
                            var arraySpeciesCreate = __nested_webpack_require_23446__(5417);

                            var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
                            var createMethod = function (TYPE) {
                                var IS_MAP = TYPE == 1;
                                var IS_FILTER = TYPE == 2;
                                var IS_SOME = TYPE == 3;
                                var IS_EVERY = TYPE == 4;
                                var IS_FIND_INDEX = TYPE == 6;
                                var IS_FILTER_OUT = TYPE == 7;
                                var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
                                return function ($this, callbackfn, that, specificCreate) {
                                    var O = toObject($this);
                                    var self = IndexedObject(O);
                                    var boundFunction = bind(callbackfn, that, 3);
                                    var length = toLength(self.length);
                                    var index = 0;
                                    var create = specificCreate || arraySpeciesCreate;
                                    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
                                    var value, result;
                                    for (;length > index; index++) if (NO_HOLES || index in self) {
                                        value = self[index];
                                        result = boundFunction(value, index, O);
                                        if (TYPE) {
                                            if (IS_MAP) target[index] = result; // map
                                            else if (result) switch (TYPE) {
                                                case 3: return true;              // some
                                                case 5: return value;             // find
                                                case 6: return index;             // findIndex
                                                case 2: push.call(target, value); // filter
                                            } else switch (TYPE) {
                                                case 4: return false;             // every
                                                case 7: push.call(target, value); // filterOut
                                            }
                                        }
                                    }
                                    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
                                };
                            };

                            module.exports = {
                                // `Array.prototype.forEach` method
                                // https://tc39.es/ecma262/#sec-array.prototype.foreach
                                forEach: createMethod(0),
                                // `Array.prototype.map` method
                                // https://tc39.es/ecma262/#sec-array.prototype.map
                                map: createMethod(1),
                                // `Array.prototype.filter` method
                                // https://tc39.es/ecma262/#sec-array.prototype.filter
                                filter: createMethod(2),
                                // `Array.prototype.some` method
                                // https://tc39.es/ecma262/#sec-array.prototype.some
                                some: createMethod(3),
                                // `Array.prototype.every` method
                                // https://tc39.es/ecma262/#sec-array.prototype.every
                                every: createMethod(4),
                                // `Array.prototype.find` method
                                // https://tc39.es/ecma262/#sec-array.prototype.find
                                find: createMethod(5),
                                // `Array.prototype.findIndex` method
                                // https://tc39.es/ecma262/#sec-array.prototype.findIndex
                                findIndex: createMethod(6),
                                // `Array.prototype.filterOut` method
                                // https://github.com/tc39/proposal-array-filtering
                                filterOut: createMethod(7)
                            };


                            /***/ }),

                        /***/ 6583:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_26271__) {

                            "use strict";

                            var toIndexedObject = __nested_webpack_require_26271__(5656);
                            var toInteger = __nested_webpack_require_26271__(9958);
                            var toLength = __nested_webpack_require_26271__(7466);
                            var arrayMethodIsStrict = __nested_webpack_require_26271__(9341);

                            var min = Math.min;
                            var nativeLastIndexOf = [].lastIndexOf;
                            var NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
                            var STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');
                            var FORCED = NEGATIVE_ZERO || !STRICT_METHOD;

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
                            module.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
                                // convert -0 to +0
                                if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;
                                var O = toIndexedObject(this);
                                var length = toLength(O.length);
                                var index = length - 1;
                                if (arguments.length > 1) index = min(index, toInteger(arguments[1]));
                                if (index < 0) index = length + index;
                                for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
                                return -1;
                            } : nativeLastIndexOf;


                            /***/ }),

                        /***/ 1194:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_27452__) {

                            var fails = __nested_webpack_require_27452__(7293);
                            var wellKnownSymbol = __nested_webpack_require_27452__(5112);
                            var V8_VERSION = __nested_webpack_require_27452__(7392);

                            var SPECIES = wellKnownSymbol('species');

                            module.exports = function (METHOD_NAME) {
                                // We can't use this feature detection in V8 since it causes
                                // deoptimization and serious performance degradation
                                // https://github.com/zloirock/core-js/issues/677
                                return V8_VERSION >= 51 || !fails(function () {
                                    var array = [];
                                    var constructor = array.constructor = {};
                                    constructor[SPECIES] = function () {
                                        return { foo: 1 };
                                    };
                                    return array[METHOD_NAME](Boolean).foo !== 1;
                                });
                            };


                            /***/ }),

                        /***/ 9341:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_28188__) {

                            "use strict";

                            var fails = __nested_webpack_require_28188__(7293);

                            module.exports = function (METHOD_NAME, argument) {
                                var method = [][METHOD_NAME];
                                return !!method && fails(function () {
                                    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
                                    method.call(null, argument || function () { throw 1; }, 1);
                                });
                            };


                            /***/ }),

                        /***/ 3671:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_28629__) {

                            var aFunction = __nested_webpack_require_28629__(3099);
                            var toObject = __nested_webpack_require_28629__(7908);
                            var IndexedObject = __nested_webpack_require_28629__(8361);
                            var toLength = __nested_webpack_require_28629__(7466);

// `Array.prototype.{ reduce, reduceRight }` methods implementation
                            var createMethod = function (IS_RIGHT) {
                                return function (that, callbackfn, argumentsLength, memo) {
                                    aFunction(callbackfn);
                                    var O = toObject(that);
                                    var self = IndexedObject(O);
                                    var length = toLength(O.length);
                                    var index = IS_RIGHT ? length - 1 : 0;
                                    var i = IS_RIGHT ? -1 : 1;
                                    if (argumentsLength < 2) while (true) {
                                        if (index in self) {
                                            memo = self[index];
                                            index += i;
                                            break;
                                        }
                                        index += i;
                                        if (IS_RIGHT ? index < 0 : length <= index) {
                                            throw TypeError('Reduce of empty array with no initial value');
                                        }
                                    }
                                    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
                                        memo = callbackfn(memo, self[index], index, O);
                                    }
                                    return memo;
                                };
                            };

                            module.exports = {
                                // `Array.prototype.reduce` method
                                // https://tc39.es/ecma262/#sec-array.prototype.reduce
                                left: createMethod(false),
                                // `Array.prototype.reduceRight` method
                                // https://tc39.es/ecma262/#sec-array.prototype.reduceright
                                right: createMethod(true)
                            };


                            /***/ }),

                        /***/ 5417:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_30017__) {

                            var isObject = __nested_webpack_require_30017__(111);
                            var isArray = __nested_webpack_require_30017__(3157);
                            var wellKnownSymbol = __nested_webpack_require_30017__(5112);

                            var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
                            module.exports = function (originalArray, length) {
                                var C;
                                if (isArray(originalArray)) {
                                    C = originalArray.constructor;
                                    // cross-realm fallback
                                    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
                                    else if (isObject(C)) {
                                        C = C[SPECIES];
                                        if (C === null) C = undefined;
                                    }
                                } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
                            };


                            /***/ }),

                        /***/ 3411:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_30798__) {

                            var anObject = __nested_webpack_require_30798__(9670);
                            var iteratorClose = __nested_webpack_require_30798__(9212);

// call something on iterator step with safe closing on error
                            module.exports = function (iterator, fn, value, ENTRIES) {
                                try {
                                    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
                                    // 7.4.6 IteratorClose(iterator, completion)
                                } catch (error) {
                                    iteratorClose(iterator);
                                    throw error;
                                }
                            };


                            /***/ }),

                        /***/ 7072:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_31303__) {

                            var wellKnownSymbol = __nested_webpack_require_31303__(5112);

                            var ITERATOR = wellKnownSymbol('iterator');
                            var SAFE_CLOSING = false;

                            try {
                                var called = 0;
                                var iteratorWithReturn = {
                                    next: function () {
                                        return { done: !!called++ };
                                    },
                                    'return': function () {
                                        SAFE_CLOSING = true;
                                    }
                                };
                                iteratorWithReturn[ITERATOR] = function () {
                                    return this;
                                };
                                // eslint-disable-next-line no-throw-literal -- required for testing
                                Array.from(iteratorWithReturn, function () { throw 2; });
                            } catch (error) { /* empty */ }

                            module.exports = function (exec, SKIP_CLOSING) {
                                if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
                                var ITERATION_SUPPORT = false;
                                try {
                                    var object = {};
                                    object[ITERATOR] = function () {
                                        return {
                                            next: function () {
                                                return { done: ITERATION_SUPPORT = true };
                                            }
                                        };
                                    };
                                    exec(object);
                                } catch (error) { /* empty */ }
                                return ITERATION_SUPPORT;
                            };


                            /***/ }),

                        /***/ 4326:
                        /***/ (function(module) {

                            var toString = {}.toString;

                            module.exports = function (it) {
                                return toString.call(it).slice(8, -1);
                            };


                            /***/ }),

                        /***/ 648:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_32503__) {

                            var TO_STRING_TAG_SUPPORT = __nested_webpack_require_32503__(1694);
                            var classofRaw = __nested_webpack_require_32503__(4326);
                            var wellKnownSymbol = __nested_webpack_require_32503__(5112);

                            var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
                            var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
                            var tryGet = function (it, key) {
                                try {
                                    return it[key];
                                } catch (error) { /* empty */ }
                            };

// getting tag from ES6+ `Object.prototype.toString`
                            module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
                                var O, tag, result;
                                return it === undefined ? 'Undefined' : it === null ? 'Null'
                                    // @@toStringTag case
                                    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
                                        // builtinTag case
                                        : CORRECT_ARGUMENTS ? classofRaw(O)
                                            // ES3 arguments fallback
                                            : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
                            };


                            /***/ }),

                        /***/ 9920:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_33565__) {

                            var has = __nested_webpack_require_33565__(6656);
                            var ownKeys = __nested_webpack_require_33565__(3887);
                            var getOwnPropertyDescriptorModule = __nested_webpack_require_33565__(1236);
                            var definePropertyModule = __nested_webpack_require_33565__(3070);

                            module.exports = function (target, source) {
                                var keys = ownKeys(source);
                                var defineProperty = definePropertyModule.f;
                                var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                                for (var i = 0; i < keys.length; i++) {
                                    var key = keys[i];
                                    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
                                }
                            };


                            /***/ }),

                        /***/ 8544:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_34217__) {

                            var fails = __nested_webpack_require_34217__(7293);

                            module.exports = !fails(function () {
                                function F() { /* empty */ }
                                F.prototype.constructor = null;
                                return Object.getPrototypeOf(new F()) !== F.prototype;
                            });


                            /***/ }),

                        /***/ 4994:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_34520__) {

                            "use strict";

                            var IteratorPrototype = __nested_webpack_require_34520__(3383).IteratorPrototype;
                            var create = __nested_webpack_require_34520__(30);
                            var createPropertyDescriptor = __nested_webpack_require_34520__(9114);
                            var setToStringTag = __nested_webpack_require_34520__(8003);
                            var Iterators = __nested_webpack_require_34520__(7497);

                            var returnThis = function () { return this; };

                            module.exports = function (IteratorConstructor, NAME, next) {
                                var TO_STRING_TAG = NAME + ' Iterator';
                                IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
                                setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
                                Iterators[TO_STRING_TAG] = returnThis;
                                return IteratorConstructor;
                            };


                            /***/ }),

                        /***/ 8880:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_35290__) {

                            var DESCRIPTORS = __nested_webpack_require_35290__(9781);
                            var definePropertyModule = __nested_webpack_require_35290__(3070);
                            var createPropertyDescriptor = __nested_webpack_require_35290__(9114);

                            module.exports = DESCRIPTORS ? function (object, key, value) {
                                return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
                            } : function (object, key, value) {
                                object[key] = value;
                                return object;
                            };


                            /***/ }),

                        /***/ 9114:
                        /***/ (function(module) {

                            module.exports = function (bitmap, value) {
                                return {
                                    enumerable: !(bitmap & 1),
                                    configurable: !(bitmap & 2),
                                    writable: !(bitmap & 4),
                                    value: value
                                };
                            };


                            /***/ }),

                        /***/ 6135:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_35996__) {

                            "use strict";

                            var toPrimitive = __nested_webpack_require_35996__(7593);
                            var definePropertyModule = __nested_webpack_require_35996__(3070);
                            var createPropertyDescriptor = __nested_webpack_require_35996__(9114);

                            module.exports = function (object, key, value) {
                                var propertyKey = toPrimitive(key);
                                if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
                                else object[propertyKey] = value;
                            };


                            /***/ }),

                        /***/ 654:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_36503__) {

                            "use strict";

                            var $ = __nested_webpack_require_36503__(2109);
                            var createIteratorConstructor = __nested_webpack_require_36503__(4994);
                            var getPrototypeOf = __nested_webpack_require_36503__(9518);
                            var setPrototypeOf = __nested_webpack_require_36503__(7674);
                            var setToStringTag = __nested_webpack_require_36503__(8003);
                            var createNonEnumerableProperty = __nested_webpack_require_36503__(8880);
                            var redefine = __nested_webpack_require_36503__(1320);
                            var wellKnownSymbol = __nested_webpack_require_36503__(5112);
                            var IS_PURE = __nested_webpack_require_36503__(1913);
                            var Iterators = __nested_webpack_require_36503__(7497);
                            var IteratorsCore = __nested_webpack_require_36503__(3383);

                            var IteratorPrototype = IteratorsCore.IteratorPrototype;
                            var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
                            var ITERATOR = wellKnownSymbol('iterator');
                            var KEYS = 'keys';
                            var VALUES = 'values';
                            var ENTRIES = 'entries';

                            var returnThis = function () { return this; };

                            module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
                                createIteratorConstructor(IteratorConstructor, NAME, next);

                                var getIterationMethod = function (KIND) {
                                    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
                                    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
                                    switch (KIND) {
                                        case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
                                        case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
                                        case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
                                    } return function () { return new IteratorConstructor(this); };
                                };

                                var TO_STRING_TAG = NAME + ' Iterator';
                                var INCORRECT_VALUES_NAME = false;
                                var IterablePrototype = Iterable.prototype;
                                var nativeIterator = IterablePrototype[ITERATOR]
                                    || IterablePrototype['@@iterator']
                                    || DEFAULT && IterablePrototype[DEFAULT];
                                var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
                                var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
                                var CurrentIteratorPrototype, methods, KEY;

                                // fix native
                                if (anyNativeIterator) {
                                    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
                                    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
                                        if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
                                            if (setPrototypeOf) {
                                                setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                                            } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
                                                createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
                                            }
                                        }
                                        // Set @@toStringTag to native iterators
                                        setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
                                        if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
                                    }
                                }

                                // fix Array#{values, @@iterator}.name in V8 / FF
                                if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
                                    INCORRECT_VALUES_NAME = true;
                                    defaultIterator = function values() { return nativeIterator.call(this); };
                                }

                                // define iterator
                                if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
                                    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
                                }
                                Iterators[NAME] = defaultIterator;

                                // export additional methods
                                if (DEFAULT) {
                                    methods = {
                                        values: getIterationMethod(VALUES),
                                        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
                                        entries: getIterationMethod(ENTRIES)
                                    };
                                    if (FORCED) for (KEY in methods) {
                                        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                                            redefine(IterablePrototype, KEY, methods[KEY]);
                                        }
                                    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
                                }

                                return methods;
                            };


                            /***/ }),

                        /***/ 9781:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_40475__) {

                            var fails = __nested_webpack_require_40475__(7293);

// Detect IE8's incomplete defineProperty implementation
                            module.exports = !fails(function () {
                                return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
                            });


                            /***/ }),

                        /***/ 317:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_40795__) {

                            var global = __nested_webpack_require_40795__(7854);
                            var isObject = __nested_webpack_require_40795__(111);

                            var document = global.document;
// typeof document.createElement is 'object' in old IE
                            var EXISTS = isObject(document) && isObject(document.createElement);

                            module.exports = function (it) {
                                return EXISTS ? document.createElement(it) : {};
                            };


                            /***/ }),

                        /***/ 8324:
                        /***/ (function(module) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
                            module.exports = {
                                CSSRuleList: 0,
                                CSSStyleDeclaration: 0,
                                CSSValueList: 0,
                                ClientRectList: 0,
                                DOMRectList: 0,
                                DOMStringList: 0,
                                DOMTokenList: 1,
                                DataTransferItemList: 0,
                                FileList: 0,
                                HTMLAllCollection: 0,
                                HTMLCollection: 0,
                                HTMLFormElement: 0,
                                HTMLSelectElement: 0,
                                MediaList: 0,
                                MimeTypeArray: 0,
                                NamedNodeMap: 0,
                                NodeList: 1,
                                PaintRequestList: 0,
                                Plugin: 0,
                                PluginArray: 0,
                                SVGLengthList: 0,
                                SVGNumberList: 0,
                                SVGPathSegList: 0,
                                SVGPointList: 0,
                                SVGStringList: 0,
                                SVGTransformList: 0,
                                SourceBufferList: 0,
                                StyleSheetList: 0,
                                TextTrackCueList: 0,
                                TextTrackList: 0,
                                TouchList: 0
                            };


                            /***/ }),

                        /***/ 8113:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_42025__) {

                            var getBuiltIn = __nested_webpack_require_42025__(5005);

                            module.exports = getBuiltIn('navigator', 'userAgent') || '';


                            /***/ }),

                        /***/ 7392:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_42230__) {

                            var global = __nested_webpack_require_42230__(7854);
                            var userAgent = __nested_webpack_require_42230__(8113);

                            var process = global.process;
                            var versions = process && process.versions;
                            var v8 = versions && versions.v8;
                            var match, version;

                            if (v8) {
                                match = v8.split('.');
                                version = match[0] + match[1];
                            } else if (userAgent) {
                                match = userAgent.match(/Edge\/(\d+)/);
                                if (!match || match[1] >= 74) {
                                    match = userAgent.match(/Chrome\/(\d+)/);
                                    if (match) version = match[1];
                                }
                            }

                            module.exports = version && +version;


                            /***/ }),

                        /***/ 748:
                        /***/ (function(module) {

// IE8- don't enum bug keys
                            module.exports = [
                                'constructor',
                                'hasOwnProperty',
                                'isPrototypeOf',
                                'propertyIsEnumerable',
                                'toLocaleString',
                                'toString',
                                'valueOf'
                            ];


                            /***/ }),

                        /***/ 2109:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_43065__) {

                            var global = __nested_webpack_require_43065__(7854);
                            var getOwnPropertyDescriptor = __nested_webpack_require_43065__(1236).f;
                            var createNonEnumerableProperty = __nested_webpack_require_43065__(8880);
                            var redefine = __nested_webpack_require_43065__(1320);
                            var setGlobal = __nested_webpack_require_43065__(3505);
                            var copyConstructorProperties = __nested_webpack_require_43065__(9920);
                            var isForced = __nested_webpack_require_43065__(4705);

                            /*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
                            module.exports = function (options, source) {
                                var TARGET = options.target;
                                var GLOBAL = options.global;
                                var STATIC = options.stat;
                                var FORCED, target, key, targetProperty, sourceProperty, descriptor;
                                if (GLOBAL) {
                                    target = global;
                                } else if (STATIC) {
                                    target = global[TARGET] || setGlobal(TARGET, {});
                                } else {
                                    target = (global[TARGET] || {}).prototype;
                                }
                                if (target) for (key in source) {
                                    sourceProperty = source[key];
                                    if (options.noTargetGet) {
                                        descriptor = getOwnPropertyDescriptor(target, key);
                                        targetProperty = descriptor && descriptor.value;
                                    } else targetProperty = target[key];
                                    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
                                    // contained in target
                                    if (!FORCED && targetProperty !== undefined) {
                                        if (typeof sourceProperty === typeof targetProperty) continue;
                                        copyConstructorProperties(sourceProperty, targetProperty);
                                    }
                                    // add a flag to not completely full polyfills
                                    if (options.sham || (targetProperty && targetProperty.sham)) {
                                        createNonEnumerableProperty(sourceProperty, 'sham', true);
                                    }
                                    // extend global
                                    redefine(target, key, sourceProperty, options);
                                }
                            };


                            /***/ }),

                        /***/ 7293:
                        /***/ (function(module) {

                            module.exports = function (exec) {
                                try {
                                    return !!exec();
                                } catch (error) {
                                    return true;
                                }
                            };


                            /***/ }),

                        /***/ 7007:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_45726__) {

                            "use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
                            __nested_webpack_require_45726__(4916);
                            var redefine = __nested_webpack_require_45726__(1320);
                            var fails = __nested_webpack_require_45726__(7293);
                            var wellKnownSymbol = __nested_webpack_require_45726__(5112);
                            var regexpExec = __nested_webpack_require_45726__(2261);
                            var createNonEnumerableProperty = __nested_webpack_require_45726__(8880);

                            var SPECIES = wellKnownSymbol('species');

                            var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
                                // #replace needs built-in support for named groups.
                                // #match works fine because it just return the exec results, even if it has
                                // a "grops" property.
                                var re = /./;
                                re.exec = function () {
                                    var result = [];
                                    result.groups = { a: '7' };
                                    return result;
                                };
                                return ''.replace(re, '$<a>') !== '7';
                            });

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
                            var REPLACE_KEEPS_$0 = (function () {
                                return 'a'.replace(/./, '$0') === '$0';
                            })();

                            var REPLACE = wellKnownSymbol('replace');
// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
                            var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
                                if (/./[REPLACE]) {
                                    return /./[REPLACE]('a', '$0') === '';
                                }
                                return false;
                            })();

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
                            var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
                                // eslint-disable-next-line regexp/no-empty-group -- required for testing
                                var re = /(?:)/;
                                var originalExec = re.exec;
                                re.exec = function () { return originalExec.apply(this, arguments); };
                                var result = 'ab'.split(re);
                                return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
                            });

                            module.exports = function (KEY, length, exec, sham) {
                                var SYMBOL = wellKnownSymbol(KEY);

                                var DELEGATES_TO_SYMBOL = !fails(function () {
                                    // String methods call symbol-named RegEp methods
                                    var O = {};
                                    O[SYMBOL] = function () { return 7; };
                                    return ''[KEY](O) != 7;
                                });

                                var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
                                    // Symbol-named RegExp methods call .exec
                                    var execCalled = false;
                                    var re = /a/;

                                    if (KEY === 'split') {
                                        // We can't use real regex here since it causes deoptimization
                                        // and serious performance degradation in V8
                                        // https://github.com/zloirock/core-js/issues/306
                                        re = {};
                                        // RegExp[@@split] doesn't call the regex's exec method, but first creates
                                        // a new one. We need to return the patched regex when creating the new one.
                                        re.constructor = {};
                                        re.constructor[SPECIES] = function () { return re; };
                                        re.flags = '';
                                        re[SYMBOL] = /./[SYMBOL];
                                    }

                                    re.exec = function () { execCalled = true; return null; };

                                    re[SYMBOL]('');
                                    return !execCalled;
                                });

                                if (
                                    !DELEGATES_TO_SYMBOL ||
                                    !DELEGATES_TO_EXEC ||
                                    (KEY === 'replace' && !(
                                        REPLACE_SUPPORTS_NAMED_GROUPS &&
                                        REPLACE_KEEPS_$0 &&
                                        !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
                                    )) ||
                                    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
                                ) {
                                    var nativeRegExpMethod = /./[SYMBOL];
                                    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
                                        if (regexp.exec === regexpExec) {
                                            if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                                                // The native String method already delegates to @@method (this
                                                // polyfilled function), leasing to infinite recursion.
                                                // We avoid it by directly calling the native @@method method.
                                                return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
                                            }
                                            return { done: true, value: nativeMethod.call(str, regexp, arg2) };
                                        }
                                        return { done: false };
                                    }, {
                                        REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
                                        REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
                                    });
                                    var stringMethod = methods[0];
                                    var regexMethod = methods[1];

                                    redefine(String.prototype, KEY, stringMethod);
                                    redefine(RegExp.prototype, SYMBOL, length == 2
                                        // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                                        // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                                        ? function (string, arg) { return regexMethod.call(string, this, arg); }
                                        // 21.2.5.6 RegExp.prototype[@@match](string)
                                        // 21.2.5.9 RegExp.prototype[@@search](string)
                                        : function (string) { return regexMethod.call(string, this); }
                                    );
                                }

                                if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
                            };


                            /***/ }),

                        /***/ 9974:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_50488__) {

                            var aFunction = __nested_webpack_require_50488__(3099);

// optional / simple context binding
                            module.exports = function (fn, that, length) {
                                aFunction(fn);
                                if (that === undefined) return fn;
                                switch (length) {
                                    case 0: return function () {
                                        return fn.call(that);
                                    };
                                    case 1: return function (a) {
                                        return fn.call(that, a);
                                    };
                                    case 2: return function (a, b) {
                                        return fn.call(that, a, b);
                                    };
                                    case 3: return function (a, b, c) {
                                        return fn.call(that, a, b, c);
                                    };
                                }
                                return function (/* ...args */) {
                                    return fn.apply(that, arguments);
                                };
                            };


                            /***/ }),

                        /***/ 5005:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_51177__) {

                            var path = __nested_webpack_require_51177__(857);
                            var global = __nested_webpack_require_51177__(7854);

                            var aFunction = function (variable) {
                                return typeof variable == 'function' ? variable : undefined;
                            };

                            module.exports = function (namespace, method) {
                                return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
                                    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
                            };


                            /***/ }),

                        /***/ 1246:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_51701__) {

                            var classof = __nested_webpack_require_51701__(648);
                            var Iterators = __nested_webpack_require_51701__(7497);
                            var wellKnownSymbol = __nested_webpack_require_51701__(5112);

                            var ITERATOR = wellKnownSymbol('iterator');

                            module.exports = function (it) {
                                if (it != undefined) return it[ITERATOR]
                                    || it['@@iterator']
                                    || Iterators[classof(it)];
                            };


                            /***/ }),

                        /***/ 8554:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_52112__) {

                            var anObject = __nested_webpack_require_52112__(9670);
                            var getIteratorMethod = __nested_webpack_require_52112__(1246);

                            module.exports = function (it) {
                                var iteratorMethod = getIteratorMethod(it);
                                if (typeof iteratorMethod != 'function') {
                                    throw TypeError(String(it) + ' is not iterable');
                                } return anObject(iteratorMethod.call(it));
                            };


                            /***/ }),

                        /***/ 647:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_52531__) {

                            var toObject = __nested_webpack_require_52531__(7908);

                            var floor = Math.floor;
                            var replace = ''.replace;
                            var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
                            var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

// https://tc39.es/ecma262/#sec-getsubstitution
                            module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
                                var tailPos = position + matched.length;
                                var m = captures.length;
                                var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
                                if (namedCaptures !== undefined) {
                                    namedCaptures = toObject(namedCaptures);
                                    symbols = SUBSTITUTION_SYMBOLS;
                                }
                                return replace.call(replacement, symbols, function (match, ch) {
                                    var capture;
                                    switch (ch.charAt(0)) {
                                        case '$': return '$';
                                        case '&': return matched;
                                        case '`': return str.slice(0, position);
                                        case "'": return str.slice(tailPos);
                                        case '<':
                                            capture = namedCaptures[ch.slice(1, -1)];
                                            break;
                                        default: // \d\d?
                                            var n = +ch;
                                            if (n === 0) return match;
                                            if (n > m) {
                                                var f = floor(n / 10);
                                                if (f === 0) return match;
                                                if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
                                                return match;
                                            }
                                            capture = captures[n - 1];
                                    }
                                    return capture === undefined ? '' : capture;
                                });
                            };


                            /***/ }),

                        /***/ 7854:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_53970__) {

                            var check = function (it) {
                                return it && it.Math == Math && it;
                            };

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
                            module.exports =
                                /* global globalThis -- safe */
                                check(typeof globalThis == 'object' && globalThis) ||
                                check(typeof window == 'object' && window) ||
                                check(typeof self == 'object' && self) ||
                                check(typeof __nested_webpack_require_53970__.g == 'object' && __nested_webpack_require_53970__.g) ||
                                // eslint-disable-next-line no-new-func -- fallback
                                (function () { return this; })() || Function('return this')();


                            /***/ }),

                        /***/ 6656:
                        /***/ (function(module) {

                            var hasOwnProperty = {}.hasOwnProperty;

                            module.exports = function (it, key) {
                                return hasOwnProperty.call(it, key);
                            };


                            /***/ }),

                        /***/ 3501:
                        /***/ (function(module) {

                            module.exports = {};


                            /***/ }),

                        /***/ 490:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_54852__) {

                            var getBuiltIn = __nested_webpack_require_54852__(5005);

                            module.exports = getBuiltIn('document', 'documentElement');


                            /***/ }),

                        /***/ 4664:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_55056__) {

                            var DESCRIPTORS = __nested_webpack_require_55056__(9781);
                            var fails = __nested_webpack_require_55056__(7293);
                            var createElement = __nested_webpack_require_55056__(317);

// Thank's IE8 for his funny defineProperty
                            module.exports = !DESCRIPTORS && !fails(function () {
                                return Object.defineProperty(createElement('div'), 'a', {
                                    get: function () { return 7; }
                                }).a != 7;
                            });


                            /***/ }),

                        /***/ 1179:
                        /***/ (function(module) {

// IEEE754 conversions based on https://github.com/feross/ieee754
                            var abs = Math.abs;
                            var pow = Math.pow;
                            var floor = Math.floor;
                            var log = Math.log;
                            var LN2 = Math.LN2;

                            var pack = function (number, mantissaLength, bytes) {
                                var buffer = new Array(bytes);
                                var exponentLength = bytes * 8 - mantissaLength - 1;
                                var eMax = (1 << exponentLength) - 1;
                                var eBias = eMax >> 1;
                                var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
                                var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
                                var index = 0;
                                var exponent, mantissa, c;
                                number = abs(number);
                                // eslint-disable-next-line no-self-compare -- NaN check
                                if (number != number || number === Infinity) {
                                    // eslint-disable-next-line no-self-compare -- NaN check
                                    mantissa = number != number ? 1 : 0;
                                    exponent = eMax;
                                } else {
                                    exponent = floor(log(number) / LN2);
                                    if (number * (c = pow(2, -exponent)) < 1) {
                                        exponent--;
                                        c *= 2;
                                    }
                                    if (exponent + eBias >= 1) {
                                        number += rt / c;
                                    } else {
                                        number += rt * pow(2, 1 - eBias);
                                    }
                                    if (number * c >= 2) {
                                        exponent++;
                                        c /= 2;
                                    }
                                    if (exponent + eBias >= eMax) {
                                        mantissa = 0;
                                        exponent = eMax;
                                    } else if (exponent + eBias >= 1) {
                                        mantissa = (number * c - 1) * pow(2, mantissaLength);
                                        exponent = exponent + eBias;
                                    } else {
                                        mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
                                        exponent = 0;
                                    }
                                }
                                for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);
                                exponent = exponent << mantissaLength | mantissa;
                                exponentLength += mantissaLength;
                                for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);
                                buffer[--index] |= sign * 128;
                                return buffer;
                            };

                            var unpack = function (buffer, mantissaLength) {
                                var bytes = buffer.length;
                                var exponentLength = bytes * 8 - mantissaLength - 1;
                                var eMax = (1 << exponentLength) - 1;
                                var eBias = eMax >> 1;
                                var nBits = exponentLength - 7;
                                var index = bytes - 1;
                                var sign = buffer[index--];
                                var exponent = sign & 127;
                                var mantissa;
                                sign >>= 7;
                                for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);
                                mantissa = exponent & (1 << -nBits) - 1;
                                exponent >>= -nBits;
                                nBits += mantissaLength;
                                for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);
                                if (exponent === 0) {
                                    exponent = 1 - eBias;
                                } else if (exponent === eMax) {
                                    return mantissa ? NaN : sign ? -Infinity : Infinity;
                                } else {
                                    mantissa = mantissa + pow(2, mantissaLength);
                                    exponent = exponent - eBias;
                                } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
                            };

                            module.exports = {
                                pack: pack,
                                unpack: unpack
                            };


                            /***/ }),

                        /***/ 8361:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_58329__) {

                            var fails = __nested_webpack_require_58329__(7293);
                            var classof = __nested_webpack_require_58329__(4326);

                            var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
                            module.exports = fails(function () {
                                // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
                                // eslint-disable-next-line no-prototype-builtins -- safe
                                return !Object('z').propertyIsEnumerable(0);
                            }) ? function (it) {
                                return classof(it) == 'String' ? split.call(it, '') : Object(it);
                            } : Object;


                            /***/ }),

                        /***/ 9587:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_58925__) {

                            var isObject = __nested_webpack_require_58925__(111);
                            var setPrototypeOf = __nested_webpack_require_58925__(7674);

// makes subclassing work correct for wrapped built-ins
                            module.exports = function ($this, dummy, Wrapper) {
                                var NewTarget, NewTargetPrototype;
                                if (
                                    // it can work only with native `setPrototypeOf`
                                    setPrototypeOf &&
                                    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
                                    typeof (NewTarget = dummy.constructor) == 'function' &&
                                    NewTarget !== Wrapper &&
                                    isObject(NewTargetPrototype = NewTarget.prototype) &&
                                    NewTargetPrototype !== Wrapper.prototype
                                ) setPrototypeOf($this, NewTargetPrototype);
                                return $this;
                            };


                            /***/ }),

                        /***/ 2788:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_59686__) {

                            var store = __nested_webpack_require_59686__(5465);

                            var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
                            if (typeof store.inspectSource != 'function') {
                                store.inspectSource = function (it) {
                                    return functionToString.call(it);
                                };
                            }

                            module.exports = store.inspectSource;


                            /***/ }),

                        /***/ 9909:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_60112__) {

                            var NATIVE_WEAK_MAP = __nested_webpack_require_60112__(8536);
                            var global = __nested_webpack_require_60112__(7854);
                            var isObject = __nested_webpack_require_60112__(111);
                            var createNonEnumerableProperty = __nested_webpack_require_60112__(8880);
                            var objectHas = __nested_webpack_require_60112__(6656);
                            var shared = __nested_webpack_require_60112__(5465);
                            var sharedKey = __nested_webpack_require_60112__(6200);
                            var hiddenKeys = __nested_webpack_require_60112__(3501);

                            var WeakMap = global.WeakMap;
                            var set, get, has;

                            var enforce = function (it) {
                                return has(it) ? get(it) : set(it, {});
                            };

                            var getterFor = function (TYPE) {
                                return function (it) {
                                    var state;
                                    if (!isObject(it) || (state = get(it)).type !== TYPE) {
                                        throw TypeError('Incompatible receiver, ' + TYPE + ' required');
                                    } return state;
                                };
                            };

                            if (NATIVE_WEAK_MAP) {
                                var store = shared.state || (shared.state = new WeakMap());
                                var wmget = store.get;
                                var wmhas = store.has;
                                var wmset = store.set;
                                set = function (it, metadata) {
                                    metadata.facade = it;
                                    wmset.call(store, it, metadata);
                                    return metadata;
                                };
                                get = function (it) {
                                    return wmget.call(store, it) || {};
                                };
                                has = function (it) {
                                    return wmhas.call(store, it);
                                };
                            } else {
                                var STATE = sharedKey('state');
                                hiddenKeys[STATE] = true;
                                set = function (it, metadata) {
                                    metadata.facade = it;
                                    createNonEnumerableProperty(it, STATE, metadata);
                                    return metadata;
                                };
                                get = function (it) {
                                    return objectHas(it, STATE) ? it[STATE] : {};
                                };
                                has = function (it) {
                                    return objectHas(it, STATE);
                                };
                            }

                            module.exports = {
                                set: set,
                                get: get,
                                has: has,
                                enforce: enforce,
                                getterFor: getterFor
                            };


                            /***/ }),

                        /***/ 7659:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_61804__) {

                            var wellKnownSymbol = __nested_webpack_require_61804__(5112);
                            var Iterators = __nested_webpack_require_61804__(7497);

                            var ITERATOR = wellKnownSymbol('iterator');
                            var ArrayPrototype = Array.prototype;

// check on default Array iterator
                            module.exports = function (it) {
                                return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
                            };


                            /***/ }),

                        /***/ 3157:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_62240__) {

                            var classof = __nested_webpack_require_62240__(4326);

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
                            module.exports = Array.isArray || function isArray(arg) {
                                return classof(arg) == 'Array';
                            };


                            /***/ }),

                        /***/ 4705:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_62548__) {

                            var fails = __nested_webpack_require_62548__(7293);

                            var replacement = /#|\.prototype\./;

                            var isForced = function (feature, detection) {
                                var value = data[normalize(feature)];
                                return value == POLYFILL ? true
                                    : value == NATIVE ? false
                                        : typeof detection == 'function' ? fails(detection)
                                            : !!detection;
                            };

                            var normalize = isForced.normalize = function (string) {
                                return String(string).replace(replacement, '.').toLowerCase();
                            };

                            var data = isForced.data = {};
                            var NATIVE = isForced.NATIVE = 'N';
                            var POLYFILL = isForced.POLYFILL = 'P';

                            module.exports = isForced;


                            /***/ }),

                        /***/ 111:
                        /***/ (function(module) {

                            module.exports = function (it) {
                                return typeof it === 'object' ? it !== null : typeof it === 'function';
                            };


                            /***/ }),

                        /***/ 1913:
                        /***/ (function(module) {

                            module.exports = false;


                            /***/ }),

                        /***/ 7850:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_63453__) {

                            var isObject = __nested_webpack_require_63453__(111);
                            var classof = __nested_webpack_require_63453__(4326);
                            var wellKnownSymbol = __nested_webpack_require_63453__(5112);

                            var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
                            module.exports = function (it) {
                                var isRegExp;
                                return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
                            };


                            /***/ }),

                        /***/ 9212:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_63953__) {

                            var anObject = __nested_webpack_require_63953__(9670);

                            module.exports = function (iterator) {
                                var returnMethod = iterator['return'];
                                if (returnMethod !== undefined) {
                                    return anObject(returnMethod.call(iterator)).value;
                                }
                            };


                            /***/ }),

                        /***/ 3383:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_64274__) {

                            "use strict";

                            var fails = __nested_webpack_require_64274__(7293);
                            var getPrototypeOf = __nested_webpack_require_64274__(9518);
                            var createNonEnumerableProperty = __nested_webpack_require_64274__(8880);
                            var has = __nested_webpack_require_64274__(6656);
                            var wellKnownSymbol = __nested_webpack_require_64274__(5112);
                            var IS_PURE = __nested_webpack_require_64274__(1913);

                            var ITERATOR = wellKnownSymbol('iterator');
                            var BUGGY_SAFARI_ITERATORS = false;

                            var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
                            var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

                            if ([].keys) {
                                arrayIterator = [].keys();
                                // Safari 8 has buggy iterators w/o `next`
                                if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
                                else {
                                    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
                                    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
                                }
                            }

                            var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
                                var test = {};
                                // FF44- legacy iterators case
                                return IteratorPrototype[ITERATOR].call(test) !== test;
                            });

                            if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
                            if ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {
                                createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
                            }

                            module.exports = {
                                IteratorPrototype: IteratorPrototype,
                                BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
                            };


                            /***/ }),

                        /***/ 7497:
                        /***/ (function(module) {

                            module.exports = {};


                            /***/ }),

                        /***/ 133:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_65970__) {

                            var fails = __nested_webpack_require_65970__(7293);

                            module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
                                // Chrome 38 Symbol has incorrect toString conversion
                                /* global Symbol -- required for testing */
                                return !String(Symbol());
                            });


                            /***/ }),

                        /***/ 590:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_66314__) {

                            var fails = __nested_webpack_require_66314__(7293);
                            var wellKnownSymbol = __nested_webpack_require_66314__(5112);
                            var IS_PURE = __nested_webpack_require_66314__(1913);

                            var ITERATOR = wellKnownSymbol('iterator');

                            module.exports = !fails(function () {
                                var url = new URL('b?a=1&b=2&c=3', 'http://a');
                                var searchParams = url.searchParams;
                                var result = '';
                                url.pathname = 'c%20d';
                                searchParams.forEach(function (value, key) {
                                    searchParams['delete']('b');
                                    result += key + value;
                                });
                                return (IS_PURE && !url.toJSON)
                                    || !searchParams.sort
                                    || url.href !== 'http://a/c%20d?a=1&c=3'
                                    || searchParams.get('c') !== '3'
                                    || String(new URLSearchParams('?a=1')) !== 'a=1'
                                    || !searchParams[ITERATOR]
                                    // throws in Edge
                                    || new URL('https://a@b').username !== 'a'
                                    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
                                    // not punycoded in Edge
                                    || new URL('http://тест').host !== 'xn--e1aybc'
                                    // not escaped in Chrome 62-
                                    || new URL('http://a#б').hash !== '#%D0%B1'
                                    // fails in Chrome 66-
                                    || result !== 'a1c3'
                                    // throws in Safari
                                    || new URL('http://x', undefined).host !== 'x';
                            });


                            /***/ }),

                        /***/ 8536:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_67534__) {

                            var global = __nested_webpack_require_67534__(7854);
                            var inspectSource = __nested_webpack_require_67534__(2788);

                            var WeakMap = global.WeakMap;

                            module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


                            /***/ }),

                        /***/ 1574:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_67846__) {

                            "use strict";

                            var DESCRIPTORS = __nested_webpack_require_67846__(9781);
                            var fails = __nested_webpack_require_67846__(7293);
                            var objectKeys = __nested_webpack_require_67846__(1956);
                            var getOwnPropertySymbolsModule = __nested_webpack_require_67846__(5181);
                            var propertyIsEnumerableModule = __nested_webpack_require_67846__(5296);
                            var toObject = __nested_webpack_require_67846__(7908);
                            var IndexedObject = __nested_webpack_require_67846__(8361);

                            var nativeAssign = Object.assign;
                            var defineProperty = Object.defineProperty;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
                            module.exports = !nativeAssign || fails(function () {
                                // should have correct order of operations (Edge bug)
                                if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {
                                    enumerable: true,
                                    get: function () {
                                        defineProperty(this, 'b', {
                                            value: 3,
                                            enumerable: false
                                        });
                                    }
                                }), { b: 2 })).b !== 1) return true;
                                // should work with symbols and should have deterministic property order (V8 bug)
                                var A = {};
                                var B = {};
                                /* global Symbol -- required for testing */
                                var symbol = Symbol();
                                var alphabet = 'abcdefghijklmnopqrst';
                                A[symbol] = 7;
                                alphabet.split('').forEach(function (chr) { B[chr] = chr; });
                                return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
                            }) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
                                var T = toObject(target);
                                var argumentsLength = arguments.length;
                                var index = 1;
                                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                                var propertyIsEnumerable = propertyIsEnumerableModule.f;
                                while (argumentsLength > index) {
                                    var S = IndexedObject(arguments[index++]);
                                    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
                                    var length = keys.length;
                                    var j = 0;
                                    var key;
                                    while (length > j) {
                                        key = keys[j++];
                                        if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
                                    }
                                } return T;
                            } : nativeAssign;


                            /***/ }),

                        /***/ 30:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_69941__) {

                            var anObject = __nested_webpack_require_69941__(9670);
                            var defineProperties = __nested_webpack_require_69941__(6048);
                            var enumBugKeys = __nested_webpack_require_69941__(748);
                            var hiddenKeys = __nested_webpack_require_69941__(3501);
                            var html = __nested_webpack_require_69941__(490);
                            var documentCreateElement = __nested_webpack_require_69941__(317);
                            var sharedKey = __nested_webpack_require_69941__(6200);

                            var GT = '>';
                            var LT = '<';
                            var PROTOTYPE = 'prototype';
                            var SCRIPT = 'script';
                            var IE_PROTO = sharedKey('IE_PROTO');

                            var EmptyConstructor = function () { /* empty */ };

                            var scriptTag = function (content) {
                                return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
                            };

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
                            var NullProtoObjectViaActiveX = function (activeXDocument) {
                                activeXDocument.write(scriptTag(''));
                                activeXDocument.close();
                                var temp = activeXDocument.parentWindow.Object;
                                activeXDocument = null; // avoid memory leak
                                return temp;
                            };

// Create object with fake `null` prototype: use iframe Object with cleared prototype
                            var NullProtoObjectViaIFrame = function () {
                                // Thrash, waste and sodomy: IE GC bug
                                var iframe = documentCreateElement('iframe');
                                var JS = 'java' + SCRIPT + ':';
                                var iframeDocument;
                                iframe.style.display = 'none';
                                html.appendChild(iframe);
                                // https://github.com/zloirock/core-js/issues/475
                                iframe.src = String(JS);
                                iframeDocument = iframe.contentWindow.document;
                                iframeDocument.open();
                                iframeDocument.write(scriptTag('document.F=Object'));
                                iframeDocument.close();
                                return iframeDocument.F;
                            };

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
                            var activeXDocument;
                            var NullProtoObject = function () {
                                try {
                                    /* global ActiveXObject -- old IE */
                                    activeXDocument = document.domain && new ActiveXObject('htmlfile');
                                } catch (error) { /* ignore */ }
                                NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
                                var length = enumBugKeys.length;
                                while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
                                return NullProtoObject();
                            };

                            hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
                            module.exports = Object.create || function create(O, Properties) {
                                var result;
                                if (O !== null) {
                                    EmptyConstructor[PROTOTYPE] = anObject(O);
                                    result = new EmptyConstructor();
                                    EmptyConstructor[PROTOTYPE] = null;
                                    // add "__proto__" for Object.getPrototypeOf polyfill
                                    result[IE_PROTO] = O;
                                } else result = NullProtoObject();
                                return Properties === undefined ? result : defineProperties(result, Properties);
                            };


                            /***/ }),

                        /***/ 6048:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_72835__) {

                            var DESCRIPTORS = __nested_webpack_require_72835__(9781);
                            var definePropertyModule = __nested_webpack_require_72835__(3070);
                            var anObject = __nested_webpack_require_72835__(9670);
                            var objectKeys = __nested_webpack_require_72835__(1956);

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
                            module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
                                anObject(O);
                                var keys = objectKeys(Properties);
                                var length = keys.length;
                                var index = 0;
                                var key;
                                while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
                                return O;
                            };


                            /***/ }),

                        /***/ 3070:
                        /***/ (function(__unused_webpack_module, exports, __nested_webpack_require_73525__) {

                            var DESCRIPTORS = __nested_webpack_require_73525__(9781);
                            var IE8_DOM_DEFINE = __nested_webpack_require_73525__(4664);
                            var anObject = __nested_webpack_require_73525__(9670);
                            var toPrimitive = __nested_webpack_require_73525__(7593);

                            var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
                            exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
                                anObject(O);
                                P = toPrimitive(P, true);
                                anObject(Attributes);
                                if (IE8_DOM_DEFINE) try {
                                    return nativeDefineProperty(O, P, Attributes);
                                } catch (error) { /* empty */ }
                                if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
                                if ('value' in Attributes) O[P] = Attributes.value;
                                return O;
                            };


                            /***/ }),

                        /***/ 1236:
                        /***/ (function(__unused_webpack_module, exports, __nested_webpack_require_74380__) {

                            var DESCRIPTORS = __nested_webpack_require_74380__(9781);
                            var propertyIsEnumerableModule = __nested_webpack_require_74380__(5296);
                            var createPropertyDescriptor = __nested_webpack_require_74380__(9114);
                            var toIndexedObject = __nested_webpack_require_74380__(5656);
                            var toPrimitive = __nested_webpack_require_74380__(7593);
                            var has = __nested_webpack_require_74380__(6656);
                            var IE8_DOM_DEFINE = __nested_webpack_require_74380__(4664);

                            var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
                            exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
                                O = toIndexedObject(O);
                                P = toPrimitive(P, true);
                                if (IE8_DOM_DEFINE) try {
                                    return nativeGetOwnPropertyDescriptor(O, P);
                                } catch (error) { /* empty */ }
                                if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
                            };


                            /***/ }),

                        /***/ 8006:
                        /***/ (function(__unused_webpack_module, exports, __nested_webpack_require_75368__) {

                            var internalObjectKeys = __nested_webpack_require_75368__(6324);
                            var enumBugKeys = __nested_webpack_require_75368__(748);

                            var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
                            exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
                                return internalObjectKeys(O, hiddenKeys);
                            };


                            /***/ }),

                        /***/ 5181:
                        /***/ (function(__unused_webpack_module, exports) {

                            exports.f = Object.getOwnPropertySymbols;


                            /***/ }),

                        /***/ 9518:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_75966__) {

                            var has = __nested_webpack_require_75966__(6656);
                            var toObject = __nested_webpack_require_75966__(7908);
                            var sharedKey = __nested_webpack_require_75966__(6200);
                            var CORRECT_PROTOTYPE_GETTER = __nested_webpack_require_75966__(8544);

                            var IE_PROTO = sharedKey('IE_PROTO');
                            var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
                            module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
                                O = toObject(O);
                                if (has(O, IE_PROTO)) return O[IE_PROTO];
                                if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                                    return O.constructor.prototype;
                                } return O instanceof Object ? ObjectPrototype : null;
                            };


                            /***/ }),

                        /***/ 6324:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_76729__) {

                            var has = __nested_webpack_require_76729__(6656);
                            var toIndexedObject = __nested_webpack_require_76729__(5656);
                            var indexOf = __nested_webpack_require_76729__(1318).indexOf;
                            var hiddenKeys = __nested_webpack_require_76729__(3501);

                            module.exports = function (object, names) {
                                var O = toIndexedObject(object);
                                var i = 0;
                                var result = [];
                                var key;
                                for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
                                // Don't enum bug & hidden keys
                                while (names.length > i) if (has(O, key = names[i++])) {
                                    ~indexOf(result, key) || result.push(key);
                                }
                                return result;
                            };


                            /***/ }),

                        /***/ 1956:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_77369__) {

                            var internalObjectKeys = __nested_webpack_require_77369__(6324);
                            var enumBugKeys = __nested_webpack_require_77369__(748);

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
                            module.exports = Object.keys || function keys(O) {
                                return internalObjectKeys(O, enumBugKeys);
                            };


                            /***/ }),

                        /***/ 5296:
                        /***/ (function(__unused_webpack_module, exports) {

                            "use strict";

                            var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
                            var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
                            var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
                            exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
                                var descriptor = getOwnPropertyDescriptor(this, V);
                                return !!descriptor && descriptor.enumerable;
                            } : nativePropertyIsEnumerable;


                            /***/ }),

                        /***/ 7674:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_78394__) {

                            /* eslint-disable no-proto -- safe */
                            var anObject = __nested_webpack_require_78394__(9670);
                            var aPossiblePrototype = __nested_webpack_require_78394__(6077);

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
                            module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
                                var CORRECT_SETTER = false;
                                var test = {};
                                var setter;
                                try {
                                    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
                                    setter.call(test, []);
                                    CORRECT_SETTER = test instanceof Array;
                                } catch (error) { /* empty */ }
                                return function setPrototypeOf(O, proto) {
                                    anObject(O);
                                    aPossiblePrototype(proto);
                                    if (CORRECT_SETTER) setter.call(O, proto);
                                    else O.__proto__ = proto;
                                    return O;
                                };
                            }() : undefined);


                            /***/ }),

                        /***/ 288:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_79325__) {

                            "use strict";

                            var TO_STRING_TAG_SUPPORT = __nested_webpack_require_79325__(1694);
                            var classof = __nested_webpack_require_79325__(648);

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
                            module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
                                return '[object ' + classof(this) + ']';
                            };


                            /***/ }),

                        /***/ 3887:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_79769__) {

                            var getBuiltIn = __nested_webpack_require_79769__(5005);
                            var getOwnPropertyNamesModule = __nested_webpack_require_79769__(8006);
                            var getOwnPropertySymbolsModule = __nested_webpack_require_79769__(5181);
                            var anObject = __nested_webpack_require_79769__(9670);

// all object keys, includes non-enumerable and symbols
                            module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
                                var keys = getOwnPropertyNamesModule.f(anObject(it));
                                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                                return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
                            };


                            /***/ }),

                        /***/ 857:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_80406__) {

                            var global = __nested_webpack_require_80406__(7854);

                            module.exports = global;


                            /***/ }),

                        /***/ 2248:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_80571__) {

                            var redefine = __nested_webpack_require_80571__(1320);

                            module.exports = function (target, src, options) {
                                for (var key in src) redefine(target, key, src[key], options);
                                return target;
                            };


                            /***/ }),

                        /***/ 1320:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_80849__) {

                            var global = __nested_webpack_require_80849__(7854);
                            var createNonEnumerableProperty = __nested_webpack_require_80849__(8880);
                            var has = __nested_webpack_require_80849__(6656);
                            var setGlobal = __nested_webpack_require_80849__(3505);
                            var inspectSource = __nested_webpack_require_80849__(2788);
                            var InternalStateModule = __nested_webpack_require_80849__(9909);

                            var getInternalState = InternalStateModule.get;
                            var enforceInternalState = InternalStateModule.enforce;
                            var TEMPLATE = String(String).split('String');

                            (module.exports = function (O, key, value, options) {
                                var unsafe = options ? !!options.unsafe : false;
                                var simple = options ? !!options.enumerable : false;
                                var noTargetGet = options ? !!options.noTargetGet : false;
                                var state;
                                if (typeof value == 'function') {
                                    if (typeof key == 'string' && !has(value, 'name')) {
                                        createNonEnumerableProperty(value, 'name', key);
                                    }
                                    state = enforceInternalState(value);
                                    if (!state.source) {
                                        state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
                                    }
                                }
                                if (O === global) {
                                    if (simple) O[key] = value;
                                    else setGlobal(key, value);
                                    return;
                                } else if (!unsafe) {
                                    delete O[key];
                                } else if (!noTargetGet && O[key]) {
                                    simple = true;
                                }
                                if (simple) O[key] = value;
                                else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
                            })(Function.prototype, 'toString', function toString() {
                                return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
                            });


                            /***/ }),

                        /***/ 7651:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_82466__) {

                            var classof = __nested_webpack_require_82466__(4326);
                            var regexpExec = __nested_webpack_require_82466__(2261);

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
                            module.exports = function (R, S) {
                                var exec = R.exec;
                                if (typeof exec === 'function') {
                                    var result = exec.call(R, S);
                                    if (typeof result !== 'object') {
                                        throw TypeError('RegExp exec method returned something other than an Object or null');
                                    }
                                    return result;
                                }

                                if (classof(R) !== 'RegExp') {
                                    throw TypeError('RegExp#exec called on incompatible receiver');
                                }

                                return regexpExec.call(R, S);
                            };



                            /***/ }),

                        /***/ 2261:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_83158__) {

                            "use strict";

                            var regexpFlags = __nested_webpack_require_83158__(7066);
                            var stickyHelpers = __nested_webpack_require_83158__(2999);

                            var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
                            var nativeReplace = String.prototype.replace;

                            var patchedExec = nativeExec;

                            var UPDATES_LAST_INDEX_WRONG = (function () {
                                var re1 = /a/;
                                var re2 = /b*/g;
                                nativeExec.call(re1, 'a');
                                nativeExec.call(re2, 'a');
                                return re1.lastIndex !== 0 || re2.lastIndex !== 0;
                            })();

                            var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
// eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing
                            var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

                            var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

                            if (PATCH) {
                                patchedExec = function exec(str) {
                                    var re = this;
                                    var lastIndex, reCopy, match, i;
                                    var sticky = UNSUPPORTED_Y && re.sticky;
                                    var flags = regexpFlags.call(re);
                                    var source = re.source;
                                    var charsAdded = 0;
                                    var strCopy = str;

                                    if (sticky) {
                                        flags = flags.replace('y', '');
                                        if (flags.indexOf('g') === -1) {
                                            flags += 'g';
                                        }

                                        strCopy = String(str).slice(re.lastIndex);
                                        // Support anchored sticky behavior.
                                        if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\n')) {
                                            source = '(?: ' + source + ')';
                                            strCopy = ' ' + strCopy;
                                            charsAdded++;
                                        }
                                        // ^(? + rx + ) is needed, in combination with some str slicing, to
                                        // simulate the 'y' flag.
                                        reCopy = new RegExp('^(?:' + source + ')', flags);
                                    }

                                    if (NPCG_INCLUDED) {
                                        reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
                                    }
                                    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

                                    match = nativeExec.call(sticky ? reCopy : re, strCopy);

                                    if (sticky) {
                                        if (match) {
                                            match.input = match.input.slice(charsAdded);
                                            match[0] = match[0].slice(charsAdded);
                                            match.index = re.lastIndex;
                                            re.lastIndex += match[0].length;
                                        } else re.lastIndex = 0;
                                    } else if (UPDATES_LAST_INDEX_WRONG && match) {
                                        re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
                                    }
                                    if (NPCG_INCLUDED && match && match.length > 1) {
                                        // Fix browsers whose `exec` methods don't consistently return `undefined`
                                        // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
                                        nativeReplace.call(match[0], reCopy, function () {
                                            for (i = 1; i < arguments.length - 2; i++) {
                                                if (arguments[i] === undefined) match[i] = undefined;
                                            }
                                        });
                                    }

                                    return match;
                                };
                            }

                            module.exports = patchedExec;


                            /***/ }),

                        /***/ 7066:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_86176__) {

                            "use strict";

                            var anObject = __nested_webpack_require_86176__(9670);

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
                            module.exports = function () {
                                var that = anObject(this);
                                var result = '';
                                if (that.global) result += 'g';
                                if (that.ignoreCase) result += 'i';
                                if (that.multiline) result += 'm';
                                if (that.dotAll) result += 's';
                                if (that.unicode) result += 'u';
                                if (that.sticky) result += 'y';
                                return result;
                            };


                            /***/ }),

                        /***/ 2999:
                        /***/ (function(__unused_webpack_module, exports, __nested_webpack_require_86753__) {

                            "use strict";


                            var fails = __nested_webpack_require_86753__(7293);

// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
                            function RE(s, f) {
                                return RegExp(s, f);
                            }

                            exports.UNSUPPORTED_Y = fails(function () {
                                // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
                                var re = RE('a', 'y');
                                re.lastIndex = 2;
                                return re.exec('abcd') != null;
                            });

                            exports.BROKEN_CARET = fails(function () {
                                // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
                                var re = RE('^r', 'gy');
                                re.lastIndex = 2;
                                return re.exec('str') != null;
                            });


                            /***/ }),

                        /***/ 4488:
                        /***/ (function(module) {

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
                            module.exports = function (it) {
                                if (it == undefined) throw TypeError("Can't call method on " + it);
                                return it;
                            };


                            /***/ }),

                        /***/ 3505:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_87737__) {

                            var global = __nested_webpack_require_87737__(7854);
                            var createNonEnumerableProperty = __nested_webpack_require_87737__(8880);

                            module.exports = function (key, value) {
                                try {
                                    createNonEnumerableProperty(global, key, value);
                                } catch (error) {
                                    global[key] = value;
                                } return value;
                            };


                            /***/ }),

                        /***/ 6340:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_88106__) {

                            "use strict";

                            var getBuiltIn = __nested_webpack_require_88106__(5005);
                            var definePropertyModule = __nested_webpack_require_88106__(3070);
                            var wellKnownSymbol = __nested_webpack_require_88106__(5112);
                            var DESCRIPTORS = __nested_webpack_require_88106__(9781);

                            var SPECIES = wellKnownSymbol('species');

                            module.exports = function (CONSTRUCTOR_NAME) {
                                var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
                                var defineProperty = definePropertyModule.f;

                                if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
                                    defineProperty(Constructor, SPECIES, {
                                        configurable: true,
                                        get: function () { return this; }
                                    });
                                }
                            };


                            /***/ }),

                        /***/ 8003:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_88786__) {

                            var defineProperty = __nested_webpack_require_88786__(3070).f;
                            var has = __nested_webpack_require_88786__(6656);
                            var wellKnownSymbol = __nested_webpack_require_88786__(5112);

                            var TO_STRING_TAG = wellKnownSymbol('toStringTag');

                            module.exports = function (it, TAG, STATIC) {
                                if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
                                    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
                                }
                            };


                            /***/ }),

                        /***/ 6200:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_89271__) {

                            var shared = __nested_webpack_require_89271__(2309);
                            var uid = __nested_webpack_require_89271__(9711);

                            var keys = shared('keys');

                            module.exports = function (key) {
                                return keys[key] || (keys[key] = uid(key));
                            };


                            /***/ }),

                        /***/ 5465:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_89559__) {

                            var global = __nested_webpack_require_89559__(7854);
                            var setGlobal = __nested_webpack_require_89559__(3505);

                            var SHARED = '__core-js_shared__';
                            var store = global[SHARED] || setGlobal(SHARED, {});

                            module.exports = store;


                            /***/ }),

                        /***/ 2309:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_89855__) {

                            var IS_PURE = __nested_webpack_require_89855__(1913);
                            var store = __nested_webpack_require_89855__(5465);

                            (module.exports = function (key, value) {
                                return store[key] || (store[key] = value !== undefined ? value : {});
                            })('versions', []).push({
                                version: '3.9.0',
                                mode: IS_PURE ? 'pure' : 'global',
                                copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
                            });


                            /***/ }),

                        /***/ 6707:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_90288__) {

                            var anObject = __nested_webpack_require_90288__(9670);
                            var aFunction = __nested_webpack_require_90288__(3099);
                            var wellKnownSymbol = __nested_webpack_require_90288__(5112);

                            var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
                            module.exports = function (O, defaultConstructor) {
                                var C = anObject(O).constructor;
                                var S;
                                return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
                            };


                            /***/ }),

                        /***/ 8710:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_90863__) {

                            var toInteger = __nested_webpack_require_90863__(9958);
                            var requireObjectCoercible = __nested_webpack_require_90863__(4488);

// `String.prototype.{ codePointAt, at }` methods implementation
                            var createMethod = function (CONVERT_TO_STRING) {
                                return function ($this, pos) {
                                    var S = String(requireObjectCoercible($this));
                                    var position = toInteger(pos);
                                    var size = S.length;
                                    var first, second;
                                    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
                                    first = S.charCodeAt(position);
                                    return first < 0xD800 || first > 0xDBFF || position + 1 === size
                                    || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
                                        ? CONVERT_TO_STRING ? S.charAt(position) : first
                                        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
                                };
                            };

                            module.exports = {
                                // `String.prototype.codePointAt` method
                                // https://tc39.es/ecma262/#sec-string.prototype.codepointat
                                codeAt: createMethod(false),
                                // `String.prototype.at` method
                                // https://github.com/mathiasbynens/String.prototype.at
                                charAt: createMethod(true)
                            };


                            /***/ }),

                        /***/ 3197:
                        /***/ (function(module) {

                            "use strict";

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
                            var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
                            var base = 36;
                            var tMin = 1;
                            var tMax = 26;
                            var skew = 38;
                            var damp = 700;
                            var initialBias = 72;
                            var initialN = 128; // 0x80
                            var delimiter = '-'; // '\x2D'
                            var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
                            var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
                            var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
                            var baseMinusTMin = base - tMin;
                            var floor = Math.floor;
                            var stringFromCharCode = String.fromCharCode;

                            /**
                             * Creates an array containing the numeric code points of each Unicode
                             * character in the string. While JavaScript uses UCS-2 internally,
                             * this function will convert a pair of surrogate halves (each of which
                             * UCS-2 exposes as separate characters) into a single code point,
                             * matching UTF-16.
                             */
                            var ucs2decode = function (string) {
                                var output = [];
                                var counter = 0;
                                var length = string.length;
                                while (counter < length) {
                                    var value = string.charCodeAt(counter++);
                                    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
                                        // It's a high surrogate, and there is a next character.
                                        var extra = string.charCodeAt(counter++);
                                        if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
                                            output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
                                        } else {
                                            // It's an unmatched surrogate; only append this code unit, in case the
                                            // next code unit is the high surrogate of a surrogate pair.
                                            output.push(value);
                                            counter--;
                                        }
                                    } else {
                                        output.push(value);
                                    }
                                }
                                return output;
                            };

                            /**
                             * Converts a digit/integer into a basic code point.
                             */
                            var digitToBasic = function (digit) {
                                //  0..25 map to ASCII a..z or A..Z
                                // 26..35 map to ASCII 0..9
                                return digit + 22 + 75 * (digit < 26);
                            };

                            /**
                             * Bias adaptation function as per section 3.4 of RFC 3492.
                             * https://tools.ietf.org/html/rfc3492#section-3.4
                             */
                            var adapt = function (delta, numPoints, firstTime) {
                                var k = 0;
                                delta = firstTime ? floor(delta / damp) : delta >> 1;
                                delta += floor(delta / numPoints);
                                for (; delta > baseMinusTMin * tMax >> 1; k += base) {
                                    delta = floor(delta / baseMinusTMin);
                                }
                                return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
                            };

                            /**
                             * Converts a string of Unicode symbols (e.g. a domain name label) to a
                             * Punycode string of ASCII-only symbols.
                             */
// eslint-disable-next-line max-statements -- TODO
                            var encode = function (input) {
                                var output = [];

                                // Convert the input in UCS-2 to an array of Unicode code points.
                                input = ucs2decode(input);

                                // Cache the length.
                                var inputLength = input.length;

                                // Initialize the state.
                                var n = initialN;
                                var delta = 0;
                                var bias = initialBias;
                                var i, currentValue;

                                // Handle the basic code points.
                                for (i = 0; i < input.length; i++) {
                                    currentValue = input[i];
                                    if (currentValue < 0x80) {
                                        output.push(stringFromCharCode(currentValue));
                                    }
                                }

                                var basicLength = output.length; // number of basic code points.
                                var handledCPCount = basicLength; // number of code points that have been handled;

                                // Finish the basic string with a delimiter unless it's empty.
                                if (basicLength) {
                                    output.push(delimiter);
                                }

                                // Main encoding loop:
                                while (handledCPCount < inputLength) {
                                    // All non-basic code points < n have been handled already. Find the next larger one:
                                    var m = maxInt;
                                    for (i = 0; i < input.length; i++) {
                                        currentValue = input[i];
                                        if (currentValue >= n && currentValue < m) {
                                            m = currentValue;
                                        }
                                    }

                                    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
                                    var handledCPCountPlusOne = handledCPCount + 1;
                                    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
                                        throw RangeError(OVERFLOW_ERROR);
                                    }

                                    delta += (m - n) * handledCPCountPlusOne;
                                    n = m;

                                    for (i = 0; i < input.length; i++) {
                                        currentValue = input[i];
                                        if (currentValue < n && ++delta > maxInt) {
                                            throw RangeError(OVERFLOW_ERROR);
                                        }
                                        if (currentValue == n) {
                                            // Represent delta as a generalized variable-length integer.
                                            var q = delta;
                                            for (var k = base; /* no condition */; k += base) {
                                                var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
                                                if (q < t) break;
                                                var qMinusT = q - t;
                                                var baseMinusT = base - t;
                                                output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
                                                q = floor(qMinusT / baseMinusT);
                                            }

                                            output.push(stringFromCharCode(digitToBasic(q)));
                                            bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                                            delta = 0;
                                            ++handledCPCount;
                                        }
                                    }

                                    ++delta;
                                    ++n;
                                }
                                return output.join('');
                            };

                            module.exports = function (input) {
                                var encoded = [];
                                var labels = input.toLowerCase().replace(regexSeparators, '\u002E').split('.');
                                var i, label;
                                for (i = 0; i < labels.length; i++) {
                                    label = labels[i];
                                    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);
                                }
                                return encoded.join('.');
                            };


                            /***/ }),

                        /***/ 6091:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_97360__) {

                            var fails = __nested_webpack_require_97360__(7293);
                            var whitespaces = __nested_webpack_require_97360__(1361);

                            var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
                            module.exports = function (METHOD_NAME) {
                                return fails(function () {
                                    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
                                });
                            };


                            /***/ }),

                        /***/ 3111:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_97868__) {

                            var requireObjectCoercible = __nested_webpack_require_97868__(4488);
                            var whitespaces = __nested_webpack_require_97868__(1361);

                            var whitespace = '[' + whitespaces + ']';
                            var ltrim = RegExp('^' + whitespace + whitespace + '*');
                            var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
                            var createMethod = function (TYPE) {
                                return function ($this) {
                                    var string = String(requireObjectCoercible($this));
                                    if (TYPE & 1) string = string.replace(ltrim, '');
                                    if (TYPE & 2) string = string.replace(rtrim, '');
                                    return string;
                                };
                            };

                            module.exports = {
                                // `String.prototype.{ trimLeft, trimStart }` methods
                                // https://tc39.es/ecma262/#sec-string.prototype.trimstart
                                start: createMethod(1),
                                // `String.prototype.{ trimRight, trimEnd }` methods
                                // https://tc39.es/ecma262/#sec-string.prototype.trimend
                                end: createMethod(2),
                                // `String.prototype.trim` method
                                // https://tc39.es/ecma262/#sec-string.prototype.trim
                                trim: createMethod(3)
                            };


                            /***/ }),

                        /***/ 1400:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_98992__) {

                            var toInteger = __nested_webpack_require_98992__(9958);

                            var max = Math.max;
                            var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
                            module.exports = function (index, length) {
                                var integer = toInteger(index);
                                return integer < 0 ? max(integer + length, 0) : min(integer, length);
                            };


                            /***/ }),

                        /***/ 7067:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_99521__) {

                            var toInteger = __nested_webpack_require_99521__(9958);
                            var toLength = __nested_webpack_require_99521__(7466);

// `ToIndex` abstract operation
// https://tc39.es/ecma262/#sec-toindex
                            module.exports = function (it) {
                                if (it === undefined) return 0;
                                var number = toInteger(it);
                                var length = toLength(number);
                                if (number !== length) throw RangeError('Wrong length or index');
                                return length;
                            };


                            /***/ }),

                        /***/ 5656:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_99996__) {

// toObject with fallback for non-array-like ES3 strings
                            var IndexedObject = __nested_webpack_require_99996__(8361);
                            var requireObjectCoercible = __nested_webpack_require_99996__(4488);

                            module.exports = function (it) {
                                return IndexedObject(requireObjectCoercible(it));
                            };


                            /***/ }),

                        /***/ 9958:
                        /***/ (function(module) {

                            var ceil = Math.ceil;
                            var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.es/ecma262/#sec-tointeger
                            module.exports = function (argument) {
                                return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
                            };


                            /***/ }),

                        /***/ 7466:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_100645__) {

                            var toInteger = __nested_webpack_require_100645__(9958);

                            var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
                            module.exports = function (argument) {
                                return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
                            };


                            /***/ }),

                        /***/ 7908:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_101032__) {

                            var requireObjectCoercible = __nested_webpack_require_101032__(4488);

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
                            module.exports = function (argument) {
                                return Object(requireObjectCoercible(argument));
                            };


                            /***/ }),

                        /***/ 4590:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_101355__) {

                            var toPositiveInteger = __nested_webpack_require_101355__(3002);

                            module.exports = function (it, BYTES) {
                                var offset = toPositiveInteger(it);
                                if (offset % BYTES) throw RangeError('Wrong offset');
                                return offset;
                            };


                            /***/ }),

                        /***/ 3002:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_101660__) {

                            var toInteger = __nested_webpack_require_101660__(9958);

                            module.exports = function (it) {
                                var result = toInteger(it);
                                if (result < 0) throw RangeError("The argument can't be less than 0");
                                return result;
                            };


                            /***/ }),

                        /***/ 7593:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_101959__) {

                            var isObject = __nested_webpack_require_101959__(111);

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
                            module.exports = function (input, PREFERRED_STRING) {
                                if (!isObject(input)) return input;
                                var fn, val;
                                if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
                                if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
                                if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
                                throw TypeError("Can't convert object to primitive value");
                            };


                            /***/ }),

                        /***/ 1694:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_102821__) {

                            var wellKnownSymbol = __nested_webpack_require_102821__(5112);

                            var TO_STRING_TAG = wellKnownSymbol('toStringTag');
                            var test = {};

                            test[TO_STRING_TAG] = 'z';

                            module.exports = String(test) === '[object z]';


                            /***/ }),

                        /***/ 9843:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_103114__) {

                            "use strict";

                            var $ = __nested_webpack_require_103114__(2109);
                            var global = __nested_webpack_require_103114__(7854);
                            var DESCRIPTORS = __nested_webpack_require_103114__(9781);
                            var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __nested_webpack_require_103114__(3832);
                            var ArrayBufferViewCore = __nested_webpack_require_103114__(260);
                            var ArrayBufferModule = __nested_webpack_require_103114__(3331);
                            var anInstance = __nested_webpack_require_103114__(5787);
                            var createPropertyDescriptor = __nested_webpack_require_103114__(9114);
                            var createNonEnumerableProperty = __nested_webpack_require_103114__(8880);
                            var toLength = __nested_webpack_require_103114__(7466);
                            var toIndex = __nested_webpack_require_103114__(7067);
                            var toOffset = __nested_webpack_require_103114__(4590);
                            var toPrimitive = __nested_webpack_require_103114__(7593);
                            var has = __nested_webpack_require_103114__(6656);
                            var classof = __nested_webpack_require_103114__(648);
                            var isObject = __nested_webpack_require_103114__(111);
                            var create = __nested_webpack_require_103114__(30);
                            var setPrototypeOf = __nested_webpack_require_103114__(7674);
                            var getOwnPropertyNames = __nested_webpack_require_103114__(8006).f;
                            var typedArrayFrom = __nested_webpack_require_103114__(7321);
                            var forEach = __nested_webpack_require_103114__(2092).forEach;
                            var setSpecies = __nested_webpack_require_103114__(6340);
                            var definePropertyModule = __nested_webpack_require_103114__(3070);
                            var getOwnPropertyDescriptorModule = __nested_webpack_require_103114__(1236);
                            var InternalStateModule = __nested_webpack_require_103114__(9909);
                            var inheritIfRequired = __nested_webpack_require_103114__(9587);

                            var getInternalState = InternalStateModule.get;
                            var setInternalState = InternalStateModule.set;
                            var nativeDefineProperty = definePropertyModule.f;
                            var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                            var round = Math.round;
                            var RangeError = global.RangeError;
                            var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
                            var DataView = ArrayBufferModule.DataView;
                            var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
                            var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
                            var TypedArray = ArrayBufferViewCore.TypedArray;
                            var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
                            var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
                            var isTypedArray = ArrayBufferViewCore.isTypedArray;
                            var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
                            var WRONG_LENGTH = 'Wrong length';

                            var fromList = function (C, list) {
                                var index = 0;
                                var length = list.length;
                                var result = new (aTypedArrayConstructor(C))(length);
                                while (length > index) result[index] = list[index++];
                                return result;
                            };

                            var addGetter = function (it, key) {
                                nativeDefineProperty(it, key, { get: function () {
                                        return getInternalState(this)[key];
                                    } });
                            };

                            var isArrayBuffer = function (it) {
                                var klass;
                                return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
                            };

                            var isTypedArrayIndex = function (target, key) {
                                return isTypedArray(target)
                                    && typeof key != 'symbol'
                                    && key in target
                                    && String(+key) == String(key);
                            };

                            var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
                                return isTypedArrayIndex(target, key = toPrimitive(key, true))
                                    ? createPropertyDescriptor(2, target[key])
                                    : nativeGetOwnPropertyDescriptor(target, key);
                            };

                            var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
                                if (isTypedArrayIndex(target, key = toPrimitive(key, true))
                                    && isObject(descriptor)
                                    && has(descriptor, 'value')
                                    && !has(descriptor, 'get')
                                    && !has(descriptor, 'set')
                                    // TODO: add validation descriptor w/o calling accessors
                                    && !descriptor.configurable
                                    && (!has(descriptor, 'writable') || descriptor.writable)
                                    && (!has(descriptor, 'enumerable') || descriptor.enumerable)
                                ) {
                                    target[key] = descriptor.value;
                                    return target;
                                } return nativeDefineProperty(target, key, descriptor);
                            };

                            if (DESCRIPTORS) {
                                if (!NATIVE_ARRAY_BUFFER_VIEWS) {
                                    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
                                    definePropertyModule.f = wrappedDefineProperty;
                                    addGetter(TypedArrayPrototype, 'buffer');
                                    addGetter(TypedArrayPrototype, 'byteOffset');
                                    addGetter(TypedArrayPrototype, 'byteLength');
                                    addGetter(TypedArrayPrototype, 'length');
                                }

                                $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
                                    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
                                    defineProperty: wrappedDefineProperty
                                });

                                module.exports = function (TYPE, wrapper, CLAMPED) {
                                    var BYTES = TYPE.match(/\d+$/)[0] / 8;
                                    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
                                    var GETTER = 'get' + TYPE;
                                    var SETTER = 'set' + TYPE;
                                    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
                                    var TypedArrayConstructor = NativeTypedArrayConstructor;
                                    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
                                    var exported = {};

                                    var getter = function (that, index) {
                                        var data = getInternalState(that);
                                        return data.view[GETTER](index * BYTES + data.byteOffset, true);
                                    };

                                    var setter = function (that, index, value) {
                                        var data = getInternalState(that);
                                        if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
                                        data.view[SETTER](index * BYTES + data.byteOffset, value, true);
                                    };

                                    var addElement = function (that, index) {
                                        nativeDefineProperty(that, index, {
                                            get: function () {
                                                return getter(this, index);
                                            },
                                            set: function (value) {
                                                return setter(this, index, value);
                                            },
                                            enumerable: true
                                        });
                                    };

                                    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
                                        TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
                                            anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);
                                            var index = 0;
                                            var byteOffset = 0;
                                            var buffer, byteLength, length;
                                            if (!isObject(data)) {
                                                length = toIndex(data);
                                                byteLength = length * BYTES;
                                                buffer = new ArrayBuffer(byteLength);
                                            } else if (isArrayBuffer(data)) {
                                                buffer = data;
                                                byteOffset = toOffset(offset, BYTES);
                                                var $len = data.byteLength;
                                                if ($length === undefined) {
                                                    if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                                                    byteLength = $len - byteOffset;
                                                    if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                                                } else {
                                                    byteLength = toLength($length) * BYTES;
                                                    if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
                                                }
                                                length = byteLength / BYTES;
                                            } else if (isTypedArray(data)) {
                                                return fromList(TypedArrayConstructor, data);
                                            } else {
                                                return typedArrayFrom.call(TypedArrayConstructor, data);
                                            }
                                            setInternalState(that, {
                                                buffer: buffer,
                                                byteOffset: byteOffset,
                                                byteLength: byteLength,
                                                length: length,
                                                view: new DataView(buffer)
                                            });
                                            while (index < length) addElement(that, index++);
                                        });

                                        if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
                                        TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
                                    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
                                        TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
                                            anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);
                                            return inheritIfRequired(function () {
                                                if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
                                                if (isArrayBuffer(data)) return $length !== undefined
                                                    ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)
                                                    : typedArrayOffset !== undefined
                                                        ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))
                                                        : new NativeTypedArrayConstructor(data);
                                                if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
                                                return typedArrayFrom.call(TypedArrayConstructor, data);
                                            }(), dummy, TypedArrayConstructor);
                                        });

                                        if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
                                        forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
                                            if (!(key in TypedArrayConstructor)) {
                                                createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
                                            }
                                        });
                                        TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
                                    }

                                    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
                                        createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
                                    }

                                    if (TYPED_ARRAY_TAG) {
                                        createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
                                    }

                                    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

                                    $({
                                        global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS
                                    }, exported);

                                    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
                                        createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
                                    }

                                    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
                                        createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
                                    }

                                    setSpecies(CONSTRUCTOR_NAME);
                                };
                            } else module.exports = function () { /* empty */ };


                            /***/ }),

                        /***/ 3832:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_112503__) {

                            /* eslint-disable no-new -- required for testing */
                            var global = __nested_webpack_require_112503__(7854);
                            var fails = __nested_webpack_require_112503__(7293);
                            var checkCorrectnessOfIteration = __nested_webpack_require_112503__(7072);
                            var NATIVE_ARRAY_BUFFER_VIEWS = __nested_webpack_require_112503__(260).NATIVE_ARRAY_BUFFER_VIEWS;

                            var ArrayBuffer = global.ArrayBuffer;
                            var Int8Array = global.Int8Array;

                            module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
                                Int8Array(1);
                            }) || !fails(function () {
                                new Int8Array(-1);
                            }) || !checkCorrectnessOfIteration(function (iterable) {
                                new Int8Array();
                                new Int8Array(null);
                                new Int8Array(1.5);
                                new Int8Array(iterable);
                            }, true) || fails(function () {
                                // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
                                return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
                            });


                            /***/ }),

                        /***/ 3074:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_113426__) {

                            var aTypedArrayConstructor = __nested_webpack_require_113426__(260).aTypedArrayConstructor;
                            var speciesConstructor = __nested_webpack_require_113426__(6707);

                            module.exports = function (instance, list) {
                                var C = speciesConstructor(instance, instance.constructor);
                                var index = 0;
                                var length = list.length;
                                var result = new (aTypedArrayConstructor(C))(length);
                                while (length > index) result[index] = list[index++];
                                return result;
                            };


                            /***/ }),

                        /***/ 7321:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_113940__) {

                            var toObject = __nested_webpack_require_113940__(7908);
                            var toLength = __nested_webpack_require_113940__(7466);
                            var getIteratorMethod = __nested_webpack_require_113940__(1246);
                            var isArrayIteratorMethod = __nested_webpack_require_113940__(7659);
                            var bind = __nested_webpack_require_113940__(9974);
                            var aTypedArrayConstructor = __nested_webpack_require_113940__(260).aTypedArrayConstructor;

                            module.exports = function from(source /* , mapfn, thisArg */) {
                                var O = toObject(source);
                                var argumentsLength = arguments.length;
                                var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
                                var mapping = mapfn !== undefined;
                                var iteratorMethod = getIteratorMethod(O);
                                var i, length, result, step, iterator, next;
                                if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {
                                    iterator = iteratorMethod.call(O);
                                    next = iterator.next;
                                    O = [];
                                    while (!(step = next.call(iterator)).done) {
                                        O.push(step.value);
                                    }
                                }
                                if (mapping && argumentsLength > 2) {
                                    mapfn = bind(mapfn, arguments[2], 2);
                                }
                                length = toLength(O.length);
                                result = new (aTypedArrayConstructor(this))(length);
                                for (i = 0; length > i; i++) {
                                    result[i] = mapping ? mapfn(O[i], i) : O[i];
                                }
                                return result;
                            };


                            /***/ }),

                        /***/ 9711:
                        /***/ (function(module) {

                            var id = 0;
                            var postfix = Math.random();

                            module.exports = function (key) {
                                return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
                            };


                            /***/ }),

                        /***/ 3307:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_115419__) {

                            var NATIVE_SYMBOL = __nested_webpack_require_115419__(133);

                            module.exports = NATIVE_SYMBOL
                                /* global Symbol -- safe */
                                && !Symbol.sham
                                && typeof Symbol.iterator == 'symbol';


                            /***/ }),

                        /***/ 5112:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_115685__) {

                            var global = __nested_webpack_require_115685__(7854);
                            var shared = __nested_webpack_require_115685__(2309);
                            var has = __nested_webpack_require_115685__(6656);
                            var uid = __nested_webpack_require_115685__(9711);
                            var NATIVE_SYMBOL = __nested_webpack_require_115685__(133);
                            var USE_SYMBOL_AS_UID = __nested_webpack_require_115685__(3307);

                            var WellKnownSymbolsStore = shared('wks');
                            var Symbol = global.Symbol;
                            var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

                            module.exports = function (name) {
                                if (!has(WellKnownSymbolsStore, name)) {
                                    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
                                    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
                                } return WellKnownSymbolsStore[name];
                            };


                            /***/ }),

                        /***/ 1361:
                        /***/ (function(module) {

// a string of all valid unicode whitespaces
                            module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
                                '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


                            /***/ }),

                        /***/ 8264:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_116785__) {

                            "use strict";

                            var $ = __nested_webpack_require_116785__(2109);
                            var global = __nested_webpack_require_116785__(7854);
                            var arrayBufferModule = __nested_webpack_require_116785__(3331);
                            var setSpecies = __nested_webpack_require_116785__(6340);

                            var ARRAY_BUFFER = 'ArrayBuffer';
                            var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
                            var NativeArrayBuffer = global[ARRAY_BUFFER];

// `ArrayBuffer` constructor
// https://tc39.es/ecma262/#sec-arraybuffer-constructor
                            $({ global: true, forced: NativeArrayBuffer !== ArrayBuffer }, {
                                ArrayBuffer: ArrayBuffer
                            });

                            setSpecies(ARRAY_BUFFER);


                            /***/ }),

                        /***/ 2222:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_117427__) {

                            "use strict";

                            var $ = __nested_webpack_require_117427__(2109);
                            var fails = __nested_webpack_require_117427__(7293);
                            var isArray = __nested_webpack_require_117427__(3157);
                            var isObject = __nested_webpack_require_117427__(111);
                            var toObject = __nested_webpack_require_117427__(7908);
                            var toLength = __nested_webpack_require_117427__(7466);
                            var createProperty = __nested_webpack_require_117427__(6135);
                            var arraySpeciesCreate = __nested_webpack_require_117427__(5417);
                            var arrayMethodHasSpeciesSupport = __nested_webpack_require_117427__(1194);
                            var wellKnownSymbol = __nested_webpack_require_117427__(5112);
                            var V8_VERSION = __nested_webpack_require_117427__(7392);

                            var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
                            var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
                            var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
                            var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
                                var array = [];
                                array[IS_CONCAT_SPREADABLE] = false;
                                return array.concat()[0] !== array;
                            });

                            var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

                            var isConcatSpreadable = function (O) {
                                if (!isObject(O)) return false;
                                var spreadable = O[IS_CONCAT_SPREADABLE];
                                return spreadable !== undefined ? !!spreadable : isArray(O);
                            };

                            var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
                            $({ target: 'Array', proto: true, forced: FORCED }, {
                                // eslint-disable-next-line no-unused-vars -- required for `.length`
                                concat: function concat(arg) {
                                    var O = toObject(this);
                                    var A = arraySpeciesCreate(O, 0);
                                    var n = 0;
                                    var i, k, length, len, E;
                                    for (i = -1, length = arguments.length; i < length; i++) {
                                        E = i === -1 ? O : arguments[i];
                                        if (isConcatSpreadable(E)) {
                                            len = toLength(E.length);
                                            if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                                            for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
                                        } else {
                                            if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                                            createProperty(A, n++, E);
                                        }
                                    }
                                    A.length = n;
                                    return A;
                                }
                            });


                            /***/ }),

                        /***/ 7327:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_119834__) {

                            "use strict";

                            var $ = __nested_webpack_require_119834__(2109);
                            var $filter = __nested_webpack_require_119834__(2092).filter;
                            var arrayMethodHasSpeciesSupport = __nested_webpack_require_119834__(1194);

                            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
                            $({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
                                filter: function filter(callbackfn /* , thisArg */) {
                                    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                                }
                            });


                            /***/ }),

                        /***/ 2772:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_120523__) {

                            "use strict";

                            var $ = __nested_webpack_require_120523__(2109);
                            var $indexOf = __nested_webpack_require_120523__(1318).indexOf;
                            var arrayMethodIsStrict = __nested_webpack_require_120523__(9341);

                            var nativeIndexOf = [].indexOf;

                            var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
                            var STRICT_METHOD = arrayMethodIsStrict('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
                            $({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD }, {
                                indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
                                    return NEGATIVE_ZERO
                                        // convert -0 to +0
                                        ? nativeIndexOf.apply(this, arguments) || 0
                                        : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
                                }
                            });


                            /***/ }),

                        /***/ 6992:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_121364__) {

                            "use strict";

                            var toIndexedObject = __nested_webpack_require_121364__(5656);
                            var addToUnscopables = __nested_webpack_require_121364__(1223);
                            var Iterators = __nested_webpack_require_121364__(7497);
                            var InternalStateModule = __nested_webpack_require_121364__(9909);
                            var defineIterator = __nested_webpack_require_121364__(654);

                            var ARRAY_ITERATOR = 'Array Iterator';
                            var setInternalState = InternalStateModule.set;
                            var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
                            module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
                                setInternalState(this, {
                                    type: ARRAY_ITERATOR,
                                    target: toIndexedObject(iterated), // target
                                    index: 0,                          // next index
                                    kind: kind                         // kind
                                });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
                            }, function () {
                                var state = getInternalState(this);
                                var target = state.target;
                                var kind = state.kind;
                                var index = state.index++;
                                if (!target || index >= target.length) {
                                    state.target = undefined;
                                    return { value: undefined, done: true };
                                }
                                if (kind == 'keys') return { value: index, done: false };
                                if (kind == 'values') return { value: target[index], done: false };
                                return { value: [index, target[index]], done: false };
                            }, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
                            Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
                            addToUnscopables('keys');
                            addToUnscopables('values');
                            addToUnscopables('entries');


                            /***/ }),

                        /***/ 1249:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_123565__) {

                            "use strict";

                            var $ = __nested_webpack_require_123565__(2109);
                            var $map = __nested_webpack_require_123565__(2092).map;
                            var arrayMethodHasSpeciesSupport = __nested_webpack_require_123565__(1194);

                            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
                            $({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
                                map: function map(callbackfn /* , thisArg */) {
                                    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                                }
                            });


                            /***/ }),

                        /***/ 7042:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_124230__) {

                            "use strict";

                            var $ = __nested_webpack_require_124230__(2109);
                            var isObject = __nested_webpack_require_124230__(111);
                            var isArray = __nested_webpack_require_124230__(3157);
                            var toAbsoluteIndex = __nested_webpack_require_124230__(1400);
                            var toLength = __nested_webpack_require_124230__(7466);
                            var toIndexedObject = __nested_webpack_require_124230__(5656);
                            var createProperty = __nested_webpack_require_124230__(6135);
                            var wellKnownSymbol = __nested_webpack_require_124230__(5112);
                            var arrayMethodHasSpeciesSupport = __nested_webpack_require_124230__(1194);

                            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

                            var SPECIES = wellKnownSymbol('species');
                            var nativeSlice = [].slice;
                            var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
                            $({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
                                slice: function slice(start, end) {
                                    var O = toIndexedObject(this);
                                    var length = toLength(O.length);
                                    var k = toAbsoluteIndex(start, length);
                                    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
                                    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
                                    var Constructor, result, n;
                                    if (isArray(O)) {
                                        Constructor = O.constructor;
                                        // cross-realm fallback
                                        if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
                                            Constructor = undefined;
                                        } else if (isObject(Constructor)) {
                                            Constructor = Constructor[SPECIES];
                                            if (Constructor === null) Constructor = undefined;
                                        }
                                        if (Constructor === Array || Constructor === undefined) {
                                            return nativeSlice.call(O, k, fin);
                                        }
                                    }
                                    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
                                    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
                                    result.length = n;
                                    return result;
                                }
                            });


                            /***/ }),

                        /***/ 561:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_126211__) {

                            "use strict";

                            var $ = __nested_webpack_require_126211__(2109);
                            var toAbsoluteIndex = __nested_webpack_require_126211__(1400);
                            var toInteger = __nested_webpack_require_126211__(9958);
                            var toLength = __nested_webpack_require_126211__(7466);
                            var toObject = __nested_webpack_require_126211__(7908);
                            var arraySpeciesCreate = __nested_webpack_require_126211__(5417);
                            var createProperty = __nested_webpack_require_126211__(6135);
                            var arrayMethodHasSpeciesSupport = __nested_webpack_require_126211__(1194);

                            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

                            var max = Math.max;
                            var min = Math.min;
                            var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
                            var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
                            $({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
                                splice: function splice(start, deleteCount /* , ...items */) {
                                    var O = toObject(this);
                                    var len = toLength(O.length);
                                    var actualStart = toAbsoluteIndex(start, len);
                                    var argumentsLength = arguments.length;
                                    var insertCount, actualDeleteCount, A, k, from, to;
                                    if (argumentsLength === 0) {
                                        insertCount = actualDeleteCount = 0;
                                    } else if (argumentsLength === 1) {
                                        insertCount = 0;
                                        actualDeleteCount = len - actualStart;
                                    } else {
                                        insertCount = argumentsLength - 2;
                                        actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
                                    }
                                    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
                                        throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
                                    }
                                    A = arraySpeciesCreate(O, actualDeleteCount);
                                    for (k = 0; k < actualDeleteCount; k++) {
                                        from = actualStart + k;
                                        if (from in O) createProperty(A, k, O[from]);
                                    }
                                    A.length = actualDeleteCount;
                                    if (insertCount < actualDeleteCount) {
                                        for (k = actualStart; k < len - actualDeleteCount; k++) {
                                            from = k + actualDeleteCount;
                                            to = k + insertCount;
                                            if (from in O) O[to] = O[from];
                                            else delete O[to];
                                        }
                                        for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
                                    } else if (insertCount > actualDeleteCount) {
                                        for (k = len - actualDeleteCount; k > actualStart; k--) {
                                            from = k + actualDeleteCount - 1;
                                            to = k + insertCount - 1;
                                            if (from in O) O[to] = O[from];
                                            else delete O[to];
                                        }
                                    }
                                    for (k = 0; k < insertCount; k++) {
                                        O[k + actualStart] = arguments[k + 2];
                                    }
                                    O.length = len - actualDeleteCount + insertCount;
                                    return A;
                                }
                            });


                            /***/ }),

                        /***/ 8309:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_128857__) {

                            var DESCRIPTORS = __nested_webpack_require_128857__(9781);
                            var defineProperty = __nested_webpack_require_128857__(3070).f;

                            var FunctionPrototype = Function.prototype;
                            var FunctionPrototypeToString = FunctionPrototype.toString;
                            var nameRE = /^\s*function ([^ (]*)/;
                            var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
                            if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
                                defineProperty(FunctionPrototype, NAME, {
                                    configurable: true,
                                    get: function () {
                                        try {
                                            return FunctionPrototypeToString.call(this).match(nameRE)[1];
                                        } catch (error) {
                                            return '';
                                        }
                                    }
                                });
                            }


                            /***/ }),

                        /***/ 489:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_129614__) {

                            var $ = __nested_webpack_require_129614__(2109);
                            var fails = __nested_webpack_require_129614__(7293);
                            var toObject = __nested_webpack_require_129614__(7908);
                            var nativeGetPrototypeOf = __nested_webpack_require_129614__(9518);
                            var CORRECT_PROTOTYPE_GETTER = __nested_webpack_require_129614__(8544);

                            var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
                            $({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
                                getPrototypeOf: function getPrototypeOf(it) {
                                    return nativeGetPrototypeOf(toObject(it));
                                }
                            });



                            /***/ }),

                        /***/ 1539:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_130327__) {

                            var TO_STRING_TAG_SUPPORT = __nested_webpack_require_130327__(1694);
                            var redefine = __nested_webpack_require_130327__(1320);
                            var toString = __nested_webpack_require_130327__(288);

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
                            if (!TO_STRING_TAG_SUPPORT) {
                                redefine(Object.prototype, 'toString', toString, { unsafe: true });
                            }


                            /***/ }),

                        /***/ 4916:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_130780__) {

                            "use strict";

                            var $ = __nested_webpack_require_130780__(2109);
                            var exec = __nested_webpack_require_130780__(2261);

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
                            $({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
                                exec: exec
                            });


                            /***/ }),

                        /***/ 9714:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_131156__) {

                            "use strict";

                            var redefine = __nested_webpack_require_131156__(1320);
                            var anObject = __nested_webpack_require_131156__(9670);
                            var fails = __nested_webpack_require_131156__(7293);
                            var flags = __nested_webpack_require_131156__(7066);

                            var TO_STRING = 'toString';
                            var RegExpPrototype = RegExp.prototype;
                            var nativeToString = RegExpPrototype[TO_STRING];

                            var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
                            var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
                            if (NOT_GENERIC || INCORRECT_NAME) {
                                redefine(RegExp.prototype, TO_STRING, function toString() {
                                    var R = anObject(this);
                                    var p = String(R.source);
                                    var rf = R.flags;
                                    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
                                    return '/' + p + '/' + f;
                                }, { unsafe: true });
                            }


                            /***/ }),

                        /***/ 8783:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_132221__) {

                            "use strict";

                            var charAt = __nested_webpack_require_132221__(8710).charAt;
                            var InternalStateModule = __nested_webpack_require_132221__(9909);
                            var defineIterator = __nested_webpack_require_132221__(654);

                            var STRING_ITERATOR = 'String Iterator';
                            var setInternalState = InternalStateModule.set;
                            var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
                            defineIterator(String, 'String', function (iterated) {
                                setInternalState(this, {
                                    type: STRING_ITERATOR,
                                    string: String(iterated),
                                    index: 0
                                });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
                            }, function next() {
                                var state = getInternalState(this);
                                var string = state.string;
                                var index = state.index;
                                var point;
                                if (index >= string.length) return { value: undefined, done: true };
                                point = charAt(string, index);
                                state.index += point.length;
                                return { value: point, done: false };
                            });


                            /***/ }),

                        /***/ 4723:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_133333__) {

                            "use strict";

                            var fixRegExpWellKnownSymbolLogic = __nested_webpack_require_133333__(7007);
                            var anObject = __nested_webpack_require_133333__(9670);
                            var toLength = __nested_webpack_require_133333__(7466);
                            var requireObjectCoercible = __nested_webpack_require_133333__(4488);
                            var advanceStringIndex = __nested_webpack_require_133333__(1530);
                            var regExpExec = __nested_webpack_require_133333__(7651);

// @@match logic
                            fixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {
                                return [
                                    // `String.prototype.match` method
                                    // https://tc39.es/ecma262/#sec-string.prototype.match
                                    function match(regexp) {
                                        var O = requireObjectCoercible(this);
                                        var matcher = regexp == undefined ? undefined : regexp[MATCH];
                                        return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
                                    },
                                    // `RegExp.prototype[@@match]` method
                                    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
                                    function (regexp) {
                                        var res = maybeCallNative(nativeMatch, regexp, this);
                                        if (res.done) return res.value;

                                        var rx = anObject(regexp);
                                        var S = String(this);

                                        if (!rx.global) return regExpExec(rx, S);

                                        var fullUnicode = rx.unicode;
                                        rx.lastIndex = 0;
                                        var A = [];
                                        var n = 0;
                                        var result;
                                        while ((result = regExpExec(rx, S)) !== null) {
                                            var matchStr = String(result[0]);
                                            A[n] = matchStr;
                                            if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                                            n++;
                                        }
                                        return n === 0 ? null : A;
                                    }
                                ];
                            });


                            /***/ }),

                        /***/ 5306:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_134975__) {

                            "use strict";

                            var fixRegExpWellKnownSymbolLogic = __nested_webpack_require_134975__(7007);
                            var anObject = __nested_webpack_require_134975__(9670);
                            var toLength = __nested_webpack_require_134975__(7466);
                            var toInteger = __nested_webpack_require_134975__(9958);
                            var requireObjectCoercible = __nested_webpack_require_134975__(4488);
                            var advanceStringIndex = __nested_webpack_require_134975__(1530);
                            var getSubstitution = __nested_webpack_require_134975__(647);
                            var regExpExec = __nested_webpack_require_134975__(7651);

                            var max = Math.max;
                            var min = Math.min;

                            var maybeToString = function (it) {
                                return it === undefined ? it : String(it);
                            };

// @@replace logic
                            fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {
                                var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
                                var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
                                var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

                                return [
                                    // `String.prototype.replace` method
                                    // https://tc39.es/ecma262/#sec-string.prototype.replace
                                    function replace(searchValue, replaceValue) {
                                        var O = requireObjectCoercible(this);
                                        var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
                                        return replacer !== undefined
                                            ? replacer.call(searchValue, O, replaceValue)
                                            : nativeReplace.call(String(O), searchValue, replaceValue);
                                    },
                                    // `RegExp.prototype[@@replace]` method
                                    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
                                    function (regexp, replaceValue) {
                                        if (
                                            (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||
                                            (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
                                        ) {
                                            var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
                                            if (res.done) return res.value;
                                        }

                                        var rx = anObject(regexp);
                                        var S = String(this);

                                        var functionalReplace = typeof replaceValue === 'function';
                                        if (!functionalReplace) replaceValue = String(replaceValue);

                                        var global = rx.global;
                                        if (global) {
                                            var fullUnicode = rx.unicode;
                                            rx.lastIndex = 0;
                                        }
                                        var results = [];
                                        while (true) {
                                            var result = regExpExec(rx, S);
                                            if (result === null) break;

                                            results.push(result);
                                            if (!global) break;

                                            var matchStr = String(result[0]);
                                            if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                                        }

                                        var accumulatedResult = '';
                                        var nextSourcePosition = 0;
                                        for (var i = 0; i < results.length; i++) {
                                            result = results[i];

                                            var matched = String(result[0]);
                                            var position = max(min(toInteger(result.index), S.length), 0);
                                            var captures = [];
                                            // NOTE: This is equivalent to
                                            //   captures = result.slice(1).map(maybeToString)
                                            // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
                                            // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
                                            // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
                                            for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
                                            var namedCaptures = result.groups;
                                            if (functionalReplace) {
                                                var replacerArgs = [matched].concat(captures, position, S);
                                                if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
                                                var replacement = String(replaceValue.apply(undefined, replacerArgs));
                                            } else {
                                                replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
                                            }
                                            if (position >= nextSourcePosition) {
                                                accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
                                                nextSourcePosition = position + matched.length;
                                            }
                                        }
                                        return accumulatedResult + S.slice(nextSourcePosition);
                                    }
                                ];
                            });


                            /***/ }),

                        /***/ 3123:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_139010__) {

                            "use strict";

                            var fixRegExpWellKnownSymbolLogic = __nested_webpack_require_139010__(7007);
                            var isRegExp = __nested_webpack_require_139010__(7850);
                            var anObject = __nested_webpack_require_139010__(9670);
                            var requireObjectCoercible = __nested_webpack_require_139010__(4488);
                            var speciesConstructor = __nested_webpack_require_139010__(6707);
                            var advanceStringIndex = __nested_webpack_require_139010__(1530);
                            var toLength = __nested_webpack_require_139010__(7466);
                            var callRegExpExec = __nested_webpack_require_139010__(7651);
                            var regexpExec = __nested_webpack_require_139010__(2261);
                            var fails = __nested_webpack_require_139010__(7293);

                            var arrayPush = [].push;
                            var min = Math.min;
                            var MAX_UINT32 = 0xFFFFFFFF;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
                            var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });

// @@split logic
                            fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {
                                var internalSplit;
                                if (
                                    'abbc'.split(/(b)*/)[1] == 'c' ||
                                    // eslint-disable-next-line regexp/no-empty-group -- required for testing
                                    'test'.split(/(?:)/, -1).length != 4 ||
                                    'ab'.split(/(?:ab)*/).length != 2 ||
                                    '.'.split(/(.?)(.?)/).length != 4 ||
                                    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing
                                    '.'.split(/()()/).length > 1 ||
                                    ''.split(/.?/).length
                                ) {
                                    // based on es5-shim implementation, need to rework it
                                    internalSplit = function (separator, limit) {
                                        var string = String(requireObjectCoercible(this));
                                        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
                                        if (lim === 0) return [];
                                        if (separator === undefined) return [string];
                                        // If `separator` is not a regex, use native split
                                        if (!isRegExp(separator)) {
                                            return nativeSplit.call(string, separator, lim);
                                        }
                                        var output = [];
                                        var flags = (separator.ignoreCase ? 'i' : '') +
                                            (separator.multiline ? 'm' : '') +
                                            (separator.unicode ? 'u' : '') +
                                            (separator.sticky ? 'y' : '');
                                        var lastLastIndex = 0;
                                        // Make `global` and avoid `lastIndex` issues by working with a copy
                                        var separatorCopy = new RegExp(separator.source, flags + 'g');
                                        var match, lastIndex, lastLength;
                                        while (match = regexpExec.call(separatorCopy, string)) {
                                            lastIndex = separatorCopy.lastIndex;
                                            if (lastIndex > lastLastIndex) {
                                                output.push(string.slice(lastLastIndex, match.index));
                                                if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
                                                lastLength = match[0].length;
                                                lastLastIndex = lastIndex;
                                                if (output.length >= lim) break;
                                            }
                                            if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
                                        }
                                        if (lastLastIndex === string.length) {
                                            if (lastLength || !separatorCopy.test('')) output.push('');
                                        } else output.push(string.slice(lastLastIndex));
                                        return output.length > lim ? output.slice(0, lim) : output;
                                    };
                                    // Chakra, V8
                                } else if ('0'.split(undefined, 0).length) {
                                    internalSplit = function (separator, limit) {
                                        return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
                                    };
                                } else internalSplit = nativeSplit;

                                return [
                                    // `String.prototype.split` method
                                    // https://tc39.es/ecma262/#sec-string.prototype.split
                                    function split(separator, limit) {
                                        var O = requireObjectCoercible(this);
                                        var splitter = separator == undefined ? undefined : separator[SPLIT];
                                        return splitter !== undefined
                                            ? splitter.call(separator, O, limit)
                                            : internalSplit.call(String(O), separator, limit);
                                    },
                                    // `RegExp.prototype[@@split]` method
                                    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
                                    //
                                    // NOTE: This cannot be properly polyfilled in engines that don't support
                                    // the 'y' flag.
                                    function (regexp, limit) {
                                        var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
                                        if (res.done) return res.value;

                                        var rx = anObject(regexp);
                                        var S = String(this);
                                        var C = speciesConstructor(rx, RegExp);

                                        var unicodeMatching = rx.unicode;
                                        var flags = (rx.ignoreCase ? 'i' : '') +
                                            (rx.multiline ? 'm' : '') +
                                            (rx.unicode ? 'u' : '') +
                                            (SUPPORTS_Y ? 'y' : 'g');

                                        // ^(? + rx + ) is needed, in combination with some S slicing, to
                                        // simulate the 'y' flag.
                                        var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
                                        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
                                        if (lim === 0) return [];
                                        if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
                                        var p = 0;
                                        var q = 0;
                                        var A = [];
                                        while (q < S.length) {
                                            splitter.lastIndex = SUPPORTS_Y ? q : 0;
                                            var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
                                            var e;
                                            if (
                                                z === null ||
                                                (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
                                            ) {
                                                q = advanceStringIndex(S, q, unicodeMatching);
                                            } else {
                                                A.push(S.slice(p, q));
                                                if (A.length === lim) return A;
                                                for (var i = 1; i <= z.length - 1; i++) {
                                                    A.push(z[i]);
                                                    if (A.length === lim) return A;
                                                }
                                                q = p = e;
                                            }
                                        }
                                        A.push(S.slice(p));
                                        return A;
                                    }
                                ];
                            }, !SUPPORTS_Y);


                            /***/ }),

                        /***/ 3210:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_144619__) {

                            "use strict";

                            var $ = __nested_webpack_require_144619__(2109);
                            var $trim = __nested_webpack_require_144619__(3111).trim;
                            var forcedStringTrimMethod = __nested_webpack_require_144619__(6091);

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
                            $({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
                                trim: function trim() {
                                    return $trim(this);
                                }
                            });


                            /***/ }),

                        /***/ 2990:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_145111__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_145111__(260);
                            var $copyWithin = __nested_webpack_require_145111__(1048);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
                            exportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {
                                return $copyWithin.call(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
                            });


                            /***/ }),

                        /***/ 8927:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_145777__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_145777__(260);
                            var $every = __nested_webpack_require_145777__(2092).every;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.every` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
                            exportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {
                                return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 3105:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_146412__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_146412__(260);
                            var $fill = __nested_webpack_require_146412__(1285);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.fill` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
// eslint-disable-next-line no-unused-vars -- required for `.length`
                            exportTypedArrayMethod('fill', function fill(value /* , start, end */) {
                                return $fill.apply(aTypedArray(this), arguments);
                            });


                            /***/ }),

                        /***/ 5035:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_147058__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_147058__(260);
                            var $filter = __nested_webpack_require_147058__(2092).filter;
                            var fromSpeciesAndList = __nested_webpack_require_147058__(3074);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.filter` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
                            exportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {
                                var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                                return fromSpeciesAndList(this, list);
                            });


                            /***/ }),

                        /***/ 7174:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_147797__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_147797__(260);
                            var $findIndex = __nested_webpack_require_147797__(2092).findIndex;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
                            exportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {
                                return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 4345:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_148458__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_148458__(260);
                            var $find = __nested_webpack_require_148458__(2092).find;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.find` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
                            exportTypedArrayMethod('find', function find(predicate /* , thisArg */) {
                                return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 2846:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_149084__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_149084__(260);
                            var $forEach = __nested_webpack_require_149084__(2092).forEach;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.forEach` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
                            exportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {
                                $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 4731:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_149726__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_149726__(260);
                            var $includes = __nested_webpack_require_149726__(1318).includes;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.includes` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
                            exportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {
                                return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 7209:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_150390__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_150390__(260);
                            var $indexOf = __nested_webpack_require_150390__(1318).indexOf;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
                            exportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {
                                return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 6319:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_151047__) {

                            "use strict";

                            var global = __nested_webpack_require_151047__(7854);
                            var ArrayBufferViewCore = __nested_webpack_require_151047__(260);
                            var ArrayIterators = __nested_webpack_require_151047__(6992);
                            var wellKnownSymbol = __nested_webpack_require_151047__(5112);

                            var ITERATOR = wellKnownSymbol('iterator');
                            var Uint8Array = global.Uint8Array;
                            var arrayValues = ArrayIterators.values;
                            var arrayKeys = ArrayIterators.keys;
                            var arrayEntries = ArrayIterators.entries;
                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
                            var nativeTypedArrayIterator = Uint8Array && Uint8Array.prototype[ITERATOR];

                            var CORRECT_ITER_NAME = !!nativeTypedArrayIterator
                                && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);

                            var typedArrayValues = function values() {
                                return arrayValues.call(aTypedArray(this));
                            };

// `%TypedArray%.prototype.entries` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
                            exportTypedArrayMethod('entries', function entries() {
                                return arrayEntries.call(aTypedArray(this));
                            });
// `%TypedArray%.prototype.keys` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
                            exportTypedArrayMethod('keys', function keys() {
                                return arrayKeys.call(aTypedArray(this));
                            });
// `%TypedArray%.prototype.values` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
                            exportTypedArrayMethod('values', typedArrayValues, !CORRECT_ITER_NAME);
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
                            exportTypedArrayMethod(ITERATOR, typedArrayValues, !CORRECT_ITER_NAME);


                            /***/ }),

                        /***/ 8867:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_152782__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_152782__(260);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
                            var $join = [].join;

// `%TypedArray%.prototype.join` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
// eslint-disable-next-line no-unused-vars -- required for `.length`
                            exportTypedArrayMethod('join', function join(separator) {
                                return $join.apply(aTypedArray(this), arguments);
                            });


                            /***/ }),

                        /***/ 7789:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_153395__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_153395__(260);
                            var $lastIndexOf = __nested_webpack_require_153395__(6583);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
// eslint-disable-next-line no-unused-vars -- required for `.length`
                            exportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
                                return $lastIndexOf.apply(aTypedArray(this), arguments);
                            });


                            /***/ }),

                        /***/ 3739:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_154090__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_154090__(260);
                            var $map = __nested_webpack_require_154090__(2092).map;
                            var speciesConstructor = __nested_webpack_require_154090__(6707);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.map` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
                            exportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {
                                return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
                                    return new (aTypedArrayConstructor(speciesConstructor(O, O.constructor)))(length);
                                });
                            });


                            /***/ }),

                        /***/ 4483:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_154941__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_154941__(260);
                            var $reduceRight = __nested_webpack_require_154941__(3671).right;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduceRicht` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
                            exportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
                                return $reduceRight(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 9368:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_155635__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_155635__(260);
                            var $reduce = __nested_webpack_require_155635__(3671).left;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduce` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
                            exportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {
                                return $reduce(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 2056:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_156298__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_156298__(260);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
                            var floor = Math.floor;

// `%TypedArray%.prototype.reverse` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
                            exportTypedArrayMethod('reverse', function reverse() {
                                var that = this;
                                var length = aTypedArray(that).length;
                                var middle = floor(length / 2);
                                var index = 0;
                                var value;
                                while (index < middle) {
                                    value = that[index];
                                    that[index++] = that[--length];
                                    that[length] = value;
                                } return that;
                            });


                            /***/ }),

                        /***/ 3462:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_157051__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_157051__(260);
                            var toLength = __nested_webpack_require_157051__(7466);
                            var toOffset = __nested_webpack_require_157051__(4590);
                            var toObject = __nested_webpack_require_157051__(7908);
                            var fails = __nested_webpack_require_157051__(7293);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

                            var FORCED = fails(function () {
                                /* global Int8Array -- safe */
                                new Int8Array(1).set({});
                            });

// `%TypedArray%.prototype.set` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
                            exportTypedArrayMethod('set', function set(arrayLike /* , offset */) {
                                aTypedArray(this);
                                var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
                                var length = this.length;
                                var src = toObject(arrayLike);
                                var len = toLength(src.length);
                                var index = 0;
                                if (len + offset > length) throw RangeError('Wrong length');
                                while (index < len) this[offset + index] = src[index++];
                            }, FORCED);


                            /***/ }),

                        /***/ 678:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_158136__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_158136__(260);
                            var speciesConstructor = __nested_webpack_require_158136__(6707);
                            var fails = __nested_webpack_require_158136__(7293);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
                            var $slice = [].slice;

                            var FORCED = fails(function () {
                                /* global Int8Array -- safe */
                                new Int8Array(1).slice();
                            });

// `%TypedArray%.prototype.slice` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
                            exportTypedArrayMethod('slice', function slice(start, end) {
                                var list = $slice.call(aTypedArray(this), start, end);
                                var C = speciesConstructor(this, this.constructor);
                                var index = 0;
                                var length = list.length;
                                var result = new (aTypedArrayConstructor(C))(length);
                                while (length > index) result[index] = list[index++];
                                return result;
                            }, FORCED);


                            /***/ }),

                        /***/ 7462:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_159191__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_159191__(260);
                            var $some = __nested_webpack_require_159191__(2092).some;

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.some` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
                            exportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {
                                return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                            });


                            /***/ }),

                        /***/ 3824:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_159819__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_159819__(260);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
                            var $sort = [].sort;

// `%TypedArray%.prototype.sort` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
                            exportTypedArrayMethod('sort', function sort(comparefn) {
                                return $sort.call(aTypedArray(this), comparefn);
                            });


                            /***/ }),

                        /***/ 5021:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_160362__) {

                            "use strict";

                            var ArrayBufferViewCore = __nested_webpack_require_160362__(260);
                            var toLength = __nested_webpack_require_160362__(7466);
                            var toAbsoluteIndex = __nested_webpack_require_160362__(1400);
                            var speciesConstructor = __nested_webpack_require_160362__(6707);

                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.subarray` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
                            exportTypedArrayMethod('subarray', function subarray(begin, end) {
                                var O = aTypedArray(this);
                                var length = O.length;
                                var beginIndex = toAbsoluteIndex(begin, length);
                                return new (speciesConstructor(O, O.constructor))(
                                    O.buffer,
                                    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,
                                    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)
                                );
                            });


                            /***/ }),

                        /***/ 2974:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_161310__) {

                            "use strict";

                            var global = __nested_webpack_require_161310__(7854);
                            var ArrayBufferViewCore = __nested_webpack_require_161310__(260);
                            var fails = __nested_webpack_require_161310__(7293);

                            var Int8Array = global.Int8Array;
                            var aTypedArray = ArrayBufferViewCore.aTypedArray;
                            var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
                            var $toLocaleString = [].toLocaleString;
                            var $slice = [].slice;

// iOS Safari 6.x fails here
                            var TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {
                                $toLocaleString.call(new Int8Array(1));
                            });

                            var FORCED = fails(function () {
                                return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();
                            }) || !fails(function () {
                                Int8Array.prototype.toLocaleString.call([1, 2]);
                            });

// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
                            exportTypedArrayMethod('toLocaleString', function toLocaleString() {
                                return $toLocaleString.apply(TO_LOCALE_STRING_BUG ? $slice.call(aTypedArray(this)) : aTypedArray(this), arguments);
                            }, FORCED);


                            /***/ }),

                        /***/ 5016:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_162445__) {

                            "use strict";

                            var exportTypedArrayMethod = __nested_webpack_require_162445__(260).exportTypedArrayMethod;
                            var fails = __nested_webpack_require_162445__(7293);
                            var global = __nested_webpack_require_162445__(7854);

                            var Uint8Array = global.Uint8Array;
                            var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};
                            var arrayToString = [].toString;
                            var arrayJoin = [].join;

                            if (fails(function () { arrayToString.call({}); })) {
                                arrayToString = function toString() {
                                    return arrayJoin.call(this);
                                };
                            }

                            var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;

// `%TypedArray%.prototype.toString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
                            exportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);


                            /***/ }),

                        /***/ 2472:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_163286__) {

                            var createTypedArrayConstructor = __nested_webpack_require_163286__(9843);

// `Uint8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
                            createTypedArrayConstructor('Uint8', function (init) {
                                return function Uint8Array(data, byteOffset, length) {
                                    return init(this, data, byteOffset, length);
                                };
                            });


                            /***/ }),

                        /***/ 4747:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_163713__) {

                            var global = __nested_webpack_require_163713__(7854);
                            var DOMIterables = __nested_webpack_require_163713__(8324);
                            var forEach = __nested_webpack_require_163713__(8533);
                            var createNonEnumerableProperty = __nested_webpack_require_163713__(8880);

                            for (var COLLECTION_NAME in DOMIterables) {
                                var Collection = global[COLLECTION_NAME];
                                var CollectionPrototype = Collection && Collection.prototype;
                                // some Chrome versions have non-configurable methods on DOMTokenList
                                if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
                                    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
                                } catch (error) {
                                    CollectionPrototype.forEach = forEach;
                                }
                            }


                            /***/ }),

                        /***/ 3948:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_164461__) {

                            var global = __nested_webpack_require_164461__(7854);
                            var DOMIterables = __nested_webpack_require_164461__(8324);
                            var ArrayIteratorMethods = __nested_webpack_require_164461__(6992);
                            var createNonEnumerableProperty = __nested_webpack_require_164461__(8880);
                            var wellKnownSymbol = __nested_webpack_require_164461__(5112);

                            var ITERATOR = wellKnownSymbol('iterator');
                            var TO_STRING_TAG = wellKnownSymbol('toStringTag');
                            var ArrayValues = ArrayIteratorMethods.values;

                            for (var COLLECTION_NAME in DOMIterables) {
                                var Collection = global[COLLECTION_NAME];
                                var CollectionPrototype = Collection && Collection.prototype;
                                if (CollectionPrototype) {
                                    // some Chrome versions have non-configurable methods on DOMTokenList
                                    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
                                        createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
                                    } catch (error) {
                                        CollectionPrototype[ITERATOR] = ArrayValues;
                                    }
                                    if (!CollectionPrototype[TO_STRING_TAG]) {
                                        createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
                                    }
                                    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
                                        // some Chrome versions have non-configurable methods on DOMTokenList
                                        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
                                            createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
                                        } catch (error) {
                                            CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
                                        }
                                    }
                                }
                            }


                            /***/ }),

                        /***/ 1637:
                        /***/ (function(module, __unused_webpack_exports, __nested_webpack_require_166049__) {

                            "use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
                            __nested_webpack_require_166049__(6992);
                            var $ = __nested_webpack_require_166049__(2109);
                            var getBuiltIn = __nested_webpack_require_166049__(5005);
                            var USE_NATIVE_URL = __nested_webpack_require_166049__(590);
                            var redefine = __nested_webpack_require_166049__(1320);
                            var redefineAll = __nested_webpack_require_166049__(2248);
                            var setToStringTag = __nested_webpack_require_166049__(8003);
                            var createIteratorConstructor = __nested_webpack_require_166049__(4994);
                            var InternalStateModule = __nested_webpack_require_166049__(9909);
                            var anInstance = __nested_webpack_require_166049__(5787);
                            var hasOwn = __nested_webpack_require_166049__(6656);
                            var bind = __nested_webpack_require_166049__(9974);
                            var classof = __nested_webpack_require_166049__(648);
                            var anObject = __nested_webpack_require_166049__(9670);
                            var isObject = __nested_webpack_require_166049__(111);
                            var create = __nested_webpack_require_166049__(30);
                            var createPropertyDescriptor = __nested_webpack_require_166049__(9114);
                            var getIterator = __nested_webpack_require_166049__(8554);
                            var getIteratorMethod = __nested_webpack_require_166049__(1246);
                            var wellKnownSymbol = __nested_webpack_require_166049__(5112);

                            var $fetch = getBuiltIn('fetch');
                            var Headers = getBuiltIn('Headers');
                            var ITERATOR = wellKnownSymbol('iterator');
                            var URL_SEARCH_PARAMS = 'URLSearchParams';
                            var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
                            var setInternalState = InternalStateModule.set;
                            var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
                            var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);

                            var plus = /\+/g;
                            var sequences = Array(4);

                            var percentSequence = function (bytes) {
                                return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
                            };

                            var percentDecode = function (sequence) {
                                try {
                                    return decodeURIComponent(sequence);
                                } catch (error) {
                                    return sequence;
                                }
                            };

                            var deserialize = function (it) {
                                var result = it.replace(plus, ' ');
                                var bytes = 4;
                                try {
                                    return decodeURIComponent(result);
                                } catch (error) {
                                    while (bytes) {
                                        result = result.replace(percentSequence(bytes--), percentDecode);
                                    }
                                    return result;
                                }
                            };

                            var find = /[!'()~]|%20/g;

                            var replace = {
                                '!': '%21',
                                "'": '%27',
                                '(': '%28',
                                ')': '%29',
                                '~': '%7E',
                                '%20': '+'
                            };

                            var replacer = function (match) {
                                return replace[match];
                            };

                            var serialize = function (it) {
                                return encodeURIComponent(it).replace(find, replacer);
                            };

                            var parseSearchParams = function (result, query) {
                                if (query) {
                                    var attributes = query.split('&');
                                    var index = 0;
                                    var attribute, entry;
                                    while (index < attributes.length) {
                                        attribute = attributes[index++];
                                        if (attribute.length) {
                                            entry = attribute.split('=');
                                            result.push({
                                                key: deserialize(entry.shift()),
                                                value: deserialize(entry.join('='))
                                            });
                                        }
                                    }
                                }
                            };

                            var updateSearchParams = function (query) {
                                this.entries.length = 0;
                                parseSearchParams(this.entries, query);
                            };

                            var validateArgumentsLength = function (passed, required) {
                                if (passed < required) throw TypeError('Not enough arguments');
                            };

                            var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
                                setInternalState(this, {
                                    type: URL_SEARCH_PARAMS_ITERATOR,
                                    iterator: getIterator(getInternalParamsState(params).entries),
                                    kind: kind
                                });
                            }, 'Iterator', function next() {
                                var state = getInternalIteratorState(this);
                                var kind = state.kind;
                                var step = state.iterator.next();
                                var entry = step.value;
                                if (!step.done) {
                                    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
                                } return step;
                            });

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
                            var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
                                anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);
                                var init = arguments.length > 0 ? arguments[0] : undefined;
                                var that = this;
                                var entries = [];
                                var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;

                                setInternalState(that, {
                                    type: URL_SEARCH_PARAMS,
                                    entries: entries,
                                    updateURL: function () { /* empty */ },
                                    updateSearchParams: updateSearchParams
                                });

                                if (init !== undefined) {
                                    if (isObject(init)) {
                                        iteratorMethod = getIteratorMethod(init);
                                        if (typeof iteratorMethod === 'function') {
                                            iterator = iteratorMethod.call(init);
                                            next = iterator.next;
                                            while (!(step = next.call(iterator)).done) {
                                                entryIterator = getIterator(anObject(step.value));
                                                entryNext = entryIterator.next;
                                                if (
                                                    (first = entryNext.call(entryIterator)).done ||
                                                    (second = entryNext.call(entryIterator)).done ||
                                                    !entryNext.call(entryIterator).done
                                                ) throw TypeError('Expected sequence with length 2');
                                                entries.push({ key: first.value + '', value: second.value + '' });
                                            }
                                        } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });
                                    } else {
                                        parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');
                                    }
                                }
                            };

                            var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

                            redefineAll(URLSearchParamsPrototype, {
                                // `URLSearchParams.prototype.append` method
                                // https://url.spec.whatwg.org/#dom-urlsearchparams-append
                                append: function append(name, value) {
                                    validateArgumentsLength(arguments.length, 2);
                                    var state = getInternalParamsState(this);
                                    state.entries.push({ key: name + '', value: value + '' });
                                    state.updateURL();
                                },
                                // `URLSearchParams.prototype.delete` method
                                // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
                                'delete': function (name) {
                                    validateArgumentsLength(arguments.length, 1);
                                    var state = getInternalParamsState(this);
                                    var entries = state.entries;
                                    var key = name + '';
                                    var index = 0;
                                    while (index < entries.length) {
                                        if (entries[index].key === key) entries.splice(index, 1);
                                        else index++;
                                    }
                                    state.updateURL();
                                },
                                // `URLSearchParams.prototype.get` method
                                // https://url.spec.whatwg.org/#dom-urlsearchparams-get
                                get: function get(name) {
                                    validateArgumentsLength(arguments.length, 1);
                                    var entries = getInternalParamsState(this).entries;
                                    var key = name + '';
                                    var index = 0;
                                    for (; index < entries.length; index++) {
                                        if (entries[index].key === key) return entries[index].value;
                                    }
                                    return null;
                                },
                                // `URLSearchParams.prototype.getAll` method
                                // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
                                getAll: function getAll(name) {
                                    validateArgumentsLength(arguments.length, 1);
                                    var entries = getInternalParamsState(this).entries;
                                    var key = name + '';
                                    var result = [];
                                    var index = 0;
                                    for (; index < entries.length; index++) {
                                        if (entries[index].key === key) result.push(entries[index].value);
                                    }
                                    return result;
                                },
                                // `URLSearchParams.prototype.has` method
                                // https://url.spec.whatwg.org/#dom-urlsearchparams-has
                                has: function has(name) {
                                    validateArgumentsLength(arguments.length, 1);
                                    var entries = getInternalParamsState(this).entries;
                                    var key = name + '';
                                    var index = 0;
                                    while (index < entries.length) {
                                        if (entries[index++].key === key) return true;
                                    }
                                    return false;
                                },
                                // `URLSearchParams.prototype.set` method
                                // https://url.spec.whatwg.org/#dom-urlsearchparams-set
                                set: function set(name, value) {
                                    validateArgumentsLength(arguments.length, 1);
                                    var state = getInternalParamsState(this);
                                    var entries = state.entries;
                                    var found = false;
                                    var key = name + '';
                                    var val = value + '';
                                    var index = 0;
                                    var entry;
                                    for (; index < entries.length; index++) {
                                        entry = entries[index];
                                        if (entry.key === key) {
                                            if (found) entries.splice(index--, 1);
                                            else {
                                                found = true;
                                                entry.value = val;
                                            }
                                        }
                                    }
                                    if (!found) entries.push({ key: key, value: val });
                                    state.updateURL();
                                },
                                // `URLSearchParams.prototype.sort` method
                                // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
                                sort: function sort() {
                                    var state = getInternalParamsState(this);
                                    var entries = state.entries;
                                    // Array#sort is not stable in some engines
                                    var slice = entries.slice();
                                    var entry, entriesIndex, sliceIndex;
                                    entries.length = 0;
                                    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {
                                        entry = slice[sliceIndex];
                                        for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {
                                            if (entries[entriesIndex].key > entry.key) {
                                                entries.splice(entriesIndex, 0, entry);
                                                break;
                                            }
                                        }
                                        if (entriesIndex === sliceIndex) entries.push(entry);
                                    }
                                    state.updateURL();
                                },
                                // `URLSearchParams.prototype.forEach` method
                                forEach: function forEach(callback /* , thisArg */) {
                                    var entries = getInternalParamsState(this).entries;
                                    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);
                                    var index = 0;
                                    var entry;
                                    while (index < entries.length) {
                                        entry = entries[index++];
                                        boundFunction(entry.value, entry.key, this);
                                    }
                                },
                                // `URLSearchParams.prototype.keys` method
                                keys: function keys() {
                                    return new URLSearchParamsIterator(this, 'keys');
                                },
                                // `URLSearchParams.prototype.values` method
                                values: function values() {
                                    return new URLSearchParamsIterator(this, 'values');
                                },
                                // `URLSearchParams.prototype.entries` method
                                entries: function entries() {
                                    return new URLSearchParamsIterator(this, 'entries');
                                }
                            }, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
                            redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
                            redefine(URLSearchParamsPrototype, 'toString', function toString() {
                                var entries = getInternalParamsState(this).entries;
                                var result = [];
                                var index = 0;
                                var entry;
                                while (index < entries.length) {
                                    entry = entries[index++];
                                    result.push(serialize(entry.key) + '=' + serialize(entry.value));
                                } return result.join('&');
                            }, { enumerable: true });

                            setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

                            $({ global: true, forced: !USE_NATIVE_URL }, {
                                URLSearchParams: URLSearchParamsConstructor
                            });

// Wrap `fetch` for correct work with polyfilled `URLSearchParams`
// https://github.com/zloirock/core-js/issues/674
                            if (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {
                                $({ global: true, enumerable: true, forced: true }, {
                                    fetch: function fetch(input /* , init */) {
                                        var args = [input];
                                        var init, body, headers;
                                        if (arguments.length > 1) {
                                            init = arguments[1];
                                            if (isObject(init)) {
                                                body = init.body;
                                                if (classof(body) === URL_SEARCH_PARAMS) {
                                                    headers = init.headers ? new Headers(init.headers) : new Headers();
                                                    if (!headers.has('content-type')) {
                                                        headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
                                                    }
                                                    init = create(init, {
                                                        body: createPropertyDescriptor(0, String(body)),
                                                        headers: createPropertyDescriptor(0, headers)
                                                    });
                                                }
                                            }
                                            args.push(init);
                                        } return $fetch.apply(this, args);
                                    }
                                });
                            }

                            module.exports = {
                                URLSearchParams: URLSearchParamsConstructor,
                                getState: getInternalParamsState
                            };


                            /***/ }),

                        /***/ 285:
                        /***/ (function(__unused_webpack_module, __unused_webpack_exports, __nested_webpack_require_177789__) {

                            "use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
                            __nested_webpack_require_177789__(8783);
                            var $ = __nested_webpack_require_177789__(2109);
                            var DESCRIPTORS = __nested_webpack_require_177789__(9781);
                            var USE_NATIVE_URL = __nested_webpack_require_177789__(590);
                            var global = __nested_webpack_require_177789__(7854);
                            var defineProperties = __nested_webpack_require_177789__(6048);
                            var redefine = __nested_webpack_require_177789__(1320);
                            var anInstance = __nested_webpack_require_177789__(5787);
                            var has = __nested_webpack_require_177789__(6656);
                            var assign = __nested_webpack_require_177789__(1574);
                            var arrayFrom = __nested_webpack_require_177789__(8457);
                            var codeAt = __nested_webpack_require_177789__(8710).codeAt;
                            var toASCII = __nested_webpack_require_177789__(3197);
                            var setToStringTag = __nested_webpack_require_177789__(8003);
                            var URLSearchParamsModule = __nested_webpack_require_177789__(1637);
                            var InternalStateModule = __nested_webpack_require_177789__(9909);

                            var NativeURL = global.URL;
                            var URLSearchParams = URLSearchParamsModule.URLSearchParams;
                            var getInternalSearchParamsState = URLSearchParamsModule.getState;
                            var setInternalState = InternalStateModule.set;
                            var getInternalURLState = InternalStateModule.getterFor('URL');
                            var floor = Math.floor;
                            var pow = Math.pow;

                            var INVALID_AUTHORITY = 'Invalid authority';
                            var INVALID_SCHEME = 'Invalid scheme';
                            var INVALID_HOST = 'Invalid host';
                            var INVALID_PORT = 'Invalid port';

                            var ALPHA = /[A-Za-z]/;
                            var ALPHANUMERIC = /[\d+-.A-Za-z]/;
                            var DIGIT = /\d/;
                            var HEX_START = /^(0x|0X)/;
                            var OCT = /^[0-7]+$/;
                            var DEC = /^\d+$/;
                            var HEX = /^[\dA-Fa-f]+$/;
                            /* eslint-disable no-control-regex -- safe */
                            var FORBIDDEN_HOST_CODE_POINT = /[\u0000\t\u000A\u000D #%/:?@[\\]]/;
                            var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\u0000\t\u000A\u000D #/:?@[\\]]/;
                            var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g;
                            var TAB_AND_NEW_LINE = /[\t\u000A\u000D]/g;
                            /* eslint-enable no-control-regex -- safe */
                            var EOF;

                            var parseHost = function (url, input) {
                                var result, codePoints, index;
                                if (input.charAt(0) == '[') {
                                    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;
                                    result = parseIPv6(input.slice(1, -1));
                                    if (!result) return INVALID_HOST;
                                    url.host = result;
                                    // opaque host
                                } else if (!isSpecial(url)) {
                                    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;
                                    result = '';
                                    codePoints = arrayFrom(input);
                                    for (index = 0; index < codePoints.length; index++) {
                                        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
                                    }
                                    url.host = result;
                                } else {
                                    input = toASCII(input);
                                    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;
                                    result = parseIPv4(input);
                                    if (result === null) return INVALID_HOST;
                                    url.host = result;
                                }
                            };

                            var parseIPv4 = function (input) {
                                var parts = input.split('.');
                                var partsLength, numbers, index, part, radix, number, ipv4;
                                if (parts.length && parts[parts.length - 1] == '') {
                                    parts.pop();
                                }
                                partsLength = parts.length;
                                if (partsLength > 4) return input;
                                numbers = [];
                                for (index = 0; index < partsLength; index++) {
                                    part = parts[index];
                                    if (part == '') return input;
                                    radix = 10;
                                    if (part.length > 1 && part.charAt(0) == '0') {
                                        radix = HEX_START.test(part) ? 16 : 8;
                                        part = part.slice(radix == 8 ? 1 : 2);
                                    }
                                    if (part === '') {
                                        number = 0;
                                    } else {
                                        if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;
                                        number = parseInt(part, radix);
                                    }
                                    numbers.push(number);
                                }
                                for (index = 0; index < partsLength; index++) {
                                    number = numbers[index];
                                    if (index == partsLength - 1) {
                                        if (number >= pow(256, 5 - partsLength)) return null;
                                    } else if (number > 255) return null;
                                }
                                ipv4 = numbers.pop();
                                for (index = 0; index < numbers.length; index++) {
                                    ipv4 += numbers[index] * pow(256, 3 - index);
                                }
                                return ipv4;
                            };

// eslint-disable-next-line max-statements -- TODO
                            var parseIPv6 = function (input) {
                                var address = [0, 0, 0, 0, 0, 0, 0, 0];
                                var pieceIndex = 0;
                                var compress = null;
                                var pointer = 0;
                                var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

                                var char = function () {
                                    return input.charAt(pointer);
                                };

                                if (char() == ':') {
                                    if (input.charAt(1) != ':') return;
                                    pointer += 2;
                                    pieceIndex++;
                                    compress = pieceIndex;
                                }
                                while (char()) {
                                    if (pieceIndex == 8) return;
                                    if (char() == ':') {
                                        if (compress !== null) return;
                                        pointer++;
                                        pieceIndex++;
                                        compress = pieceIndex;
                                        continue;
                                    }
                                    value = length = 0;
                                    while (length < 4 && HEX.test(char())) {
                                        value = value * 16 + parseInt(char(), 16);
                                        pointer++;
                                        length++;
                                    }
                                    if (char() == '.') {
                                        if (length == 0) return;
                                        pointer -= length;
                                        if (pieceIndex > 6) return;
                                        numbersSeen = 0;
                                        while (char()) {
                                            ipv4Piece = null;
                                            if (numbersSeen > 0) {
                                                if (char() == '.' && numbersSeen < 4) pointer++;
                                                else return;
                                            }
                                            if (!DIGIT.test(char())) return;
                                            while (DIGIT.test(char())) {
                                                number = parseInt(char(), 10);
                                                if (ipv4Piece === null) ipv4Piece = number;
                                                else if (ipv4Piece == 0) return;
                                                else ipv4Piece = ipv4Piece * 10 + number;
                                                if (ipv4Piece > 255) return;
                                                pointer++;
                                            }
                                            address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
                                            numbersSeen++;
                                            if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
                                        }
                                        if (numbersSeen != 4) return;
                                        break;
                                    } else if (char() == ':') {
                                        pointer++;
                                        if (!char()) return;
                                    } else if (char()) return;
                                    address[pieceIndex++] = value;
                                }
                                if (compress !== null) {
                                    swaps = pieceIndex - compress;
                                    pieceIndex = 7;
                                    while (pieceIndex != 0 && swaps > 0) {
                                        swap = address[pieceIndex];
                                        address[pieceIndex--] = address[compress + swaps - 1];
                                        address[compress + --swaps] = swap;
                                    }
                                } else if (pieceIndex != 8) return;
                                return address;
                            };

                            var findLongestZeroSequence = function (ipv6) {
                                var maxIndex = null;
                                var maxLength = 1;
                                var currStart = null;
                                var currLength = 0;
                                var index = 0;
                                for (; index < 8; index++) {
                                    if (ipv6[index] !== 0) {
                                        if (currLength > maxLength) {
                                            maxIndex = currStart;
                                            maxLength = currLength;
                                        }
                                        currStart = null;
                                        currLength = 0;
                                    } else {
                                        if (currStart === null) currStart = index;
                                        ++currLength;
                                    }
                                }
                                if (currLength > maxLength) {
                                    maxIndex = currStart;
                                    maxLength = currLength;
                                }
                                return maxIndex;
                            };

                            var serializeHost = function (host) {
                                var result, index, compress, ignore0;
                                // ipv4
                                if (typeof host == 'number') {
                                    result = [];
                                    for (index = 0; index < 4; index++) {
                                        result.unshift(host % 256);
                                        host = floor(host / 256);
                                    } return result.join('.');
                                    // ipv6
                                } else if (typeof host == 'object') {
                                    result = '';
                                    compress = findLongestZeroSequence(host);
                                    for (index = 0; index < 8; index++) {
                                        if (ignore0 && host[index] === 0) continue;
                                        if (ignore0) ignore0 = false;
                                        if (compress === index) {
                                            result += index ? ':' : '::';
                                            ignore0 = true;
                                        } else {
                                            result += host[index].toString(16);
                                            if (index < 7) result += ':';
                                        }
                                    }
                                    return '[' + result + ']';
                                } return host;
                            };

                            var C0ControlPercentEncodeSet = {};
                            var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
                                ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
                            });
                            var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
                                '#': 1, '?': 1, '{': 1, '}': 1
                            });
                            var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
                                '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
                            });

                            var percentEncode = function (char, set) {
                                var code = codeAt(char, 0);
                                return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);
                            };

                            var specialSchemes = {
                                ftp: 21,
                                file: null,
                                http: 80,
                                https: 443,
                                ws: 80,
                                wss: 443
                            };

                            var isSpecial = function (url) {
                                return has(specialSchemes, url.scheme);
                            };

                            var includesCredentials = function (url) {
                                return url.username != '' || url.password != '';
                            };

                            var cannotHaveUsernamePasswordPort = function (url) {
                                return !url.host || url.cannotBeABaseURL || url.scheme == 'file';
                            };

                            var isWindowsDriveLetter = function (string, normalized) {
                                var second;
                                return string.length == 2 && ALPHA.test(string.charAt(0))
                                    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));
                            };

                            var startsWithWindowsDriveLetter = function (string) {
                                var third;
                                return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (
                                    string.length == 2 ||
                                    ((third = string.charAt(2)) === '/' || third === '\\' || third === '?' || third === '#')
                                );
                            };

                            var shortenURLsPath = function (url) {
                                var path = url.path;
                                var pathSize = path.length;
                                if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
                                    path.pop();
                                }
                            };

                            var isSingleDot = function (segment) {
                                return segment === '.' || segment.toLowerCase() === '%2e';
                            };

                            var isDoubleDot = function (segment) {
                                segment = segment.toLowerCase();
                                return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
                            };

// States:
                            var SCHEME_START = {};
                            var SCHEME = {};
                            var NO_SCHEME = {};
                            var SPECIAL_RELATIVE_OR_AUTHORITY = {};
                            var PATH_OR_AUTHORITY = {};
                            var RELATIVE = {};
                            var RELATIVE_SLASH = {};
                            var SPECIAL_AUTHORITY_SLASHES = {};
                            var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
                            var AUTHORITY = {};
                            var HOST = {};
                            var HOSTNAME = {};
                            var PORT = {};
                            var FILE = {};
                            var FILE_SLASH = {};
                            var FILE_HOST = {};
                            var PATH_START = {};
                            var PATH = {};
                            var CANNOT_BE_A_BASE_URL_PATH = {};
                            var QUERY = {};
                            var FRAGMENT = {};

// eslint-disable-next-line max-statements -- TODO
                            var parseURL = function (url, input, stateOverride, base) {
                                var state = stateOverride || SCHEME_START;
                                var pointer = 0;
                                var buffer = '';
                                var seenAt = false;
                                var seenBracket = false;
                                var seenPasswordToken = false;
                                var codePoints, char, bufferCodePoints, failure;

                                if (!stateOverride) {
                                    url.scheme = '';
                                    url.username = '';
                                    url.password = '';
                                    url.host = null;
                                    url.port = null;
                                    url.path = [];
                                    url.query = null;
                                    url.fragment = null;
                                    url.cannotBeABaseURL = false;
                                    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
                                }

                                input = input.replace(TAB_AND_NEW_LINE, '');

                                codePoints = arrayFrom(input);

                                while (pointer <= codePoints.length) {
                                    char = codePoints[pointer];
                                    switch (state) {
                                        case SCHEME_START:
                                            if (char && ALPHA.test(char)) {
                                                buffer += char.toLowerCase();
                                                state = SCHEME;
                                            } else if (!stateOverride) {
                                                state = NO_SCHEME;
                                                continue;
                                            } else return INVALID_SCHEME;
                                            break;

                                        case SCHEME:
                                            if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {
                                                buffer += char.toLowerCase();
                                            } else if (char == ':') {
                                                if (stateOverride && (
                                                    (isSpecial(url) != has(specialSchemes, buffer)) ||
                                                    (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||
                                                    (url.scheme == 'file' && !url.host)
                                                )) return;
                                                url.scheme = buffer;
                                                if (stateOverride) {
                                                    if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;
                                                    return;
                                                }
                                                buffer = '';
                                                if (url.scheme == 'file') {
                                                    state = FILE;
                                                } else if (isSpecial(url) && base && base.scheme == url.scheme) {
                                                    state = SPECIAL_RELATIVE_OR_AUTHORITY;
                                                } else if (isSpecial(url)) {
                                                    state = SPECIAL_AUTHORITY_SLASHES;
                                                } else if (codePoints[pointer + 1] == '/') {
                                                    state = PATH_OR_AUTHORITY;
                                                    pointer++;
                                                } else {
                                                    url.cannotBeABaseURL = true;
                                                    url.path.push('');
                                                    state = CANNOT_BE_A_BASE_URL_PATH;
                                                }
                                            } else if (!stateOverride) {
                                                buffer = '';
                                                state = NO_SCHEME;
                                                pointer = 0;
                                                continue;
                                            } else return INVALID_SCHEME;
                                            break;

                                        case NO_SCHEME:
                                            if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;
                                            if (base.cannotBeABaseURL && char == '#') {
                                                url.scheme = base.scheme;
                                                url.path = base.path.slice();
                                                url.query = base.query;
                                                url.fragment = '';
                                                url.cannotBeABaseURL = true;
                                                state = FRAGMENT;
                                                break;
                                            }
                                            state = base.scheme == 'file' ? FILE : RELATIVE;
                                            continue;

                                        case SPECIAL_RELATIVE_OR_AUTHORITY:
                                            if (char == '/' && codePoints[pointer + 1] == '/') {
                                                state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
                                                pointer++;
                                            } else {
                                                state = RELATIVE;
                                                continue;
                                            } break;

                                        case PATH_OR_AUTHORITY:
                                            if (char == '/') {
                                                state = AUTHORITY;
                                                break;
                                            } else {
                                                state = PATH;
                                                continue;
                                            }

                                        case RELATIVE:
                                            url.scheme = base.scheme;
                                            if (char == EOF) {
                                                url.username = base.username;
                                                url.password = base.password;
                                                url.host = base.host;
                                                url.port = base.port;
                                                url.path = base.path.slice();
                                                url.query = base.query;
                                            } else if (char == '/' || (char == '\\' && isSpecial(url))) {
                                                state = RELATIVE_SLASH;
                                            } else if (char == '?') {
                                                url.username = base.username;
                                                url.password = base.password;
                                                url.host = base.host;
                                                url.port = base.port;
                                                url.path = base.path.slice();
                                                url.query = '';
                                                state = QUERY;
                                            } else if (char == '#') {
                                                url.username = base.username;
                                                url.password = base.password;
                                                url.host = base.host;
                                                url.port = base.port;
                                                url.path = base.path.slice();
                                                url.query = base.query;
                                                url.fragment = '';
                                                state = FRAGMENT;
                                            } else {
                                                url.username = base.username;
                                                url.password = base.password;
                                                url.host = base.host;
                                                url.port = base.port;
                                                url.path = base.path.slice();
                                                url.path.pop();
                                                state = PATH;
                                                continue;
                                            } break;

                                        case RELATIVE_SLASH:
                                            if (isSpecial(url) && (char == '/' || char == '\\')) {
                                                state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
                                            } else if (char == '/') {
                                                state = AUTHORITY;
                                            } else {
                                                url.username = base.username;
                                                url.password = base.password;
                                                url.host = base.host;
                                                url.port = base.port;
                                                state = PATH;
                                                continue;
                                            } break;

                                        case SPECIAL_AUTHORITY_SLASHES:
                                            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
                                            if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;
                                            pointer++;
                                            break;

                                        case SPECIAL_AUTHORITY_IGNORE_SLASHES:
                                            if (char != '/' && char != '\\') {
                                                state = AUTHORITY;
                                                continue;
                                            } break;

                                        case AUTHORITY:
                                            if (char == '@') {
                                                if (seenAt) buffer = '%40' + buffer;
                                                seenAt = true;
                                                bufferCodePoints = arrayFrom(buffer);
                                                for (var i = 0; i < bufferCodePoints.length; i++) {
                                                    var codePoint = bufferCodePoints[i];
                                                    if (codePoint == ':' && !seenPasswordToken) {
                                                        seenPasswordToken = true;
                                                        continue;
                                                    }
                                                    var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
                                                    if (seenPasswordToken) url.password += encodedCodePoints;
                                                    else url.username += encodedCodePoints;
                                                }
                                                buffer = '';
                                            } else if (
                                                char == EOF || char == '/' || char == '?' || char == '#' ||
                                                (char == '\\' && isSpecial(url))
                                            ) {
                                                if (seenAt && buffer == '') return INVALID_AUTHORITY;
                                                pointer -= arrayFrom(buffer).length + 1;
                                                buffer = '';
                                                state = HOST;
                                            } else buffer += char;
                                            break;

                                        case HOST:
                                        case HOSTNAME:
                                            if (stateOverride && url.scheme == 'file') {
                                                state = FILE_HOST;
                                                continue;
                                            } else if (char == ':' && !seenBracket) {
                                                if (buffer == '') return INVALID_HOST;
                                                failure = parseHost(url, buffer);
                                                if (failure) return failure;
                                                buffer = '';
                                                state = PORT;
                                                if (stateOverride == HOSTNAME) return;
                                            } else if (
                                                char == EOF || char == '/' || char == '?' || char == '#' ||
                                                (char == '\\' && isSpecial(url))
                                            ) {
                                                if (isSpecial(url) && buffer == '') return INVALID_HOST;
                                                if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;
                                                failure = parseHost(url, buffer);
                                                if (failure) return failure;
                                                buffer = '';
                                                state = PATH_START;
                                                if (stateOverride) return;
                                                continue;
                                            } else {
                                                if (char == '[') seenBracket = true;
                                                else if (char == ']') seenBracket = false;
                                                buffer += char;
                                            } break;

                                        case PORT:
                                            if (DIGIT.test(char)) {
                                                buffer += char;
                                            } else if (
                                                char == EOF || char == '/' || char == '?' || char == '#' ||
                                                (char == '\\' && isSpecial(url)) ||
                                                stateOverride
                                            ) {
                                                if (buffer != '') {
                                                    var port = parseInt(buffer, 10);
                                                    if (port > 0xFFFF) return INVALID_PORT;
                                                    url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;
                                                    buffer = '';
                                                }
                                                if (stateOverride) return;
                                                state = PATH_START;
                                                continue;
                                            } else return INVALID_PORT;
                                            break;

                                        case FILE:
                                            url.scheme = 'file';
                                            if (char == '/' || char == '\\') state = FILE_SLASH;
                                            else if (base && base.scheme == 'file') {
                                                if (char == EOF) {
                                                    url.host = base.host;
                                                    url.path = base.path.slice();
                                                    url.query = base.query;
                                                } else if (char == '?') {
                                                    url.host = base.host;
                                                    url.path = base.path.slice();
                                                    url.query = '';
                                                    state = QUERY;
                                                } else if (char == '#') {
                                                    url.host = base.host;
                                                    url.path = base.path.slice();
                                                    url.query = base.query;
                                                    url.fragment = '';
                                                    state = FRAGMENT;
                                                } else {
                                                    if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
                                                        url.host = base.host;
                                                        url.path = base.path.slice();
                                                        shortenURLsPath(url);
                                                    }
                                                    state = PATH;
                                                    continue;
                                                }
                                            } else {
                                                state = PATH;
                                                continue;
                                            } break;

                                        case FILE_SLASH:
                                            if (char == '/' || char == '\\') {
                                                state = FILE_HOST;
                                                break;
                                            }
                                            if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
                                                if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);
                                                else url.host = base.host;
                                            }
                                            state = PATH;
                                            continue;

                                        case FILE_HOST:
                                            if (char == EOF || char == '/' || char == '\\' || char == '?' || char == '#') {
                                                if (!stateOverride && isWindowsDriveLetter(buffer)) {
                                                    state = PATH;
                                                } else if (buffer == '') {
                                                    url.host = '';
                                                    if (stateOverride) return;
                                                    state = PATH_START;
                                                } else {
                                                    failure = parseHost(url, buffer);
                                                    if (failure) return failure;
                                                    if (url.host == 'localhost') url.host = '';
                                                    if (stateOverride) return;
                                                    buffer = '';
                                                    state = PATH_START;
                                                } continue;
                                            } else buffer += char;
                                            break;

                                        case PATH_START:
                                            if (isSpecial(url)) {
                                                state = PATH;
                                                if (char != '/' && char != '\\') continue;
                                            } else if (!stateOverride && char == '?') {
                                                url.query = '';
                                                state = QUERY;
                                            } else if (!stateOverride && char == '#') {
                                                url.fragment = '';
                                                state = FRAGMENT;
                                            } else if (char != EOF) {
                                                state = PATH;
                                                if (char != '/') continue;
                                            } break;

                                        case PATH:
                                            if (
                                                char == EOF || char == '/' ||
                                                (char == '\\' && isSpecial(url)) ||
                                                (!stateOverride && (char == '?' || char == '#'))
                                            ) {
                                                if (isDoubleDot(buffer)) {
                                                    shortenURLsPath(url);
                                                    if (char != '/' && !(char == '\\' && isSpecial(url))) {
                                                        url.path.push('');
                                                    }
                                                } else if (isSingleDot(buffer)) {
                                                    if (char != '/' && !(char == '\\' && isSpecial(url))) {
                                                        url.path.push('');
                                                    }
                                                } else {
                                                    if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
                                                        if (url.host) url.host = '';
                                                        buffer = buffer.charAt(0) + ':'; // normalize windows drive letter
                                                    }
                                                    url.path.push(buffer);
                                                }
                                                buffer = '';
                                                if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {
                                                    while (url.path.length > 1 && url.path[0] === '') {
                                                        url.path.shift();
                                                    }
                                                }
                                                if (char == '?') {
                                                    url.query = '';
                                                    state = QUERY;
                                                } else if (char == '#') {
                                                    url.fragment = '';
                                                    state = FRAGMENT;
                                                }
                                            } else {
                                                buffer += percentEncode(char, pathPercentEncodeSet);
                                            } break;

                                        case CANNOT_BE_A_BASE_URL_PATH:
                                            if (char == '?') {
                                                url.query = '';
                                                state = QUERY;
                                            } else if (char == '#') {
                                                url.fragment = '';
                                                state = FRAGMENT;
                                            } else if (char != EOF) {
                                                url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);
                                            } break;

                                        case QUERY:
                                            if (!stateOverride && char == '#') {
                                                url.fragment = '';
                                                state = FRAGMENT;
                                            } else if (char != EOF) {
                                                if (char == "'" && isSpecial(url)) url.query += '%27';
                                                else if (char == '#') url.query += '%23';
                                                else url.query += percentEncode(char, C0ControlPercentEncodeSet);
                                            } break;

                                        case FRAGMENT:
                                            if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);
                                            break;
                                    }

                                    pointer++;
                                }
                            };

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
                            var URLConstructor = function URL(url /* , base */) {
                                var that = anInstance(this, URLConstructor, 'URL');
                                var base = arguments.length > 1 ? arguments[1] : undefined;
                                var urlString = String(url);
                                var state = setInternalState(that, { type: 'URL' });
                                var baseState, failure;
                                if (base !== undefined) {
                                    if (base instanceof URLConstructor) baseState = getInternalURLState(base);
                                    else {
                                        failure = parseURL(baseState = {}, String(base));
                                        if (failure) throw TypeError(failure);
                                    }
                                }
                                failure = parseURL(state, urlString, null, baseState);
                                if (failure) throw TypeError(failure);
                                var searchParams = state.searchParams = new URLSearchParams();
                                var searchParamsState = getInternalSearchParamsState(searchParams);
                                searchParamsState.updateSearchParams(state.query);
                                searchParamsState.updateURL = function () {
                                    state.query = String(searchParams) || null;
                                };
                                if (!DESCRIPTORS) {
                                    that.href = serializeURL.call(that);
                                    that.origin = getOrigin.call(that);
                                    that.protocol = getProtocol.call(that);
                                    that.username = getUsername.call(that);
                                    that.password = getPassword.call(that);
                                    that.host = getHost.call(that);
                                    that.hostname = getHostname.call(that);
                                    that.port = getPort.call(that);
                                    that.pathname = getPathname.call(that);
                                    that.search = getSearch.call(that);
                                    that.searchParams = getSearchParams.call(that);
                                    that.hash = getHash.call(that);
                                }
                            };

                            var URLPrototype = URLConstructor.prototype;

                            var serializeURL = function () {
                                var url = getInternalURLState(this);
                                var scheme = url.scheme;
                                var username = url.username;
                                var password = url.password;
                                var host = url.host;
                                var port = url.port;
                                var path = url.path;
                                var query = url.query;
                                var fragment = url.fragment;
                                var output = scheme + ':';
                                if (host !== null) {
                                    output += '//';
                                    if (includesCredentials(url)) {
                                        output += username + (password ? ':' + password : '') + '@';
                                    }
                                    output += serializeHost(host);
                                    if (port !== null) output += ':' + port;
                                } else if (scheme == 'file') output += '//';
                                output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
                                if (query !== null) output += '?' + query;
                                if (fragment !== null) output += '#' + fragment;
                                return output;
                            };

                            var getOrigin = function () {
                                var url = getInternalURLState(this);
                                var scheme = url.scheme;
                                var port = url.port;
                                if (scheme == 'blob') try {
                                    return new URL(scheme.path[0]).origin;
                                } catch (error) {
                                    return 'null';
                                }
                                if (scheme == 'file' || !isSpecial(url)) return 'null';
                                return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');
                            };

                            var getProtocol = function () {
                                return getInternalURLState(this).scheme + ':';
                            };

                            var getUsername = function () {
                                return getInternalURLState(this).username;
                            };

                            var getPassword = function () {
                                return getInternalURLState(this).password;
                            };

                            var getHost = function () {
                                var url = getInternalURLState(this);
                                var host = url.host;
                                var port = url.port;
                                return host === null ? ''
                                    : port === null ? serializeHost(host)
                                        : serializeHost(host) + ':' + port;
                            };

                            var getHostname = function () {
                                var host = getInternalURLState(this).host;
                                return host === null ? '' : serializeHost(host);
                            };

                            var getPort = function () {
                                var port = getInternalURLState(this).port;
                                return port === null ? '' : String(port);
                            };

                            var getPathname = function () {
                                var url = getInternalURLState(this);
                                var path = url.path;
                                return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
                            };

                            var getSearch = function () {
                                var query = getInternalURLState(this).query;
                                return query ? '?' + query : '';
                            };

                            var getSearchParams = function () {
                                return getInternalURLState(this).searchParams;
                            };

                            var getHash = function () {
                                var fragment = getInternalURLState(this).fragment;
                                return fragment ? '#' + fragment : '';
                            };

                            var accessorDescriptor = function (getter, setter) {
                                return { get: getter, set: setter, configurable: true, enumerable: true };
                            };

                            if (DESCRIPTORS) {
                                defineProperties(URLPrototype, {
                                    // `URL.prototype.href` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-href
                                    href: accessorDescriptor(serializeURL, function (href) {
                                        var url = getInternalURLState(this);
                                        var urlString = String(href);
                                        var failure = parseURL(url, urlString);
                                        if (failure) throw TypeError(failure);
                                        getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
                                    }),
                                    // `URL.prototype.origin` getter
                                    // https://url.spec.whatwg.org/#dom-url-origin
                                    origin: accessorDescriptor(getOrigin),
                                    // `URL.prototype.protocol` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-protocol
                                    protocol: accessorDescriptor(getProtocol, function (protocol) {
                                        var url = getInternalURLState(this);
                                        parseURL(url, String(protocol) + ':', SCHEME_START);
                                    }),
                                    // `URL.prototype.username` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-username
                                    username: accessorDescriptor(getUsername, function (username) {
                                        var url = getInternalURLState(this);
                                        var codePoints = arrayFrom(String(username));
                                        if (cannotHaveUsernamePasswordPort(url)) return;
                                        url.username = '';
                                        for (var i = 0; i < codePoints.length; i++) {
                                            url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
                                        }
                                    }),
                                    // `URL.prototype.password` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-password
                                    password: accessorDescriptor(getPassword, function (password) {
                                        var url = getInternalURLState(this);
                                        var codePoints = arrayFrom(String(password));
                                        if (cannotHaveUsernamePasswordPort(url)) return;
                                        url.password = '';
                                        for (var i = 0; i < codePoints.length; i++) {
                                            url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
                                        }
                                    }),
                                    // `URL.prototype.host` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-host
                                    host: accessorDescriptor(getHost, function (host) {
                                        var url = getInternalURLState(this);
                                        if (url.cannotBeABaseURL) return;
                                        parseURL(url, String(host), HOST);
                                    }),
                                    // `URL.prototype.hostname` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-hostname
                                    hostname: accessorDescriptor(getHostname, function (hostname) {
                                        var url = getInternalURLState(this);
                                        if (url.cannotBeABaseURL) return;
                                        parseURL(url, String(hostname), HOSTNAME);
                                    }),
                                    // `URL.prototype.port` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-port
                                    port: accessorDescriptor(getPort, function (port) {
                                        var url = getInternalURLState(this);
                                        if (cannotHaveUsernamePasswordPort(url)) return;
                                        port = String(port);
                                        if (port == '') url.port = null;
                                        else parseURL(url, port, PORT);
                                    }),
                                    // `URL.prototype.pathname` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-pathname
                                    pathname: accessorDescriptor(getPathname, function (pathname) {
                                        var url = getInternalURLState(this);
                                        if (url.cannotBeABaseURL) return;
                                        url.path = [];
                                        parseURL(url, pathname + '', PATH_START);
                                    }),
                                    // `URL.prototype.search` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-search
                                    search: accessorDescriptor(getSearch, function (search) {
                                        var url = getInternalURLState(this);
                                        search = String(search);
                                        if (search == '') {
                                            url.query = null;
                                        } else {
                                            if ('?' == search.charAt(0)) search = search.slice(1);
                                            url.query = '';
                                            parseURL(url, search, QUERY);
                                        }
                                        getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
                                    }),
                                    // `URL.prototype.searchParams` getter
                                    // https://url.spec.whatwg.org/#dom-url-searchparams
                                    searchParams: accessorDescriptor(getSearchParams),
                                    // `URL.prototype.hash` accessors pair
                                    // https://url.spec.whatwg.org/#dom-url-hash
                                    hash: accessorDescriptor(getHash, function (hash) {
                                        var url = getInternalURLState(this);
                                        hash = String(hash);
                                        if (hash == '') {
                                            url.fragment = null;
                                            return;
                                        }
                                        if ('#' == hash.charAt(0)) hash = hash.slice(1);
                                        url.fragment = '';
                                        parseURL(url, hash, FRAGMENT);
                                    })
                                });
                            }

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
                            redefine(URLPrototype, 'toJSON', function toJSON() {
                                return serializeURL.call(this);
                            }, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
                            redefine(URLPrototype, 'toString', function toString() {
                                return serializeURL.call(this);
                            }, { enumerable: true });

                            if (NativeURL) {
                                var nativeCreateObjectURL = NativeURL.createObjectURL;
                                var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
                                // `URL.createObjectURL` method
                                // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
                                // eslint-disable-next-line no-unused-vars -- required for `.length`
                                if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {
                                    return nativeCreateObjectURL.apply(NativeURL, arguments);
                                });
                                // `URL.revokeObjectURL` method
                                // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
                                // eslint-disable-next-line no-unused-vars -- required for `.length`
                                if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {
                                    return nativeRevokeObjectURL.apply(NativeURL, arguments);
                                });
                            }

                            setToStringTag(URLConstructor, 'URL');

                            $({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
                                URL: URLConstructor
                            });


                            /***/ })

                        /******/ 	});
                    /************************************************************************/
                    /******/ 	// The module cache
                    /******/ 	var __webpack_module_cache__ = {};
                    /******/
                    /******/ 	// The require function
                    /******/ 	function __nested_webpack_require_210484__(moduleId) {
                        /******/ 		// Check if module is in cache
                        /******/ 		if(__webpack_module_cache__[moduleId]) {
                            /******/ 			return __webpack_module_cache__[moduleId].exports;
                            /******/ 		}
                        /******/ 		// Create a new module (and put it into the cache)
                        /******/ 		var module = __webpack_module_cache__[moduleId] = {
                            /******/ 			// no module.id needed
                            /******/ 			// no module.loaded needed
                            /******/ 			exports: {}
                            /******/ 		};
                        /******/
                        /******/ 		// Execute the module function
                        /******/ 		__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_210484__);
                        /******/
                        /******/ 		// Return the exports of the module
                        /******/ 		return module.exports;
                        /******/ 	}
                    /******/
                    /************************************************************************/
                    /******/ 	/* webpack/runtime/define property getters */
                    /******/ 	!function() {
                        /******/ 		// define getter functions for harmony exports
                        /******/ 		__nested_webpack_require_210484__.d = function(exports, definition) {
                            /******/ 			for(var key in definition) {
                                /******/ 				if(__nested_webpack_require_210484__.o(definition, key) && !__nested_webpack_require_210484__.o(exports, key)) {
                                    /******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
                                    /******/ 				}
                                /******/ 			}
                            /******/ 		};
                        /******/ 	}();
                    /******/
                    /******/ 	/* webpack/runtime/global */
                    /******/ 	!function() {
                        /******/ 		__nested_webpack_require_210484__.g = (function() {
                            /******/ 			if (typeof globalThis === 'object') return globalThis;
                            /******/ 			try {
                                /******/ 				return this || new Function('return this')();
                                /******/ 			} catch (e) {
                                /******/ 				if (typeof window === 'object') return window;
                                /******/ 			}
                            /******/ 		})();
                        /******/ 	}();
                    /******/
                    /******/ 	/* webpack/runtime/hasOwnProperty shorthand */
                    /******/ 	!function() {
                        /******/ 		__nested_webpack_require_210484__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
                        /******/ 	}();
                    /******/
                    /******/ 	/* webpack/runtime/make namespace object */
                    /******/ 	!function() {
                        /******/ 		// define __esModule on exports
                        /******/ 		__nested_webpack_require_210484__.r = function(exports) {
                            /******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
                                /******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
                                /******/ 			}
                            /******/ 			Object.defineProperty(exports, '__esModule', { value: true });
                            /******/ 		};
                        /******/ 	}();
                    /******/
                    /************************************************************************/
                    var __nested_webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
                    !function() {
                        "use strict";
// ESM COMPAT FLAG
                        __nested_webpack_require_210484__.r(__nested_webpack_exports__);

// EXPORTS
                        __nested_webpack_require_210484__.d(__nested_webpack_exports__, {
                            "Dropzone": function() { return /* reexport */ Dropzone; },
                            "default": function() { return /* binding */ dropzone_dist; }
                        });

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
                        var es_array_concat = __nested_webpack_require_210484__(2222);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
                        var es_array_filter = __nested_webpack_require_210484__(7327);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.index-of.js
                        var es_array_index_of = __nested_webpack_require_210484__(2772);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
                        var es_array_iterator = __nested_webpack_require_210484__(6992);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
                        var es_array_map = __nested_webpack_require_210484__(1249);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
                        var es_array_slice = __nested_webpack_require_210484__(7042);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.splice.js
                        var es_array_splice = __nested_webpack_require_210484__(561);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array-buffer.constructor.js
                        var es_array_buffer_constructor = __nested_webpack_require_210484__(8264);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
                        var es_function_name = __nested_webpack_require_210484__(8309);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-prototype-of.js
                        var es_object_get_prototype_of = __nested_webpack_require_210484__(489);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
                        var es_object_to_string = __nested_webpack_require_210484__(1539);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
                        var es_regexp_exec = __nested_webpack_require_210484__(4916);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
                        var es_regexp_to_string = __nested_webpack_require_210484__(9714);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
                        var es_string_iterator = __nested_webpack_require_210484__(8783);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.match.js
                        var es_string_match = __nested_webpack_require_210484__(4723);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
                        var es_string_replace = __nested_webpack_require_210484__(5306);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
                        var es_string_split = __nested_webpack_require_210484__(3123);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.trim.js
                        var es_string_trim = __nested_webpack_require_210484__(3210);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.uint8-array.js
                        var es_typed_array_uint8_array = __nested_webpack_require_210484__(2472);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.copy-within.js
                        var es_typed_array_copy_within = __nested_webpack_require_210484__(2990);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.every.js
                        var es_typed_array_every = __nested_webpack_require_210484__(8927);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.fill.js
                        var es_typed_array_fill = __nested_webpack_require_210484__(3105);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.filter.js
                        var es_typed_array_filter = __nested_webpack_require_210484__(5035);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.find.js
                        var es_typed_array_find = __nested_webpack_require_210484__(4345);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.find-index.js
                        var es_typed_array_find_index = __nested_webpack_require_210484__(7174);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.for-each.js
                        var es_typed_array_for_each = __nested_webpack_require_210484__(2846);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.includes.js
                        var es_typed_array_includes = __nested_webpack_require_210484__(4731);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.index-of.js
                        var es_typed_array_index_of = __nested_webpack_require_210484__(7209);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.iterator.js
                        var es_typed_array_iterator = __nested_webpack_require_210484__(6319);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.join.js
                        var es_typed_array_join = __nested_webpack_require_210484__(8867);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.last-index-of.js
                        var es_typed_array_last_index_of = __nested_webpack_require_210484__(7789);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.map.js
                        var es_typed_array_map = __nested_webpack_require_210484__(3739);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.reduce.js
                        var es_typed_array_reduce = __nested_webpack_require_210484__(9368);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.reduce-right.js
                        var es_typed_array_reduce_right = __nested_webpack_require_210484__(4483);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.reverse.js
                        var es_typed_array_reverse = __nested_webpack_require_210484__(2056);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.set.js
                        var es_typed_array_set = __nested_webpack_require_210484__(3462);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.slice.js
                        var es_typed_array_slice = __nested_webpack_require_210484__(678);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.some.js
                        var es_typed_array_some = __nested_webpack_require_210484__(7462);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.sort.js
                        var es_typed_array_sort = __nested_webpack_require_210484__(3824);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.subarray.js
                        var es_typed_array_subarray = __nested_webpack_require_210484__(5021);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.to-locale-string.js
                        var es_typed_array_to_locale_string = __nested_webpack_require_210484__(2974);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.to-string.js
                        var es_typed_array_to_string = __nested_webpack_require_210484__(5016);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
                        var web_dom_collections_for_each = __nested_webpack_require_210484__(4747);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
                        var web_dom_collections_iterator = __nested_webpack_require_210484__(3948);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.js
                        var web_url = __nested_webpack_require_210484__(285);
                        ;// CONCATENATED MODULE: ./src/emitter.js


                        function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

                        function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

                        function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

                        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                        function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                        function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// The Emitter class provides the ability to call `.on()` on Dropzone to listen
// to events.
// It is strongly based on component's emitter class, and I removed the
// functionality because of the dependency hell with different frameworks.
                        var Emitter = /*#__PURE__*/function () {
                            function Emitter() {
                                _classCallCheck(this, Emitter);
                            }

                            _createClass(Emitter, [{
                                key: "on",
                                value: // Add an event listener for given event
                                    function on(event, fn) {
                                        this._callbacks = this._callbacks || {}; // Create namespace for this event

                                        if (!this._callbacks[event]) {
                                            this._callbacks[event] = [];
                                        }

                                        this._callbacks[event].push(fn);

                                        return this;
                                    }
                            }, {
                                key: "emit",
                                value: function emit(event) {
                                    this._callbacks = this._callbacks || {};
                                    var callbacks = this._callbacks[event];

                                    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                                        args[_key - 1] = arguments[_key];
                                    }

                                    if (callbacks) {
                                        var _iterator = _createForOfIteratorHelper(callbacks, true),
                                            _step;

                                        try {
                                            for (_iterator.s(); !(_step = _iterator.n()).done;) {
                                                var callback = _step.value;
                                                callback.apply(this, args);
                                            }
                                        } catch (err) {
                                            _iterator.e(err);
                                        } finally {
                                            _iterator.f();
                                        }
                                    } // trigger a corresponding DOM event


                                    if (this.element) {
                                        this.element.dispatchEvent(this.makeEvent("dropzone:" + event, {
                                            args: args
                                        }));
                                    }

                                    return this;
                                }
                            }, {
                                key: "makeEvent",
                                value: function makeEvent(eventName, detail) {
                                    var params = {
                                        bubbles: true,
                                        cancelable: true,
                                        detail: detail
                                    };

                                    if (typeof window.CustomEvent === "function") {
                                        return new CustomEvent(eventName, params);
                                    } else {
                                        // IE 11 support
                                        // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent
                                        var evt = document.createEvent("CustomEvent");
                                        evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);
                                        return evt;
                                    }
                                } // Remove event listener for given event. If fn is not provided, all event
                                // listeners for that event will be removed. If neither is provided, all
                                // event listeners will be removed.

                            }, {
                                key: "off",
                                value: function off(event, fn) {
                                    if (!this._callbacks || arguments.length === 0) {
                                        this._callbacks = {};
                                        return this;
                                    } // specific event


                                    var callbacks = this._callbacks[event];

                                    if (!callbacks) {
                                        return this;
                                    } // remove all handlers


                                    if (arguments.length === 1) {
                                        delete this._callbacks[event];
                                        return this;
                                    } // remove specific handler


                                    for (var i = 0; i < callbacks.length; i++) {
                                        var callback = callbacks[i];

                                        if (callback === fn) {
                                            callbacks.splice(i, 1);
                                            break;
                                        }
                                    }

                                    return this;
                                }
                            }]);

                            return Emitter;
                        }();


                        ;// CONCATENATED MODULE: ./src/preview-template.html
// Module
                        var code = "<div class=\"dz-preview dz-file-preview\"> <div class=\"dz-image\"><img data-dz-thumbnail/></div> <div class=\"dz-details\"> <div class=\"dz-size\"><span data-dz-size></span></div> <div class=\"dz-filename\"><span data-dz-name></span></div> </div> <div class=\"dz-progress\"> <span class=\"dz-upload\" data-dz-uploadprogress></span> </div> <div class=\"dz-error-message\"><span data-dz-errormessage></span></div> <div class=\"dz-success-mark\"> <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>Check</title> <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\"></path> </g> </svg> </div> <div class=\"dz-error-mark\"> <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>Error</title> <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\"> <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\"></path> </g> </g> </svg> </div> </div> ";
// Exports
                        /* harmony default export */ var preview_template = (code);
                        ;// CONCATENATED MODULE: ./src/options.js





                        function options_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = options_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

                        function options_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return options_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return options_arrayLikeToArray(o, minLen); }

                        function options_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



                        var defaultOptions = {
                            /**
                             * Has to be specified on elements other than form (or when the form
                             * doesn't have an `action` attribute). You can also
                             * provide a function that will be called with `files` and
                             * must return the url (since `v3.12.0`)
                             */
                            url: null,

                            /**
                             * Can be changed to `"put"` if necessary. You can also provide a function
                             * that will be called with `files` and must return the method (since `v3.12.0`).
                             */
                            method: "post",

                            /**
                             * Will be set on the XHRequest.
                             */
                            withCredentials: false,

                            /**
                             * The timeout for the XHR requests in milliseconds (since `v4.4.0`).
                             * If set to null or 0, no timeout is going to be set.
                             */
                            timeout: null,

                            /**
                             * How many file uploads to process in parallel (See the
                             * Enqueuing file uploads documentation section for more info)
                             */
                            parallelUploads: 2,

                            /**
                             * Whether to send multiple files in one request. If
                             * this it set to true, then the fallback file input element will
                             * have the `multiple` attribute as well. This option will
                             * also trigger additional events (like `processingmultiple`). See the events
                             * documentation section for more information.
                             */
                            uploadMultiple: false,

                            /**
                             * Whether you want files to be uploaded in chunks to your server. This can't be
                             * used in combination with `uploadMultiple`.
                             *
                             * See [chunksUploaded](#config-chunksUploaded) for the callback to finalise an upload.
                             */
                            chunking: false,

                            /**
                             * If `chunking` is enabled, this defines whether **every** file should be chunked,
                             * even if the file size is below chunkSize. This means, that the additional chunk
                             * form data will be submitted and the `chunksUploaded` callback will be invoked.
                             */
                            forceChunking: false,

                            /**
                             * If `chunking` is `true`, then this defines the chunk size in bytes.
                             */
                            chunkSize: 2000000,

                            /**
                             * If `true`, the individual chunks of a file are being uploaded simultaneously.
                             */
                            parallelChunkUploads: false,

                            /**
                             * Whether a chunk should be retried if it fails.
                             */
                            retryChunks: false,

                            /**
                             * If `retryChunks` is true, how many times should it be retried.
                             */
                            retryChunksLimit: 3,

                            /**
                             * The maximum filesize (in bytes) that is allowed to be uploaded.
                             */
                            maxFilesize: 256,

                            /**
                             * The name of the file param that gets transferred.
                             * **NOTE**: If you have the option  `uploadMultiple` set to `true`, then
                             * Dropzone will append `[]` to the name.
                             */
                            paramName: "file",

                            /**
                             * Whether thumbnails for images should be generated
                             */
                            createImageThumbnails: true,

                            /**
                             * In MB. When the filename exceeds this limit, the thumbnail will not be generated.
                             */
                            maxThumbnailFilesize: 10,

                            /**
                             * If `null`, the ratio of the image will be used to calculate it.
                             */
                            thumbnailWidth: 120,

                            /**
                             * The same as `thumbnailWidth`. If both are null, images will not be resized.
                             */
                            thumbnailHeight: 120,

                            /**
                             * How the images should be scaled down in case both, `thumbnailWidth` and `thumbnailHeight` are provided.
                             * Can be either `contain` or `crop`.
                             */
                            thumbnailMethod: "crop",

                            /**
                             * If set, images will be resized to these dimensions before being **uploaded**.
                             * If only one, `resizeWidth` **or** `resizeHeight` is provided, the original aspect
                             * ratio of the file will be preserved.
                             *
                             * The `options.transformFile` function uses these options, so if the `transformFile` function
                             * is overridden, these options don't do anything.
                             */
                            resizeWidth: null,

                            /**
                             * See `resizeWidth`.
                             */
                            resizeHeight: null,

                            /**
                             * The mime type of the resized image (before it gets uploaded to the server).
                             * If `null` the original mime type will be used. To force jpeg, for example, use `image/jpeg`.
                             * See `resizeWidth` for more information.
                             */
                            resizeMimeType: null,

                            /**
                             * The quality of the resized images. See `resizeWidth`.
                             */
                            resizeQuality: 0.8,

                            /**
                             * How the images should be scaled down in case both, `resizeWidth` and `resizeHeight` are provided.
                             * Can be either `contain` or `crop`.
                             */
                            resizeMethod: "contain",

                            /**
                             * The base that is used to calculate the **displayed** filesize. You can
                             * change this to 1024 if you would rather display kibibytes, mebibytes,
                             * etc... 1024 is technically incorrect, because `1024 bytes` are `1 kibibyte`
                             * not `1 kilobyte`. You can change this to `1024` if you don't care about
                             * validity.
                             */
                            filesizeBase: 1000,

                            /**
                             * If not `null` defines how many files this Dropzone handles. If it exceeds,
                             * the event `maxfilesexceeded` will be called. The dropzone element gets the
                             * class `dz-max-files-reached` accordingly so you can provide visual
                             * feedback.
                             */
                            maxFiles: null,

                            /**
                             * An optional object to send additional headers to the server. Eg:
                             * `{ "My-Awesome-Header": "header value" }`
                             */
                            headers: null,

                            /**
                             * If `true`, the dropzone element itself will be clickable, if `false`
                             * nothing will be clickable.
                             *
                             * You can also pass an HTML element, a CSS selector (for multiple elements)
                             * or an array of those. In that case, all of those elements will trigger an
                             * upload when clicked.
                             */
                            clickable: true,

                            /**
                             * Whether hidden files in directories should be ignored.
                             */
                            ignoreHiddenFiles: true,

                            /**
                             * The default implementation of `accept` checks the file's mime type or
                             * extension against this list. This is a comma separated list of mime
                             * types or file extensions.
                             *
                             * Eg.: `image/*,application/pdf,.psd`
                             *
                             * If the Dropzone is `clickable` this option will also be used as
                             * [`accept`](https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept)
                             * parameter on the hidden file input as well.
                             */
                            acceptedFiles: null,

                            /**
                             * **Deprecated!**
                             * Use acceptedFiles instead.
                             */
                            acceptedMimeTypes: null,

                            /**
                             * If false, files will be added to the queue but the queue will not be
                             * processed automatically.
                             * This can be useful if you need some additional user input before sending
                             * files (or if you want want all files sent at once).
                             * If you're ready to send the file simply call `myDropzone.processQueue()`.
                             *
                             * See the [enqueuing file uploads](#enqueuing-file-uploads) documentation
                             * section for more information.
                             */
                            autoProcessQueue: true,

                            /**
                             * If false, files added to the dropzone will not be queued by default.
                             * You'll have to call `enqueueFile(file)` manually.
                             */
                            autoQueue: true,

                            /**
                             * If `true`, this will add a link to every file preview to remove or cancel (if
                             * already uploading) the file. The `dictCancelUpload`, `dictCancelUploadConfirmation`
                             * and `dictRemoveFile` options are used for the wording.
                             */
                            addRemoveLinks: false,

                            /**
                             * Defines where to display the file previews – if `null` the
                             * Dropzone element itself is used. Can be a plain `HTMLElement` or a CSS
                             * selector. The element should have the `dropzone-previews` class so
                             * the previews are displayed properly.
                             */
                            previewsContainer: null,

                            /**
                             * Set this to `true` if you don't want previews to be shown.
                             */
                            disablePreviews: false,

                            /**
                             * This is the element the hidden input field (which is used when clicking on the
                             * dropzone to trigger file selection) will be appended to. This might
                             * be important in case you use frameworks to switch the content of your page.
                             *
                             * Can be a selector string, or an element directly.
                             */
                            hiddenInputContainer: "body",

                            /**
                             * If null, no capture type will be specified
                             * If camera, mobile devices will skip the file selection and choose camera
                             * If microphone, mobile devices will skip the file selection and choose the microphone
                             * If camcorder, mobile devices will skip the file selection and choose the camera in video mode
                             * On apple devices multiple must be set to false.  AcceptedFiles may need to
                             * be set to an appropriate mime type (e.g. "image/*", "audio/*", or "video/*").
                             */
                            capture: null,

                            /**
                             * **Deprecated**. Use `renameFile` instead.
                             */
                            renameFilename: null,

                            /**
                             * A function that is invoked before the file is uploaded to the server and renames the file.
                             * This function gets the `File` as argument and can use the `file.name`. The actual name of the
                             * file that gets used during the upload can be accessed through `file.upload.filename`.
                             */
                            renameFile: null,

                            /**
                             * If `true` the fallback will be forced. This is very useful to test your server
                             * implementations first and make sure that everything works as
                             * expected without dropzone if you experience problems, and to test
                             * how your fallbacks will look.
                             */
                            forceFallback: false,

                            /**
                             * The text used before any files are dropped.
                             */
                            dictDefaultMessage: "Drop files here to upload",

                            /**
                             * The text that replaces the default message text it the browser is not supported.
                             */
                            dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",

                            /**
                             * The text that will be added before the fallback form.
                             * If you provide a  fallback element yourself, or if this option is `null` this will
                             * be ignored.
                             */
                            dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",

                            /**
                             * If the filesize is too big.
                             * `{{filesize}}` and `{{maxFilesize}}` will be replaced with the respective configuration values.
                             */
                            dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",

                            /**
                             * If the file doesn't match the file type.
                             */
                            dictInvalidFileType: "You can't upload files of this type.",

                            /**
                             * If the server response was invalid.
                             * `{{statusCode}}` will be replaced with the servers status code.
                             */
                            dictResponseError: "Server responded with {{statusCode}} code.",

                            /**
                             * If `addRemoveLinks` is true, the text to be used for the cancel upload link.
                             */
                            dictCancelUpload: "Cancel upload",

                            /**
                             * The text that is displayed if an upload was manually canceled
                             */
                            dictUploadCanceled: "Upload canceled.",

                            /**
                             * If `addRemoveLinks` is true, the text to be used for confirmation when cancelling upload.
                             */
                            dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",

                            /**
                             * If `addRemoveLinks` is true, the text to be used to remove a file.
                             */
                            dictRemoveFile: "Remove file",

                            /**
                             * If this is not null, then the user will be prompted before removing a file.
                             */
                            dictRemoveFileConfirmation: null,

                            /**
                             * Displayed if `maxFiles` is st and exceeded.
                             * The string `{{maxFiles}}` will be replaced by the configuration value.
                             */
                            dictMaxFilesExceeded: "You can not upload any more files.",

                            /**
                             * Allows you to translate the different units. Starting with `tb` for terabytes and going down to
                             * `b` for bytes.
                             */
                            dictFileSizeUnits: {
                                tb: "TB",
                                gb: "GB",
                                mb: "MB",
                                kb: "KB",
                                b: "b"
                            },

                            /**
                             * Called when dropzone initialized
                             * You can add event listeners here
                             */
                            init: function init() {},

                            /**
                             * Can be an **object** of additional parameters to transfer to the server, **or** a `Function`
                             * that gets invoked with the `files`, `xhr` and, if it's a chunked upload, `chunk` arguments. In case
                             * of a function, this needs to return a map.
                             *
                             * The default implementation does nothing for normal uploads, but adds relevant information for
                             * chunked uploads.
                             *
                             * This is the same as adding hidden input fields in the form element.
                             */
                            params: function params(files, xhr, chunk) {
                                if (chunk) {
                                    return {
                                        dzuuid: chunk.file.upload.uuid,
                                        dzchunkindex: chunk.index,
                                        dztotalfilesize: chunk.file.size,
                                        dzchunksize: this.options.chunkSize,
                                        dztotalchunkcount: chunk.file.upload.totalChunkCount,
                                        dzchunkbyteoffset: chunk.index * this.options.chunkSize
                                    };
                                }
                            },

                            /**
                             * A function that gets a [file](https://developer.mozilla.org/en-US/docs/DOM/File)
                             * and a `done` function as parameters.
                             *
                             * If the done function is invoked without arguments, the file is "accepted" and will
                             * be processed. If you pass an error message, the file is rejected, and the error
                             * message will be displayed.
                             * This function will not be called if the file is too big or doesn't match the mime types.
                             */
                            accept: function accept(file, done) {
                                return done();
                            },

                            /**
                             * The callback that will be invoked when all chunks have been uploaded for a file.
                             * It gets the file for which the chunks have been uploaded as the first parameter,
                             * and the `done` function as second. `done()` needs to be invoked when everything
                             * needed to finish the upload process is done.
                             */
                            chunksUploaded: function chunksUploaded(file, done) {
                                done();
                            },

                            /**
                             * Gets called when the browser is not supported.
                             * The default implementation shows the fallback input field and adds
                             * a text.
                             */
                            fallback: function fallback() {
                                // This code should pass in IE7... :(
                                var messageElement;
                                this.element.className = "".concat(this.element.className, " dz-browser-not-supported");

                                var _iterator = options_createForOfIteratorHelper(this.element.getElementsByTagName("div"), true),
                                    _step;

                                try {
                                    for (_iterator.s(); !(_step = _iterator.n()).done;) {
                                        var child = _step.value;

                                        if (/(^| )dz-message($| )/.test(child.className)) {
                                            messageElement = child;
                                            child.className = "dz-message"; // Removes the 'dz-default' class

                                            break;
                                        }
                                    }
                                } catch (err) {
                                    _iterator.e(err);
                                } finally {
                                    _iterator.f();
                                }

                                if (!messageElement) {
                                    messageElement = Dropzone.createElement('<div class="dz-message"><span></span></div>');
                                    this.element.appendChild(messageElement);
                                }

                                var span = messageElement.getElementsByTagName("span")[0];

                                if (span) {
                                    if (span.textContent != null) {
                                        span.textContent = this.options.dictFallbackMessage;
                                    } else if (span.innerText != null) {
                                        span.innerText = this.options.dictFallbackMessage;
                                    }
                                }

                                return this.element.appendChild(this.getFallbackForm());
                            },

                            /**
                             * Gets called to calculate the thumbnail dimensions.
                             *
                             * It gets `file`, `width` and `height` (both may be `null`) as parameters and must return an object containing:
                             *
                             *  - `srcWidth` & `srcHeight` (required)
                             *  - `trgWidth` & `trgHeight` (required)
                             *  - `srcX` & `srcY` (optional, default `0`)
                             *  - `trgX` & `trgY` (optional, default `0`)
                             *
                             * Those values are going to be used by `ctx.drawImage()`.
                             */
                            resize: function resize(file, width, height, resizeMethod) {
                                var info = {
                                    srcX: 0,
                                    srcY: 0,
                                    srcWidth: file.width,
                                    srcHeight: file.height
                                };
                                var srcRatio = file.width / file.height; // Automatically calculate dimensions if not specified

                                if (width == null && height == null) {
                                    width = info.srcWidth;
                                    height = info.srcHeight;
                                } else if (width == null) {
                                    width = height * srcRatio;
                                } else if (height == null) {
                                    height = width / srcRatio;
                                } // Make sure images aren't upscaled


                                width = Math.min(width, info.srcWidth);
                                height = Math.min(height, info.srcHeight);
                                var trgRatio = width / height;

                                if (info.srcWidth > width || info.srcHeight > height) {
                                    // Image is bigger and needs rescaling
                                    if (resizeMethod === "crop") {
                                        if (srcRatio > trgRatio) {
                                            info.srcHeight = file.height;
                                            info.srcWidth = info.srcHeight * trgRatio;
                                        } else {
                                            info.srcWidth = file.width;
                                            info.srcHeight = info.srcWidth / trgRatio;
                                        }
                                    } else if (resizeMethod === "contain") {
                                        // Method 'contain'
                                        if (srcRatio > trgRatio) {
                                            height = width / srcRatio;
                                        } else {
                                            width = height * srcRatio;
                                        }
                                    } else {
                                        throw new Error("Unknown resizeMethod '".concat(resizeMethod, "'"));
                                    }
                                }

                                info.srcX = (file.width - info.srcWidth) / 2;
                                info.srcY = (file.height - info.srcHeight) / 2;
                                info.trgWidth = width;
                                info.trgHeight = height;
                                return info;
                            },

                            /**
                             * Can be used to transform the file (for example, resize an image if necessary).
                             *
                             * The default implementation uses `resizeWidth` and `resizeHeight` (if provided) and resizes
                             * images according to those dimensions.
                             *
                             * Gets the `file` as the first parameter, and a `done()` function as the second, that needs
                             * to be invoked with the file when the transformation is done.
                             */
                            transformFile: function transformFile(file, done) {
                                if ((this.options.resizeWidth || this.options.resizeHeight) && file.type.match(/image.*/)) {
                                    return this.resizeImage(file, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);
                                } else {
                                    return done(file);
                                }
                            },

                            /**
                             * A string that contains the template used for each dropped
                             * file. Change it to fulfill your needs but make sure to properly
                             * provide all elements.
                             *
                             * If you want to use an actual HTML element instead of providing a String
                             * as a config option, you could create a div with the id `tpl`,
                             * put the template inside it and provide the element like this:
                             *
                             *     document
                             *       .querySelector('#tpl')
                             *       .innerHTML
                             *
                             */
                            previewTemplate: preview_template,

                            /*
   Those functions register themselves to the events on init and handle all
   the user interface specific stuff. Overwriting them won't break the upload
   but can break the way it's displayed.
   You can overwrite them if you don't like the default behavior. If you just
   want to add an additional event handler, register it on the dropzone object
   and don't overwrite those options.
   */
                            // Those are self explanatory and simply concern the DragnDrop.
                            drop: function drop(e) {
                                return this.element.classList.remove("dz-drag-hover");
                            },
                            dragstart: function dragstart(e) {},
                            dragend: function dragend(e) {
                                return this.element.classList.remove("dz-drag-hover");
                            },
                            dragenter: function dragenter(e) {
                                return this.element.classList.add("dz-drag-hover");
                            },
                            dragover: function dragover(e) {
                                return this.element.classList.add("dz-drag-hover");
                            },
                            dragleave: function dragleave(e) {
                                return this.element.classList.remove("dz-drag-hover");
                            },
                            paste: function paste(e) {},
                            // Called whenever there are no files left in the dropzone anymore, and the
                            // dropzone should be displayed as if in the initial state.
                            reset: function reset() {
                                return this.element.classList.remove("dz-started");
                            },
                            // Called when a file is added to the queue
                            // Receives `file`
                            addedfile: function addedfile(file) {
                                var _this = this;

                                if (this.element === this.previewsContainer) {
                                    this.element.classList.add("dz-started");
                                }

                                if (this.previewsContainer && !this.options.disablePreviews) {
                                    file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());
                                    file.previewTemplate = file.previewElement; // Backwards compatibility

                                    this.previewsContainer.appendChild(file.previewElement);

                                    var _iterator2 = options_createForOfIteratorHelper(file.previewElement.querySelectorAll("[data-dz-name]"), true),
                                        _step2;

                                    try {
                                        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                                            var node = _step2.value;
                                            node.textContent = file.name;
                                        }
                                    } catch (err) {
                                        _iterator2.e(err);
                                    } finally {
                                        _iterator2.f();
                                    }

                                    var _iterator3 = options_createForOfIteratorHelper(file.previewElement.querySelectorAll("[data-dz-size]"), true),
                                        _step3;

                                    try {
                                        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                                            node = _step3.value;
                                            node.innerHTML = this.filesize(file.size);
                                        }
                                    } catch (err) {
                                        _iterator3.e(err);
                                    } finally {
                                        _iterator3.f();
                                    }

                                    if (this.options.addRemoveLinks) {
                                        file._removeLink = Dropzone.createElement("<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>".concat(this.options.dictRemoveFile, "</a>"));
                                        file.previewElement.appendChild(file._removeLink);
                                    }

                                    var removeFileEvent = function removeFileEvent(e) {
                                        e.preventDefault();
                                        e.stopPropagation();

                                        if (file.status === Dropzone.UPLOADING) {
                                            return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function () {
                                                return _this.removeFile(file);
                                            });
                                        } else {
                                            if (_this.options.dictRemoveFileConfirmation) {
                                                return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function () {
                                                    return _this.removeFile(file);
                                                });
                                            } else {
                                                return _this.removeFile(file);
                                            }
                                        }
                                    };

                                    var _iterator4 = options_createForOfIteratorHelper(file.previewElement.querySelectorAll("[data-dz-remove]"), true),
                                        _step4;

                                    try {
                                        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                                            var removeLink = _step4.value;
                                            removeLink.addEventListener("click", removeFileEvent);
                                        }
                                    } catch (err) {
                                        _iterator4.e(err);
                                    } finally {
                                        _iterator4.f();
                                    }
                                }
                            },
                            // Called whenever a file is removed.
                            removedfile: function removedfile(file) {
                                if (file.previewElement != null && file.previewElement.parentNode != null) {
                                    file.previewElement.parentNode.removeChild(file.previewElement);
                                }

                                return this._updateMaxFilesReachedClass();
                            },
                            // Called when a thumbnail has been generated
                            // Receives `file` and `dataUrl`
                            thumbnail: function thumbnail(file, dataUrl) {
                                if (file.previewElement) {
                                    file.previewElement.classList.remove("dz-file-preview");

                                    var _iterator5 = options_createForOfIteratorHelper(file.previewElement.querySelectorAll("[data-dz-thumbnail]"), true),
                                        _step5;

                                    try {
                                        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                                            var thumbnailElement = _step5.value;
                                            thumbnailElement.alt = file.name;
                                            thumbnailElement.src = dataUrl;
                                        }
                                    } catch (err) {
                                        _iterator5.e(err);
                                    } finally {
                                        _iterator5.f();
                                    }

                                    return setTimeout(function () {
                                        return file.previewElement.classList.add("dz-image-preview");
                                    }, 1);
                                }
                            },
                            // Called whenever an error occurs
                            // Receives `file` and `message`
                            error: function error(file, message) {
                                if (file.previewElement) {
                                    file.previewElement.classList.add("dz-error");

                                    if (typeof message !== "string" && message.error) {
                                        message = message.error;
                                    }

                                    var _iterator6 = options_createForOfIteratorHelper(file.previewElement.querySelectorAll("[data-dz-errormessage]"), true),
                                        _step6;

                                    try {
                                        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                                            var node = _step6.value;
                                            node.textContent = message;
                                        }
                                    } catch (err) {
                                        _iterator6.e(err);
                                    } finally {
                                        _iterator6.f();
                                    }
                                }
                            },
                            errormultiple: function errormultiple() {},
                            // Called when a file gets processed. Since there is a cue, not all added
                            // files are processed immediately.
                            // Receives `file`
                            processing: function processing(file) {
                                if (file.previewElement) {
                                    file.previewElement.classList.add("dz-processing");

                                    if (file._removeLink) {
                                        return file._removeLink.innerHTML = this.options.dictCancelUpload;
                                    }
                                }
                            },
                            processingmultiple: function processingmultiple() {},
                            // Called whenever the upload progress gets updated.
                            // Receives `file`, `progress` (percentage 0-100) and `bytesSent`.
                            // To get the total number of bytes of the file, use `file.size`
                            uploadprogress: function uploadprogress(file, progress, bytesSent) {
                                if (file.previewElement) {
                                    var _iterator7 = options_createForOfIteratorHelper(file.previewElement.querySelectorAll("[data-dz-uploadprogress]"), true),
                                        _step7;

                                    try {
                                        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                                            var node = _step7.value;
                                            node.nodeName === "PROGRESS" ? node.value = progress : node.style.width = "".concat(progress, "%");
                                        }
                                    } catch (err) {
                                        _iterator7.e(err);
                                    } finally {
                                        _iterator7.f();
                                    }
                                }
                            },
                            // Called whenever the total upload progress gets updated.
                            // Called with totalUploadProgress (0-100), totalBytes and totalBytesSent
                            totaluploadprogress: function totaluploadprogress() {},
                            // Called just before the file is sent. Gets the `xhr` object as second
                            // parameter, so you can modify it (for example to add a CSRF token) and a
                            // `formData` object to add additional information.
                            sending: function sending() {},
                            sendingmultiple: function sendingmultiple() {},
                            // When the complete upload is finished and successful
                            // Receives `file`
                            success: function success(file) {
                                if (file.previewElement) {
                                    return file.previewElement.classList.add("dz-success");
                                }
                            },
                            successmultiple: function successmultiple() {},
                            // When the upload is canceled.
                            canceled: function canceled(file) {
                                return this.emit("error", file, this.options.dictUploadCanceled);
                            },
                            canceledmultiple: function canceledmultiple() {},
                            // When the upload is finished, either with success or an error.
                            // Receives `file`
                            complete: function complete(file) {
                                if (file._removeLink) {
                                    file._removeLink.innerHTML = this.options.dictRemoveFile;
                                }

                                if (file.previewElement) {
                                    return file.previewElement.classList.add("dz-complete");
                                }
                            },
                            completemultiple: function completemultiple() {},
                            maxfilesexceeded: function maxfilesexceeded() {},
                            maxfilesreached: function maxfilesreached() {},
                            queuecomplete: function queuecomplete() {},
                            addedfiles: function addedfiles() {}
                        };
                        /* harmony default export */ var src_options = (defaultOptions);
                        ;// CONCATENATED MODULE: ./src/dropzone.js
                        function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }















































                        function dropzone_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = dropzone_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

                        function dropzone_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dropzone_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dropzone_arrayLikeToArray(o, minLen); }

                        function dropzone_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

                        function dropzone_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                        function dropzone_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

                        function dropzone_createClass(Constructor, protoProps, staticProps) { if (protoProps) dropzone_defineProperties(Constructor.prototype, protoProps); if (staticProps) dropzone_defineProperties(Constructor, staticProps); return Constructor; }

                        function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

                        function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

                        function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

                        function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

                        function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

                        function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

                        function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




                        var Dropzone = /*#__PURE__*/function (_Emitter) {
                            _inherits(Dropzone, _Emitter);

                            var _super = _createSuper(Dropzone);

                            function Dropzone(el, options) {
                                var _this;

                                dropzone_classCallCheck(this, Dropzone);

                                _this = _super.call(this);
                                var fallback, left;
                                _this.element = el; // For backwards compatibility since the version was in the prototype previously

                                _this.version = Dropzone.version;
                                _this.clickableElements = [];
                                _this.listeners = [];
                                _this.files = []; // All files

                                if (typeof _this.element === "string") {
                                    _this.element = document.querySelector(_this.element);
                                } // Not checking if instance of HTMLElement or Element since IE9 is extremely weird.


                                if (!_this.element || _this.element.nodeType == null) {
                                    throw new Error("Invalid dropzone element.");
                                }

                                if (_this.element.dropzone) {
                                    throw new Error("Dropzone already attached.");
                                } // Now add this dropzone to the instances.


                                Dropzone.instances.push(_assertThisInitialized(_this)); // Put the dropzone inside the element itself.

                                _this.element.dropzone = _assertThisInitialized(_this);
                                var elementOptions = (left = Dropzone.optionsForElement(_this.element)) != null ? left : {};
                                _this.options = Dropzone.extend({}, src_options, elementOptions, options != null ? options : {});
                                _this.options.previewTemplate = _this.options.previewTemplate.replace(/\n*/g, ""); // If the browser failed, just call the fallback and leave

                                if (_this.options.forceFallback || !Dropzone.isBrowserSupported()) {
                                    return _possibleConstructorReturn(_this, _this.options.fallback.call(_assertThisInitialized(_this)));
                                } // @options.url = @element.getAttribute "action" unless @options.url?


                                if (_this.options.url == null) {
                                    _this.options.url = _this.element.getAttribute("action");
                                }

                                if (!_this.options.url) {
                                    throw new Error("No URL provided.");
                                }

                                if (_this.options.acceptedFiles && _this.options.acceptedMimeTypes) {
                                    throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
                                }

                                if (_this.options.uploadMultiple && _this.options.chunking) {
                                    throw new Error("You cannot set both: uploadMultiple and chunking.");
                                } // Backwards compatibility


                                if (_this.options.acceptedMimeTypes) {
                                    _this.options.acceptedFiles = _this.options.acceptedMimeTypes;
                                    delete _this.options.acceptedMimeTypes;
                                } // Backwards compatibility


                                if (_this.options.renameFilename != null) {
                                    _this.options.renameFile = function (file) {
                                        return _this.options.renameFilename.call(_assertThisInitialized(_this), file.name, file);
                                    };
                                }

                                if (typeof _this.options.method === "string") {
                                    _this.options.method = _this.options.method.toUpperCase();
                                }

                                if ((fallback = _this.getExistingFallback()) && fallback.parentNode) {
                                    // Remove the fallback
                                    fallback.parentNode.removeChild(fallback);
                                } // Display previews in the previewsContainer element or the Dropzone element unless explicitly set to false


                                if (_this.options.previewsContainer !== false) {
                                    if (_this.options.previewsContainer) {
                                        _this.previewsContainer = Dropzone.getElement(_this.options.previewsContainer, "previewsContainer");
                                    } else {
                                        _this.previewsContainer = _this.element;
                                    }
                                }

                                if (_this.options.clickable) {
                                    if (_this.options.clickable === true) {
                                        _this.clickableElements = [_this.element];
                                    } else {
                                        _this.clickableElements = Dropzone.getElements(_this.options.clickable, "clickable");
                                    }
                                }

                                _this.init();

                                return _this;
                            } // Returns all files that have been accepted


                            dropzone_createClass(Dropzone, [{
                                key: "getAcceptedFiles",
                                value: function getAcceptedFiles() {
                                    return this.files.filter(function (file) {
                                        return file.accepted;
                                    }).map(function (file) {
                                        return file;
                                    });
                                } // Returns all files that have been rejected
                                // Not sure when that's going to be useful, but added for completeness.

                            }, {
                                key: "getRejectedFiles",
                                value: function getRejectedFiles() {
                                    return this.files.filter(function (file) {
                                        return !file.accepted;
                                    }).map(function (file) {
                                        return file;
                                    });
                                }
                            }, {
                                key: "getFilesWithStatus",
                                value: function getFilesWithStatus(status) {
                                    return this.files.filter(function (file) {
                                        return file.status === status;
                                    }).map(function (file) {
                                        return file;
                                    });
                                } // Returns all files that are in the queue

                            }, {
                                key: "getQueuedFiles",
                                value: function getQueuedFiles() {
                                    return this.getFilesWithStatus(Dropzone.QUEUED);
                                }
                            }, {
                                key: "getUploadingFiles",
                                value: function getUploadingFiles() {
                                    return this.getFilesWithStatus(Dropzone.UPLOADING);
                                }
                            }, {
                                key: "getAddedFiles",
                                value: function getAddedFiles() {
                                    return this.getFilesWithStatus(Dropzone.ADDED);
                                } // Files that are either queued or uploading

                            }, {
                                key: "getActiveFiles",
                                value: function getActiveFiles() {
                                    return this.files.filter(function (file) {
                                        return file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED;
                                    }).map(function (file) {
                                        return file;
                                    });
                                } // The function that gets called when Dropzone is initialized. You
                                // can (and should) setup event listeners inside this function.

                            }, {
                                key: "init",
                                value: function init() {
                                    var _this2 = this;

                                    // In case it isn't set already
                                    if (this.element.tagName === "form") {
                                        this.element.setAttribute("enctype", "multipart/form-data");
                                    }

                                    if (this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message")) {
                                        this.element.appendChild(Dropzone.createElement("<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">".concat(this.options.dictDefaultMessage, "</button></div>")));
                                    }

                                    if (this.clickableElements.length) {
                                        var setupHiddenFileInput = function setupHiddenFileInput() {
                                            if (_this2.hiddenFileInput) {
                                                _this2.hiddenFileInput.parentNode.removeChild(_this2.hiddenFileInput);
                                            }

                                            _this2.hiddenFileInput = document.createElement("input");

                                            _this2.hiddenFileInput.setAttribute("type", "file");

                                            if (_this2.options.maxFiles === null || _this2.options.maxFiles > 1) {
                                                _this2.hiddenFileInput.setAttribute("multiple", "multiple");
                                            }

                                            _this2.hiddenFileInput.className = "dz-hidden-input";

                                            if (_this2.options.acceptedFiles !== null) {
                                                _this2.hiddenFileInput.setAttribute("accept", _this2.options.acceptedFiles);
                                            }

                                            if (_this2.options.capture !== null) {
                                                _this2.hiddenFileInput.setAttribute("capture", _this2.options.capture);
                                            } // Making sure that no one can "tab" into this field.


                                            _this2.hiddenFileInput.setAttribute("tabindex", "-1"); // Not setting `display="none"` because some browsers don't accept clicks
                                            // on elements that aren't displayed.


                                            _this2.hiddenFileInput.style.visibility = "hidden";
                                            _this2.hiddenFileInput.style.position = "absolute";
                                            _this2.hiddenFileInput.style.top = "0";
                                            _this2.hiddenFileInput.style.left = "0";
                                            _this2.hiddenFileInput.style.height = "0";
                                            _this2.hiddenFileInput.style.width = "0";
                                            Dropzone.getElement(_this2.options.hiddenInputContainer, "hiddenInputContainer").appendChild(_this2.hiddenFileInput);

                                            _this2.hiddenFileInput.addEventListener("change", function () {
                                                var files = _this2.hiddenFileInput.files;

                                                if (files.length) {
                                                    var _iterator = dropzone_createForOfIteratorHelper(files, true),
                                                        _step;

                                                    try {
                                                        for (_iterator.s(); !(_step = _iterator.n()).done;) {
                                                            var file = _step.value;

                                                            _this2.addFile(file);
                                                        }
                                                    } catch (err) {
                                                        _iterator.e(err);
                                                    } finally {
                                                        _iterator.f();
                                                    }
                                                }

                                                _this2.emit("addedfiles", files);

                                                setupHiddenFileInput();
                                            });
                                        };

                                        setupHiddenFileInput();
                                    }

                                    this.URL = window.URL !== null ? window.URL : window.webkitURL; // Setup all event listeners on the Dropzone object itself.
                                    // They're not in @setupEventListeners() because they shouldn't be removed
                                    // again when the dropzone gets disabled.

                                    var _iterator2 = dropzone_createForOfIteratorHelper(this.events, true),
                                        _step2;

                                    try {
                                        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                                            var eventName = _step2.value;
                                            this.on(eventName, this.options[eventName]);
                                        }
                                    } catch (err) {
                                        _iterator2.e(err);
                                    } finally {
                                        _iterator2.f();
                                    }

                                    this.on("uploadprogress", function () {
                                        return _this2.updateTotalUploadProgress();
                                    });
                                    this.on("removedfile", function () {
                                        return _this2.updateTotalUploadProgress();
                                    });
                                    this.on("canceled", function (file) {
                                        return _this2.emit("complete", file);
                                    }); // Emit a `queuecomplete` event if all files finished uploading.

                                    this.on("complete", function (file) {
                                        if (_this2.getAddedFiles().length === 0 && _this2.getUploadingFiles().length === 0 && _this2.getQueuedFiles().length === 0) {
                                            // This needs to be deferred so that `queuecomplete` really triggers after `complete`
                                            return setTimeout(function () {
                                                return _this2.emit("queuecomplete");
                                            }, 0);
                                        }
                                    });

                                    var containsFiles = function containsFiles(e) {
                                        if (e.dataTransfer.types) {
                                            // Because e.dataTransfer.types is an Object in
                                            // IE, we need to iterate like this instead of
                                            // using e.dataTransfer.types.some()
                                            for (var i = 0; i < e.dataTransfer.types.length; i++) {
                                                if (e.dataTransfer.types[i] === "Files") return true;
                                            }
                                        }

                                        return false;
                                    };

                                    var noPropagation = function noPropagation(e) {
                                        // If there are no files, we don't want to stop
                                        // propagation so we don't interfere with other
                                        // drag and drop behaviour.
                                        if (!containsFiles(e)) return;
                                        e.stopPropagation();

                                        if (e.preventDefault) {
                                            return e.preventDefault();
                                        } else {
                                            return e.returnValue = false;
                                        }
                                    }; // Create the listeners


                                    this.listeners = [{
                                        element: this.element,
                                        events: {
                                            dragstart: function dragstart(e) {
                                                return _this2.emit("dragstart", e);
                                            },
                                            dragenter: function dragenter(e) {
                                                noPropagation(e);
                                                return _this2.emit("dragenter", e);
                                            },
                                            dragover: function dragover(e) {
                                                // Makes it possible to drag files from chrome's download bar
                                                // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar
                                                // Try is required to prevent bug in Internet Explorer 11 (SCRIPT65535 exception)
                                                var efct;

                                                try {
                                                    efct = e.dataTransfer.effectAllowed;
                                                } catch (error) {}

                                                e.dataTransfer.dropEffect = "move" === efct || "linkMove" === efct ? "move" : "copy";
                                                noPropagation(e);
                                                return _this2.emit("dragover", e);
                                            },
                                            dragleave: function dragleave(e) {
                                                return _this2.emit("dragleave", e);
                                            },
                                            drop: function drop(e) {
                                                noPropagation(e);
                                                return _this2.drop(e);
                                            },
                                            dragend: function dragend(e) {
                                                return _this2.emit("dragend", e);
                                            }
                                        } // This is disabled right now, because the browsers don't implement it properly.
                                        // "paste": (e) =>
                                        //   noPropagation e
                                        //   @paste e

                                    }];
                                    this.clickableElements.forEach(function (clickableElement) {
                                        return _this2.listeners.push({
                                            element: clickableElement,
                                            events: {
                                                click: function click(evt) {
                                                    // Only the actual dropzone or the message element should trigger file selection
                                                    if (clickableElement !== _this2.element || evt.target === _this2.element || Dropzone.elementInside(evt.target, _this2.element.querySelector(".dz-message"))) {
                                                        _this2.hiddenFileInput.click(); // Forward the click

                                                    }

                                                    return true;
                                                }
                                            }
                                        });
                                    });
                                    this.enable();
                                    return this.options.init.call(this);
                                } // Not fully tested yet

                            }, {
                                key: "destroy",
                                value: function destroy() {
                                    this.disable();
                                    this.removeAllFiles(true);

                                    if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : undefined) {
                                        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
                                        this.hiddenFileInput = null;
                                    }

                                    delete this.element.dropzone;
                                    return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);
                                }
                            }, {
                                key: "updateTotalUploadProgress",
                                value: function updateTotalUploadProgress() {
                                    var totalUploadProgress;
                                    var totalBytesSent = 0;
                                    var totalBytes = 0;
                                    var activeFiles = this.getActiveFiles();

                                    if (activeFiles.length) {
                                        var _iterator3 = dropzone_createForOfIteratorHelper(this.getActiveFiles(), true),
                                            _step3;

                                        try {
                                            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                                                var file = _step3.value;
                                                totalBytesSent += file.upload.bytesSent;
                                                totalBytes += file.upload.total;
                                            }
                                        } catch (err) {
                                            _iterator3.e(err);
                                        } finally {
                                            _iterator3.f();
                                        }

                                        totalUploadProgress = 100 * totalBytesSent / totalBytes;
                                    } else {
                                        totalUploadProgress = 100;
                                    }

                                    return this.emit("totaluploadprogress", totalUploadProgress, totalBytes, totalBytesSent);
                                } // @options.paramName can be a function taking one parameter rather than a string.
                                // A parameter name for a file is obtained simply by calling this with an index number.

                            }, {
                                key: "_getParamName",
                                value: function _getParamName(n) {
                                    if (typeof this.options.paramName === "function") {
                                        return this.options.paramName(n);
                                    } else {
                                        return "".concat(this.options.paramName).concat(this.options.uploadMultiple ? "[".concat(n, "]") : "");
                                    }
                                } // If @options.renameFile is a function,
                                // the function will be used to rename the file.name before appending it to the formData

                            }, {
                                key: "_renameFile",
                                value: function _renameFile(file) {
                                    if (typeof this.options.renameFile !== "function") {
                                        return file.name;
                                    }

                                    return this.options.renameFile(file);
                                } // Returns a form that can be used as fallback if the browser does not support DragnDrop
                                //
                                // If the dropzone is already a form, only the input field and button are returned. Otherwise a complete form element is provided.
                                // This code has to pass in IE7 :(

                            }, {
                                key: "getFallbackForm",
                                value: function getFallbackForm() {
                                    var existingFallback, form;

                                    if (existingFallback = this.getExistingFallback()) {
                                        return existingFallback;
                                    }

                                    var fieldsString = '<div class="dz-fallback">';

                                    if (this.options.dictFallbackText) {
                                        fieldsString += "<p>".concat(this.options.dictFallbackText, "</p>");
                                    }

                                    fieldsString += "<input type=\"file\" name=\"".concat(this._getParamName(0), "\" ").concat(this.options.uploadMultiple ? 'multiple="multiple"' : undefined, " /><input type=\"submit\" value=\"Upload!\"></div>");
                                    var fields = Dropzone.createElement(fieldsString);

                                    if (this.element.tagName !== "FORM") {
                                        form = Dropzone.createElement("<form action=\"".concat(this.options.url, "\" enctype=\"multipart/form-data\" method=\"").concat(this.options.method, "\"></form>"));
                                        form.appendChild(fields);
                                    } else {
                                        // Make sure that the enctype and method attributes are set properly
                                        this.element.setAttribute("enctype", "multipart/form-data");
                                        this.element.setAttribute("method", this.options.method);
                                    }

                                    return form != null ? form : fields;
                                } // Returns the fallback elements if they exist already
                                //
                                // This code has to pass in IE7 :(

                            }, {
                                key: "getExistingFallback",
                                value: function getExistingFallback() {
                                    var getFallback = function getFallback(elements) {
                                        var _iterator4 = dropzone_createForOfIteratorHelper(elements, true),
                                            _step4;

                                        try {
                                            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                                                var el = _step4.value;

                                                if (/(^| )fallback($| )/.test(el.className)) {
                                                    return el;
                                                }
                                            }
                                        } catch (err) {
                                            _iterator4.e(err);
                                        } finally {
                                            _iterator4.f();
                                        }
                                    };

                                    for (var _i = 0, _arr = ["div", "form"]; _i < _arr.length; _i++) {
                                        var tagName = _arr[_i];
                                        var fallback;

                                        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {
                                            return fallback;
                                        }
                                    }
                                } // Activates all listeners stored in @listeners

                            }, {
                                key: "setupEventListeners",
                                value: function setupEventListeners() {
                                    return this.listeners.map(function (elementListeners) {
                                        return function () {
                                            var result = [];

                                            for (var event in elementListeners.events) {
                                                var listener = elementListeners.events[event];
                                                result.push(elementListeners.element.addEventListener(event, listener, false));
                                            }

                                            return result;
                                        }();
                                    });
                                } // Deactivates all listeners stored in @listeners

                            }, {
                                key: "removeEventListeners",
                                value: function removeEventListeners() {
                                    return this.listeners.map(function (elementListeners) {
                                        return function () {
                                            var result = [];

                                            for (var event in elementListeners.events) {
                                                var listener = elementListeners.events[event];
                                                result.push(elementListeners.element.removeEventListener(event, listener, false));
                                            }

                                            return result;
                                        }();
                                    });
                                } // Removes all event listeners and cancels all files in the queue or being processed.

                            }, {
                                key: "disable",
                                value: function disable() {
                                    var _this3 = this;

                                    this.clickableElements.forEach(function (element) {
                                        return element.classList.remove("dz-clickable");
                                    });
                                    this.removeEventListeners();
                                    this.disabled = true;
                                    return this.files.map(function (file) {
                                        return _this3.cancelUpload(file);
                                    });
                                }
                            }, {
                                key: "enable",
                                value: function enable() {
                                    delete this.disabled;
                                    this.clickableElements.forEach(function (element) {
                                        return element.classList.add("dz-clickable");
                                    });
                                    return this.setupEventListeners();
                                } // Returns a nicely formatted filesize

                            }, {
                                key: "filesize",
                                value: function filesize(size) {
                                    var selectedSize = 0;
                                    var selectedUnit = "b";

                                    if (size > 0) {
                                        var units = ["tb", "gb", "mb", "kb", "b"];

                                        for (var i = 0; i < units.length; i++) {
                                            var unit = units[i];
                                            var cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;

                                            if (size >= cutoff) {
                                                selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);
                                                selectedUnit = unit;
                                                break;
                                            }
                                        }

                                        selectedSize = Math.round(10 * selectedSize) / 10; // Cutting of digits
                                    }

                                    return "<strong>".concat(selectedSize, "</strong> ").concat(this.options.dictFileSizeUnits[selectedUnit]);
                                } // Adds or removes the `dz-max-files-reached` class from the form.

                            }, {
                                key: "_updateMaxFilesReachedClass",
                                value: function _updateMaxFilesReachedClass() {
                                    if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
                                        if (this.getAcceptedFiles().length === this.options.maxFiles) {
                                            this.emit("maxfilesreached", this.files);
                                        }

                                        return this.element.classList.add("dz-max-files-reached");
                                    } else {
                                        return this.element.classList.remove("dz-max-files-reached");
                                    }
                                }
                            }, {
                                key: "drop",
                                value: function drop(e) {
                                    if (!e.dataTransfer) {
                                        return;
                                    }

                                    this.emit("drop", e); // Convert the FileList to an Array
                                    // This is necessary for IE11

                                    var files = [];

                                    for (var i = 0; i < e.dataTransfer.files.length; i++) {
                                        files[i] = e.dataTransfer.files[i];
                                    } // Even if it's a folder, files.length will contain the folders.


                                    if (files.length) {
                                        var items = e.dataTransfer.items;

                                        if (items && items.length && items[0].webkitGetAsEntry != null) {
                                            // The browser supports dropping of folders, so handle items instead of files
                                            this._addFilesFromItems(items);
                                        } else {
                                            this.handleFiles(files);
                                        }
                                    }

                                    this.emit("addedfiles", files);
                                }
                            }, {
                                key: "paste",
                                value: function paste(e) {
                                    if (__guard__(e != null ? e.clipboardData : undefined, function (x) {
                                        return x.items;
                                    }) == null) {
                                        return;
                                    }

                                    this.emit("paste", e);
                                    var items = e.clipboardData.items;

                                    if (items.length) {
                                        return this._addFilesFromItems(items);
                                    }
                                }
                            }, {
                                key: "handleFiles",
                                value: function handleFiles(files) {
                                    var _iterator5 = dropzone_createForOfIteratorHelper(files, true),
                                        _step5;

                                    try {
                                        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                                            var file = _step5.value;
                                            this.addFile(file);
                                        }
                                    } catch (err) {
                                        _iterator5.e(err);
                                    } finally {
                                        _iterator5.f();
                                    }
                                } // When a folder is dropped (or files are pasted), items must be handled
                                // instead of files.

                            }, {
                                key: "_addFilesFromItems",
                                value: function _addFilesFromItems(items) {
                                    var _this4 = this;

                                    return function () {
                                        var result = [];

                                        var _iterator6 = dropzone_createForOfIteratorHelper(items, true),
                                            _step6;

                                        try {
                                            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                                                var item = _step6.value;
                                                var entry;

                                                if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {
                                                    if (entry.isFile) {
                                                        result.push(_this4.addFile(item.getAsFile()));
                                                    } else if (entry.isDirectory) {
                                                        // Append all files from that directory to files
                                                        result.push(_this4._addFilesFromDirectory(entry, entry.name));
                                                    } else {
                                                        result.push(undefined);
                                                    }
                                                } else if (item.getAsFile != null) {
                                                    if (item.kind == null || item.kind === "file") {
                                                        result.push(_this4.addFile(item.getAsFile()));
                                                    } else {
                                                        result.push(undefined);
                                                    }
                                                } else {
                                                    result.push(undefined);
                                                }
                                            }
                                        } catch (err) {
                                            _iterator6.e(err);
                                        } finally {
                                            _iterator6.f();
                                        }

                                        return result;
                                    }();
                                } // Goes through the directory, and adds each file it finds recursively

                            }, {
                                key: "_addFilesFromDirectory",
                                value: function _addFilesFromDirectory(directory, path) {
                                    var _this5 = this;

                                    var dirReader = directory.createReader();

                                    var errorHandler = function errorHandler(error) {
                                        return __guardMethod__(console, "log", function (o) {
                                            return o.log(error);
                                        });
                                    };

                                    var readEntries = function readEntries() {
                                        return dirReader.readEntries(function (entries) {
                                            if (entries.length > 0) {
                                                var _iterator7 = dropzone_createForOfIteratorHelper(entries, true),
                                                    _step7;

                                                try {
                                                    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                                                        var entry = _step7.value;

                                                        if (entry.isFile) {
                                                            entry.file(function (file) {
                                                                if (_this5.options.ignoreHiddenFiles && file.name.substring(0, 1) === ".") {
                                                                    return;
                                                                }

                                                                file.fullPath = "".concat(path, "/").concat(file.name);
                                                                return _this5.addFile(file);
                                                            });
                                                        } else if (entry.isDirectory) {
                                                            _this5._addFilesFromDirectory(entry, "".concat(path, "/").concat(entry.name));
                                                        }
                                                    } // Recursively call readEntries() again, since browser only handle
                                                    // the first 100 entries.
                                                    // See: https://developer.mozilla.org/en-US/docs/Web/API/DirectoryReader#readEntries

                                                } catch (err) {
                                                    _iterator7.e(err);
                                                } finally {
                                                    _iterator7.f();
                                                }

                                                readEntries();
                                            }

                                            return null;
                                        }, errorHandler);
                                    };

                                    return readEntries();
                                } // If `done()` is called without argument the file is accepted
                                // If you call it with an error message, the file is rejected
                                // (This allows for asynchronous validation)
                                //
                                // This function checks the filesize, and if the file.type passes the
                                // `acceptedFiles` check.

                            }, {
                                key: "accept",
                                value: function accept(file, done) {
                                    if (this.options.maxFilesize && file.size > this.options.maxFilesize * 1024 * 1024) {
                                        done(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(file.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize));
                                    } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {
                                        done(this.options.dictInvalidFileType);
                                    } else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
                                        done(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles));
                                        this.emit("maxfilesexceeded", file);
                                    } else {
                                        this.options.accept.call(this, file, done);
                                    }
                                }
                            }, {
                                key: "addFile",
                                value: function addFile(file) {
                                    var _this6 = this;

                                    file.upload = {
                                        uuid: Dropzone.uuidv4(),
                                        progress: 0,
                                        // Setting the total upload size to file.size for the beginning
                                        // It's actual different than the size to be transmitted.
                                        total: file.size,
                                        bytesSent: 0,
                                        filename: this._renameFile(file) // Not setting chunking information here, because the acutal data — and
                                        // thus the chunks — might change if `options.transformFile` is set
                                        // and does something to the data.

                                    };
                                    this.files.push(file);
                                    file.status = Dropzone.ADDED;
                                    this.emit("addedfile", file);

                                    this._enqueueThumbnail(file);

                                    this.accept(file, function (error) {
                                        if (error) {
                                            file.accepted = false;

                                            _this6._errorProcessing([file], error); // Will set the file.status

                                        } else {
                                            file.accepted = true;

                                            if (_this6.options.autoQueue) {
                                                _this6.enqueueFile(file);
                                            } // Will set .accepted = true

                                        }

                                        _this6._updateMaxFilesReachedClass();
                                    });
                                } // Wrapper for enqueueFile

                            }, {
                                key: "enqueueFiles",
                                value: function enqueueFiles(files) {
                                    var _iterator8 = dropzone_createForOfIteratorHelper(files, true),
                                        _step8;

                                    try {
                                        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                                            var file = _step8.value;
                                            this.enqueueFile(file);
                                        }
                                    } catch (err) {
                                        _iterator8.e(err);
                                    } finally {
                                        _iterator8.f();
                                    }

                                    return null;
                                }
                            }, {
                                key: "enqueueFile",
                                value: function enqueueFile(file) {
                                    var _this7 = this;

                                    if (file.status === Dropzone.ADDED && file.accepted === true) {
                                        file.status = Dropzone.QUEUED;

                                        if (this.options.autoProcessQueue) {
                                            return setTimeout(function () {
                                                return _this7.processQueue();
                                            }, 0); // Deferring the call
                                        }
                                    } else {
                                        throw new Error("This file can't be queued because it has already been processed or was rejected.");
                                    }
                                }
                            }, {
                                key: "_enqueueThumbnail",
                                value: function _enqueueThumbnail(file) {
                                    var _this8 = this;

                                    if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {
                                        this._thumbnailQueue.push(file);

                                        return setTimeout(function () {
                                            return _this8._processThumbnailQueue();
                                        }, 0); // Deferring the call
                                    }
                                }
                            }, {
                                key: "_processThumbnailQueue",
                                value: function _processThumbnailQueue() {
                                    var _this9 = this;

                                    if (this._processingThumbnail || this._thumbnailQueue.length === 0) {
                                        return;
                                    }

                                    this._processingThumbnail = true;

                                    var file = this._thumbnailQueue.shift();

                                    return this.createThumbnail(file, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, function (dataUrl) {
                                        _this9.emit("thumbnail", file, dataUrl);

                                        _this9._processingThumbnail = false;
                                        return _this9._processThumbnailQueue();
                                    });
                                } // Can be called by the user to remove a file

                            }, {
                                key: "removeFile",
                                value: function removeFile(file) {
                                    if (file.status === Dropzone.UPLOADING) {
                                        this.cancelUpload(file);
                                    }

                                    this.files = without(this.files, file);
                                    this.emit("removedfile", file);

                                    if (this.files.length === 0) {
                                        return this.emit("reset");
                                    }
                                } // Removes all files that aren't currently processed from the list

                            }, {
                                key: "removeAllFiles",
                                value: function removeAllFiles(cancelIfNecessary) {
                                    // Create a copy of files since removeFile() changes the @files array.
                                    if (cancelIfNecessary == null) {
                                        cancelIfNecessary = false;
                                    }

                                    var _iterator9 = dropzone_createForOfIteratorHelper(this.files.slice(), true),
                                        _step9;

                                    try {
                                        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                                            var file = _step9.value;

                                            if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {
                                                this.removeFile(file);
                                            }
                                        }
                                    } catch (err) {
                                        _iterator9.e(err);
                                    } finally {
                                        _iterator9.f();
                                    }

                                    return null;
                                } // Resizes an image before it gets sent to the server. This function is the default behavior of
                                // `options.transformFile` if `resizeWidth` or `resizeHeight` are set. The callback is invoked with
                                // the resized blob.

                            }, {
                                key: "resizeImage",
                                value: function resizeImage(file, width, height, resizeMethod, callback) {
                                    var _this10 = this;

                                    return this.createThumbnail(file, width, height, resizeMethod, true, function (dataUrl, canvas) {
                                        if (canvas == null) {
                                            // The image has not been resized
                                            return callback(file);
                                        } else {
                                            var resizeMimeType = _this10.options.resizeMimeType;

                                            if (resizeMimeType == null) {
                                                resizeMimeType = file.type;
                                            }

                                            var resizedDataURL = canvas.toDataURL(resizeMimeType, _this10.options.resizeQuality);

                                            if (resizeMimeType === "image/jpeg" || resizeMimeType === "image/jpg") {
                                                // Now add the original EXIF information
                                                resizedDataURL = ExifRestore.restore(file.dataURL, resizedDataURL);
                                            }

                                            return callback(Dropzone.dataURItoBlob(resizedDataURL));
                                        }
                                    });
                                }
                            }, {
                                key: "createThumbnail",
                                value: function createThumbnail(file, width, height, resizeMethod, fixOrientation, callback) {
                                    var _this11 = this;

                                    var fileReader = new FileReader();

                                    fileReader.onload = function () {
                                        file.dataURL = fileReader.result; // Don't bother creating a thumbnail for SVG images since they're vector

                                        if (file.type === "image/svg+xml") {
                                            if (callback != null) {
                                                callback(fileReader.result);
                                            }

                                            return;
                                        }

                                        _this11.createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback);
                                    };

                                    fileReader.readAsDataURL(file);
                                } // `mockFile` needs to have these attributes:
                                //
                                //     { name: 'name', size: 12345, imageUrl: '' }
                                //
                                // `callback` will be invoked when the image has been downloaded and displayed.
                                // `crossOrigin` will be added to the `img` tag when accessing the file.

                            }, {
                                key: "displayExistingFile",
                                value: function displayExistingFile(mockFile, imageUrl, callback, crossOrigin) {
                                    var _this12 = this;

                                    var resizeThumbnail = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
                                    this.emit("addedfile", mockFile);
                                    this.emit("complete", mockFile);

                                    if (!resizeThumbnail) {
                                        this.emit("thumbnail", mockFile, imageUrl);
                                        if (callback) callback();
                                    } else {
                                        var onDone = function onDone(thumbnail) {
                                            _this12.emit("thumbnail", mockFile, thumbnail);

                                            if (callback) callback();
                                        };

                                        mockFile.dataURL = imageUrl;
                                        this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);
                                    }
                                }
                            }, {
                                key: "createThumbnailFromUrl",
                                value: function createThumbnailFromUrl(file, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {
                                    var _this13 = this;

                                    // Not using `new Image` here because of a bug in latest Chrome versions.
                                    // See https://github.com/enyo/dropzone/pull/226
                                    var img = document.createElement("img");

                                    if (crossOrigin) {
                                        img.crossOrigin = crossOrigin;
                                    } // fixOrientation is not needed anymore with browsers handling imageOrientation


                                    fixOrientation = getComputedStyle(document.body)["imageOrientation"] == "from-image" ? false : fixOrientation;

                                    img.onload = function () {
                                        var loadExif = function loadExif(callback) {
                                            return callback(1);
                                        };

                                        if (typeof EXIF !== "undefined" && EXIF !== null && fixOrientation) {
                                            loadExif = function loadExif(callback) {
                                                return EXIF.getData(img, function () {
                                                    return callback(EXIF.getTag(this, "Orientation"));
                                                });
                                            };
                                        }

                                        return loadExif(function (orientation) {
                                            file.width = img.width;
                                            file.height = img.height;

                                            var resizeInfo = _this13.options.resize.call(_this13, file, width, height, resizeMethod);

                                            var canvas = document.createElement("canvas");
                                            var ctx = canvas.getContext("2d");
                                            canvas.width = resizeInfo.trgWidth;
                                            canvas.height = resizeInfo.trgHeight;

                                            if (orientation > 4) {
                                                canvas.width = resizeInfo.trgHeight;
                                                canvas.height = resizeInfo.trgWidth;
                                            }

                                            switch (orientation) {
                                                case 2:
                                                    // horizontal flip
                                                    ctx.translate(canvas.width, 0);
                                                    ctx.scale(-1, 1);
                                                    break;

                                                case 3:
                                                    // 180° rotate left
                                                    ctx.translate(canvas.width, canvas.height);
                                                    ctx.rotate(Math.PI);
                                                    break;

                                                case 4:
                                                    // vertical flip
                                                    ctx.translate(0, canvas.height);
                                                    ctx.scale(1, -1);
                                                    break;

                                                case 5:
                                                    // vertical flip + 90 rotate right
                                                    ctx.rotate(0.5 * Math.PI);
                                                    ctx.scale(1, -1);
                                                    break;

                                                case 6:
                                                    // 90° rotate right
                                                    ctx.rotate(0.5 * Math.PI);
                                                    ctx.translate(0, -canvas.width);
                                                    break;

                                                case 7:
                                                    // horizontal flip + 90 rotate right
                                                    ctx.rotate(0.5 * Math.PI);
                                                    ctx.translate(canvas.height, -canvas.width);
                                                    ctx.scale(-1, 1);
                                                    break;

                                                case 8:
                                                    // 90° rotate left
                                                    ctx.rotate(-0.5 * Math.PI);
                                                    ctx.translate(-canvas.height, 0);
                                                    break;
                                            } // This is a bugfix for iOS' scaling bug.


                                            drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);
                                            var thumbnail = canvas.toDataURL("image/png");

                                            if (callback != null) {
                                                return callback(thumbnail, canvas);
                                            }
                                        });
                                    };

                                    if (callback != null) {
                                        img.onerror = callback;
                                    }

                                    return img.src = file.dataURL;
                                } // Goes through the queue and processes files if there aren't too many already.

                            }, {
                                key: "processQueue",
                                value: function processQueue() {
                                    var parallelUploads = this.options.parallelUploads;
                                    var processingLength = this.getUploadingFiles().length;
                                    var i = processingLength; // There are already at least as many files uploading than should be

                                    if (processingLength >= parallelUploads) {
                                        return;
                                    }

                                    var queuedFiles = this.getQueuedFiles();

                                    if (!(queuedFiles.length > 0)) {
                                        return;
                                    }

                                    if (this.options.uploadMultiple) {
                                        // The files should be uploaded in one request
                                        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));
                                    } else {
                                        while (i < parallelUploads) {
                                            if (!queuedFiles.length) {
                                                return;
                                            } // Nothing left to process


                                            this.processFile(queuedFiles.shift());
                                            i++;
                                        }
                                    }
                                } // Wrapper for `processFiles`

                            }, {
                                key: "processFile",
                                value: function processFile(file) {
                                    return this.processFiles([file]);
                                } // Loads the file, then calls finishedLoading()

                            }, {
                                key: "processFiles",
                                value: function processFiles(files) {
                                    var _iterator10 = dropzone_createForOfIteratorHelper(files, true),
                                        _step10;

                                    try {
                                        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                                            var file = _step10.value;
                                            file.processing = true; // Backwards compatibility

                                            file.status = Dropzone.UPLOADING;
                                            this.emit("processing", file);
                                        }
                                    } catch (err) {
                                        _iterator10.e(err);
                                    } finally {
                                        _iterator10.f();
                                    }

                                    if (this.options.uploadMultiple) {
                                        this.emit("processingmultiple", files);
                                    }

                                    return this.uploadFiles(files);
                                }
                            }, {
                                key: "_getFilesWithXhr",
                                value: function _getFilesWithXhr(xhr) {
                                    var files;
                                    return files = this.files.filter(function (file) {
                                        return file.xhr === xhr;
                                    }).map(function (file) {
                                        return file;
                                    });
                                } // Cancels the file upload and sets the status to CANCELED
                                // **if** the file is actually being uploaded.
                                // If it's still in the queue, the file is being removed from it and the status
                                // set to CANCELED.

                            }, {
                                key: "cancelUpload",
                                value: function cancelUpload(file) {
                                    if (file.status === Dropzone.UPLOADING) {
                                        var groupedFiles = this._getFilesWithXhr(file.xhr);

                                        var _iterator11 = dropzone_createForOfIteratorHelper(groupedFiles, true),
                                            _step11;

                                        try {
                                            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                                                var groupedFile = _step11.value;
                                                groupedFile.status = Dropzone.CANCELED;
                                            }
                                        } catch (err) {
                                            _iterator11.e(err);
                                        } finally {
                                            _iterator11.f();
                                        }

                                        if (typeof file.xhr !== "undefined") {
                                            file.xhr.abort();
                                        }

                                        var _iterator12 = dropzone_createForOfIteratorHelper(groupedFiles, true),
                                            _step12;

                                        try {
                                            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                                                var _groupedFile = _step12.value;
                                                this.emit("canceled", _groupedFile);
                                            }
                                        } catch (err) {
                                            _iterator12.e(err);
                                        } finally {
                                            _iterator12.f();
                                        }

                                        if (this.options.uploadMultiple) {
                                            this.emit("canceledmultiple", groupedFiles);
                                        }
                                    } else if (file.status === Dropzone.ADDED || file.status === Dropzone.QUEUED) {
                                        file.status = Dropzone.CANCELED;
                                        this.emit("canceled", file);

                                        if (this.options.uploadMultiple) {
                                            this.emit("canceledmultiple", [file]);
                                        }
                                    }

                                    if (this.options.autoProcessQueue) {
                                        return this.processQueue();
                                    }
                                }
                            }, {
                                key: "resolveOption",
                                value: function resolveOption(option) {
                                    if (typeof option === "function") {
                                        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                                            args[_key - 1] = arguments[_key];
                                        }

                                        return option.apply(this, args);
                                    }

                                    return option;
                                }
                            }, {
                                key: "uploadFile",
                                value: function uploadFile(file) {
                                    return this.uploadFiles([file]);
                                }
                            }, {
                                key: "uploadFiles",
                                value: function uploadFiles(files) {
                                    var _this14 = this;

                                    this._transformFiles(files, function (transformedFiles) {
                                        if (_this14.options.chunking) {
                                            // Chunking is not allowed to be used with `uploadMultiple` so we know
                                            // that there is only __one__file.
                                            var transformedFile = transformedFiles[0];
                                            files[0].upload.chunked = _this14.options.chunking && (_this14.options.forceChunking || transformedFile.size > _this14.options.chunkSize);
                                            files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / _this14.options.chunkSize);
                                        }

                                        if (files[0].upload.chunked) {
                                            // This file should be sent in chunks!
                                            // If the chunking option is set, we **know** that there can only be **one** file, since
                                            // uploadMultiple is not allowed with this option.
                                            var file = files[0];
                                            var _transformedFile = transformedFiles[0];
                                            var startedChunkCount = 0;
                                            file.upload.chunks = [];

                                            var handleNextChunk = function handleNextChunk() {
                                                var chunkIndex = 0; // Find the next item in file.upload.chunks that is not defined yet.

                                                while (file.upload.chunks[chunkIndex] !== undefined) {
                                                    chunkIndex++;
                                                } // This means, that all chunks have already been started.


                                                if (chunkIndex >= file.upload.totalChunkCount) return;
                                                startedChunkCount++;
                                                var start = chunkIndex * _this14.options.chunkSize;
                                                var end = Math.min(start + _this14.options.chunkSize, _transformedFile.size);
                                                var dataBlock = {
                                                    name: _this14._getParamName(0),
                                                    data: _transformedFile.webkitSlice ? _transformedFile.webkitSlice(start, end) : _transformedFile.slice(start, end),
                                                    filename: file.upload.filename,
                                                    chunkIndex: chunkIndex
                                                };
                                                file.upload.chunks[chunkIndex] = {
                                                    file: file,
                                                    index: chunkIndex,
                                                    dataBlock: dataBlock,
                                                    // In case we want to retry.
                                                    status: Dropzone.UPLOADING,
                                                    progress: 0,
                                                    retries: 0 // The number of times this block has been retried.

                                                };

                                                _this14._uploadData(files, [dataBlock]);
                                            };

                                            file.upload.finishedChunkUpload = function (chunk, response) {
                                                var allFinished = true;
                                                chunk.status = Dropzone.SUCCESS; // Clear the data from the chunk

                                                chunk.dataBlock = null; // Leaving this reference to xhr intact here will cause memory leaks in some browsers

                                                chunk.xhr = null;

                                                for (var i = 0; i < file.upload.totalChunkCount; i++) {
                                                    if (file.upload.chunks[i] === undefined) {
                                                        return handleNextChunk();
                                                    }

                                                    if (file.upload.chunks[i].status !== Dropzone.SUCCESS) {
                                                        allFinished = false;
                                                    }
                                                }

                                                if (allFinished) {
                                                    _this14.options.chunksUploaded(file, function () {
                                                        _this14._finished(files, response, null);
                                                    });
                                                }
                                            };

                                            if (_this14.options.parallelChunkUploads) {
                                                for (var i = 0; i < file.upload.totalChunkCount; i++) {
                                                    handleNextChunk();
                                                }
                                            } else {
                                                handleNextChunk();
                                            }
                                        } else {
                                            var dataBlocks = [];

                                            for (var _i2 = 0; _i2 < files.length; _i2++) {
                                                dataBlocks[_i2] = {
                                                    name: _this14._getParamName(_i2),
                                                    data: transformedFiles[_i2],
                                                    filename: files[_i2].upload.filename
                                                };
                                            }

                                            _this14._uploadData(files, dataBlocks);
                                        }
                                    });
                                } /// Returns the right chunk for given file and xhr

                            }, {
                                key: "_getChunk",
                                value: function _getChunk(file, xhr) {
                                    for (var i = 0; i < file.upload.totalChunkCount; i++) {
                                        if (file.upload.chunks[i] !== undefined && file.upload.chunks[i].xhr === xhr) {
                                            return file.upload.chunks[i];
                                        }
                                    }
                                } // This function actually uploads the file(s) to the server.
                                // If dataBlocks contains the actual data to upload (meaning, that this could either be transformed
                                // files, or individual chunks for chunked upload).

                            }, {
                                key: "_uploadData",
                                value: function _uploadData(files, dataBlocks) {
                                    var _this15 = this;

                                    var xhr = new XMLHttpRequest(); // Put the xhr object in the file objects to be able to reference it later.

                                    var _iterator13 = dropzone_createForOfIteratorHelper(files, true),
                                        _step13;

                                    try {
                                        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                                            var file = _step13.value;
                                            file.xhr = xhr;
                                        }
                                    } catch (err) {
                                        _iterator13.e(err);
                                    } finally {
                                        _iterator13.f();
                                    }

                                    if (files[0].upload.chunked) {
                                        // Put the xhr object in the right chunk object, so it can be associated later, and found with _getChunk
                                        files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;
                                    }

                                    var method = this.resolveOption(this.options.method, files);
                                    var url = this.resolveOption(this.options.url, files);
                                    xhr.open(method, url, true); // Setting the timeout after open because of IE11 issue: https://gitlab.com/meno/dropzone/issues/8

                                    var timeout = this.resolveOption(this.options.timeout, files);
                                    if (timeout) xhr.timeout = this.resolveOption(this.options.timeout, files); // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179

                                    xhr.withCredentials = !!this.options.withCredentials;

                                    xhr.onload = function (e) {
                                        _this15._finishedUploading(files, xhr, e);
                                    };

                                    xhr.ontimeout = function () {
                                        _this15._handleUploadError(files, xhr, "Request timedout after ".concat(_this15.options.timeout / 1000, " seconds"));
                                    };

                                    xhr.onerror = function () {
                                        _this15._handleUploadError(files, xhr);
                                    }; // Some browsers do not have the .upload property


                                    var progressObj = xhr.upload != null ? xhr.upload : xhr;

                                    progressObj.onprogress = function (e) {
                                        return _this15._updateFilesUploadProgress(files, xhr, e);
                                    };

                                    var headers = {
                                        Accept: "application/json",
                                        "Cache-Control": "no-cache",
                                        "X-Requested-With": "XMLHttpRequest"
                                    };

                                    if (this.options.headers) {
                                        Dropzone.extend(headers, this.options.headers);
                                    }

                                    for (var headerName in headers) {
                                        var headerValue = headers[headerName];

                                        if (headerValue) {
                                            xhr.setRequestHeader(headerName, headerValue);
                                        }
                                    }

                                    var formData = new FormData(); // Adding all @options parameters

                                    if (this.options.params) {
                                        var additionalParams = this.options.params;

                                        if (typeof additionalParams === "function") {
                                            additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);
                                        }

                                        for (var key in additionalParams) {
                                            var value = additionalParams[key];

                                            if (Array.isArray(value)) {
                                                // The additional parameter contains an array,
                                                // so lets iterate over it to attach each value
                                                // individually.
                                                for (var i = 0; i < value.length; i++) {
                                                    formData.append(key, value[i]);
                                                }
                                            } else {
                                                formData.append(key, value);
                                            }
                                        }
                                    } // Let the user add additional data if necessary


                                    var _iterator14 = dropzone_createForOfIteratorHelper(files, true),
                                        _step14;

                                    try {
                                        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                                            var _file = _step14.value;
                                            this.emit("sending", _file, xhr, formData);
                                        }
                                    } catch (err) {
                                        _iterator14.e(err);
                                    } finally {
                                        _iterator14.f();
                                    }

                                    if (this.options.uploadMultiple) {
                                        this.emit("sendingmultiple", files, xhr, formData);
                                    }

                                    this._addFormElementData(formData); // Finally add the files
                                    // Has to be last because some servers (eg: S3) expect the file to be the last parameter


                                    for (var _i3 = 0; _i3 < dataBlocks.length; _i3++) {
                                        var dataBlock = dataBlocks[_i3];
                                        formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);
                                    }

                                    this.submitRequest(xhr, formData, files);
                                } // Transforms all files with this.options.transformFile and invokes done with the transformed files when done.

                            }, {
                                key: "_transformFiles",
                                value: function _transformFiles(files, done) {
                                    var _this16 = this;

                                    var transformedFiles = []; // Clumsy way of handling asynchronous calls, until I get to add a proper Future library.

                                    var doneCounter = 0;

                                    var _loop = function _loop(i) {
                                        _this16.options.transformFile.call(_this16, files[i], function (transformedFile) {
                                            transformedFiles[i] = transformedFile;

                                            if (++doneCounter === files.length) {
                                                done(transformedFiles);
                                            }
                                        });
                                    };

                                    for (var i = 0; i < files.length; i++) {
                                        _loop(i);
                                    }
                                } // Takes care of adding other input elements of the form to the AJAX request

                            }, {
                                key: "_addFormElementData",
                                value: function _addFormElementData(formData) {
                                    // Take care of other input elements
                                    if (this.element.tagName === "FORM") {
                                        var _iterator15 = dropzone_createForOfIteratorHelper(this.element.querySelectorAll("input, textarea, select, button"), true),
                                            _step15;

                                        try {
                                            for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                                                var input = _step15.value;
                                                var inputName = input.getAttribute("name");
                                                var inputType = input.getAttribute("type");
                                                if (inputType) inputType = inputType.toLowerCase(); // If the input doesn't have a name, we can't use it.

                                                if (typeof inputName === "undefined" || inputName === null) continue;

                                                if (input.tagName === "SELECT" && input.hasAttribute("multiple")) {
                                                    // Possibly multiple values
                                                    var _iterator16 = dropzone_createForOfIteratorHelper(input.options, true),
                                                        _step16;

                                                    try {
                                                        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
                                                            var option = _step16.value;

                                                            if (option.selected) {
                                                                formData.append(inputName, option.value);
                                                            }
                                                        }
                                                    } catch (err) {
                                                        _iterator16.e(err);
                                                    } finally {
                                                        _iterator16.f();
                                                    }
                                                } else if (!inputType || inputType !== "checkbox" && inputType !== "radio" || input.checked) {
                                                    formData.append(inputName, input.value);
                                                }
                                            }
                                        } catch (err) {
                                            _iterator15.e(err);
                                        } finally {
                                            _iterator15.f();
                                        }
                                    }
                                } // Invoked when there is new progress information about given files.
                                // If e is not provided, it is assumed that the upload is finished.

                            }, {
                                key: "_updateFilesUploadProgress",
                                value: function _updateFilesUploadProgress(files, xhr, e) {
                                    if (!files[0].upload.chunked) {
                                        // Handle file uploads without chunking
                                        var _iterator17 = dropzone_createForOfIteratorHelper(files, true),
                                            _step17;

                                        try {
                                            for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
                                                var file = _step17.value;

                                                if (file.upload.total && file.upload.bytesSent && file.upload.bytesSent == file.upload.total) {
                                                    // If both, the `total` and `bytesSent` have already been set, and
                                                    // they are equal (meaning progress is at 100%), we can skip this
                                                    // file, since an upload progress shouldn't go down.
                                                    continue;
                                                }

                                                if (e) {
                                                    file.upload.progress = 100 * e.loaded / e.total;
                                                    file.upload.total = e.total;
                                                    file.upload.bytesSent = e.loaded;
                                                } else {
                                                    // No event, so we're at 100%
                                                    file.upload.progress = 100;
                                                    file.upload.bytesSent = file.upload.total;
                                                }

                                                this.emit("uploadprogress", file, file.upload.progress, file.upload.bytesSent);
                                            }
                                        } catch (err) {
                                            _iterator17.e(err);
                                        } finally {
                                            _iterator17.f();
                                        }
                                    } else {
                                        // Handle chunked file uploads
                                        // Chunked upload is not compatible with uploading multiple files in one
                                        // request, so we know there's only one file.
                                        var _file2 = files[0]; // Since this is a chunked upload, we need to update the appropriate chunk
                                        // progress.

                                        var chunk = this._getChunk(_file2, xhr);

                                        if (e) {
                                            chunk.progress = 100 * e.loaded / e.total;
                                            chunk.total = e.total;
                                            chunk.bytesSent = e.loaded;
                                        } else {
                                            // No event, so we're at 100%
                                            chunk.progress = 100;
                                            chunk.bytesSent = chunk.total;
                                        } // Now tally the *file* upload progress from its individual chunks


                                        _file2.upload.progress = 0;
                                        _file2.upload.total = 0;
                                        _file2.upload.bytesSent = 0;

                                        for (var i = 0; i < _file2.upload.totalChunkCount; i++) {
                                            if (_file2.upload.chunks[i] && typeof _file2.upload.chunks[i].progress !== "undefined") {
                                                _file2.upload.progress += _file2.upload.chunks[i].progress;
                                                _file2.upload.total += _file2.upload.chunks[i].total;
                                                _file2.upload.bytesSent += _file2.upload.chunks[i].bytesSent;
                                            }
                                        } // Since the process is a percentage, we need to divide by the amount of
                                        // chunks we've used.


                                        _file2.upload.progress = _file2.upload.progress / _file2.upload.totalChunkCount;
                                        this.emit("uploadprogress", _file2, _file2.upload.progress, _file2.upload.bytesSent);
                                    }
                                }
                            }, {
                                key: "_finishedUploading",
                                value: function _finishedUploading(files, xhr, e) {
                                    var response;

                                    if (files[0].status === Dropzone.CANCELED) {
                                        return;
                                    }

                                    if (xhr.readyState !== 4) {
                                        return;
                                    }

                                    if (xhr.responseType !== "arraybuffer" && xhr.responseType !== "blob") {
                                        response = xhr.responseText;

                                        if (xhr.getResponseHeader("content-type") && ~xhr.getResponseHeader("content-type").indexOf("application/json")) {
                                            try {
                                                response = JSON.parse(response);
                                            } catch (error) {
                                                e = error;
                                                response = "Invalid JSON response from server.";
                                            }
                                        }
                                    }

                                    this._updateFilesUploadProgress(files, xhr);

                                    if (!(200 <= xhr.status && xhr.status < 300)) {
                                        this._handleUploadError(files, xhr, response);
                                    } else {
                                        if (files[0].upload.chunked) {
                                            files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);
                                        } else {
                                            this._finished(files, response, e);
                                        }
                                    }
                                }
                            }, {
                                key: "_handleUploadError",
                                value: function _handleUploadError(files, xhr, response) {
                                    if (files[0].status === Dropzone.CANCELED) {
                                        return;
                                    }

                                    if (files[0].upload.chunked && this.options.retryChunks) {
                                        var chunk = this._getChunk(files[0], xhr);

                                        if (chunk.retries++ < this.options.retryChunksLimit) {
                                            this._uploadData(files, [chunk.dataBlock]);

                                            return;
                                        } else {
                                            console.warn("Retried this chunk too often. Giving up.");
                                        }
                                    }

                                    this._errorProcessing(files, response || this.options.dictResponseError.replace("{{statusCode}}", xhr.status), xhr);
                                }
                            }, {
                                key: "submitRequest",
                                value: function submitRequest(xhr, formData, files) {
                                    if (xhr.readyState != 1) {
                                        console.warn("Cannot send this request because the XMLHttpRequest.readyState is not OPENED.");
                                        return;
                                    }

                                    xhr.send(formData);
                                } // Called internally when processing is finished.
                                // Individual callbacks have to be called in the appropriate sections.

                            }, {
                                key: "_finished",
                                value: function _finished(files, responseText, e) {
                                    var _iterator18 = dropzone_createForOfIteratorHelper(files, true),
                                        _step18;

                                    try {
                                        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
                                            var file = _step18.value;
                                            file.status = Dropzone.SUCCESS;
                                            this.emit("success", file, responseText, e);
                                            this.emit("complete", file);
                                        }
                                    } catch (err) {
                                        _iterator18.e(err);
                                    } finally {
                                        _iterator18.f();
                                    }

                                    if (this.options.uploadMultiple) {
                                        this.emit("successmultiple", files, responseText, e);
                                        this.emit("completemultiple", files);
                                    }

                                    if (this.options.autoProcessQueue) {
                                        return this.processQueue();
                                    }
                                } // Called internally when processing is finished.
                                // Individual callbacks have to be called in the appropriate sections.

                            }, {
                                key: "_errorProcessing",
                                value: function _errorProcessing(files, message, xhr) {
                                    var _iterator19 = dropzone_createForOfIteratorHelper(files, true),
                                        _step19;

                                    try {
                                        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
                                            var file = _step19.value;
                                            file.status = Dropzone.ERROR;
                                            this.emit("error", file, message, xhr);
                                            this.emit("complete", file);
                                        }
                                    } catch (err) {
                                        _iterator19.e(err);
                                    } finally {
                                        _iterator19.f();
                                    }

                                    if (this.options.uploadMultiple) {
                                        this.emit("errormultiple", files, message, xhr);
                                        this.emit("completemultiple", files);
                                    }

                                    if (this.options.autoProcessQueue) {
                                        return this.processQueue();
                                    }
                                }
                            }], [{
                                key: "initClass",
                                value: function initClass() {
                                    // Exposing the emitter class, mainly for tests
                                    this.prototype.Emitter = Emitter;
                                    /*
       This is a list of all available events you can register on a dropzone object.
        You can register an event handler like this:
        dropzone.on("dragEnter", function() { });
        */

                                    this.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "addedfiles", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached", "queuecomplete"];
                                    this.prototype._thumbnailQueue = [];
                                    this.prototype._processingThumbnail = false;
                                } // global utility

                            }, {
                                key: "extend",
                                value: function extend(target) {
                                    for (var _len2 = arguments.length, objects = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                                        objects[_key2 - 1] = arguments[_key2];
                                    }

                                    for (var _i4 = 0, _objects = objects; _i4 < _objects.length; _i4++) {
                                        var object = _objects[_i4];

                                        for (var key in object) {
                                            var val = object[key];
                                            target[key] = val;
                                        }
                                    }

                                    return target;
                                }
                            }, {
                                key: "uuidv4",
                                value: function uuidv4() {
                                    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
                                        var r = Math.random() * 16 | 0,
                                            v = c === "x" ? r : r & 0x3 | 0x8;
                                        return v.toString(16);
                                    });
                                }
                            }]);

                            return Dropzone;
                        }(Emitter);


                        Dropzone.initClass();
                        Dropzone.version = "5.9.3"; // This is a map of options for your different dropzones. Add configurations
// to this object for your different dropzone elemens.
//
// Example:
//
//     Dropzone.options.myDropzoneElementId = { maxFilesize: 1 };
//
// To disable autoDiscover for a specific element, you can set `false` as an option:
//
//     Dropzone.options.myDisabledElementId = false;
//
// And in html:
//
//     <form action="/upload" id="my-dropzone-element-id" class="dropzone"></form>

                        Dropzone.options = {}; // Returns the options for an element or undefined if none available.

                        Dropzone.optionsForElement = function (element) {
                            // Get the `Dropzone.options.elementId` for this element if it exists
                            if (element.getAttribute("id")) {
                                return Dropzone.options[camelize(element.getAttribute("id"))];
                            } else {
                                return undefined;
                            }
                        }; // Holds a list of all dropzone instances


                        Dropzone.instances = []; // Returns the dropzone for given element if any

                        Dropzone.forElement = function (element) {
                            if (typeof element === "string") {
                                element = document.querySelector(element);
                            }

                            if ((element != null ? element.dropzone : undefined) == null) {
                                throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
                            }

                            return element.dropzone;
                        }; // Set to false if you don't want Dropzone to automatically find and attach to .dropzone elements.


                        Dropzone.autoDiscover = true; // Looks for all .dropzone elements and creates a dropzone for them

                        Dropzone.discover = function () {
                            var dropzones;

                            if (document.querySelectorAll) {
                                dropzones = document.querySelectorAll(".dropzone");
                            } else {
                                dropzones = []; // IE :(

                                var checkElements = function checkElements(elements) {
                                    return function () {
                                        var result = [];

                                        var _iterator20 = dropzone_createForOfIteratorHelper(elements, true),
                                            _step20;

                                        try {
                                            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
                                                var el = _step20.value;

                                                if (/(^| )dropzone($| )/.test(el.className)) {
                                                    result.push(dropzones.push(el));
                                                } else {
                                                    result.push(undefined);
                                                }
                                            }
                                        } catch (err) {
                                            _iterator20.e(err);
                                        } finally {
                                            _iterator20.f();
                                        }

                                        return result;
                                    }();
                                };

                                checkElements(document.getElementsByTagName("div"));
                                checkElements(document.getElementsByTagName("form"));
                            }

                            return function () {
                                var result = [];

                                var _iterator21 = dropzone_createForOfIteratorHelper(dropzones, true),
                                    _step21;

                                try {
                                    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
                                        var dropzone = _step21.value;

                                        // Create a dropzone unless auto discover has been disabled for specific element
                                        if (Dropzone.optionsForElement(dropzone) !== false) {
                                            result.push(new Dropzone(dropzone));
                                        } else {
                                            result.push(undefined);
                                        }
                                    }
                                } catch (err) {
                                    _iterator21.e(err);
                                } finally {
                                    _iterator21.f();
                                }

                                return result;
                            }();
                        }; // Some browsers support drag and drog functionality, but not correctly.
//
// So I created a blocklist of userAgents. Yes, yes. Browser sniffing, I know.
// But what to do when browsers *theoretically* support an API, but crash
// when using it.
//
// This is a list of regular expressions tested against navigator.userAgent
//
// ** It should only be used on browser that *do* support the API, but
// incorrectly **


                        Dropzone.blockedBrowsers = [// The mac os and windows phone version of opera 12 seems to have a problem with the File drag'n'drop API.
                            /opera.*(Macintosh|Windows Phone).*version\/12/i]; // Checks if the browser is supported

                        Dropzone.isBrowserSupported = function () {
                            var capableBrowser = true;

                            if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {
                                if (!("classList" in document.createElement("a"))) {
                                    capableBrowser = false;
                                } else {
                                    if (Dropzone.blacklistedBrowsers !== undefined) {
                                        // Since this has been renamed, this makes sure we don't break older
                                        // configuration.
                                        Dropzone.blockedBrowsers = Dropzone.blacklistedBrowsers;
                                    } // The browser supports the API, but may be blocked.


                                    var _iterator22 = dropzone_createForOfIteratorHelper(Dropzone.blockedBrowsers, true),
                                        _step22;

                                    try {
                                        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
                                            var regex = _step22.value;

                                            if (regex.test(navigator.userAgent)) {
                                                capableBrowser = false;
                                                continue;
                                            }
                                        }
                                    } catch (err) {
                                        _iterator22.e(err);
                                    } finally {
                                        _iterator22.f();
                                    }
                                }
                            } else {
                                capableBrowser = false;
                            }

                            return capableBrowser;
                        };

                        Dropzone.dataURItoBlob = function (dataURI) {
                            // convert base64 to raw binary data held in a string
                            // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this
                            var byteString = atob(dataURI.split(",")[1]); // separate out the mime component

                            var mimeString = dataURI.split(",")[0].split(":")[1].split(";")[0]; // write the bytes of the string to an ArrayBuffer

                            var ab = new ArrayBuffer(byteString.length);
                            var ia = new Uint8Array(ab);

                            for (var i = 0, end = byteString.length, asc = 0 <= end; asc ? i <= end : i >= end; asc ? i++ : i--) {
                                ia[i] = byteString.charCodeAt(i);
                            } // write the ArrayBuffer to a blob


                            return new Blob([ab], {
                                type: mimeString
                            });
                        }; // Returns an array without the rejected item


                        var without = function without(list, rejectedItem) {
                            return list.filter(function (item) {
                                return item !== rejectedItem;
                            }).map(function (item) {
                                return item;
                            });
                        }; // abc-def_ghi -> abcDefGhi


                        var camelize = function camelize(str) {
                            return str.replace(/[\-_](\w)/g, function (match) {
                                return match.charAt(1).toUpperCase();
                            });
                        }; // Creates an element from string


                        Dropzone.createElement = function (string) {
                            var div = document.createElement("div");
                            div.innerHTML = string;
                            return div.childNodes[0];
                        }; // Tests if given element is inside (or simply is) the container


                        Dropzone.elementInside = function (element, container) {
                            if (element === container) {
                                return true;
                            } // Coffeescript doesn't support do/while loops


                            while (element = element.parentNode) {
                                if (element === container) {
                                    return true;
                                }
                            }

                            return false;
                        };

                        Dropzone.getElement = function (el, name) {
                            var element;

                            if (typeof el === "string") {
                                element = document.querySelector(el);
                            } else if (el.nodeType != null) {
                                element = el;
                            }

                            if (element == null) {
                                throw new Error("Invalid `".concat(name, "` option provided. Please provide a CSS selector or a plain HTML element."));
                            }

                            return element;
                        };

                        Dropzone.getElements = function (els, name) {
                            var el, elements;

                            if (els instanceof Array) {
                                elements = [];

                                try {
                                    var _iterator23 = dropzone_createForOfIteratorHelper(els, true),
                                        _step23;

                                    try {
                                        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
                                            el = _step23.value;
                                            elements.push(this.getElement(el, name));
                                        }
                                    } catch (err) {
                                        _iterator23.e(err);
                                    } finally {
                                        _iterator23.f();
                                    }
                                } catch (e) {
                                    elements = null;
                                }
                            } else if (typeof els === "string") {
                                elements = [];

                                var _iterator24 = dropzone_createForOfIteratorHelper(document.querySelectorAll(els), true),
                                    _step24;

                                try {
                                    for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
                                        el = _step24.value;
                                        elements.push(el);
                                    }
                                } catch (err) {
                                    _iterator24.e(err);
                                } finally {
                                    _iterator24.f();
                                }
                            } else if (els.nodeType != null) {
                                elements = [els];
                            }

                            if (elements == null || !elements.length) {
                                throw new Error("Invalid `".concat(name, "` option provided. Please provide a CSS selector, a plain HTML element or a list of those."));
                            }

                            return elements;
                        }; // Asks the user the question and calls accepted or rejected accordingly
//
// The default implementation just uses `window.confirm` and then calls the
// appropriate callback.


                        Dropzone.confirm = function (question, accepted, rejected) {
                            if (window.confirm(question)) {
                                return accepted();
                            } else if (rejected != null) {
                                return rejected();
                            }
                        }; // Validates the mime type like this:
//
// https://developer.mozilla.org/en-US/docs/HTML/Element/input#attr-accept


                        Dropzone.isValidFile = function (file, acceptedFiles) {
                            if (!acceptedFiles) {
                                return true;
                            } // If there are no accepted mime types, it's OK


                            acceptedFiles = acceptedFiles.split(",");
                            var mimeType = file.type;
                            var baseMimeType = mimeType.replace(/\/.*$/, "");

                            var _iterator25 = dropzone_createForOfIteratorHelper(acceptedFiles, true),
                                _step25;

                            try {
                                for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
                                    var validType = _step25.value;
                                    validType = validType.trim();

                                    if (validType.charAt(0) === ".") {
                                        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {
                                            return true;
                                        }
                                    } else if (/\/\*$/.test(validType)) {
                                        // This is something like a image/* mime type
                                        if (baseMimeType === validType.replace(/\/.*$/, "")) {
                                            return true;
                                        }
                                    } else {
                                        if (mimeType === validType) {
                                            return true;
                                        }
                                    }
                                }
                            } catch (err) {
                                _iterator25.e(err);
                            } finally {
                                _iterator25.f();
                            }

                            return false;
                        }; // Augment jQuery


                        if (typeof jQuery !== "undefined" && jQuery !== null) {
                            jQuery.fn.dropzone = function (options) {
                                return this.each(function () {
                                    return new Dropzone(this, options);
                                });
                            };
                        } // Dropzone file status codes


                        Dropzone.ADDED = "added";
                        Dropzone.QUEUED = "queued"; // For backwards compatibility. Now, if a file is accepted, it's either queued
// or uploading.

                        Dropzone.ACCEPTED = Dropzone.QUEUED;
                        Dropzone.UPLOADING = "uploading";
                        Dropzone.PROCESSING = Dropzone.UPLOADING; // alias

                        Dropzone.CANCELED = "canceled";
                        Dropzone.ERROR = "error";
                        Dropzone.SUCCESS = "success";
                        /*

 Bugfix for iOS 6 and 7
 Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios
 based on the work of https://github.com/stomita/ios-imagefile-megapixel

 */
// Detecting vertical squash in loaded image.
// Fixes a bug which squash image vertically while drawing into canvas for some images.
// This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel

                        var detectVerticalSquash = function detectVerticalSquash(img) {
                            var iw = img.naturalWidth;
                            var ih = img.naturalHeight;
                            var canvas = document.createElement("canvas");
                            canvas.width = 1;
                            canvas.height = ih;
                            var ctx = canvas.getContext("2d");
                            ctx.drawImage(img, 0, 0);

                            var _ctx$getImageData = ctx.getImageData(1, 0, 1, ih),
                                data = _ctx$getImageData.data; // search image edge pixel position in case it is squashed vertically.


                            var sy = 0;
                            var ey = ih;
                            var py = ih;

                            while (py > sy) {
                                var alpha = data[(py - 1) * 4 + 3];

                                if (alpha === 0) {
                                    ey = py;
                                } else {
                                    sy = py;
                                }

                                py = ey + sy >> 1;
                            }

                            var ratio = py / ih;

                            if (ratio === 0) {
                                return 1;
                            } else {
                                return ratio;
                            }
                        }; // A replacement for context.drawImage
// (args are for source and destination).


                        var drawImageIOSFix = function drawImageIOSFix(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {
                            var vertSquashRatio = detectVerticalSquash(img);
                            return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);
                        }; // Based on MinifyJpeg
// Source: http://www.perry.cz/files/ExifRestorer.js
// http://elicon.blog57.fc2.com/blog-entry-206.html


                        var ExifRestore = /*#__PURE__*/function () {
                            function ExifRestore() {
                                dropzone_classCallCheck(this, ExifRestore);
                            }

                            dropzone_createClass(ExifRestore, null, [{
                                key: "initClass",
                                value: function initClass() {
                                    this.KEY_STR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                                }
                            }, {
                                key: "encode64",
                                value: function encode64(input) {
                                    var output = "";
                                    var chr1 = undefined;
                                    var chr2 = undefined;
                                    var chr3 = "";
                                    var enc1 = undefined;
                                    var enc2 = undefined;
                                    var enc3 = undefined;
                                    var enc4 = "";
                                    var i = 0;

                                    while (true) {
                                        chr1 = input[i++];
                                        chr2 = input[i++];
                                        chr3 = input[i++];
                                        enc1 = chr1 >> 2;
                                        enc2 = (chr1 & 3) << 4 | chr2 >> 4;
                                        enc3 = (chr2 & 15) << 2 | chr3 >> 6;
                                        enc4 = chr3 & 63;

                                        if (isNaN(chr2)) {
                                            enc3 = enc4 = 64;
                                        } else if (isNaN(chr3)) {
                                            enc4 = 64;
                                        }

                                        output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);
                                        chr1 = chr2 = chr3 = "";
                                        enc1 = enc2 = enc3 = enc4 = "";

                                        if (!(i < input.length)) {
                                            break;
                                        }
                                    }

                                    return output;
                                }
                            }, {
                                key: "restore",
                                value: function restore(origFileBase64, resizedFileBase64) {
                                    if (!origFileBase64.match("data:image/jpeg;base64,")) {
                                        return resizedFileBase64;
                                    }

                                    var rawImage = this.decode64(origFileBase64.replace("data:image/jpeg;base64,", ""));
                                    var segments = this.slice2Segments(rawImage);
                                    var image = this.exifManipulation(resizedFileBase64, segments);
                                    return "data:image/jpeg;base64,".concat(this.encode64(image));
                                }
                            }, {
                                key: "exifManipulation",
                                value: function exifManipulation(resizedFileBase64, segments) {
                                    var exifArray = this.getExifArray(segments);
                                    var newImageArray = this.insertExif(resizedFileBase64, exifArray);
                                    var aBuffer = new Uint8Array(newImageArray);
                                    return aBuffer;
                                }
                            }, {
                                key: "getExifArray",
                                value: function getExifArray(segments) {
                                    var seg = undefined;
                                    var x = 0;

                                    while (x < segments.length) {
                                        seg = segments[x];

                                        if (seg[0] === 255 & seg[1] === 225) {
                                            return seg;
                                        }

                                        x++;
                                    }

                                    return [];
                                }
                            }, {
                                key: "insertExif",
                                value: function insertExif(resizedFileBase64, exifArray) {
                                    var imageData = resizedFileBase64.replace("data:image/jpeg;base64,", "");
                                    var buf = this.decode64(imageData);
                                    var separatePoint = buf.indexOf(255, 3);
                                    var mae = buf.slice(0, separatePoint);
                                    var ato = buf.slice(separatePoint);
                                    var array = mae;
                                    array = array.concat(exifArray);
                                    array = array.concat(ato);
                                    return array;
                                }
                            }, {
                                key: "slice2Segments",
                                value: function slice2Segments(rawImageArray) {
                                    var head = 0;
                                    var segments = [];

                                    while (true) {
                                        var length;

                                        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) {
                                            break;
                                        }

                                        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) {
                                            head += 2;
                                        } else {
                                            length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];
                                            var endPoint = head + length + 2;
                                            var seg = rawImageArray.slice(head, endPoint);
                                            segments.push(seg);
                                            head = endPoint;
                                        }

                                        if (head > rawImageArray.length) {
                                            break;
                                        }
                                    }

                                    return segments;
                                }
                            }, {
                                key: "decode64",
                                value: function decode64(input) {
                                    var output = "";
                                    var chr1 = undefined;
                                    var chr2 = undefined;
                                    var chr3 = "";
                                    var enc1 = undefined;
                                    var enc2 = undefined;
                                    var enc3 = undefined;
                                    var enc4 = "";
                                    var i = 0;
                                    var buf = []; // remove all characters that are not A-Z, a-z, 0-9, +, /, or =

                                    var base64test = /[^A-Za-z0-9\+\/\=]/g;

                                    if (base64test.exec(input)) {
                                        console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding.");
                                    }

                                    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

                                    while (true) {
                                        enc1 = this.KEY_STR.indexOf(input.charAt(i++));
                                        enc2 = this.KEY_STR.indexOf(input.charAt(i++));
                                        enc3 = this.KEY_STR.indexOf(input.charAt(i++));
                                        enc4 = this.KEY_STR.indexOf(input.charAt(i++));
                                        chr1 = enc1 << 2 | enc2 >> 4;
                                        chr2 = (enc2 & 15) << 4 | enc3 >> 2;
                                        chr3 = (enc3 & 3) << 6 | enc4;
                                        buf.push(chr1);

                                        if (enc3 !== 64) {
                                            buf.push(chr2);
                                        }

                                        if (enc4 !== 64) {
                                            buf.push(chr3);
                                        }

                                        chr1 = chr2 = chr3 = "";
                                        enc1 = enc2 = enc3 = enc4 = "";

                                        if (!(i < input.length)) {
                                            break;
                                        }
                                    }

                                    return buf;
                                }
                            }]);

                            return ExifRestore;
                        }();

                        ExifRestore.initClass();
                        /*
 * contentloaded.js
 *
 * Author: Diego Perini (diego.perini at gmail.com)
 * Summary: cross-browser wrapper for DOMContentLoaded
 * Updated: 20101020
 * License: MIT
 * Version: 1.2
 *
 * URL:
 * http://javascript.nwbox.com/ContentLoaded/
 * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
 */
// @win window reference
// @fn function reference

                        var contentLoaded = function contentLoaded(win, fn) {
                            var done = false;
                            var top = true;
                            var doc = win.document;
                            var root = doc.documentElement;
                            var add = doc.addEventListener ? "addEventListener" : "attachEvent";
                            var rem = doc.addEventListener ? "removeEventListener" : "detachEvent";
                            var pre = doc.addEventListener ? "" : "on";

                            var init = function init(e) {
                                if (e.type === "readystatechange" && doc.readyState !== "complete") {
                                    return;
                                }

                                (e.type === "load" ? win : doc)[rem](pre + e.type, init, false);

                                if (!done && (done = true)) {
                                    return fn.call(win, e.type || e);
                                }
                            };

                            var poll = function poll() {
                                try {
                                    root.doScroll("left");
                                } catch (e) {
                                    setTimeout(poll, 50);
                                    return;
                                }

                                return init("poll");
                            };

                            if (doc.readyState !== "complete") {
                                if (doc.createEventObject && root.doScroll) {
                                    try {
                                        top = !win.frameElement;
                                    } catch (error) {}

                                    if (top) {
                                        poll();
                                    }
                                }

                                doc[add](pre + "DOMContentLoaded", init, false);
                                doc[add](pre + "readystatechange", init, false);
                                return win[add](pre + "load", init, false);
                            }
                        }; // As a single function to be able to write tests.


                        Dropzone._autoDiscoverFunction = function () {
                            if (Dropzone.autoDiscover) {
                                return Dropzone.discover();
                            }
                        };

                        contentLoaded(window, Dropzone._autoDiscoverFunction);

                        function __guard__(value, transform) {
                            return typeof value !== "undefined" && value !== null ? transform(value) : undefined;
                        }

                        function __guardMethod__(obj, methodName, transform) {
                            if (typeof obj !== "undefined" && obj !== null && typeof obj[methodName] === "function") {
                                return transform(obj, methodName);
                            } else {
                                return undefined;
                            }
                        }


                        ;// CONCATENATED MODULE: ./tool/dropzone.dist.js
                         /// Make Dropzone a global variable.

                        window.Dropzone = Dropzone;
                        /* harmony default export */ var dropzone_dist = (Dropzone);

                    }();
                    /******/ 	return __nested_webpack_exports__;
                    /******/ })()
                    ;
            });

            /***/ }),

        /***/ "./node_modules/highlight.js/lib/core.js":
        /*!***********************************************!*\
  !*** ./node_modules/highlight.js/lib/core.js ***!
  \***********************************************/
        /***/ ((module) => {

            function deepFreeze(obj) {
                if (obj instanceof Map) {
                    obj.clear = obj.delete = obj.set = function () {
                        throw new Error('map is read-only');
                    };
                } else if (obj instanceof Set) {
                    obj.add = obj.clear = obj.delete = function () {
                        throw new Error('set is read-only');
                    };
                }

                // Freeze self
                Object.freeze(obj);

                Object.getOwnPropertyNames(obj).forEach(function (name) {
                    var prop = obj[name];

                    // Freeze prop if it is an object
                    if (typeof prop == 'object' && !Object.isFrozen(prop)) {
                        deepFreeze(prop);
                    }
                });

                return obj;
            }

            var deepFreezeEs6 = deepFreeze;
            var _default = deepFreeze;
            deepFreezeEs6.default = _default;

            /** @implements CallbackResponse */
            class Response {
                /**
                 * @param {CompiledMode} mode
                 */
                constructor(mode) {
                    // eslint-disable-next-line no-undefined
                    if (mode.data === undefined) mode.data = {};

                    this.data = mode.data;
                    this.isMatchIgnored = false;
                }

                ignoreMatch() {
                    this.isMatchIgnored = true;
                }
            }

            /**
             * @param {string} value
             * @returns {string}
             */
            function escapeHTML(value) {
                return value
                    .replace(/&/g, '&amp;')
                    .replace(/</g, '&lt;')
                    .replace(/>/g, '&gt;')
                    .replace(/"/g, '&quot;')
                    .replace(/'/g, '&#x27;');
            }

            /**
             * performs a shallow merge of multiple objects into one
             *
             * @template T
             * @param {T} original
             * @param {Record<string,any>[]} objects
             * @returns {T} a single new object
             */
            function inherit(original, ...objects) {
                /** @type Record<string,any> */
                const result = Object.create(null);

                for (const key in original) {
                    result[key] = original[key];
                }
                objects.forEach(function(obj) {
                    for (const key in obj) {
                        result[key] = obj[key];
                    }
                });
                return /** @type {T} */ (result);
            }

            /**
             * @typedef {object} Renderer
             * @property {(text: string) => void} addText
             * @property {(node: Node) => void} openNode
             * @property {(node: Node) => void} closeNode
             * @property {() => string} value
             */

            /** @typedef {{kind?: string, sublanguage?: boolean}} Node */
            /** @typedef {{walk: (r: Renderer) => void}} Tree */
            /** */

            const SPAN_CLOSE = '</span>';

            /**
             * Determines if a node needs to be wrapped in <span>
             *
             * @param {Node} node */
            const emitsWrappingTags = (node) => {
                return !!node.kind;
            };

            /** @type {Renderer} */
            class HTMLRenderer {
                /**
                 * Creates a new HTMLRenderer
                 *
                 * @param {Tree} parseTree - the parse tree (must support `walk` API)
                 * @param {{classPrefix: string}} options
                 */
                constructor(parseTree, options) {
                    this.buffer = "";
                    this.classPrefix = options.classPrefix;
                    parseTree.walk(this);
                }

                /**
                 * Adds texts to the output stream
                 *
                 * @param {string} text */
                addText(text) {
                    this.buffer += escapeHTML(text);
                }

                /**
                 * Adds a node open to the output stream (if needed)
                 *
                 * @param {Node} node */
                openNode(node) {
                    if (!emitsWrappingTags(node)) return;

                    let className = node.kind;
                    if (!node.sublanguage) {
                        className = `${this.classPrefix}${className}`;
                    }
                    this.span(className);
                }

                /**
                 * Adds a node close to the output stream (if needed)
                 *
                 * @param {Node} node */
                closeNode(node) {
                    if (!emitsWrappingTags(node)) return;

                    this.buffer += SPAN_CLOSE;
                }

                /**
                 * returns the accumulated buffer
                 */
                value() {
                    return this.buffer;
                }

                // helpers

                /**
                 * Builds a span element
                 *
                 * @param {string} className */
                span(className) {
                    this.buffer += `<span class="${className}">`;
                }
            }

            /** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */
            /** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */
            /**  */

            class TokenTree {
                constructor() {
                    /** @type DataNode */
                    this.rootNode = { children: [] };
                    this.stack = [this.rootNode];
                }

                get top() {
                    return this.stack[this.stack.length - 1];
                }

                get root() { return this.rootNode; }

                /** @param {Node} node */
                add(node) {
                    this.top.children.push(node);
                }

                /** @param {string} kind */
                openNode(kind) {
                    /** @type Node */
                    const node = { kind, children: [] };
                    this.add(node);
                    this.stack.push(node);
                }

                closeNode() {
                    if (this.stack.length > 1) {
                        return this.stack.pop();
                    }
                    // eslint-disable-next-line no-undefined
                    return undefined;
                }

                closeAllNodes() {
                    while (this.closeNode());
                }

                toJSON() {
                    return JSON.stringify(this.rootNode, null, 4);
                }

                /**
                 * @typedef { import("./html_renderer").Renderer } Renderer
                 * @param {Renderer} builder
                 */
                walk(builder) {
                    // this does not
                    return this.constructor._walk(builder, this.rootNode);
                    // this works
                    // return TokenTree._walk(builder, this.rootNode);
                }

                /**
                 * @param {Renderer} builder
                 * @param {Node} node
                 */
                static _walk(builder, node) {
                    if (typeof node === "string") {
                        builder.addText(node);
                    } else if (node.children) {
                        builder.openNode(node);
                        node.children.forEach((child) => this._walk(builder, child));
                        builder.closeNode(node);
                    }
                    return builder;
                }

                /**
                 * @param {Node} node
                 */
                static _collapse(node) {
                    if (typeof node === "string") return;
                    if (!node.children) return;

                    if (node.children.every(el => typeof el === "string")) {
                        // node.text = node.children.join("");
                        // delete node.children;
                        node.children = [node.children.join("")];
                    } else {
                        node.children.forEach((child) => {
                            TokenTree._collapse(child);
                        });
                    }
                }
            }

            /**
             Currently this is all private API, but this is the minimal API necessary
             that an Emitter must implement to fully support the parser.

             Minimal interface:

             - addKeyword(text, kind)
             - addText(text)
             - addSublanguage(emitter, subLanguageName)
             - finalize()
             - openNode(kind)
             - closeNode()
             - closeAllNodes()
             - toHTML()

             */

            /**
             * @implements {Emitter}
             */
            class TokenTreeEmitter extends TokenTree {
                /**
                 * @param {*} options
                 */
                constructor(options) {
                    super();
                    this.options = options;
                }

                /**
                 * @param {string} text
                 * @param {string} kind
                 */
                addKeyword(text, kind) {
                    if (text === "") { return; }

                    this.openNode(kind);
                    this.addText(text);
                    this.closeNode();
                }

                /**
                 * @param {string} text
                 */
                addText(text) {
                    if (text === "") { return; }

                    this.add(text);
                }

                /**
                 * @param {Emitter & {root: DataNode}} emitter
                 * @param {string} name
                 */
                addSublanguage(emitter, name) {
                    /** @type DataNode */
                    const node = emitter.root;
                    node.kind = name;
                    node.sublanguage = true;
                    this.add(node);
                }

                toHTML() {
                    const renderer = new HTMLRenderer(this, this.options);
                    return renderer.value();
                }

                finalize() {
                    return true;
                }
            }

            /**
             * @param {string} value
             * @returns {RegExp}
             * */
            function escape(value) {
                return new RegExp(value.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&'), 'm');
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /**
             * Any of the passed expresssions may match
             *
             * Creates a huge this | this | that | that match
             * @param {(RegExp | string)[] } args
             * @returns {string}
             */
            function either(...args) {
                const joined = '(' + args.map((x) => source(x)).join("|") + ")";
                return joined;
            }

            /**
             * @param {RegExp} re
             * @returns {number}
             */
            function countMatchGroups(re) {
                return (new RegExp(re.toString() + '|')).exec('').length - 1;
            }

            /**
             * Does lexeme start with a regular expression match at the beginning
             * @param {RegExp} re
             * @param {string} lexeme
             */
            function startsWith(re, lexeme) {
                const match = re && re.exec(lexeme);
                return match && match.index === 0;
            }

// BACKREF_RE matches an open parenthesis or backreference. To avoid
// an incorrect parse, it additionally matches the following:
// - [...] elements, where the meaning of parentheses and escapes change
// - other escape sequences, so we do not misparse escape sequences as
//   interesting elements
// - non-matching or lookahead parentheses, which do not capture. These
//   follow the '(' with a '?'.
            const BACKREF_RE = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;

// join logically computes regexps.join(separator), but fixes the
// backreferences so they continue to match.
// it also places each individual regular expression into it's own
// match group, keeping track of the sequencing of those match groups
// is currently an exercise for the caller. :-)
            /**
             * @param {(string | RegExp)[]} regexps
             * @param {string} separator
             * @returns {string}
             */
            function join(regexps, separator = "|") {
                let numCaptures = 0;

                return regexps.map((regex) => {
                    numCaptures += 1;
                    const offset = numCaptures;
                    let re = source(regex);
                    let out = '';

                    while (re.length > 0) {
                        const match = BACKREF_RE.exec(re);
                        if (!match) {
                            out += re;
                            break;
                        }
                        out += re.substring(0, match.index);
                        re = re.substring(match.index + match[0].length);
                        if (match[0][0] === '\\' && match[1]) {
                            // Adjust the backreference.
                            out += '\\' + String(Number(match[1]) + offset);
                        } else {
                            out += match[0];
                            if (match[0] === '(') {
                                numCaptures++;
                            }
                        }
                    }
                    return out;
                }).map(re => `(${re})`).join(separator);
            }

// Common regexps
            const MATCH_NOTHING_RE = /\b\B/;
            const IDENT_RE = '[a-zA-Z]\\w*';
            const UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\w*';
            const NUMBER_RE = '\\b\\d+(\\.\\d+)?';
            const C_NUMBER_RE = '(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)'; // 0x..., 0..., decimal, float
            const BINARY_NUMBER_RE = '\\b(0b[01]+)'; // 0b...
            const RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~';

            /**
             * @param { Partial<Mode> & {binary?: string | RegExp} } opts
             */
            const SHEBANG = (opts = {}) => {
                const beginShebang = /^#![ ]*\//;
                if (opts.binary) {
                    opts.begin = concat(
                        beginShebang,
                        /.*\b/,
                        opts.binary,
                        /\b.*/);
                }
                return inherit({
                    className: 'meta',
                    begin: beginShebang,
                    end: /$/,
                    relevance: 0,
                    /** @type {ModeCallback} */
                    "on:begin": (m, resp) => {
                        if (m.index !== 0) resp.ignoreMatch();
                    }
                }, opts);
            };

// Common modes
            const BACKSLASH_ESCAPE = {
                begin: '\\\\[\\s\\S]', relevance: 0
            };
            const APOS_STRING_MODE = {
                className: 'string',
                begin: '\'',
                end: '\'',
                illegal: '\\n',
                contains: [BACKSLASH_ESCAPE]
            };
            const QUOTE_STRING_MODE = {
                className: 'string',
                begin: '"',
                end: '"',
                illegal: '\\n',
                contains: [BACKSLASH_ESCAPE]
            };
            const PHRASAL_WORDS_MODE = {
                begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
            };
            /**
             * Creates a comment mode
             *
             * @param {string | RegExp} begin
             * @param {string | RegExp} end
             * @param {Mode | {}} [modeOptions]
             * @returns {Partial<Mode>}
             */
            const COMMENT = function(begin, end, modeOptions = {}) {
                const mode = inherit(
                    {
                        className: 'comment',
                        begin,
                        end,
                        contains: []
                    },
                    modeOptions
                );
                mode.contains.push(PHRASAL_WORDS_MODE);
                mode.contains.push({
                    className: 'doctag',
                    begin: '(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):',
                    relevance: 0
                });
                return mode;
            };
            const C_LINE_COMMENT_MODE = COMMENT('//', '$');
            const C_BLOCK_COMMENT_MODE = COMMENT('/\\*', '\\*/');
            const HASH_COMMENT_MODE = COMMENT('#', '$');
            const NUMBER_MODE = {
                className: 'number',
                begin: NUMBER_RE,
                relevance: 0
            };
            const C_NUMBER_MODE = {
                className: 'number',
                begin: C_NUMBER_RE,
                relevance: 0
            };
            const BINARY_NUMBER_MODE = {
                className: 'number',
                begin: BINARY_NUMBER_RE,
                relevance: 0
            };
            const CSS_NUMBER_MODE = {
                className: 'number',
                begin: NUMBER_RE + '(' +
                    '%|em|ex|ch|rem' +
                    '|vw|vh|vmin|vmax' +
                    '|cm|mm|in|pt|pc|px' +
                    '|deg|grad|rad|turn' +
                    '|s|ms' +
                    '|Hz|kHz' +
                    '|dpi|dpcm|dppx' +
                    ')?',
                relevance: 0
            };
            const REGEXP_MODE = {
                // this outer rule makes sure we actually have a WHOLE regex and not simply
                // an expression such as:
                //
                //     3 / something
                //
                // (which will then blow up when regex's `illegal` sees the newline)
                begin: /(?=\/[^/\n]*\/)/,
                contains: [{
                    className: 'regexp',
                    begin: /\//,
                    end: /\/[gimuy]*/,
                    illegal: /\n/,
                    contains: [
                        BACKSLASH_ESCAPE,
                        {
                            begin: /\[/,
                            end: /\]/,
                            relevance: 0,
                            contains: [BACKSLASH_ESCAPE]
                        }
                    ]
                }]
            };
            const TITLE_MODE = {
                className: 'title',
                begin: IDENT_RE,
                relevance: 0
            };
            const UNDERSCORE_TITLE_MODE = {
                className: 'title',
                begin: UNDERSCORE_IDENT_RE,
                relevance: 0
            };
            const METHOD_GUARD = {
                // excludes method names from keyword processing
                begin: '\\.\\s*' + UNDERSCORE_IDENT_RE,
                relevance: 0
            };

            /**
             * Adds end same as begin mechanics to a mode
             *
             * Your mode must include at least a single () match group as that first match
             * group is what is used for comparison
             * @param {Partial<Mode>} mode
             */
            const END_SAME_AS_BEGIN = function(mode) {
                return Object.assign(mode,
                    {
                        /** @type {ModeCallback} */
                        'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },
                        /** @type {ModeCallback} */
                        'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }
                    });
            };

            var MODES = /*#__PURE__*/Object.freeze({
                __proto__: null,
                MATCH_NOTHING_RE: MATCH_NOTHING_RE,
                IDENT_RE: IDENT_RE,
                UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,
                NUMBER_RE: NUMBER_RE,
                C_NUMBER_RE: C_NUMBER_RE,
                BINARY_NUMBER_RE: BINARY_NUMBER_RE,
                RE_STARTERS_RE: RE_STARTERS_RE,
                SHEBANG: SHEBANG,
                BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,
                APOS_STRING_MODE: APOS_STRING_MODE,
                QUOTE_STRING_MODE: QUOTE_STRING_MODE,
                PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,
                COMMENT: COMMENT,
                C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,
                C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,
                HASH_COMMENT_MODE: HASH_COMMENT_MODE,
                NUMBER_MODE: NUMBER_MODE,
                C_NUMBER_MODE: C_NUMBER_MODE,
                BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,
                CSS_NUMBER_MODE: CSS_NUMBER_MODE,
                REGEXP_MODE: REGEXP_MODE,
                TITLE_MODE: TITLE_MODE,
                UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,
                METHOD_GUARD: METHOD_GUARD,
                END_SAME_AS_BEGIN: END_SAME_AS_BEGIN
            });

// Grammar extensions / plugins
// See: https://github.com/highlightjs/highlight.js/issues/2833

// Grammar extensions allow "syntactic sugar" to be added to the grammar modes
// without requiring any underlying changes to the compiler internals.

// `compileMatch` being the perfect small example of now allowing a grammar
// author to write `match` when they desire to match a single expression rather
// than being forced to use `begin`.  The extension then just moves `match` into
// `begin` when it runs.  Ie, no features have been added, but we've just made
// the experience of writing (and reading grammars) a little bit nicer.

// ------

// TODO: We need negative look-behind support to do this properly
            /**
             * Skip a match if it has a preceding dot
             *
             * This is used for `beginKeywords` to prevent matching expressions such as
             * `bob.keyword.do()`. The mode compiler automatically wires this up as a
             * special _internal_ 'on:begin' callback for modes with `beginKeywords`
             * @param {RegExpMatchArray} match
             * @param {CallbackResponse} response
             */
            function skipIfhasPrecedingDot(match, response) {
                const before = match.input[match.index - 1];
                if (before === ".") {
                    response.ignoreMatch();
                }
            }


            /**
             * `beginKeywords` syntactic sugar
             * @type {CompilerExt}
             */
            function beginKeywords(mode, parent) {
                if (!parent) return;
                if (!mode.beginKeywords) return;

                // for languages with keywords that include non-word characters checking for
                // a word boundary is not sufficient, so instead we check for a word boundary
                // or whitespace - this does no harm in any case since our keyword engine
                // doesn't allow spaces in keywords anyways and we still check for the boundary
                // first
                mode.begin = '\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?!\\.)(?=\\b|\\s)';
                mode.__beforeBegin = skipIfhasPrecedingDot;
                mode.keywords = mode.keywords || mode.beginKeywords;
                delete mode.beginKeywords;

                // prevents double relevance, the keywords themselves provide
                // relevance, the mode doesn't need to double it
                // eslint-disable-next-line no-undefined
                if (mode.relevance === undefined) mode.relevance = 0;
            }

            /**
             * Allow `illegal` to contain an array of illegal values
             * @type {CompilerExt}
             */
            function compileIllegal(mode, _parent) {
                if (!Array.isArray(mode.illegal)) return;

                mode.illegal = either(...mode.illegal);
            }

            /**
             * `match` to match a single expression for readability
             * @type {CompilerExt}
             */
            function compileMatch(mode, _parent) {
                if (!mode.match) return;
                if (mode.begin || mode.end) throw new Error("begin & end are not supported with match");

                mode.begin = mode.match;
                delete mode.match;
            }

            /**
             * provides the default 1 relevance to all modes
             * @type {CompilerExt}
             */
            function compileRelevance(mode, _parent) {
                // eslint-disable-next-line no-undefined
                if (mode.relevance === undefined) mode.relevance = 1;
            }

// keywords that should have no default relevance value
            const COMMON_KEYWORDS = [
                'of',
                'and',
                'for',
                'in',
                'not',
                'or',
                'if',
                'then',
                'parent', // common variable name
                'list', // common variable name
                'value' // common variable name
            ];

            const DEFAULT_KEYWORD_CLASSNAME = "keyword";

            /**
             * Given raw keywords from a language definition, compile them.
             *
             * @param {string | Record<string,string|string[]> | Array<string>} rawKeywords
             * @param {boolean} caseInsensitive
             */
            function compileKeywords(rawKeywords, caseInsensitive, className = DEFAULT_KEYWORD_CLASSNAME) {
                /** @type KeywordDict */
                const compiledKeywords = {};

                // input can be a string of keywords, an array of keywords, or a object with
                // named keys representing className (which can then point to a string or array)
                if (typeof rawKeywords === 'string') {
                    compileList(className, rawKeywords.split(" "));
                } else if (Array.isArray(rawKeywords)) {
                    compileList(className, rawKeywords);
                } else {
                    Object.keys(rawKeywords).forEach(function(className) {
                        // collapse all our objects back into the parent object
                        Object.assign(
                            compiledKeywords,
                            compileKeywords(rawKeywords[className], caseInsensitive, className)
                        );
                    });
                }
                return compiledKeywords;

                // ---

                /**
                 * Compiles an individual list of keywords
                 *
                 * Ex: "for if when while|5"
                 *
                 * @param {string} className
                 * @param {Array<string>} keywordList
                 */
                function compileList(className, keywordList) {
                    if (caseInsensitive) {
                        keywordList = keywordList.map(x => x.toLowerCase());
                    }
                    keywordList.forEach(function(keyword) {
                        const pair = keyword.split('|');
                        compiledKeywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];
                    });
                }
            }

            /**
             * Returns the proper score for a given keyword
             *
             * Also takes into account comment keywords, which will be scored 0 UNLESS
             * another score has been manually assigned.
             * @param {string} keyword
             * @param {string} [providedScore]
             */
            function scoreForKeyword(keyword, providedScore) {
                // manual scores always win over common keywords
                // so you can force a score of 1 if you really insist
                if (providedScore) {
                    return Number(providedScore);
                }

                return commonKeyword(keyword) ? 0 : 1;
            }

            /**
             * Determines if a given keyword is common or not
             *
             * @param {string} keyword */
            function commonKeyword(keyword) {
                return COMMON_KEYWORDS.includes(keyword.toLowerCase());
            }

// compilation

            /**
             * Compiles a language definition result
             *
             * Given the raw result of a language definition (Language), compiles this so
             * that it is ready for highlighting code.
             * @param {Language} language
             * @param {{plugins: HLJSPlugin[]}} opts
             * @returns {CompiledLanguage}
             */
            function compileLanguage(language, { plugins }) {
                /**
                 * Builds a regex with the case sensativility of the current language
                 *
                 * @param {RegExp | string} value
                 * @param {boolean} [global]
                 */
                function langRe(value, global) {
                    return new RegExp(
                        source(value),
                        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')
                    );
                }

                /**
                 Stores multiple regular expressions and allows you to quickly search for
                 them all in a string simultaneously - returning the first match.  It does
                 this by creating a huge (a|b|c) regex - each individual item wrapped with ()
                 and joined by `|` - using match groups to track position.  When a match is
                 found checking which position in the array has content allows us to figure
                 out which of the original regexes / match groups triggered the match.

                 The match object itself (the result of `Regex.exec`) is returned but also
                 enhanced by merging in any meta-data that was registered with the regex.
                 This is how we keep track of which mode matched, and what type of rule
                 (`illegal`, `begin`, end, etc).
                 */
                class MultiRegex {
                    constructor() {
                        this.matchIndexes = {};
                        // @ts-ignore
                        this.regexes = [];
                        this.matchAt = 1;
                        this.position = 0;
                    }

                    // @ts-ignore
                    addRule(re, opts) {
                        opts.position = this.position++;
                        // @ts-ignore
                        this.matchIndexes[this.matchAt] = opts;
                        this.regexes.push([opts, re]);
                        this.matchAt += countMatchGroups(re) + 1;
                    }

                    compile() {
                        if (this.regexes.length === 0) {
                            // avoids the need to check length every time exec is called
                            // @ts-ignore
                            this.exec = () => null;
                        }
                        const terminators = this.regexes.map(el => el[1]);
                        this.matcherRe = langRe(join(terminators), true);
                        this.lastIndex = 0;
                    }

                    /** @param {string} s */
                    exec(s) {
                        this.matcherRe.lastIndex = this.lastIndex;
                        const match = this.matcherRe.exec(s);
                        if (!match) { return null; }

                        // eslint-disable-next-line no-undefined
                        const i = match.findIndex((el, i) => i > 0 && el !== undefined);
                        // @ts-ignore
                        const matchData = this.matchIndexes[i];
                        // trim off any earlier non-relevant match groups (ie, the other regex
                        // match groups that make up the multi-matcher)
                        match.splice(0, i);

                        return Object.assign(match, matchData);
                    }
                }

                /*
    Created to solve the key deficiently with MultiRegex - there is no way to
    test for multiple matches at a single location.  Why would we need to do
    that?  In the future a more dynamic engine will allow certain matches to be
    ignored.  An example: if we matched say the 3rd regex in a large group but
    decided to ignore it - we'd need to started testing again at the 4th
    regex... but MultiRegex itself gives us no real way to do that.

    So what this class creates MultiRegexs on the fly for whatever search
    position they are needed.

    NOTE: These additional MultiRegex objects are created dynamically.  For most
    grammars most of the time we will never actually need anything more than the
    first MultiRegex - so this shouldn't have too much overhead.

    Say this is our search group, and we match regex3, but wish to ignore it.

      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0

    What we need is a new MultiRegex that only includes the remaining
    possibilities:

      regex4 | regex5                               ' ie, startAt = 3

    This class wraps all that complexity up in a simple API... `startAt` decides
    where in the array of expressions to start doing the matching. It
    auto-increments, so if a match is found at position 2, then startAt will be
    set to 3.  If the end is reached startAt will return to 0.

    MOST of the time the parser will be setting startAt manually to 0.
  */
                class ResumableMultiRegex {
                    constructor() {
                        // @ts-ignore
                        this.rules = [];
                        // @ts-ignore
                        this.multiRegexes = [];
                        this.count = 0;

                        this.lastIndex = 0;
                        this.regexIndex = 0;
                    }

                    // @ts-ignore
                    getMatcher(index) {
                        if (this.multiRegexes[index]) return this.multiRegexes[index];

                        const matcher = new MultiRegex();
                        this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));
                        matcher.compile();
                        this.multiRegexes[index] = matcher;
                        return matcher;
                    }

                    resumingScanAtSamePosition() {
                        return this.regexIndex !== 0;
                    }

                    considerAll() {
                        this.regexIndex = 0;
                    }

                    // @ts-ignore
                    addRule(re, opts) {
                        this.rules.push([re, opts]);
                        if (opts.type === "begin") this.count++;
                    }

                    /** @param {string} s */
                    exec(s) {
                        const m = this.getMatcher(this.regexIndex);
                        m.lastIndex = this.lastIndex;
                        let result = m.exec(s);

                        // The following is because we have no easy way to say "resume scanning at the
                        // existing position but also skip the current rule ONLY". What happens is
                        // all prior rules are also skipped which can result in matching the wrong
                        // thing. Example of matching "booger":

                        // our matcher is [string, "booger", number]
                        //
                        // ....booger....

                        // if "booger" is ignored then we'd really need a regex to scan from the
                        // SAME position for only: [string, number] but ignoring "booger" (if it
                        // was the first match), a simple resume would scan ahead who knows how
                        // far looking only for "number", ignoring potential string matches (or
                        // future "booger" matches that might be valid.)

                        // So what we do: We execute two matchers, one resuming at the same
                        // position, but the second full matcher starting at the position after:

                        //     /--- resume first regex match here (for [number])
                        //     |/---- full match here for [string, "booger", number]
                        //     vv
                        // ....booger....

                        // Which ever results in a match first is then used. So this 3-4 step
                        // process essentially allows us to say "match at this position, excluding
                        // a prior rule that was ignored".
                        //
                        // 1. Match "booger" first, ignore. Also proves that [string] does non match.
                        // 2. Resume matching for [number]
                        // 3. Match at index + 1 for [string, "booger", number]
                        // 4. If #2 and #3 result in matches, which came first?
                        if (this.resumingScanAtSamePosition()) {
                            if (result && result.index === this.lastIndex) ; else { // use the second matcher result
                                const m2 = this.getMatcher(0);
                                m2.lastIndex = this.lastIndex + 1;
                                result = m2.exec(s);
                            }
                        }

                        if (result) {
                            this.regexIndex += result.position + 1;
                            if (this.regexIndex === this.count) {
                                // wrap-around to considering all matches again
                                this.considerAll();
                            }
                        }

                        return result;
                    }
                }

                /**
                 * Given a mode, builds a huge ResumableMultiRegex that can be used to walk
                 * the content and find matches.
                 *
                 * @param {CompiledMode} mode
                 * @returns {ResumableMultiRegex}
                 */
                function buildModeRegex(mode) {
                    const mm = new ResumableMultiRegex();

                    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: "begin" }));

                    if (mode.terminatorEnd) {
                        mm.addRule(mode.terminatorEnd, { type: "end" });
                    }
                    if (mode.illegal) {
                        mm.addRule(mode.illegal, { type: "illegal" });
                    }

                    return mm;
                }

                /** skip vs abort vs ignore
                 *
                 * @skip   - The mode is still entered and exited normally (and contains rules apply),
                 *           but all content is held and added to the parent buffer rather than being
                 *           output when the mode ends.  Mostly used with `sublanguage` to build up
                 *           a single large buffer than can be parsed by sublanguage.
                 *
                 *             - The mode begin ands ends normally.
                 *             - Content matched is added to the parent mode buffer.
                 *             - The parser cursor is moved forward normally.
                 *
                 * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it
                 *           never matched) but DOES NOT continue to match subsequent `contains`
                 *           modes.  Abort is bad/suboptimal because it can result in modes
                 *           farther down not getting applied because an earlier rule eats the
                 *           content but then aborts.
                 *
                 *             - The mode does not begin.
                 *             - Content matched by `begin` is added to the mode buffer.
                 *             - The parser cursor is moved forward accordingly.
                 *
                 * @ignore - Ignores the mode (as if it never matched) and continues to match any
                 *           subsequent `contains` modes.  Ignore isn't technically possible with
                 *           the current parser implementation.
                 *
                 *             - The mode does not begin.
                 *             - Content matched by `begin` is ignored.
                 *             - The parser cursor is not moved forward.
                 */

                /**
                 * Compiles an individual mode
                 *
                 * This can raise an error if the mode contains certain detectable known logic
                 * issues.
                 * @param {Mode} mode
                 * @param {CompiledMode | null} [parent]
                 * @returns {CompiledMode | never}
                 */
                function compileMode(mode, parent) {
                    const cmode = /** @type CompiledMode */ (mode);
                    if (mode.isCompiled) return cmode;

                    [
                        // do this early so compiler extensions generally don't have to worry about
                        // the distinction between match/begin
                        compileMatch
                    ].forEach(ext => ext(mode, parent));

                    language.compilerExtensions.forEach(ext => ext(mode, parent));

                    // __beforeBegin is considered private API, internal use only
                    mode.__beforeBegin = null;

                    [
                        beginKeywords,
                        // do this later so compiler extensions that come earlier have access to the
                        // raw array if they wanted to perhaps manipulate it, etc.
                        compileIllegal,
                        // default to 1 relevance if not specified
                        compileRelevance
                    ].forEach(ext => ext(mode, parent));

                    mode.isCompiled = true;

                    let keywordPattern = null;
                    if (typeof mode.keywords === "object") {
                        keywordPattern = mode.keywords.$pattern;
                        delete mode.keywords.$pattern;
                    }

                    if (mode.keywords) {
                        mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);
                    }

                    // both are not allowed
                    if (mode.lexemes && keywordPattern) {
                        throw new Error("ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) ");
                    }

                    // `mode.lexemes` was the old standard before we added and now recommend
                    // using `keywords.$pattern` to pass the keyword pattern
                    keywordPattern = keywordPattern || mode.lexemes || /\w+/;
                    cmode.keywordPatternRe = langRe(keywordPattern, true);

                    if (parent) {
                        if (!mode.begin) mode.begin = /\B|\b/;
                        cmode.beginRe = langRe(mode.begin);
                        if (mode.endSameAsBegin) mode.end = mode.begin;
                        if (!mode.end && !mode.endsWithParent) mode.end = /\B|\b/;
                        if (mode.end) cmode.endRe = langRe(mode.end);
                        cmode.terminatorEnd = source(mode.end) || '';
                        if (mode.endsWithParent && parent.terminatorEnd) {
                            cmode.terminatorEnd += (mode.end ? '|' : '') + parent.terminatorEnd;
                        }
                    }
                    if (mode.illegal) cmode.illegalRe = langRe(/** @type {RegExp | string} */ (mode.illegal));
                    if (!mode.contains) mode.contains = [];

                    mode.contains = [].concat(...mode.contains.map(function(c) {
                        return expandOrCloneMode(c === 'self' ? mode : c);
                    }));
                    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });

                    if (mode.starts) {
                        compileMode(mode.starts, parent);
                    }

                    cmode.matcher = buildModeRegex(cmode);
                    return cmode;
                }

                if (!language.compilerExtensions) language.compilerExtensions = [];

                // self is not valid at the top-level
                if (language.contains && language.contains.includes('self')) {
                    throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");
                }

                // we need a null object, which inherit will guarantee
                language.classNameAliases = inherit(language.classNameAliases || {});

                return compileMode(/** @type Mode */ (language));
            }

            /**
             * Determines if a mode has a dependency on it's parent or not
             *
             * If a mode does have a parent dependency then often we need to clone it if
             * it's used in multiple places so that each copy points to the correct parent,
             * where-as modes without a parent can often safely be re-used at the bottom of
             * a mode chain.
             *
             * @param {Mode | null} mode
             * @returns {boolean} - is there a dependency on the parent?
             * */
            function dependencyOnParent(mode) {
                if (!mode) return false;

                return mode.endsWithParent || dependencyOnParent(mode.starts);
            }

            /**
             * Expands a mode or clones it if necessary
             *
             * This is necessary for modes with parental dependenceis (see notes on
             * `dependencyOnParent`) and for nodes that have `variants` - which must then be
             * exploded into their own individual modes at compile time.
             *
             * @param {Mode} mode
             * @returns {Mode | Mode[]}
             * */
            function expandOrCloneMode(mode) {
                if (mode.variants && !mode.cachedVariants) {
                    mode.cachedVariants = mode.variants.map(function(variant) {
                        return inherit(mode, { variants: null }, variant);
                    });
                }

                // EXPAND
                // if we have variants then essentially "replace" the mode with the variants
                // this happens in compileMode, where this function is called from
                if (mode.cachedVariants) {
                    return mode.cachedVariants;
                }

                // CLONE
                // if we have dependencies on parents then we need a unique
                // instance of ourselves, so we can be reused with many
                // different parents without issue
                if (dependencyOnParent(mode)) {
                    return inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null });
                }

                if (Object.isFrozen(mode)) {
                    return inherit(mode);
                }

                // no special dependency issues, just return ourselves
                return mode;
            }

            var version = "10.7.3";

// @ts-nocheck

            function hasValueOrEmptyAttribute(value) {
                return Boolean(value || value === "");
            }

            function BuildVuePlugin(hljs) {
                const Component = {
                    props: ["language", "code", "autodetect"],
                    data: function() {
                        return {
                            detectedLanguage: "",
                            unknownLanguage: false
                        };
                    },
                    computed: {
                        className() {
                            if (this.unknownLanguage) return "";

                            return "hljs " + this.detectedLanguage;
                        },
                        highlighted() {
                            // no idea what language to use, return raw code
                            if (!this.autoDetect && !hljs.getLanguage(this.language)) {
                                console.warn(`The language "${this.language}" you specified could not be found.`);
                                this.unknownLanguage = true;
                                return escapeHTML(this.code);
                            }

                            let result = {};
                            if (this.autoDetect) {
                                result = hljs.highlightAuto(this.code);
                                this.detectedLanguage = result.language;
                            } else {
                                result = hljs.highlight(this.language, this.code, this.ignoreIllegals);
                                this.detectedLanguage = this.language;
                            }
                            return result.value;
                        },
                        autoDetect() {
                            return !this.language || hasValueOrEmptyAttribute(this.autodetect);
                        },
                        ignoreIllegals() {
                            return true;
                        }
                    },
                    // this avoids needing to use a whole Vue compilation pipeline just
                    // to build Highlight.js
                    render(createElement) {
                        return createElement("pre", {}, [
                            createElement("code", {
                                class: this.className,
                                domProps: { innerHTML: this.highlighted }
                            })
                        ]);
                    }
                    // template: `<pre><code :class="className" v-html="highlighted"></code></pre>`
                };

                const VuePlugin = {
                    install(Vue) {
                        Vue.component('highlightjs', Component);
                    }
                };

                return { Component, VuePlugin };
            }

            /* plugin itself */

            /** @type {HLJSPlugin} */
            const mergeHTMLPlugin = {
                "after:highlightElement": ({ el, result, text }) => {
                    const originalStream = nodeStream(el);
                    if (!originalStream.length) return;

                    const resultNode = document.createElement('div');
                    resultNode.innerHTML = result.value;
                    result.value = mergeStreams(originalStream, nodeStream(resultNode), text);
                }
            };

            /* Stream merging support functions */

            /**
             * @typedef Event
             * @property {'start'|'stop'} event
             * @property {number} offset
             * @property {Node} node
             */

            /**
             * @param {Node} node
             */
            function tag(node) {
                return node.nodeName.toLowerCase();
            }

            /**
             * @param {Node} node
             */
            function nodeStream(node) {
                /** @type Event[] */
                const result = [];
                (function _nodeStream(node, offset) {
                    for (let child = node.firstChild; child; child = child.nextSibling) {
                        if (child.nodeType === 3) {
                            offset += child.nodeValue.length;
                        } else if (child.nodeType === 1) {
                            result.push({
                                event: 'start',
                                offset: offset,
                                node: child
                            });
                            offset = _nodeStream(child, offset);
                            // Prevent void elements from having an end tag that would actually
                            // double them in the output. There are more void elements in HTML
                            // but we list only those realistically expected in code display.
                            if (!tag(child).match(/br|hr|img|input/)) {
                                result.push({
                                    event: 'stop',
                                    offset: offset,
                                    node: child
                                });
                            }
                        }
                    }
                    return offset;
                })(node, 0);
                return result;
            }

            /**
             * @param {any} original - the original stream
             * @param {any} highlighted - stream of the highlighted source
             * @param {string} value - the original source itself
             */
            function mergeStreams(original, highlighted, value) {
                let processed = 0;
                let result = '';
                const nodeStack = [];

                function selectStream() {
                    if (!original.length || !highlighted.length) {
                        return original.length ? original : highlighted;
                    }
                    if (original[0].offset !== highlighted[0].offset) {
                        return (original[0].offset < highlighted[0].offset) ? original : highlighted;
                    }

                    /*
    To avoid starting the stream just before it should stop the order is
    ensured that original always starts first and closes last:

    if (event1 == 'start' && event2 == 'start')
      return original;
    if (event1 == 'start' && event2 == 'stop')
      return highlighted;
    if (event1 == 'stop' && event2 == 'start')
      return original;
    if (event1 == 'stop' && event2 == 'stop')
      return highlighted;

    ... which is collapsed to:
    */
                    return highlighted[0].event === 'start' ? original : highlighted;
                }

                /**
                 * @param {Node} node
                 */
                function open(node) {
                    /** @param {Attr} attr */
                    function attributeString(attr) {
                        return ' ' + attr.nodeName + '="' + escapeHTML(attr.value) + '"';
                    }
                    // @ts-ignore
                    result += '<' + tag(node) + [].map.call(node.attributes, attributeString).join('') + '>';
                }

                /**
                 * @param {Node} node
                 */
                function close(node) {
                    result += '</' + tag(node) + '>';
                }

                /**
                 * @param {Event} event
                 */
                function render(event) {
                    (event.event === 'start' ? open : close)(event.node);
                }

                while (original.length || highlighted.length) {
                    let stream = selectStream();
                    result += escapeHTML(value.substring(processed, stream[0].offset));
                    processed = stream[0].offset;
                    if (stream === original) {
                        /*
      On any opening or closing tag of the original markup we first close
      the entire highlighted node stack, then render the original tag along
      with all the following original tags at the same offset and then
      reopen all the tags on the highlighted stack.
      */
                        nodeStack.reverse().forEach(close);
                        do {
                            render(stream.splice(0, 1)[0]);
                            stream = selectStream();
                        } while (stream === original && stream.length && stream[0].offset === processed);
                        nodeStack.reverse().forEach(open);
                    } else {
                        if (stream[0].event === 'start') {
                            nodeStack.push(stream[0].node);
                        } else {
                            nodeStack.pop();
                        }
                        render(stream.splice(0, 1)[0]);
                    }
                }
                return result + escapeHTML(value.substr(processed));
            }

            /*

For the reasoning behind this please see:
https://github.com/highlightjs/highlight.js/issues/2880#issuecomment-747275419

*/

            /**
             * @type {Record<string, boolean>}
             */
            const seenDeprecations = {};

            /**
             * @param {string} message
             */
            const error = (message) => {
                console.error(message);
            };

            /**
             * @param {string} message
             * @param {any} args
             */
            const warn = (message, ...args) => {
                console.log(`WARN: ${message}`, ...args);
            };

            /**
             * @param {string} version
             * @param {string} message
             */
            const deprecated = (version, message) => {
                if (seenDeprecations[`${version}/${message}`]) return;

                console.log(`Deprecated as of ${version}. ${message}`);
                seenDeprecations[`${version}/${message}`] = true;
            };

            /*
Syntax highlighting with language autodetection.
https://highlightjs.org/
*/

            const escape$1 = escapeHTML;
            const inherit$1 = inherit;
            const NO_MATCH = Symbol("nomatch");

            /**
             * @param {any} hljs - object that is extended (legacy)
             * @returns {HLJSApi}
             */
            const HLJS = function(hljs) {
                // Global internal variables used within the highlight.js library.
                /** @type {Record<string, Language>} */
                const languages = Object.create(null);
                /** @type {Record<string, string>} */
                const aliases = Object.create(null);
                /** @type {HLJSPlugin[]} */
                const plugins = [];

                // safe/production mode - swallows more errors, tries to keep running
                // even if a single syntax or parse hits a fatal error
                let SAFE_MODE = true;
                const fixMarkupRe = /(^(<[^>]+>|\t|)+|\n)/gm;
                const LANGUAGE_NOT_FOUND = "Could not find the language '{}', did you forget to load/include a language module?";
                /** @type {Language} */
                const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };

                // Global options used when within external APIs. This is modified when
                // calling the `hljs.configure` function.
                /** @type HLJSOptions */
                let options = {
                    noHighlightRe: /^(no-?highlight)$/i,
                    languageDetectRe: /\blang(?:uage)?-([\w-]+)\b/i,
                    classPrefix: 'hljs-',
                    tabReplace: null,
                    useBR: false,
                    languages: null,
                    // beta configuration options, subject to change, welcome to discuss
                    // https://github.com/highlightjs/highlight.js/issues/1086
                    __emitter: TokenTreeEmitter
                };

                /* Utility functions */

                /**
                 * Tests a language name to see if highlighting should be skipped
                 * @param {string} languageName
                 */
                function shouldNotHighlight(languageName) {
                    return options.noHighlightRe.test(languageName);
                }

                /**
                 * @param {HighlightedHTMLElement} block - the HTML element to determine language for
                 */
                function blockLanguage(block) {
                    let classes = block.className + ' ';

                    classes += block.parentNode ? block.parentNode.className : '';

                    // language-* takes precedence over non-prefixed class names.
                    const match = options.languageDetectRe.exec(classes);
                    if (match) {
                        const language = getLanguage(match[1]);
                        if (!language) {
                            warn(LANGUAGE_NOT_FOUND.replace("{}", match[1]));
                            warn("Falling back to no-highlight mode for this block.", block);
                        }
                        return language ? match[1] : 'no-highlight';
                    }

                    return classes
                        .split(/\s+/)
                        .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));
                }

                /**
                 * Core highlighting function.
                 *
                 * OLD API
                 * highlight(lang, code, ignoreIllegals, continuation)
                 *
                 * NEW API
                 * highlight(code, {lang, ignoreIllegals})
                 *
                 * @param {string} codeOrlanguageName - the language to use for highlighting
                 * @param {string | HighlightOptions} optionsOrCode - the code to highlight
                 * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail
                 * @param {CompiledMode} [continuation] - current continuation mode, if any
                 *
                 * @returns {HighlightResult} Result - an object that represents the result
                 * @property {string} language - the language name
                 * @property {number} relevance - the relevance score
                 * @property {string} value - the highlighted HTML code
                 * @property {string} code - the original raw code
                 * @property {CompiledMode} top - top of the current mode stack
                 * @property {boolean} illegal - indicates whether any illegal matches were found
                 */
                function highlight(codeOrlanguageName, optionsOrCode, ignoreIllegals, continuation) {
                    let code = "";
                    let languageName = "";
                    if (typeof optionsOrCode === "object") {
                        code = codeOrlanguageName;
                        ignoreIllegals = optionsOrCode.ignoreIllegals;
                        languageName = optionsOrCode.language;
                        // continuation not supported at all via the new API
                        // eslint-disable-next-line no-undefined
                        continuation = undefined;
                    } else {
                        // old API
                        deprecated("10.7.0", "highlight(lang, code, ...args) has been deprecated.");
                        deprecated("10.7.0", "Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277");
                        languageName = codeOrlanguageName;
                        code = optionsOrCode;
                    }

                    /** @type {BeforeHighlightContext} */
                    const context = {
                        code,
                        language: languageName
                    };
                    // the plugin can change the desired language or the code to be highlighted
                    // just be changing the object it was passed
                    fire("before:highlight", context);

                    // a before plugin can usurp the result completely by providing it's own
                    // in which case we don't even need to call highlight
                    const result = context.result
                        ? context.result
                        : _highlight(context.language, context.code, ignoreIllegals, continuation);

                    result.code = context.code;
                    // the plugin can change anything in result to suite it
                    fire("after:highlight", result);

                    return result;
                }

                /**
                 * private highlight that's used internally and does not fire callbacks
                 *
                 * @param {string} languageName - the language to use for highlighting
                 * @param {string} codeToHighlight - the code to highlight
                 * @param {boolean?} [ignoreIllegals] - whether to ignore illegal matches, default is to bail
                 * @param {CompiledMode?} [continuation] - current continuation mode, if any
                 * @returns {HighlightResult} - result of the highlight operation
                 */
                function _highlight(languageName, codeToHighlight, ignoreIllegals, continuation) {
                    /**
                     * Return keyword data if a match is a keyword
                     * @param {CompiledMode} mode - current mode
                     * @param {RegExpMatchArray} match - regexp match data
                     * @returns {KeywordData | false}
                     */
                    function keywordData(mode, match) {
                        const matchText = language.case_insensitive ? match[0].toLowerCase() : match[0];
                        return Object.prototype.hasOwnProperty.call(mode.keywords, matchText) && mode.keywords[matchText];
                    }

                    function processKeywords() {
                        if (!top.keywords) {
                            emitter.addText(modeBuffer);
                            return;
                        }

                        let lastIndex = 0;
                        top.keywordPatternRe.lastIndex = 0;
                        let match = top.keywordPatternRe.exec(modeBuffer);
                        let buf = "";

                        while (match) {
                            buf += modeBuffer.substring(lastIndex, match.index);
                            const data = keywordData(top, match);
                            if (data) {
                                const [kind, keywordRelevance] = data;
                                emitter.addText(buf);
                                buf = "";

                                relevance += keywordRelevance;
                                if (kind.startsWith("_")) {
                                    // _ implied for relevance only, do not highlight
                                    // by applying a class name
                                    buf += match[0];
                                } else {
                                    const cssClass = language.classNameAliases[kind] || kind;
                                    emitter.addKeyword(match[0], cssClass);
                                }
                            } else {
                                buf += match[0];
                            }
                            lastIndex = top.keywordPatternRe.lastIndex;
                            match = top.keywordPatternRe.exec(modeBuffer);
                        }
                        buf += modeBuffer.substr(lastIndex);
                        emitter.addText(buf);
                    }

                    function processSubLanguage() {
                        if (modeBuffer === "") return;
                        /** @type HighlightResult */
                        let result = null;

                        if (typeof top.subLanguage === 'string') {
                            if (!languages[top.subLanguage]) {
                                emitter.addText(modeBuffer);
                                return;
                            }
                            result = _highlight(top.subLanguage, modeBuffer, true, continuations[top.subLanguage]);
                            continuations[top.subLanguage] = /** @type {CompiledMode} */ (result.top);
                        } else {
                            result = highlightAuto(modeBuffer, top.subLanguage.length ? top.subLanguage : null);
                        }

                        // Counting embedded language score towards the host language may be disabled
                        // with zeroing the containing mode relevance. Use case in point is Markdown that
                        // allows XML everywhere and makes every XML snippet to have a much larger Markdown
                        // score.
                        if (top.relevance > 0) {
                            relevance += result.relevance;
                        }
                        emitter.addSublanguage(result.emitter, result.language);
                    }

                    function processBuffer() {
                        if (top.subLanguage != null) {
                            processSubLanguage();
                        } else {
                            processKeywords();
                        }
                        modeBuffer = '';
                    }

                    /**
                     * @param {Mode} mode - new mode to start
                     */
                    function startNewMode(mode) {
                        if (mode.className) {
                            emitter.openNode(language.classNameAliases[mode.className] || mode.className);
                        }
                        top = Object.create(mode, { parent: { value: top } });
                        return top;
                    }

                    /**
                     * @param {CompiledMode } mode - the mode to potentially end
                     * @param {RegExpMatchArray} match - the latest match
                     * @param {string} matchPlusRemainder - match plus remainder of content
                     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode
                     */
                    function endOfMode(mode, match, matchPlusRemainder) {
                        let matched = startsWith(mode.endRe, matchPlusRemainder);

                        if (matched) {
                            if (mode["on:end"]) {
                                const resp = new Response(mode);
                                mode["on:end"](match, resp);
                                if (resp.isMatchIgnored) matched = false;
                            }

                            if (matched) {
                                while (mode.endsParent && mode.parent) {
                                    mode = mode.parent;
                                }
                                return mode;
                            }
                        }
                        // even if on:end fires an `ignore` it's still possible
                        // that we might trigger the end node because of a parent mode
                        if (mode.endsWithParent) {
                            return endOfMode(mode.parent, match, matchPlusRemainder);
                        }
                    }

                    /**
                     * Handle matching but then ignoring a sequence of text
                     *
                     * @param {string} lexeme - string containing full match text
                     */
                    function doIgnore(lexeme) {
                        if (top.matcher.regexIndex === 0) {
                            // no more regexs to potentially match here, so we move the cursor forward one
                            // space
                            modeBuffer += lexeme[0];
                            return 1;
                        } else {
                            // no need to move the cursor, we still have additional regexes to try and
                            // match at this very spot
                            resumeScanAtSamePosition = true;
                            return 0;
                        }
                    }

                    /**
                     * Handle the start of a new potential mode match
                     *
                     * @param {EnhancedMatch} match - the current match
                     * @returns {number} how far to advance the parse cursor
                     */
                    function doBeginMatch(match) {
                        const lexeme = match[0];
                        const newMode = match.rule;

                        const resp = new Response(newMode);
                        // first internal before callbacks, then the public ones
                        const beforeCallbacks = [newMode.__beforeBegin, newMode["on:begin"]];
                        for (const cb of beforeCallbacks) {
                            if (!cb) continue;
                            cb(match, resp);
                            if (resp.isMatchIgnored) return doIgnore(lexeme);
                        }

                        if (newMode && newMode.endSameAsBegin) {
                            newMode.endRe = escape(lexeme);
                        }

                        if (newMode.skip) {
                            modeBuffer += lexeme;
                        } else {
                            if (newMode.excludeBegin) {
                                modeBuffer += lexeme;
                            }
                            processBuffer();
                            if (!newMode.returnBegin && !newMode.excludeBegin) {
                                modeBuffer = lexeme;
                            }
                        }
                        startNewMode(newMode);
                        // if (mode["after:begin"]) {
                        //   let resp = new Response(mode);
                        //   mode["after:begin"](match, resp);
                        // }
                        return newMode.returnBegin ? 0 : lexeme.length;
                    }

                    /**
                     * Handle the potential end of mode
                     *
                     * @param {RegExpMatchArray} match - the current match
                     */
                    function doEndMatch(match) {
                        const lexeme = match[0];
                        const matchPlusRemainder = codeToHighlight.substr(match.index);

                        const endMode = endOfMode(top, match, matchPlusRemainder);
                        if (!endMode) { return NO_MATCH; }

                        const origin = top;
                        if (origin.skip) {
                            modeBuffer += lexeme;
                        } else {
                            if (!(origin.returnEnd || origin.excludeEnd)) {
                                modeBuffer += lexeme;
                            }
                            processBuffer();
                            if (origin.excludeEnd) {
                                modeBuffer = lexeme;
                            }
                        }
                        do {
                            if (top.className) {
                                emitter.closeNode();
                            }
                            if (!top.skip && !top.subLanguage) {
                                relevance += top.relevance;
                            }
                            top = top.parent;
                        } while (top !== endMode.parent);
                        if (endMode.starts) {
                            if (endMode.endSameAsBegin) {
                                endMode.starts.endRe = endMode.endRe;
                            }
                            startNewMode(endMode.starts);
                        }
                        return origin.returnEnd ? 0 : lexeme.length;
                    }

                    function processContinuations() {
                        const list = [];
                        for (let current = top; current !== language; current = current.parent) {
                            if (current.className) {
                                list.unshift(current.className);
                            }
                        }
                        list.forEach(item => emitter.openNode(item));
                    }

                    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */
                    let lastMatch = {};

                    /**
                     *  Process an individual match
                     *
                     * @param {string} textBeforeMatch - text preceeding the match (since the last match)
                     * @param {EnhancedMatch} [match] - the match itself
                     */
                    function processLexeme(textBeforeMatch, match) {
                        const lexeme = match && match[0];

                        // add non-matched text to the current mode buffer
                        modeBuffer += textBeforeMatch;

                        if (lexeme == null) {
                            processBuffer();
                            return 0;
                        }

                        // we've found a 0 width match and we're stuck, so we need to advance
                        // this happens when we have badly behaved rules that have optional matchers to the degree that
                        // sometimes they can end up matching nothing at all
                        // Ref: https://github.com/highlightjs/highlight.js/issues/2140
                        if (lastMatch.type === "begin" && match.type === "end" && lastMatch.index === match.index && lexeme === "") {
                            // spit the "skipped" character that our regex choked on back into the output sequence
                            modeBuffer += codeToHighlight.slice(match.index, match.index + 1);
                            if (!SAFE_MODE) {
                                /** @type {AnnotatedError} */
                                const err = new Error('0 width match regex');
                                err.languageName = languageName;
                                err.badRule = lastMatch.rule;
                                throw err;
                            }
                            return 1;
                        }
                        lastMatch = match;

                        if (match.type === "begin") {
                            return doBeginMatch(match);
                        } else if (match.type === "illegal" && !ignoreIllegals) {
                            // illegal match, we do not continue processing
                            /** @type {AnnotatedError} */
                            const err = new Error('Illegal lexeme "' + lexeme + '" for mode "' + (top.className || '<unnamed>') + '"');
                            err.mode = top;
                            throw err;
                        } else if (match.type === "end") {
                            const processed = doEndMatch(match);
                            if (processed !== NO_MATCH) {
                                return processed;
                            }
                        }

                        // edge case for when illegal matches $ (end of line) which is technically
                        // a 0 width match but not a begin/end match so it's not caught by the
                        // first handler (when ignoreIllegals is true)
                        if (match.type === "illegal" && lexeme === "") {
                            // advance so we aren't stuck in an infinite loop
                            return 1;
                        }

                        // infinite loops are BAD, this is a last ditch catch all. if we have a
                        // decent number of iterations yet our index (cursor position in our
                        // parsing) still 3x behind our index then something is very wrong
                        // so we bail
                        if (iterations > 100000 && iterations > match.index * 3) {
                            const err = new Error('potential infinite loop, way more iterations than matches');
                            throw err;
                        }

                        /*
      Why might be find ourselves here?  Only one occasion now.  An end match that was
      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`
      rule sets the end rule to a specific match.  Since the overall mode termination rule that's
      being used to scan the text isn't recompiled that means that any match that LOOKS like
      the end (but is not, because it is not an exact match to the beginning) will
      end up here.  A definite end match, but when `doEndMatch` tries to "reapply"
      the end rule and fails to match, we wind up here, and just silently ignore the end.

      This causes no real harm other than stopping a few times too many.
      */

                        modeBuffer += lexeme;
                        return lexeme.length;
                    }

                    const language = getLanguage(languageName);
                    if (!language) {
                        error(LANGUAGE_NOT_FOUND.replace("{}", languageName));
                        throw new Error('Unknown language: "' + languageName + '"');
                    }

                    const md = compileLanguage(language, { plugins });
                    let result = '';
                    /** @type {CompiledMode} */
                    let top = continuation || md;
                    /** @type Record<string,CompiledMode> */
                    const continuations = {}; // keep continuations for sub-languages
                    const emitter = new options.__emitter(options);
                    processContinuations();
                    let modeBuffer = '';
                    let relevance = 0;
                    let index = 0;
                    let iterations = 0;
                    let resumeScanAtSamePosition = false;

                    try {
                        top.matcher.considerAll();

                        for (;;) {
                            iterations++;
                            if (resumeScanAtSamePosition) {
                                // only regexes not matched previously will now be
                                // considered for a potential match
                                resumeScanAtSamePosition = false;
                            } else {
                                top.matcher.considerAll();
                            }
                            top.matcher.lastIndex = index;

                            const match = top.matcher.exec(codeToHighlight);
                            // console.log("match", match[0], match.rule && match.rule.begin)

                            if (!match) break;

                            const beforeMatch = codeToHighlight.substring(index, match.index);
                            const processedCount = processLexeme(beforeMatch, match);
                            index = match.index + processedCount;
                        }
                        processLexeme(codeToHighlight.substr(index));
                        emitter.closeAllNodes();
                        emitter.finalize();
                        result = emitter.toHTML();

                        return {
                            // avoid possible breakage with v10 clients expecting
                            // this to always be an integer
                            relevance: Math.floor(relevance),
                            value: result,
                            language: languageName,
                            illegal: false,
                            emitter: emitter,
                            top: top
                        };
                    } catch (err) {
                        if (err.message && err.message.includes('Illegal')) {
                            return {
                                illegal: true,
                                illegalBy: {
                                    msg: err.message,
                                    context: codeToHighlight.slice(index - 100, index + 100),
                                    mode: err.mode
                                },
                                sofar: result,
                                relevance: 0,
                                value: escape$1(codeToHighlight),
                                emitter: emitter
                            };
                        } else if (SAFE_MODE) {
                            return {
                                illegal: false,
                                relevance: 0,
                                value: escape$1(codeToHighlight),
                                emitter: emitter,
                                language: languageName,
                                top: top,
                                errorRaised: err
                            };
                        } else {
                            throw err;
                        }
                    }
                }

                /**
                 * returns a valid highlight result, without actually doing any actual work,
                 * auto highlight starts with this and it's possible for small snippets that
                 * auto-detection may not find a better match
                 * @param {string} code
                 * @returns {HighlightResult}
                 */
                function justTextHighlightResult(code) {
                    const result = {
                        relevance: 0,
                        emitter: new options.__emitter(options),
                        value: escape$1(code),
                        illegal: false,
                        top: PLAINTEXT_LANGUAGE
                    };
                    result.emitter.addText(code);
                    return result;
                }

                /**
                 Highlighting with language detection. Accepts a string with the code to
                 highlight. Returns an object with the following properties:

                 - language (detected language)
                 - relevance (int)
                 - value (an HTML string with highlighting markup)
                 - second_best (object with the same structure for second-best heuristically
                 detected language, may be absent)

                 @param {string} code
                 @param {Array<string>} [languageSubset]
                 @returns {AutoHighlightResult}
                 */
                function highlightAuto(code, languageSubset) {
                    languageSubset = languageSubset || options.languages || Object.keys(languages);
                    const plaintext = justTextHighlightResult(code);

                    const results = languageSubset.filter(getLanguage).filter(autoDetection).map(name =>
                        _highlight(name, code, false)
                    );
                    results.unshift(plaintext); // plaintext is always an option

                    const sorted = results.sort((a, b) => {
                        // sort base on relevance
                        if (a.relevance !== b.relevance) return b.relevance - a.relevance;

                        // always award the tie to the base language
                        // ie if C++ and Arduino are tied, it's more likely to be C++
                        if (a.language && b.language) {
                            if (getLanguage(a.language).supersetOf === b.language) {
                                return 1;
                            } else if (getLanguage(b.language).supersetOf === a.language) {
                                return -1;
                            }
                        }

                        // otherwise say they are equal, which has the effect of sorting on
                        // relevance while preserving the original ordering - which is how ties
                        // have historically been settled, ie the language that comes first always
                        // wins in the case of a tie
                        return 0;
                    });

                    const [best, secondBest] = sorted;

                    /** @type {AutoHighlightResult} */
                    const result = best;
                    result.second_best = secondBest;

                    return result;
                }

                /**
                 Post-processing of the highlighted markup:

                 - replace TABs with something more useful
                 - replace real line-breaks with '<br>' for non-pre containers

                 @param {string} html
                 @returns {string}
                 */
                function fixMarkup(html) {
                    if (!(options.tabReplace || options.useBR)) {
                        return html;
                    }

                    return html.replace(fixMarkupRe, match => {
                        if (match === '\n') {
                            return options.useBR ? '<br>' : match;
                        } else if (options.tabReplace) {
                            return match.replace(/\t/g, options.tabReplace);
                        }
                        return match;
                    });
                }

                /**
                 * Builds new class name for block given the language name
                 *
                 * @param {HTMLElement} element
                 * @param {string} [currentLang]
                 * @param {string} [resultLang]
                 */
                function updateClassName(element, currentLang, resultLang) {
                    const language = currentLang ? aliases[currentLang] : resultLang;

                    element.classList.add("hljs");
                    if (language) element.classList.add(language);
                }

                /** @type {HLJSPlugin} */
                const brPlugin = {
                    "before:highlightElement": ({ el }) => {
                        if (options.useBR) {
                            el.innerHTML = el.innerHTML.replace(/\n/g, '').replace(/<br[ /]*>/g, '\n');
                        }
                    },
                    "after:highlightElement": ({ result }) => {
                        if (options.useBR) {
                            result.value = result.value.replace(/\n/g, "<br>");
                        }
                    }
                };

                const TAB_REPLACE_RE = /^(<[^>]+>|\t)+/gm;
                /** @type {HLJSPlugin} */
                const tabReplacePlugin = {
                    "after:highlightElement": ({ result }) => {
                        if (options.tabReplace) {
                            result.value = result.value.replace(TAB_REPLACE_RE, (m) =>
                                m.replace(/\t/g, options.tabReplace)
                            );
                        }
                    }
                };

                /**
                 * Applies highlighting to a DOM node containing code. Accepts a DOM node and
                 * two optional parameters for fixMarkup.
                 *
                 * @param {HighlightedHTMLElement} element - the HTML element to highlight
                 */
                function highlightElement(element) {
                    /** @type HTMLElement */
                    let node = null;
                    const language = blockLanguage(element);

                    if (shouldNotHighlight(language)) return;

                    // support for v10 API
                    fire("before:highlightElement",
                        { el: element, language: language });

                    node = element;
                    const text = node.textContent;
                    const result = language ? highlight(text, { language, ignoreIllegals: true }) : highlightAuto(text);

                    // support for v10 API
                    fire("after:highlightElement", { el: element, result, text });

                    element.innerHTML = result.value;
                    updateClassName(element, language, result.language);
                    element.result = {
                        language: result.language,
                        // TODO: remove with version 11.0
                        re: result.relevance,
                        relavance: result.relevance
                    };
                    if (result.second_best) {
                        element.second_best = {
                            language: result.second_best.language,
                            // TODO: remove with version 11.0
                            re: result.second_best.relevance,
                            relavance: result.second_best.relevance
                        };
                    }
                }

                /**
                 * Updates highlight.js global options with the passed options
                 *
                 * @param {Partial<HLJSOptions>} userOptions
                 */
                function configure(userOptions) {
                    if (userOptions.useBR) {
                        deprecated("10.3.0", "'useBR' will be removed entirely in v11.0");
                        deprecated("10.3.0", "Please see https://github.com/highlightjs/highlight.js/issues/2559");
                    }
                    options = inherit$1(options, userOptions);
                }

                /**
                 * Highlights to all <pre><code> blocks on a page
                 *
                 * @type {Function & {called?: boolean}}
                 */
                    // TODO: remove v12, deprecated
                const initHighlighting = () => {
                        if (initHighlighting.called) return;
                        initHighlighting.called = true;

                        deprecated("10.6.0", "initHighlighting() is deprecated.  Use highlightAll() instead.");

                        const blocks = document.querySelectorAll('pre code');
                        blocks.forEach(highlightElement);
                    };

                // Higlights all when DOMContentLoaded fires
                // TODO: remove v12, deprecated
                function initHighlightingOnLoad() {
                    deprecated("10.6.0", "initHighlightingOnLoad() is deprecated.  Use highlightAll() instead.");
                    wantsHighlight = true;
                }

                let wantsHighlight = false;

                /**
                 * auto-highlights all pre>code elements on the page
                 */
                function highlightAll() {
                    // if we are called too early in the loading process
                    if (document.readyState === "loading") {
                        wantsHighlight = true;
                        return;
                    }

                    const blocks = document.querySelectorAll('pre code');
                    blocks.forEach(highlightElement);
                }

                function boot() {
                    // if a highlight was requested before DOM was loaded, do now
                    if (wantsHighlight) highlightAll();
                }

                // make sure we are in the browser environment
                if (typeof window !== 'undefined' && window.addEventListener) {
                    window.addEventListener('DOMContentLoaded', boot, false);
                }

                /**
                 * Register a language grammar module
                 *
                 * @param {string} languageName
                 * @param {LanguageFn} languageDefinition
                 */
                function registerLanguage(languageName, languageDefinition) {
                    let lang = null;
                    try {
                        lang = languageDefinition(hljs);
                    } catch (error$1) {
                        error("Language definition for '{}' could not be registered.".replace("{}", languageName));
                        // hard or soft error
                        if (!SAFE_MODE) { throw error$1; } else { error(error$1); }
                        // languages that have serious errors are replaced with essentially a
                        // "plaintext" stand-in so that the code blocks will still get normal
                        // css classes applied to them - and one bad language won't break the
                        // entire highlighter
                        lang = PLAINTEXT_LANGUAGE;
                    }
                    // give it a temporary name if it doesn't have one in the meta-data
                    if (!lang.name) lang.name = languageName;
                    languages[languageName] = lang;
                    lang.rawDefinition = languageDefinition.bind(null, hljs);

                    if (lang.aliases) {
                        registerAliases(lang.aliases, { languageName });
                    }
                }

                /**
                 * Remove a language grammar module
                 *
                 * @param {string} languageName
                 */
                function unregisterLanguage(languageName) {
                    delete languages[languageName];
                    for (const alias of Object.keys(aliases)) {
                        if (aliases[alias] === languageName) {
                            delete aliases[alias];
                        }
                    }
                }

                /**
                 * @returns {string[]} List of language internal names
                 */
                function listLanguages() {
                    return Object.keys(languages);
                }

                /**
                 intended usage: When one language truly requires another

                 Unlike `getLanguage`, this will throw when the requested language
                 is not available.

                 @param {string} name - name of the language to fetch/require
                 @returns {Language | never}
                 */
                function requireLanguage(name) {
                    deprecated("10.4.0", "requireLanguage will be removed entirely in v11.");
                    deprecated("10.4.0", "Please see https://github.com/highlightjs/highlight.js/pull/2844");

                    const lang = getLanguage(name);
                    if (lang) { return lang; }

                    const err = new Error('The \'{}\' language is required, but not loaded.'.replace('{}', name));
                    throw err;
                }

                /**
                 * @param {string} name - name of the language to retrieve
                 * @returns {Language | undefined}
                 */
                function getLanguage(name) {
                    name = (name || '').toLowerCase();
                    return languages[name] || languages[aliases[name]];
                }

                /**
                 *
                 * @param {string|string[]} aliasList - single alias or list of aliases
                 * @param {{languageName: string}} opts
                 */
                function registerAliases(aliasList, { languageName }) {
                    if (typeof aliasList === 'string') {
                        aliasList = [aliasList];
                    }
                    aliasList.forEach(alias => { aliases[alias.toLowerCase()] = languageName; });
                }

                /**
                 * Determines if a given language has auto-detection enabled
                 * @param {string} name - name of the language
                 */
                function autoDetection(name) {
                    const lang = getLanguage(name);
                    return lang && !lang.disableAutodetect;
                }

                /**
                 * Upgrades the old highlightBlock plugins to the new
                 * highlightElement API
                 * @param {HLJSPlugin} plugin
                 */
                function upgradePluginAPI(plugin) {
                    // TODO: remove with v12
                    if (plugin["before:highlightBlock"] && !plugin["before:highlightElement"]) {
                        plugin["before:highlightElement"] = (data) => {
                            plugin["before:highlightBlock"](
                                Object.assign({ block: data.el }, data)
                            );
                        };
                    }
                    if (plugin["after:highlightBlock"] && !plugin["after:highlightElement"]) {
                        plugin["after:highlightElement"] = (data) => {
                            plugin["after:highlightBlock"](
                                Object.assign({ block: data.el }, data)
                            );
                        };
                    }
                }

                /**
                 * @param {HLJSPlugin} plugin
                 */
                function addPlugin(plugin) {
                    upgradePluginAPI(plugin);
                    plugins.push(plugin);
                }

                /**
                 *
                 * @param {PluginEvent} event
                 * @param {any} args
                 */
                function fire(event, args) {
                    const cb = event;
                    plugins.forEach(function(plugin) {
                        if (plugin[cb]) {
                            plugin[cb](args);
                        }
                    });
                }

                /**
                 Note: fixMarkup is deprecated and will be removed entirely in v11

                 @param {string} arg
                 @returns {string}
                 */
                function deprecateFixMarkup(arg) {
                    deprecated("10.2.0", "fixMarkup will be removed entirely in v11.0");
                    deprecated("10.2.0", "Please see https://github.com/highlightjs/highlight.js/issues/2534");

                    return fixMarkup(arg);
                }

                /**
                 *
                 * @param {HighlightedHTMLElement} el
                 */
                function deprecateHighlightBlock(el) {
                    deprecated("10.7.0", "highlightBlock will be removed entirely in v12.0");
                    deprecated("10.7.0", "Please use highlightElement now.");

                    return highlightElement(el);
                }

                /* Interface definition */
                Object.assign(hljs, {
                    highlight,
                    highlightAuto,
                    highlightAll,
                    fixMarkup: deprecateFixMarkup,
                    highlightElement,
                    // TODO: Remove with v12 API
                    highlightBlock: deprecateHighlightBlock,
                    configure,
                    initHighlighting,
                    initHighlightingOnLoad,
                    registerLanguage,
                    unregisterLanguage,
                    listLanguages,
                    getLanguage,
                    registerAliases,
                    requireLanguage,
                    autoDetection,
                    inherit: inherit$1,
                    addPlugin,
                    // plugins for frameworks
                    vuePlugin: BuildVuePlugin(hljs).VuePlugin
                });

                hljs.debugMode = function() { SAFE_MODE = false; };
                hljs.safeMode = function() { SAFE_MODE = true; };
                hljs.versionString = version;

                for (const key in MODES) {
                    // @ts-ignore
                    if (typeof MODES[key] === "object") {
                        // @ts-ignore
                        deepFreezeEs6(MODES[key]);
                    }
                }

                // merge all the modes/regexs into our main object
                Object.assign(hljs, MODES);

                // built-in plugins, likely to be moved out of core in the future
                hljs.addPlugin(brPlugin); // slated to be removed in v11
                hljs.addPlugin(mergeHTMLPlugin);
                hljs.addPlugin(tabReplacePlugin);
                return hljs;
            };

// export an "instance" of the highlighter
            var highlight = HLJS({});

            module.exports = highlight;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/index.js":
        /*!************************************************!*\
  !*** ./node_modules/highlight.js/lib/index.js ***!
  \************************************************/
        /***/ ((module, __unused_webpack_exports, __webpack_require__) => {

            var hljs = __webpack_require__(/*! ./core */ "./node_modules/highlight.js/lib/core.js");

            hljs.registerLanguage('1c', __webpack_require__(/*! ./languages/1c */ "./node_modules/highlight.js/lib/languages/1c.js"));
            hljs.registerLanguage('abnf', __webpack_require__(/*! ./languages/abnf */ "./node_modules/highlight.js/lib/languages/abnf.js"));
            hljs.registerLanguage('accesslog', __webpack_require__(/*! ./languages/accesslog */ "./node_modules/highlight.js/lib/languages/accesslog.js"));
            hljs.registerLanguage('actionscript', __webpack_require__(/*! ./languages/actionscript */ "./node_modules/highlight.js/lib/languages/actionscript.js"));
            hljs.registerLanguage('ada', __webpack_require__(/*! ./languages/ada */ "./node_modules/highlight.js/lib/languages/ada.js"));
            hljs.registerLanguage('angelscript', __webpack_require__(/*! ./languages/angelscript */ "./node_modules/highlight.js/lib/languages/angelscript.js"));
            hljs.registerLanguage('apache', __webpack_require__(/*! ./languages/apache */ "./node_modules/highlight.js/lib/languages/apache.js"));
            hljs.registerLanguage('applescript', __webpack_require__(/*! ./languages/applescript */ "./node_modules/highlight.js/lib/languages/applescript.js"));
            hljs.registerLanguage('arcade', __webpack_require__(/*! ./languages/arcade */ "./node_modules/highlight.js/lib/languages/arcade.js"));
            hljs.registerLanguage('arduino', __webpack_require__(/*! ./languages/arduino */ "./node_modules/highlight.js/lib/languages/arduino.js"));
            hljs.registerLanguage('armasm', __webpack_require__(/*! ./languages/armasm */ "./node_modules/highlight.js/lib/languages/armasm.js"));
            hljs.registerLanguage('xml', __webpack_require__(/*! ./languages/xml */ "./node_modules/highlight.js/lib/languages/xml.js"));
            hljs.registerLanguage('asciidoc', __webpack_require__(/*! ./languages/asciidoc */ "./node_modules/highlight.js/lib/languages/asciidoc.js"));
            hljs.registerLanguage('aspectj', __webpack_require__(/*! ./languages/aspectj */ "./node_modules/highlight.js/lib/languages/aspectj.js"));
            hljs.registerLanguage('autohotkey', __webpack_require__(/*! ./languages/autohotkey */ "./node_modules/highlight.js/lib/languages/autohotkey.js"));
            hljs.registerLanguage('autoit', __webpack_require__(/*! ./languages/autoit */ "./node_modules/highlight.js/lib/languages/autoit.js"));
            hljs.registerLanguage('avrasm', __webpack_require__(/*! ./languages/avrasm */ "./node_modules/highlight.js/lib/languages/avrasm.js"));
            hljs.registerLanguage('awk', __webpack_require__(/*! ./languages/awk */ "./node_modules/highlight.js/lib/languages/awk.js"));
            hljs.registerLanguage('axapta', __webpack_require__(/*! ./languages/axapta */ "./node_modules/highlight.js/lib/languages/axapta.js"));
            hljs.registerLanguage('bash', __webpack_require__(/*! ./languages/bash */ "./node_modules/highlight.js/lib/languages/bash.js"));
            hljs.registerLanguage('basic', __webpack_require__(/*! ./languages/basic */ "./node_modules/highlight.js/lib/languages/basic.js"));
            hljs.registerLanguage('bnf', __webpack_require__(/*! ./languages/bnf */ "./node_modules/highlight.js/lib/languages/bnf.js"));
            hljs.registerLanguage('brainfuck', __webpack_require__(/*! ./languages/brainfuck */ "./node_modules/highlight.js/lib/languages/brainfuck.js"));
            hljs.registerLanguage('c-like', __webpack_require__(/*! ./languages/c-like */ "./node_modules/highlight.js/lib/languages/c-like.js"));
            hljs.registerLanguage('c', __webpack_require__(/*! ./languages/c */ "./node_modules/highlight.js/lib/languages/c.js"));
            hljs.registerLanguage('cal', __webpack_require__(/*! ./languages/cal */ "./node_modules/highlight.js/lib/languages/cal.js"));
            hljs.registerLanguage('capnproto', __webpack_require__(/*! ./languages/capnproto */ "./node_modules/highlight.js/lib/languages/capnproto.js"));
            hljs.registerLanguage('ceylon', __webpack_require__(/*! ./languages/ceylon */ "./node_modules/highlight.js/lib/languages/ceylon.js"));
            hljs.registerLanguage('clean', __webpack_require__(/*! ./languages/clean */ "./node_modules/highlight.js/lib/languages/clean.js"));
            hljs.registerLanguage('clojure', __webpack_require__(/*! ./languages/clojure */ "./node_modules/highlight.js/lib/languages/clojure.js"));
            hljs.registerLanguage('clojure-repl', __webpack_require__(/*! ./languages/clojure-repl */ "./node_modules/highlight.js/lib/languages/clojure-repl.js"));
            hljs.registerLanguage('cmake', __webpack_require__(/*! ./languages/cmake */ "./node_modules/highlight.js/lib/languages/cmake.js"));
            hljs.registerLanguage('coffeescript', __webpack_require__(/*! ./languages/coffeescript */ "./node_modules/highlight.js/lib/languages/coffeescript.js"));
            hljs.registerLanguage('coq', __webpack_require__(/*! ./languages/coq */ "./node_modules/highlight.js/lib/languages/coq.js"));
            hljs.registerLanguage('cos', __webpack_require__(/*! ./languages/cos */ "./node_modules/highlight.js/lib/languages/cos.js"));
            hljs.registerLanguage('cpp', __webpack_require__(/*! ./languages/cpp */ "./node_modules/highlight.js/lib/languages/cpp.js"));
            hljs.registerLanguage('crmsh', __webpack_require__(/*! ./languages/crmsh */ "./node_modules/highlight.js/lib/languages/crmsh.js"));
            hljs.registerLanguage('crystal', __webpack_require__(/*! ./languages/crystal */ "./node_modules/highlight.js/lib/languages/crystal.js"));
            hljs.registerLanguage('csharp', __webpack_require__(/*! ./languages/csharp */ "./node_modules/highlight.js/lib/languages/csharp.js"));
            hljs.registerLanguage('csp', __webpack_require__(/*! ./languages/csp */ "./node_modules/highlight.js/lib/languages/csp.js"));
            hljs.registerLanguage('css', __webpack_require__(/*! ./languages/css */ "./node_modules/highlight.js/lib/languages/css.js"));
            hljs.registerLanguage('d', __webpack_require__(/*! ./languages/d */ "./node_modules/highlight.js/lib/languages/d.js"));
            hljs.registerLanguage('markdown', __webpack_require__(/*! ./languages/markdown */ "./node_modules/highlight.js/lib/languages/markdown.js"));
            hljs.registerLanguage('dart', __webpack_require__(/*! ./languages/dart */ "./node_modules/highlight.js/lib/languages/dart.js"));
            hljs.registerLanguage('delphi', __webpack_require__(/*! ./languages/delphi */ "./node_modules/highlight.js/lib/languages/delphi.js"));
            hljs.registerLanguage('diff', __webpack_require__(/*! ./languages/diff */ "./node_modules/highlight.js/lib/languages/diff.js"));
            hljs.registerLanguage('django', __webpack_require__(/*! ./languages/django */ "./node_modules/highlight.js/lib/languages/django.js"));
            hljs.registerLanguage('dns', __webpack_require__(/*! ./languages/dns */ "./node_modules/highlight.js/lib/languages/dns.js"));
            hljs.registerLanguage('dockerfile', __webpack_require__(/*! ./languages/dockerfile */ "./node_modules/highlight.js/lib/languages/dockerfile.js"));
            hljs.registerLanguage('dos', __webpack_require__(/*! ./languages/dos */ "./node_modules/highlight.js/lib/languages/dos.js"));
            hljs.registerLanguage('dsconfig', __webpack_require__(/*! ./languages/dsconfig */ "./node_modules/highlight.js/lib/languages/dsconfig.js"));
            hljs.registerLanguage('dts', __webpack_require__(/*! ./languages/dts */ "./node_modules/highlight.js/lib/languages/dts.js"));
            hljs.registerLanguage('dust', __webpack_require__(/*! ./languages/dust */ "./node_modules/highlight.js/lib/languages/dust.js"));
            hljs.registerLanguage('ebnf', __webpack_require__(/*! ./languages/ebnf */ "./node_modules/highlight.js/lib/languages/ebnf.js"));
            hljs.registerLanguage('elixir', __webpack_require__(/*! ./languages/elixir */ "./node_modules/highlight.js/lib/languages/elixir.js"));
            hljs.registerLanguage('elm', __webpack_require__(/*! ./languages/elm */ "./node_modules/highlight.js/lib/languages/elm.js"));
            hljs.registerLanguage('ruby', __webpack_require__(/*! ./languages/ruby */ "./node_modules/highlight.js/lib/languages/ruby.js"));
            hljs.registerLanguage('erb', __webpack_require__(/*! ./languages/erb */ "./node_modules/highlight.js/lib/languages/erb.js"));
            hljs.registerLanguage('erlang-repl', __webpack_require__(/*! ./languages/erlang-repl */ "./node_modules/highlight.js/lib/languages/erlang-repl.js"));
            hljs.registerLanguage('erlang', __webpack_require__(/*! ./languages/erlang */ "./node_modules/highlight.js/lib/languages/erlang.js"));
            hljs.registerLanguage('excel', __webpack_require__(/*! ./languages/excel */ "./node_modules/highlight.js/lib/languages/excel.js"));
            hljs.registerLanguage('fix', __webpack_require__(/*! ./languages/fix */ "./node_modules/highlight.js/lib/languages/fix.js"));
            hljs.registerLanguage('flix', __webpack_require__(/*! ./languages/flix */ "./node_modules/highlight.js/lib/languages/flix.js"));
            hljs.registerLanguage('fortran', __webpack_require__(/*! ./languages/fortran */ "./node_modules/highlight.js/lib/languages/fortran.js"));
            hljs.registerLanguage('fsharp', __webpack_require__(/*! ./languages/fsharp */ "./node_modules/highlight.js/lib/languages/fsharp.js"));
            hljs.registerLanguage('gams', __webpack_require__(/*! ./languages/gams */ "./node_modules/highlight.js/lib/languages/gams.js"));
            hljs.registerLanguage('gauss', __webpack_require__(/*! ./languages/gauss */ "./node_modules/highlight.js/lib/languages/gauss.js"));
            hljs.registerLanguage('gcode', __webpack_require__(/*! ./languages/gcode */ "./node_modules/highlight.js/lib/languages/gcode.js"));
            hljs.registerLanguage('gherkin', __webpack_require__(/*! ./languages/gherkin */ "./node_modules/highlight.js/lib/languages/gherkin.js"));
            hljs.registerLanguage('glsl', __webpack_require__(/*! ./languages/glsl */ "./node_modules/highlight.js/lib/languages/glsl.js"));
            hljs.registerLanguage('gml', __webpack_require__(/*! ./languages/gml */ "./node_modules/highlight.js/lib/languages/gml.js"));
            hljs.registerLanguage('go', __webpack_require__(/*! ./languages/go */ "./node_modules/highlight.js/lib/languages/go.js"));
            hljs.registerLanguage('golo', __webpack_require__(/*! ./languages/golo */ "./node_modules/highlight.js/lib/languages/golo.js"));
            hljs.registerLanguage('gradle', __webpack_require__(/*! ./languages/gradle */ "./node_modules/highlight.js/lib/languages/gradle.js"));
            hljs.registerLanguage('groovy', __webpack_require__(/*! ./languages/groovy */ "./node_modules/highlight.js/lib/languages/groovy.js"));
            hljs.registerLanguage('haml', __webpack_require__(/*! ./languages/haml */ "./node_modules/highlight.js/lib/languages/haml.js"));
            hljs.registerLanguage('handlebars', __webpack_require__(/*! ./languages/handlebars */ "./node_modules/highlight.js/lib/languages/handlebars.js"));
            hljs.registerLanguage('haskell', __webpack_require__(/*! ./languages/haskell */ "./node_modules/highlight.js/lib/languages/haskell.js"));
            hljs.registerLanguage('haxe', __webpack_require__(/*! ./languages/haxe */ "./node_modules/highlight.js/lib/languages/haxe.js"));
            hljs.registerLanguage('hsp', __webpack_require__(/*! ./languages/hsp */ "./node_modules/highlight.js/lib/languages/hsp.js"));
            hljs.registerLanguage('htmlbars', __webpack_require__(/*! ./languages/htmlbars */ "./node_modules/highlight.js/lib/languages/htmlbars.js"));
            hljs.registerLanguage('http', __webpack_require__(/*! ./languages/http */ "./node_modules/highlight.js/lib/languages/http.js"));
            hljs.registerLanguage('hy', __webpack_require__(/*! ./languages/hy */ "./node_modules/highlight.js/lib/languages/hy.js"));
            hljs.registerLanguage('inform7', __webpack_require__(/*! ./languages/inform7 */ "./node_modules/highlight.js/lib/languages/inform7.js"));
            hljs.registerLanguage('ini', __webpack_require__(/*! ./languages/ini */ "./node_modules/highlight.js/lib/languages/ini.js"));
            hljs.registerLanguage('irpf90', __webpack_require__(/*! ./languages/irpf90 */ "./node_modules/highlight.js/lib/languages/irpf90.js"));
            hljs.registerLanguage('isbl', __webpack_require__(/*! ./languages/isbl */ "./node_modules/highlight.js/lib/languages/isbl.js"));
            hljs.registerLanguage('java', __webpack_require__(/*! ./languages/java */ "./node_modules/highlight.js/lib/languages/java.js"));
            hljs.registerLanguage('javascript', __webpack_require__(/*! ./languages/javascript */ "./node_modules/highlight.js/lib/languages/javascript.js"));
            hljs.registerLanguage('jboss-cli', __webpack_require__(/*! ./languages/jboss-cli */ "./node_modules/highlight.js/lib/languages/jboss-cli.js"));
            hljs.registerLanguage('json', __webpack_require__(/*! ./languages/json */ "./node_modules/highlight.js/lib/languages/json.js"));
            hljs.registerLanguage('julia', __webpack_require__(/*! ./languages/julia */ "./node_modules/highlight.js/lib/languages/julia.js"));
            hljs.registerLanguage('julia-repl', __webpack_require__(/*! ./languages/julia-repl */ "./node_modules/highlight.js/lib/languages/julia-repl.js"));
            hljs.registerLanguage('kotlin', __webpack_require__(/*! ./languages/kotlin */ "./node_modules/highlight.js/lib/languages/kotlin.js"));
            hljs.registerLanguage('lasso', __webpack_require__(/*! ./languages/lasso */ "./node_modules/highlight.js/lib/languages/lasso.js"));
            hljs.registerLanguage('latex', __webpack_require__(/*! ./languages/latex */ "./node_modules/highlight.js/lib/languages/latex.js"));
            hljs.registerLanguage('ldif', __webpack_require__(/*! ./languages/ldif */ "./node_modules/highlight.js/lib/languages/ldif.js"));
            hljs.registerLanguage('leaf', __webpack_require__(/*! ./languages/leaf */ "./node_modules/highlight.js/lib/languages/leaf.js"));
            hljs.registerLanguage('less', __webpack_require__(/*! ./languages/less */ "./node_modules/highlight.js/lib/languages/less.js"));
            hljs.registerLanguage('lisp', __webpack_require__(/*! ./languages/lisp */ "./node_modules/highlight.js/lib/languages/lisp.js"));
            hljs.registerLanguage('livecodeserver', __webpack_require__(/*! ./languages/livecodeserver */ "./node_modules/highlight.js/lib/languages/livecodeserver.js"));
            hljs.registerLanguage('livescript', __webpack_require__(/*! ./languages/livescript */ "./node_modules/highlight.js/lib/languages/livescript.js"));
            hljs.registerLanguage('llvm', __webpack_require__(/*! ./languages/llvm */ "./node_modules/highlight.js/lib/languages/llvm.js"));
            hljs.registerLanguage('lsl', __webpack_require__(/*! ./languages/lsl */ "./node_modules/highlight.js/lib/languages/lsl.js"));
            hljs.registerLanguage('lua', __webpack_require__(/*! ./languages/lua */ "./node_modules/highlight.js/lib/languages/lua.js"));
            hljs.registerLanguage('makefile', __webpack_require__(/*! ./languages/makefile */ "./node_modules/highlight.js/lib/languages/makefile.js"));
            hljs.registerLanguage('mathematica', __webpack_require__(/*! ./languages/mathematica */ "./node_modules/highlight.js/lib/languages/mathematica.js"));
            hljs.registerLanguage('matlab', __webpack_require__(/*! ./languages/matlab */ "./node_modules/highlight.js/lib/languages/matlab.js"));
            hljs.registerLanguage('maxima', __webpack_require__(/*! ./languages/maxima */ "./node_modules/highlight.js/lib/languages/maxima.js"));
            hljs.registerLanguage('mel', __webpack_require__(/*! ./languages/mel */ "./node_modules/highlight.js/lib/languages/mel.js"));
            hljs.registerLanguage('mercury', __webpack_require__(/*! ./languages/mercury */ "./node_modules/highlight.js/lib/languages/mercury.js"));
            hljs.registerLanguage('mipsasm', __webpack_require__(/*! ./languages/mipsasm */ "./node_modules/highlight.js/lib/languages/mipsasm.js"));
            hljs.registerLanguage('mizar', __webpack_require__(/*! ./languages/mizar */ "./node_modules/highlight.js/lib/languages/mizar.js"));
            hljs.registerLanguage('perl', __webpack_require__(/*! ./languages/perl */ "./node_modules/highlight.js/lib/languages/perl.js"));
            hljs.registerLanguage('mojolicious', __webpack_require__(/*! ./languages/mojolicious */ "./node_modules/highlight.js/lib/languages/mojolicious.js"));
            hljs.registerLanguage('monkey', __webpack_require__(/*! ./languages/monkey */ "./node_modules/highlight.js/lib/languages/monkey.js"));
            hljs.registerLanguage('moonscript', __webpack_require__(/*! ./languages/moonscript */ "./node_modules/highlight.js/lib/languages/moonscript.js"));
            hljs.registerLanguage('n1ql', __webpack_require__(/*! ./languages/n1ql */ "./node_modules/highlight.js/lib/languages/n1ql.js"));
            hljs.registerLanguage('nginx', __webpack_require__(/*! ./languages/nginx */ "./node_modules/highlight.js/lib/languages/nginx.js"));
            hljs.registerLanguage('nim', __webpack_require__(/*! ./languages/nim */ "./node_modules/highlight.js/lib/languages/nim.js"));
            hljs.registerLanguage('nix', __webpack_require__(/*! ./languages/nix */ "./node_modules/highlight.js/lib/languages/nix.js"));
            hljs.registerLanguage('node-repl', __webpack_require__(/*! ./languages/node-repl */ "./node_modules/highlight.js/lib/languages/node-repl.js"));
            hljs.registerLanguage('nsis', __webpack_require__(/*! ./languages/nsis */ "./node_modules/highlight.js/lib/languages/nsis.js"));
            hljs.registerLanguage('objectivec', __webpack_require__(/*! ./languages/objectivec */ "./node_modules/highlight.js/lib/languages/objectivec.js"));
            hljs.registerLanguage('ocaml', __webpack_require__(/*! ./languages/ocaml */ "./node_modules/highlight.js/lib/languages/ocaml.js"));
            hljs.registerLanguage('openscad', __webpack_require__(/*! ./languages/openscad */ "./node_modules/highlight.js/lib/languages/openscad.js"));
            hljs.registerLanguage('oxygene', __webpack_require__(/*! ./languages/oxygene */ "./node_modules/highlight.js/lib/languages/oxygene.js"));
            hljs.registerLanguage('parser3', __webpack_require__(/*! ./languages/parser3 */ "./node_modules/highlight.js/lib/languages/parser3.js"));
            hljs.registerLanguage('pf', __webpack_require__(/*! ./languages/pf */ "./node_modules/highlight.js/lib/languages/pf.js"));
            hljs.registerLanguage('pgsql', __webpack_require__(/*! ./languages/pgsql */ "./node_modules/highlight.js/lib/languages/pgsql.js"));
            hljs.registerLanguage('php', __webpack_require__(/*! ./languages/php */ "./node_modules/highlight.js/lib/languages/php.js"));
            hljs.registerLanguage('php-template', __webpack_require__(/*! ./languages/php-template */ "./node_modules/highlight.js/lib/languages/php-template.js"));
            hljs.registerLanguage('plaintext', __webpack_require__(/*! ./languages/plaintext */ "./node_modules/highlight.js/lib/languages/plaintext.js"));
            hljs.registerLanguage('pony', __webpack_require__(/*! ./languages/pony */ "./node_modules/highlight.js/lib/languages/pony.js"));
            hljs.registerLanguage('powershell', __webpack_require__(/*! ./languages/powershell */ "./node_modules/highlight.js/lib/languages/powershell.js"));
            hljs.registerLanguage('processing', __webpack_require__(/*! ./languages/processing */ "./node_modules/highlight.js/lib/languages/processing.js"));
            hljs.registerLanguage('profile', __webpack_require__(/*! ./languages/profile */ "./node_modules/highlight.js/lib/languages/profile.js"));
            hljs.registerLanguage('prolog', __webpack_require__(/*! ./languages/prolog */ "./node_modules/highlight.js/lib/languages/prolog.js"));
            hljs.registerLanguage('properties', __webpack_require__(/*! ./languages/properties */ "./node_modules/highlight.js/lib/languages/properties.js"));
            hljs.registerLanguage('protobuf', __webpack_require__(/*! ./languages/protobuf */ "./node_modules/highlight.js/lib/languages/protobuf.js"));
            hljs.registerLanguage('puppet', __webpack_require__(/*! ./languages/puppet */ "./node_modules/highlight.js/lib/languages/puppet.js"));
            hljs.registerLanguage('purebasic', __webpack_require__(/*! ./languages/purebasic */ "./node_modules/highlight.js/lib/languages/purebasic.js"));
            hljs.registerLanguage('python', __webpack_require__(/*! ./languages/python */ "./node_modules/highlight.js/lib/languages/python.js"));
            hljs.registerLanguage('python-repl', __webpack_require__(/*! ./languages/python-repl */ "./node_modules/highlight.js/lib/languages/python-repl.js"));
            hljs.registerLanguage('q', __webpack_require__(/*! ./languages/q */ "./node_modules/highlight.js/lib/languages/q.js"));
            hljs.registerLanguage('qml', __webpack_require__(/*! ./languages/qml */ "./node_modules/highlight.js/lib/languages/qml.js"));
            hljs.registerLanguage('r', __webpack_require__(/*! ./languages/r */ "./node_modules/highlight.js/lib/languages/r.js"));
            hljs.registerLanguage('reasonml', __webpack_require__(/*! ./languages/reasonml */ "./node_modules/highlight.js/lib/languages/reasonml.js"));
            hljs.registerLanguage('rib', __webpack_require__(/*! ./languages/rib */ "./node_modules/highlight.js/lib/languages/rib.js"));
            hljs.registerLanguage('roboconf', __webpack_require__(/*! ./languages/roboconf */ "./node_modules/highlight.js/lib/languages/roboconf.js"));
            hljs.registerLanguage('routeros', __webpack_require__(/*! ./languages/routeros */ "./node_modules/highlight.js/lib/languages/routeros.js"));
            hljs.registerLanguage('rsl', __webpack_require__(/*! ./languages/rsl */ "./node_modules/highlight.js/lib/languages/rsl.js"));
            hljs.registerLanguage('ruleslanguage', __webpack_require__(/*! ./languages/ruleslanguage */ "./node_modules/highlight.js/lib/languages/ruleslanguage.js"));
            hljs.registerLanguage('rust', __webpack_require__(/*! ./languages/rust */ "./node_modules/highlight.js/lib/languages/rust.js"));
            hljs.registerLanguage('sas', __webpack_require__(/*! ./languages/sas */ "./node_modules/highlight.js/lib/languages/sas.js"));
            hljs.registerLanguage('scala', __webpack_require__(/*! ./languages/scala */ "./node_modules/highlight.js/lib/languages/scala.js"));
            hljs.registerLanguage('scheme', __webpack_require__(/*! ./languages/scheme */ "./node_modules/highlight.js/lib/languages/scheme.js"));
            hljs.registerLanguage('scilab', __webpack_require__(/*! ./languages/scilab */ "./node_modules/highlight.js/lib/languages/scilab.js"));
            hljs.registerLanguage('scss', __webpack_require__(/*! ./languages/scss */ "./node_modules/highlight.js/lib/languages/scss.js"));
            hljs.registerLanguage('shell', __webpack_require__(/*! ./languages/shell */ "./node_modules/highlight.js/lib/languages/shell.js"));
            hljs.registerLanguage('smali', __webpack_require__(/*! ./languages/smali */ "./node_modules/highlight.js/lib/languages/smali.js"));
            hljs.registerLanguage('smalltalk', __webpack_require__(/*! ./languages/smalltalk */ "./node_modules/highlight.js/lib/languages/smalltalk.js"));
            hljs.registerLanguage('sml', __webpack_require__(/*! ./languages/sml */ "./node_modules/highlight.js/lib/languages/sml.js"));
            hljs.registerLanguage('sqf', __webpack_require__(/*! ./languages/sqf */ "./node_modules/highlight.js/lib/languages/sqf.js"));
            hljs.registerLanguage('sql_more', __webpack_require__(/*! ./languages/sql_more */ "./node_modules/highlight.js/lib/languages/sql_more.js"));
            hljs.registerLanguage('sql', __webpack_require__(/*! ./languages/sql */ "./node_modules/highlight.js/lib/languages/sql.js"));
            hljs.registerLanguage('stan', __webpack_require__(/*! ./languages/stan */ "./node_modules/highlight.js/lib/languages/stan.js"));
            hljs.registerLanguage('stata', __webpack_require__(/*! ./languages/stata */ "./node_modules/highlight.js/lib/languages/stata.js"));
            hljs.registerLanguage('step21', __webpack_require__(/*! ./languages/step21 */ "./node_modules/highlight.js/lib/languages/step21.js"));
            hljs.registerLanguage('stylus', __webpack_require__(/*! ./languages/stylus */ "./node_modules/highlight.js/lib/languages/stylus.js"));
            hljs.registerLanguage('subunit', __webpack_require__(/*! ./languages/subunit */ "./node_modules/highlight.js/lib/languages/subunit.js"));
            hljs.registerLanguage('swift', __webpack_require__(/*! ./languages/swift */ "./node_modules/highlight.js/lib/languages/swift.js"));
            hljs.registerLanguage('taggerscript', __webpack_require__(/*! ./languages/taggerscript */ "./node_modules/highlight.js/lib/languages/taggerscript.js"));
            hljs.registerLanguage('yaml', __webpack_require__(/*! ./languages/yaml */ "./node_modules/highlight.js/lib/languages/yaml.js"));
            hljs.registerLanguage('tap', __webpack_require__(/*! ./languages/tap */ "./node_modules/highlight.js/lib/languages/tap.js"));
            hljs.registerLanguage('tcl', __webpack_require__(/*! ./languages/tcl */ "./node_modules/highlight.js/lib/languages/tcl.js"));
            hljs.registerLanguage('thrift', __webpack_require__(/*! ./languages/thrift */ "./node_modules/highlight.js/lib/languages/thrift.js"));
            hljs.registerLanguage('tp', __webpack_require__(/*! ./languages/tp */ "./node_modules/highlight.js/lib/languages/tp.js"));
            hljs.registerLanguage('twig', __webpack_require__(/*! ./languages/twig */ "./node_modules/highlight.js/lib/languages/twig.js"));
            hljs.registerLanguage('typescript', __webpack_require__(/*! ./languages/typescript */ "./node_modules/highlight.js/lib/languages/typescript.js"));
            hljs.registerLanguage('vala', __webpack_require__(/*! ./languages/vala */ "./node_modules/highlight.js/lib/languages/vala.js"));
            hljs.registerLanguage('vbnet', __webpack_require__(/*! ./languages/vbnet */ "./node_modules/highlight.js/lib/languages/vbnet.js"));
            hljs.registerLanguage('vbscript', __webpack_require__(/*! ./languages/vbscript */ "./node_modules/highlight.js/lib/languages/vbscript.js"));
            hljs.registerLanguage('vbscript-html', __webpack_require__(/*! ./languages/vbscript-html */ "./node_modules/highlight.js/lib/languages/vbscript-html.js"));
            hljs.registerLanguage('verilog', __webpack_require__(/*! ./languages/verilog */ "./node_modules/highlight.js/lib/languages/verilog.js"));
            hljs.registerLanguage('vhdl', __webpack_require__(/*! ./languages/vhdl */ "./node_modules/highlight.js/lib/languages/vhdl.js"));
            hljs.registerLanguage('vim', __webpack_require__(/*! ./languages/vim */ "./node_modules/highlight.js/lib/languages/vim.js"));
            hljs.registerLanguage('x86asm', __webpack_require__(/*! ./languages/x86asm */ "./node_modules/highlight.js/lib/languages/x86asm.js"));
            hljs.registerLanguage('xl', __webpack_require__(/*! ./languages/xl */ "./node_modules/highlight.js/lib/languages/xl.js"));
            hljs.registerLanguage('xquery', __webpack_require__(/*! ./languages/xquery */ "./node_modules/highlight.js/lib/languages/xquery.js"));
            hljs.registerLanguage('zephir', __webpack_require__(/*! ./languages/zephir */ "./node_modules/highlight.js/lib/languages/zephir.js"));

            module.exports = hljs;

            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/1c.js":
        /*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/1c.js ***!
  \*******************************************************/
        /***/ ((module) => {

            /*
Language: 1C:Enterprise
Author: Stanislav Belov <stbelov@gmail.com>
Description: built-in language 1C:Enterprise (v7, v8)
Category: enterprise
*/

            function _1c(hljs) {

                // общий паттерн для определения идентификаторов
                var UNDERSCORE_IDENT_RE = '[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]+';

                // v7 уникальные ключевые слова, отсутствующие в v8 ==> keyword
                var v7_keywords =
                    'далее ';

                // v8 ключевые слова ==> keyword
                var v8_keywords =
                    'возврат вызватьисключение выполнить для если и из или иначе иначеесли исключение каждого конецесли ' +
                    'конецпопытки конеццикла не новый перейти перем по пока попытка прервать продолжить тогда цикл экспорт ';

                // keyword : ключевые слова
                var KEYWORD = v7_keywords + v8_keywords;

                // v7 уникальные директивы, отсутствующие в v8 ==> meta-keyword
                var v7_meta_keywords =
                    'загрузитьизфайла ';

                // v8 ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях ==> meta-keyword
                var v8_meta_keywords =
                    'вебклиент вместо внешнеесоединение клиент конецобласти мобильноеприложениеклиент мобильноеприложениесервер ' +
                    'наклиенте наклиентенасервере наклиентенасерверебезконтекста насервере насерверебезконтекста область перед ' +
                    'после сервер толстыйклиентобычноеприложение толстыйклиентуправляемоеприложение тонкийклиент ';

                // meta-keyword : ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях
                var METAKEYWORD = v7_meta_keywords + v8_meta_keywords;

                // v7 системные константы ==> built_in
                var v7_system_constants =
                    'разделительстраниц разделительстрок символтабуляции ';

                // v7 уникальные методы глобального контекста, отсутствующие в v8 ==> built_in
                var v7_global_context_methods =
                    'ansitooem oemtoansi ввестивидсубконто ввестиперечисление ввестипериод ввестиплансчетов выбранныйплансчетов ' +
                    'датагод датамесяц датачисло заголовоксистемы значениевстроку значениеизстроки каталогиб каталогпользователя ' +
                    'кодсимв конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца ' +
                    'коннедели лог лог10 максимальноеколичествосубконто названиеинтерфейса названиенабораправ назначитьвид ' +
                    'назначитьсчет найтиссылки началопериодаби началостандартногоинтервала начгода начквартала начмесяца ' +
                    'начнедели номерднягода номерднянедели номернеделигода обработкаожидания основнойжурналрасчетов ' +
                    'основнойплансчетов основнойязык очиститьокносообщений периодстр получитьвремята получитьдатута ' +
                    'получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта ' +
                    'префиксавтонумерации пропись пустоезначение разм разобратьпозициюдокумента рассчитатьрегистрына ' +
                    'рассчитатьрегистрыпо симв создатьобъект статусвозврата стрколичествострок сформироватьпозициюдокумента ' +
                    'счетпокоду текущеевремя типзначения типзначениястр установитьтана установитьтапо фиксшаблон шаблон ';

                // v8 методы глобального контекста ==> built_in
                var v8_global_context_methods =
                    'acos asin atan base64значение base64строка cos exp log log10 pow sin sqrt tan xmlзначение xmlстрока ' +
                    'xmlтип xmlтипзнч активноеокно безопасныйрежим безопасныйрежимразделенияданных булево ввестидату ввестизначение ' +
                    'ввестистроку ввестичисло возможностьчтенияxml вопрос восстановитьзначение врег выгрузитьжурналрегистрации ' +
                    'выполнитьобработкуоповещения выполнитьпроверкуправдоступа вычислить год данныеформывзначение дата день деньгода ' +
                    'деньнедели добавитьмесяц заблокироватьданныедляредактирования заблокироватьработупользователя завершитьработусистемы ' +
                    'загрузитьвнешнююкомпоненту закрытьсправку записатьjson записатьxml записатьдатуjson записьжурналарегистрации ' +
                    'заполнитьзначениясвойств запроситьразрешениепользователя запуститьприложение запуститьсистему зафиксироватьтранзакцию ' +
                    'значениевданныеформы значениевстрокувнутр значениевфайл значениезаполнено значениеизстрокивнутр значениеизфайла ' +
                    'изxmlтипа импортмоделиxdto имякомпьютера имяпользователя инициализироватьпредопределенныеданные информацияобошибке ' +
                    'каталогбиблиотекимобильногоустройства каталогвременныхфайлов каталогдокументов каталогпрограммы кодироватьстроку ' +
                    'кодлокализацииинформационнойбазы кодсимвола командасистемы конецгода конецдня конецквартала конецмесяца конецминуты ' +
                    'конецнедели конецчаса конфигурациябазыданныхизмененадинамически конфигурацияизменена копироватьданныеформы ' +
                    'копироватьфайл краткоепредставлениеошибки лев макс местноевремя месяц мин минута монопольныйрежим найти ' +
                    'найтинедопустимыесимволыxml найтиокнопонавигационнойссылке найтипомеченныенаудаление найтипоссылкам найтифайлы ' +
                    'началогода началодня началоквартала началомесяца началоминуты началонедели началочаса начатьзапросразрешенияпользователя ' +
                    'начатьзапускприложения начатькопированиефайла начатьперемещениефайла начатьподключениевнешнейкомпоненты ' +
                    'начатьподключениерасширенияработыскриптографией начатьподключениерасширенияработысфайлами начатьпоискфайлов ' +
                    'начатьполучениекаталогавременныхфайлов начатьполучениекаталогадокументов начатьполучениерабочегокаталогаданныхпользователя ' +
                    'начатьполучениефайлов начатьпомещениефайла начатьпомещениефайлов начатьсозданиедвоичныхданныхизфайла начатьсозданиекаталога ' +
                    'начатьтранзакцию начатьудалениефайлов начатьустановкувнешнейкомпоненты начатьустановкурасширенияработыскриптографией ' +
                    'начатьустановкурасширенияработысфайлами неделягода необходимостьзавершениясоединения номерсеансаинформационнойбазы ' +
                    'номерсоединенияинформационнойбазы нрег нстр обновитьинтерфейс обновитьнумерациюобъектов обновитьповторноиспользуемыезначения ' +
                    'обработкапрерыванияпользователя объединитьфайлы окр описаниеошибки оповестить оповеститьобизменении ' +
                    'отключитьобработчикзапросанастроекклиенталицензирования отключитьобработчикожидания отключитьобработчикоповещения ' +
                    'открытьзначение открытьиндекссправки открытьсодержаниесправки открытьсправку открытьформу открытьформумодально ' +
                    'отменитьтранзакцию очиститьжурналрегистрации очиститьнастройкипользователя очиститьсообщения параметрыдоступа ' +
                    'перейтипонавигационнойссылке переместитьфайл подключитьвнешнююкомпоненту ' +
                    'подключитьобработчикзапросанастроекклиенталицензирования подключитьобработчикожидания подключитьобработчикоповещения ' +
                    'подключитьрасширениеработыскриптографией подключитьрасширениеработысфайлами подробноепредставлениеошибки ' +
                    'показатьвводдаты показатьвводзначения показатьвводстроки показатьвводчисла показатьвопрос показатьзначение ' +
                    'показатьинформациюобошибке показатьнакарте показатьоповещениепользователя показатьпредупреждение полноеимяпользователя ' +
                    'получитьcomобъект получитьxmlтип получитьадреспоместоположению получитьблокировкусеансов получитьвремязавершенияспящегосеанса ' +
                    'получитьвремязасыпанияпассивногосеанса получитьвремяожиданияблокировкиданных получитьданныевыбора ' +
                    'получитьдополнительныйпараметрклиенталицензирования получитьдопустимыекодылокализации получитьдопустимыечасовыепояса ' +
                    'получитьзаголовокклиентскогоприложения получитьзаголовоксистемы получитьзначенияотборажурналарегистрации ' +
                    'получитьидентификаторконфигурации получитьизвременногохранилища получитьимявременногофайла ' +
                    'получитьимяклиенталицензирования получитьинформациюэкрановклиента получитьиспользованиежурналарегистрации ' +
                    'получитьиспользованиесобытияжурналарегистрации получитькраткийзаголовокприложения получитьмакетоформления ' +
                    'получитьмаскувсефайлы получитьмаскувсефайлыклиента получитьмаскувсефайлысервера получитьместоположениепоадресу ' +
                    'получитьминимальнуюдлинупаролейпользователей получитьнавигационнуюссылку получитьнавигационнуюссылкуинформационнойбазы ' +
                    'получитьобновлениеконфигурациибазыданных получитьобновлениепредопределенныхданныхинформационнойбазы получитьобщиймакет ' +
                    'получитьобщуюформу получитьокна получитьоперативнуюотметкувремени получитьотключениебезопасногорежима ' +
                    'получитьпараметрыфункциональныхопцийинтерфейса получитьполноеимяпредопределенногозначения ' +
                    'получитьпредставлениянавигационныхссылок получитьпроверкусложностипаролейпользователей получитьразделительпути ' +
                    'получитьразделительпутиклиента получитьразделительпутисервера получитьсеансыинформационнойбазы ' +
                    'получитьскоростьклиентскогосоединения получитьсоединенияинформационнойбазы получитьсообщенияпользователю ' +
                    'получитьсоответствиеобъектаиформы получитьсоставстандартногоинтерфейсаodata получитьструктурухранениябазыданных ' +
                    'получитьтекущийсеансинформационнойбазы получитьфайл получитьфайлы получитьформу получитьфункциональнуюопцию ' +
                    'получитьфункциональнуюопциюинтерфейса получитьчасовойпоясинформационнойбазы пользователиос поместитьвовременноехранилище ' +
                    'поместитьфайл поместитьфайлы прав праводоступа предопределенноезначение представлениекодалокализации представлениепериода ' +
                    'представлениеправа представлениеприложения представлениесобытияжурналарегистрации представлениечасовогопояса предупреждение ' +
                    'прекратитьработусистемы привилегированныйрежим продолжитьвызов прочитатьjson прочитатьxml прочитатьдатуjson пустаястрока ' +
                    'рабочийкаталогданныхпользователя разблокироватьданныедляредактирования разделитьфайл разорватьсоединениесвнешнимисточникомданных ' +
                    'раскодироватьстроку рольдоступна секунда сигнал символ скопироватьжурналрегистрации смещениелетнеговремени ' +
                    'смещениестандартноговремени соединитьбуферыдвоичныхданных создатькаталог создатьфабрикуxdto сокрл сокрлп сокрп сообщить ' +
                    'состояние сохранитьзначение сохранитьнастройкипользователя сред стрдлина стрзаканчиваетсяна стрзаменить стрнайти стрначинаетсяс ' +
                    'строка строкасоединенияинформационнойбазы стрполучитьстроку стрразделить стрсоединить стрсравнить стрчисловхождений '+
                    'стрчислострок стршаблон текущаядата текущаядатасеанса текущаяуниверсальнаядата текущаяуниверсальнаядатавмиллисекундах ' +
                    'текущийвариантинтерфейсаклиентскогоприложения текущийвариантосновногошрифтаклиентскогоприложения текущийкодлокализации ' +
                    'текущийрежимзапуска текущийязык текущийязыксистемы тип типзнч транзакцияактивна трег удалитьданныеинформационнойбазы ' +
                    'удалитьизвременногохранилища удалитьобъекты удалитьфайлы универсальноевремя установитьбезопасныйрежим ' +
                    'установитьбезопасныйрежимразделенияданных установитьблокировкусеансов установитьвнешнююкомпоненту ' +
                    'установитьвремязавершенияспящегосеанса установитьвремязасыпанияпассивногосеанса установитьвремяожиданияблокировкиданных ' +
                    'установитьзаголовокклиентскогоприложения установитьзаголовоксистемы установитьиспользованиежурналарегистрации ' +
                    'установитьиспользованиесобытияжурналарегистрации установитькраткийзаголовокприложения ' +
                    'установитьминимальнуюдлинупаролейпользователей установитьмонопольныйрежим установитьнастройкиклиенталицензирования ' +
                    'установитьобновлениепредопределенныхданныхинформационнойбазы установитьотключениебезопасногорежима ' +
                    'установитьпараметрыфункциональныхопцийинтерфейса установитьпривилегированныйрежим ' +
                    'установитьпроверкусложностипаролейпользователей установитьрасширениеработыскриптографией ' +
                    'установитьрасширениеработысфайлами установитьсоединениесвнешнимисточникомданных установитьсоответствиеобъектаиформы ' +
                    'установитьсоставстандартногоинтерфейсаodata установитьчасовойпоясинформационнойбазы установитьчасовойпояссеанса ' +
                    'формат цел час часовойпояс часовойпояссеанса число числопрописью этоадресвременногохранилища ';

                // v8 свойства глобального контекста ==> built_in
                var v8_global_context_property =
                    'wsссылки библиотекакартинок библиотекамакетовоформлениякомпоновкиданных библиотекастилей бизнеспроцессы ' +
                    'внешниеисточникиданных внешниеобработки внешниеотчеты встроенныепокупки главныйинтерфейс главныйстиль ' +
                    'документы доставляемыеуведомления журналыдокументов задачи информацияобинтернетсоединении использованиерабочейдаты ' +
                    'историяработыпользователя константы критерииотбора метаданные обработки отображениерекламы отправкадоставляемыхуведомлений ' +
                    'отчеты панельзадачос параметрзапуска параметрысеанса перечисления планывидоврасчета планывидовхарактеристик ' +
                    'планыобмена планысчетов полнотекстовыйпоиск пользователиинформационнойбазы последовательности проверкавстроенныхпокупок ' +
                    'рабочаядата расширенияконфигурации регистрыбухгалтерии регистрынакопления регистрырасчета регистрысведений ' +
                    'регламентныезадания сериализаторxdto справочники средствагеопозиционирования средствакриптографии средствамультимедиа ' +
                    'средстваотображениярекламы средствапочты средствателефонии фабрикаxdto файловыепотоки фоновыезадания хранилищанастроек ' +
                    'хранилищевариантовотчетов хранилищенастроекданныхформ хранилищеобщихнастроек хранилищепользовательскихнастроекдинамическихсписков ' +
                    'хранилищепользовательскихнастроекотчетов хранилищесистемныхнастроек ';

                // built_in : встроенные или библиотечные объекты (константы, классы, функции)
                var BUILTIN =
                    v7_system_constants +
                    v7_global_context_methods + v8_global_context_methods +
                    v8_global_context_property;

                // v8 системные наборы значений ==> class
                var v8_system_sets_of_values =
                    'webцвета windowsцвета windowsшрифты библиотекакартинок рамкистиля символы цветастиля шрифтыстиля ';

                // v8 системные перечисления - интерфейсные ==> class
                var v8_system_enums_interface =
                    'автоматическоесохранениеданныхформывнастройках автонумерациявформе автораздвижениесерий ' +
                    'анимациядиаграммы вариантвыравниванияэлементовизаголовков вариантуправлениявысотойтаблицы ' +
                    'вертикальнаяпрокруткаформы вертикальноеположение вертикальноеположениеэлемента видгруппыформы ' +
                    'виддекорацииформы виддополненияэлементаформы видизмененияданных видкнопкиформы видпереключателя ' +
                    'видподписейкдиаграмме видполяформы видфлажка влияниеразмеранапузырекдиаграммы горизонтальноеположение ' +
                    'горизонтальноеположениеэлемента группировкаколонок группировкаподчиненныхэлементовформы ' +
                    'группыиэлементы действиеперетаскивания дополнительныйрежимотображения допустимыедействияперетаскивания ' +
                    'интервалмеждуэлементамиформы использованиевывода использованиеполосыпрокрутки ' +
                    'используемоезначениеточкибиржевойдиаграммы историявыборапривводе источникзначенийоситочекдиаграммы ' +
                    'источникзначенияразмерапузырькадиаграммы категориягруппыкоманд максимумсерий начальноеотображениедерева ' +
                    'начальноеотображениесписка обновлениетекстаредактирования ориентациядендрограммы ориентациядиаграммы ' +
                    'ориентацияметокдиаграммы ориентацияметоксводнойдиаграммы ориентацияэлементаформы отображениевдиаграмме ' +
                    'отображениевлегендедиаграммы отображениегруппыкнопок отображениезаголовкашкалыдиаграммы ' +
                    'отображениезначенийсводнойдиаграммы отображениезначенияизмерительнойдиаграммы ' +
                    'отображениеинтерваладиаграммыганта отображениекнопки отображениекнопкивыбора отображениеобсужденийформы ' +
                    'отображениеобычнойгруппы отображениеотрицательныхзначенийпузырьковойдиаграммы отображениепанелипоиска ' +
                    'отображениеподсказки отображениепредупрежденияприредактировании отображениеразметкиполосырегулирования ' +
                    'отображениестраницформы отображениетаблицы отображениетекстазначениядиаграммыганта ' +
                    'отображениеуправленияобычнойгруппы отображениефигурыкнопки палитрацветовдиаграммы поведениеобычнойгруппы ' +
                    'поддержкамасштабадендрограммы поддержкамасштабадиаграммыганта поддержкамасштабасводнойдиаграммы ' +
                    'поисквтаблицепривводе положениезаголовкаэлементаформы положениекартинкикнопкиформы ' +
                    'положениекартинкиэлементаграфическойсхемы положениекоманднойпанелиформы положениекоманднойпанелиэлементаформы ' +
                    'положениеопорнойточкиотрисовки положениеподписейкдиаграмме положениеподписейшкалызначенийизмерительнойдиаграммы ' +
                    'положениесостоянияпросмотра положениестрокипоиска положениетекстасоединительнойлинии положениеуправленияпоиском ' +
                    'положениешкалывремени порядокотображенияточекгоризонтальнойгистограммы порядоксерийвлегендедиаграммы ' +
                    'размеркартинки расположениезаголовкашкалыдиаграммы растягиваниеповертикалидиаграммыганта ' +
                    'режимавтоотображениясостояния режимвводастроктаблицы режимвыборанезаполненного режимвыделениядаты ' +
                    'режимвыделениястрокитаблицы режимвыделениятаблицы режимизмененияразмера режимизменениясвязанногозначения ' +
                    'режимиспользованиядиалогапечати режимиспользованияпараметракоманды режиммасштабированияпросмотра ' +
                    'режимосновногоокнаклиентскогоприложения режимоткрытияокнаформы режимотображениявыделения ' +
                    'режимотображениягеографическойсхемы режимотображениязначенийсерии режимотрисовкисеткиграфическойсхемы ' +
                    'режимполупрозрачностидиаграммы режимпробеловдиаграммы режимразмещениянастранице режимредактированияколонки ' +
                    'режимсглаживаниядиаграммы режимсглаживанияиндикатора режимсписказадач сквозноевыравнивание ' +
                    'сохранениеданныхформывнастройках способзаполнениятекстазаголовкашкалыдиаграммы ' +
                    'способопределенияограничивающегозначениядиаграммы стандартнаягруппакоманд стандартноеоформление ' +
                    'статусоповещенияпользователя стильстрелки типаппроксимациилиниитрендадиаграммы типдиаграммы ' +
                    'типединицышкалывремени типимпортасерийслоягеографическойсхемы типлиниигеографическойсхемы типлиниидиаграммы ' +
                    'типмаркерагеографическойсхемы типмаркерадиаграммы типобластиоформления ' +
                    'типорганизацииисточникаданныхгеографическойсхемы типотображениясериислоягеографическойсхемы ' +
                    'типотображенияточечногообъектагеографическойсхемы типотображенияшкалыэлементалегендыгеографическойсхемы ' +
                    'типпоискаобъектовгеографическойсхемы типпроекциигеографическойсхемы типразмещенияизмерений ' +
                    'типразмещенияреквизитовизмерений типрамкиэлементауправления типсводнойдиаграммы ' +
                    'типсвязидиаграммыганта типсоединениязначенийпосериямдиаграммы типсоединенияточекдиаграммы ' +
                    'типсоединительнойлинии типстороныэлементаграфическойсхемы типформыотчета типшкалырадарнойдиаграммы ' +
                    'факторлиниитрендадиаграммы фигуракнопки фигурыграфическойсхемы фиксациявтаблице форматдняшкалывремени ' +
                    'форматкартинки ширинаподчиненныхэлементовформы ';

                // v8 системные перечисления - свойства прикладных объектов ==> class
                var v8_system_enums_objects_properties =
                    'виддвижениябухгалтерии виддвижениянакопления видпериодарегистрарасчета видсчета видточкимаршрутабизнеспроцесса ' +
                    'использованиеагрегатарегистранакопления использованиегруппиэлементов использованиережимапроведения ' +
                    'использованиесреза периодичностьагрегатарегистранакопления режимавтовремя режимзаписидокумента режимпроведениядокумента ';

                // v8 системные перечисления - планы обмена ==> class
                var v8_system_enums_exchange_plans =
                    'авторегистрацияизменений допустимыйномерсообщения отправкаэлементаданных получениеэлементаданных ';

                // v8 системные перечисления - табличный документ ==> class
                var v8_system_enums_tabular_document =
                    'использованиерасшифровкитабличногодокумента ориентациястраницы положениеитоговколоноксводнойтаблицы ' +
                    'положениеитоговстроксводнойтаблицы положениетекстаотносительнокартинки расположениезаголовкагруппировкитабличногодокумента ' +
                    'способчтениязначенийтабличногодокумента типдвустороннейпечати типзаполненияобластитабличногодокумента ' +
                    'типкурсоровтабличногодокумента типлиниирисункатабличногодокумента типлинииячейкитабличногодокумента ' +
                    'типнаправленияпереходатабличногодокумента типотображениявыделениятабличногодокумента типотображениялинийсводнойтаблицы ' +
                    'типразмещениятекстатабличногодокумента типрисункатабличногодокумента типсмещениятабличногодокумента ' +
                    'типузоратабличногодокумента типфайлатабличногодокумента точностьпечати чередованиерасположениястраниц ';

                // v8 системные перечисления - планировщик ==> class
                var v8_system_enums_sheduler =
                    'отображениевремениэлементовпланировщика ';

                // v8 системные перечисления - форматированный документ ==> class
                var v8_system_enums_formatted_document =
                    'типфайлаформатированногодокумента ';

                // v8 системные перечисления - запрос ==> class
                var v8_system_enums_query =
                    'обходрезультатазапроса типзаписизапроса ';

                // v8 системные перечисления - построитель отчета ==> class
                var v8_system_enums_report_builder =
                    'видзаполнениярасшифровкипостроителяотчета типдобавленияпредставлений типизмеренияпостроителяотчета типразмещенияитогов ';

                // v8 системные перечисления - работа с файлами ==> class
                var v8_system_enums_files =
                    'доступкфайлу режимдиалогавыборафайла режимоткрытияфайла ';

                // v8 системные перечисления - построитель запроса ==> class
                var v8_system_enums_query_builder =
                    'типизмеренияпостроителязапроса ';

                // v8 системные перечисления - анализ данных ==> class
                var v8_system_enums_data_analysis =
                    'видданныханализа методкластеризации типединицыинтервалавременианализаданных типзаполнениятаблицырезультатаанализаданных ' +
                    'типиспользованиячисловыхзначенийанализаданных типисточникаданныхпоискаассоциаций типколонкианализаданныхдереворешений ' +
                    'типколонкианализаданныхкластеризация типколонкианализаданныхобщаястатистика типколонкианализаданныхпоискассоциаций ' +
                    'типколонкианализаданныхпоискпоследовательностей типколонкимоделипрогноза типмерырасстоянияанализаданных ' +
                    'типотсеченияправилассоциации типполяанализаданных типстандартизациианализаданных типупорядочиванияправилассоциациианализаданных ' +
                    'типупорядочиванияшаблоновпоследовательностейанализаданных типупрощениядереварешений ';

                // v8 системные перечисления - xml, json, xs, dom, xdto, web-сервисы ==> class
                var v8_system_enums_xml_json_xs_dom_xdto_ws =
                    'wsнаправлениепараметра вариантxpathxs вариантзаписидатыjson вариантпростоготипаxs видгруппымоделиxs видфасетаxdto ' +
                    'действиепостроителяdom завершенностьпростоготипаxs завершенностьсоставноготипаxs завершенностьсхемыxs запрещенныеподстановкиxs ' +
                    'исключениягруппподстановкиxs категорияиспользованияатрибутаxs категорияограниченияидентичностиxs категорияограниченияпространствименxs ' +
                    'методнаследованияxs модельсодержимогоxs назначениетипаxml недопустимыеподстановкиxs обработкапробельныхсимволовxs обработкасодержимогоxs ' +
                    'ограничениезначенияxs параметрыотбораузловdom переносстрокjson позициявдокументеdom пробельныесимволыxml типатрибутаxml типзначенияjson ' +
                    'типканоническогоxml типкомпонентыxs типпроверкиxml типрезультатаdomxpath типузлаdom типузлаxml формаxml формапредставленияxs ' +
                    'форматдатыjson экранированиесимволовjson ';

                // v8 системные перечисления - система компоновки данных ==> class
                var v8_system_enums_data_composition_system =
                    'видсравнениякомпоновкиданных действиеобработкирасшифровкикомпоновкиданных направлениесортировкикомпоновкиданных ' +
                    'расположениевложенныхэлементоврезультатакомпоновкиданных расположениеитоговкомпоновкиданных расположениегруппировкикомпоновкиданных ' +
                    'расположениеполейгруппировкикомпоновкиданных расположениеполякомпоновкиданных расположениереквизитовкомпоновкиданных ' +
                    'расположениересурсовкомпоновкиданных типбухгалтерскогоостаткакомпоновкиданных типвыводатекстакомпоновкиданных ' +
                    'типгруппировкикомпоновкиданных типгруппыэлементовотборакомпоновкиданных типдополненияпериодакомпоновкиданных ' +
                    'типзаголовкаполейкомпоновкиданных типмакетагруппировкикомпоновкиданных типмакетаобластикомпоновкиданных типостаткакомпоновкиданных ' +
                    'типпериодакомпоновкиданных типразмещениятекстакомпоновкиданных типсвязинаборовданныхкомпоновкиданных типэлементарезультатакомпоновкиданных ' +
                    'расположениелегендыдиаграммыкомпоновкиданных типпримененияотборакомпоновкиданных режимотображенияэлементанастройкикомпоновкиданных ' +
                    'режимотображениянастроеккомпоновкиданных состояниеэлементанастройкикомпоновкиданных способвосстановлениянастроеккомпоновкиданных ' +
                    'режимкомпоновкирезультата использованиепараметракомпоновкиданных автопозицияресурсовкомпоновкиданных '+
                    'вариантиспользованиягруппировкикомпоновкиданных расположениересурсоввдиаграммекомпоновкиданных фиксациякомпоновкиданных ' +
                    'использованиеусловногооформлениякомпоновкиданных ';

                // v8 системные перечисления - почта ==> class
                var v8_system_enums_email =
                    'важностьинтернетпочтовогосообщения обработкатекстаинтернетпочтовогосообщения способкодированияинтернетпочтовоговложения ' +
                    'способкодированиянеasciiсимволовинтернетпочтовогосообщения типтекстапочтовогосообщения протоколинтернетпочты ' +
                    'статусразборапочтовогосообщения ';

                // v8 системные перечисления - журнал регистрации ==> class
                var v8_system_enums_logbook =
                    'режимтранзакциизаписижурналарегистрации статустранзакциизаписижурналарегистрации уровеньжурналарегистрации ';

                // v8 системные перечисления - криптография ==> class
                var v8_system_enums_cryptography =
                    'расположениехранилищасертификатовкриптографии режимвключениясертификатовкриптографии режимпроверкисертификатакриптографии ' +
                    'типхранилищасертификатовкриптографии ';

                // v8 системные перечисления - ZIP ==> class
                var v8_system_enums_zip =
                    'кодировкаименфайловвzipфайле методсжатияzip методшифрованияzip режимвосстановленияпутейфайловzip режимобработкиподкаталоговzip ' +
                    'режимсохраненияпутейzip уровеньсжатияzip ';

                // v8 системные перечисления -
                // Блокировка данных, Фоновые задания, Автоматизированное тестирование,
                // Доставляемые уведомления, Встроенные покупки, Интернет, Работа с двоичными данными ==> class
                var v8_system_enums_other =
                    'звуковоеоповещение направлениепереходакстроке позициявпотоке порядокбайтов режимблокировкиданных режимуправленияблокировкойданных ' +
                    'сервисвстроенныхпокупок состояниефоновогозадания типподписчикадоставляемыхуведомлений уровеньиспользованиязащищенногосоединенияftp ';

                // v8 системные перечисления - схема запроса ==> class
                var v8_system_enums_request_schema =
                    'направлениепорядкасхемызапроса типдополненияпериодамисхемызапроса типконтрольнойточкисхемызапроса типобъединениясхемызапроса ' +
                    'типпараметрадоступнойтаблицысхемызапроса типсоединениясхемызапроса ';

                // v8 системные перечисления - свойства объектов метаданных ==> class
                var v8_system_enums_properties_of_metadata_objects =
                    'httpметод автоиспользованиеобщегореквизита автопрефиксномеразадачи вариантвстроенногоязыка видиерархии видрегистранакопления ' +
                    'видтаблицывнешнегоисточникаданных записьдвиженийприпроведении заполнениепоследовательностей индексирование ' +
                    'использованиебазыпланавидоврасчета использованиебыстроговыбора использованиеобщегореквизита использованиеподчинения ' +
                    'использованиеполнотекстовогопоиска использованиеразделяемыхданныхобщегореквизита использованиереквизита ' +
                    'назначениеиспользованияприложения назначениерасширенияконфигурации направлениепередачи обновлениепредопределенныхданных ' +
                    'оперативноепроведение основноепредставлениевидарасчета основноепредставлениевидахарактеристики основноепредставлениезадачи ' +
                    'основноепредставлениепланаобмена основноепредставлениесправочника основноепредставлениесчета перемещениеграницыприпроведении ' +
                    'периодичностьномерабизнеспроцесса периодичностьномерадокумента периодичностьрегистрарасчета периодичностьрегистрасведений ' +
                    'повторноеиспользованиевозвращаемыхзначений полнотекстовыйпоискпривводепостроке принадлежностьобъекта проведение ' +
                    'разделениеаутентификацииобщегореквизита разделениеданныхобщегореквизита разделениерасширенийконфигурацииобщегореквизита '+
                    'режимавтонумерацииобъектов режимзаписирегистра режимиспользованиямодальности ' +
                    'режимиспользованиясинхронныхвызововрасширенийплатформыивнешнихкомпонент режимповторногоиспользованиясеансов ' +
                    'режимполученияданныхвыборапривводепостроке режимсовместимости режимсовместимостиинтерфейса ' +
                    'режимуправленияблокировкойданныхпоумолчанию сериикодовпланавидовхарактеристик сериикодовпланасчетов ' +
                    'сериикодовсправочника созданиепривводе способвыбора способпоискастрокипривводепостроке способредактирования ' +
                    'типданныхтаблицывнешнегоисточникаданных типкодапланавидоврасчета типкодасправочника типмакета типномерабизнеспроцесса ' +
                    'типномерадокумента типномеразадачи типформы удалениедвижений ';

                // v8 системные перечисления - разные ==> class
                var v8_system_enums_differents =
                    'важностьпроблемыприменениярасширенияконфигурации вариантинтерфейсаклиентскогоприложения вариантмасштабаформклиентскогоприложения ' +
                    'вариантосновногошрифтаклиентскогоприложения вариантстандартногопериода вариантстандартнойдатыначала видграницы видкартинки ' +
                    'видотображенияполнотекстовогопоиска видрамки видсравнения видцвета видчисловогозначения видшрифта допустимаядлина допустимыйзнак ' +
                    'использованиеbyteordermark использованиеметаданныхполнотекстовогопоиска источникрасширенийконфигурации клавиша кодвозвратадиалога ' +
                    'кодировкаxbase кодировкатекста направлениепоиска направлениесортировки обновлениепредопределенныхданных обновлениеприизмененииданных ' +
                    'отображениепанелиразделов проверказаполнения режимдиалогавопрос режимзапускаклиентскогоприложения режимокругления режимоткрытияформприложения ' +
                    'режимполнотекстовогопоиска скоростьклиентскогосоединения состояниевнешнегоисточникаданных состояниеобновленияконфигурациибазыданных ' +
                    'способвыборасертификатаwindows способкодированиястроки статуссообщения типвнешнейкомпоненты типплатформы типповеденияклавишиenter ' +
                    'типэлементаинформацииовыполненииобновленияконфигурациибазыданных уровеньизоляциитранзакций хешфункция частидаты';

                // class: встроенные наборы значений, системные перечисления (содержат дочерние значения, обращения к которым через разыменование)
                var CLASS =
                    v8_system_sets_of_values +
                    v8_system_enums_interface +
                    v8_system_enums_objects_properties +
                    v8_system_enums_exchange_plans +
                    v8_system_enums_tabular_document +
                    v8_system_enums_sheduler +
                    v8_system_enums_formatted_document +
                    v8_system_enums_query +
                    v8_system_enums_report_builder +
                    v8_system_enums_files +
                    v8_system_enums_query_builder +
                    v8_system_enums_data_analysis +
                    v8_system_enums_xml_json_xs_dom_xdto_ws +
                    v8_system_enums_data_composition_system +
                    v8_system_enums_email +
                    v8_system_enums_logbook +
                    v8_system_enums_cryptography +
                    v8_system_enums_zip +
                    v8_system_enums_other +
                    v8_system_enums_request_schema +
                    v8_system_enums_properties_of_metadata_objects +
                    v8_system_enums_differents;

                // v8 общие объекты (у объектов есть конструктор, экземпляры создаются методом НОВЫЙ) ==> type
                var v8_shared_object =
                    'comобъект ftpсоединение httpзапрос httpсервисответ httpсоединение wsопределения wsпрокси xbase анализданных аннотацияxs ' +
                    'блокировкаданных буфердвоичныхданных включениеxs выражениекомпоновкиданных генераторслучайныхчисел географическаясхема ' +
                    'географическиекоординаты графическаясхема группамоделиxs данныерасшифровкикомпоновкиданных двоичныеданные дендрограмма ' +
                    'диаграмма диаграммаганта диалогвыборафайла диалогвыборацвета диалогвыборашрифта диалограсписаниярегламентногозадания ' +
                    'диалогредактированиястандартногопериода диапазон документdom документhtml документацияxs доставляемоеуведомление ' +
                    'записьdom записьfastinfoset записьhtml записьjson записьxml записьzipфайла записьданных записьтекста записьузловdom ' +
                    'запрос защищенноесоединениеopenssl значенияполейрасшифровкикомпоновкиданных извлечениетекста импортxs интернетпочта ' +
                    'интернетпочтовоесообщение интернетпочтовыйпрофиль интернетпрокси интернетсоединение информациядляприложенияxs ' +
                    'использованиеатрибутаxs использованиесобытияжурналарегистрации источникдоступныхнастроеккомпоновкиданных ' +
                    'итераторузловdom картинка квалификаторыдаты квалификаторыдвоичныхданных квалификаторыстроки квалификаторычисла ' +
                    'компоновщикмакетакомпоновкиданных компоновщикнастроеккомпоновкиданных конструктормакетаоформлениякомпоновкиданных ' +
                    'конструкторнастроеккомпоновкиданных конструкторформатнойстроки линия макеткомпоновкиданных макетобластикомпоновкиданных ' +
                    'макетоформлениякомпоновкиданных маскаxs менеджеркриптографии наборсхемxml настройкикомпоновкиданных настройкисериализацииjson ' +
                    'обработкакартинок обработкарасшифровкикомпоновкиданных обходдереваdom объявлениеатрибутаxs объявлениенотацииxs ' +
                    'объявлениеэлементаxs описаниеиспользованиясобытиядоступжурналарегистрации ' +
                    'описаниеиспользованиясобытияотказвдоступежурналарегистрации описаниеобработкирасшифровкикомпоновкиданных ' +
                    'описаниепередаваемогофайла описаниетипов определениегруппыатрибутовxs определениегруппымоделиxs ' +
                    'определениеограниченияидентичностиxs определениепростоготипаxs определениесоставноготипаxs определениетипадокументаdom ' +
                    'определенияxpathxs отборкомпоновкиданных пакетотображаемыхдокументов параметрвыбора параметркомпоновкиданных ' +
                    'параметрызаписиjson параметрызаписиxml параметрычтенияxml переопределениеxs планировщик полеанализаданных ' +
                    'полекомпоновкиданных построительdom построительзапроса построительотчета построительотчетаанализаданных ' +
                    'построительсхемxml поток потоквпамяти почта почтовоесообщение преобразованиеxsl преобразованиекканоническомуxml ' +
                    'процессорвыводарезультатакомпоновкиданныхвколлекциюзначений процессорвыводарезультатакомпоновкиданныхвтабличныйдокумент ' +
                    'процессоркомпоновкиданных разыменовательпространствименdom рамка расписаниерегламентногозадания расширенноеимяxml ' +
                    'результатчтенияданных своднаядиаграмма связьпараметравыбора связьпотипу связьпотипукомпоновкиданных сериализаторxdto ' +
                    'сертификатклиентаwindows сертификатклиентафайл сертификаткриптографии сертификатыудостоверяющихцентровwindows ' +
                    'сертификатыудостоверяющихцентровфайл сжатиеданных системнаяинформация сообщениепользователю сочетаниеклавиш ' +
                    'сравнениезначений стандартнаядатаначала стандартныйпериод схемаxml схемакомпоновкиданных табличныйдокумент ' +
                    'текстовыйдокумент тестируемоеприложение типданныхxml уникальныйидентификатор фабрикаxdto файл файловыйпоток ' +
                    'фасетдлиныxs фасетколичестваразрядовдробнойчастиxs фасетмаксимальноговключающегозначенияxs ' +
                    'фасетмаксимальногоисключающегозначенияxs фасетмаксимальнойдлиныxs фасетминимальноговключающегозначенияxs ' +
                    'фасетминимальногоисключающегозначенияxs фасетминимальнойдлиныxs фасетобразцаxs фасетобщегоколичестваразрядовxs ' +
                    'фасетперечисленияxs фасетпробельныхсимволовxs фильтрузловdom форматированнаястрока форматированныйдокумент ' +
                    'фрагментxs хешированиеданных хранилищезначения цвет чтениеfastinfoset чтениеhtml чтениеjson чтениеxml чтениеzipфайла ' +
                    'чтениеданных чтениетекста чтениеузловdom шрифт элементрезультатакомпоновкиданных ';

                // v8 универсальные коллекции значений ==> type
                var v8_universal_collection =
                    'comsafearray деревозначений массив соответствие списокзначений структура таблицазначений фиксированнаяструктура ' +
                    'фиксированноесоответствие фиксированныймассив ';

                // type : встроенные типы
                var TYPE =
                    v8_shared_object +
                    v8_universal_collection;

                // literal : примитивные типы
                var LITERAL = 'null истина ложь неопределено';

                // number : числа
                var NUMBERS = hljs.inherit(hljs.NUMBER_MODE);

                // string : строки
                var STRINGS = {
                    className: 'string',
                    begin: '"|\\|', end: '"|$',
                    contains: [{begin: '""'}]
                };

                // number : даты
                var DATE = {
                    begin: "'", end: "'", excludeBegin: true, excludeEnd: true,
                    contains: [
                        {
                            className: 'number',
                            begin: '\\d{4}([\\.\\\\/:-]?\\d{2}){0,5}'
                        }
                    ]
                };

                // comment : комментарии
                var COMMENTS = hljs.inherit(hljs.C_LINE_COMMENT_MODE);

                // meta : инструкции препроцессора, директивы компиляции
                var META = {
                    className: 'meta',

                    begin: '#|&', end: '$',
                    keywords: {
                        $pattern: UNDERSCORE_IDENT_RE,
                        'meta-keyword': KEYWORD + METAKEYWORD
                    },
                    contains: [
                        COMMENTS
                    ]
                };

                // symbol : метка goto
                var SYMBOL = {
                    className: 'symbol',
                    begin: '~', end: ';|:', excludeEnd: true
                };

                // function : объявление процедур и функций
                var FUNCTION = {
                    className: 'function',
                    variants: [
                        {begin: 'процедура|функция', end: '\\)', keywords: 'процедура функция'},
                        {begin: 'конецпроцедуры|конецфункции', keywords: 'конецпроцедуры конецфункции'}
                    ],
                    contains: [
                        {
                            begin: '\\(', end: '\\)', endsParent : true,
                            contains: [
                                {
                                    className: 'params',
                                    begin: UNDERSCORE_IDENT_RE, end: ',', excludeEnd: true, endsWithParent: true,
                                    keywords: {
                                        $pattern: UNDERSCORE_IDENT_RE,
                                        keyword: 'знач',
                                        literal: LITERAL
                                    },
                                    contains: [
                                        NUMBERS,
                                        STRINGS,
                                        DATE
                                    ]
                                },
                                COMMENTS
                            ]
                        },
                        hljs.inherit(hljs.TITLE_MODE, {begin: UNDERSCORE_IDENT_RE})
                    ]
                };

                return {
                    name: '1C:Enterprise',
                    case_insensitive: true,
                    keywords: {
                        $pattern: UNDERSCORE_IDENT_RE,
                        keyword: KEYWORD,
                        built_in: BUILTIN,
                        class: CLASS,
                        type: TYPE,
                        literal: LITERAL
                    },
                    contains: [
                        META,
                        FUNCTION,
                        COMMENTS,
                        SYMBOL,
                        NUMBERS,
                        STRINGS,
                        DATE
                    ]
                };
            }

            module.exports = _1c;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/abnf.js":
        /*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/abnf.js ***!
  \*********************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: Augmented Backus-Naur Form
Author: Alex McKibben <alex@nullscope.net>
Website: https://tools.ietf.org/html/rfc5234
Audit: 2020
*/

            /** @type LanguageFn */
            function abnf(hljs) {
                const regexes = {
                    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,
                    unexpectedChars: /[!@#$^&',?+~`|:]/
                };

                const keywords = [
                    "ALPHA",
                    "BIT",
                    "CHAR",
                    "CR",
                    "CRLF",
                    "CTL",
                    "DIGIT",
                    "DQUOTE",
                    "HEXDIG",
                    "HTAB",
                    "LF",
                    "LWSP",
                    "OCTET",
                    "SP",
                    "VCHAR",
                    "WSP"
                ];

                const commentMode = hljs.COMMENT(/;/, /$/);

                const terminalBinaryMode = {
                    className: "symbol",
                    begin: /%b[0-1]+(-[0-1]+|(\.[0-1]+)+){0,1}/
                };

                const terminalDecimalMode = {
                    className: "symbol",
                    begin: /%d[0-9]+(-[0-9]+|(\.[0-9]+)+){0,1}/
                };

                const terminalHexadecimalMode = {
                    className: "symbol",
                    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\.[0-9A-F]+)+){0,1}/
                };

                const caseSensitivityIndicatorMode = {
                    className: "symbol",
                    begin: /%[si]/
                };

                const ruleDeclarationMode = {
                    className: "attribute",
                    begin: concat(regexes.ruleDeclaration, /(?=\s*=)/)
                };

                return {
                    name: 'Augmented Backus-Naur Form',
                    illegal: regexes.unexpectedChars,
                    keywords: keywords,
                    contains: [
                        ruleDeclarationMode,
                        commentMode,
                        terminalBinaryMode,
                        terminalDecimalMode,
                        terminalHexadecimalMode,
                        caseSensitivityIndicatorMode,
                        hljs.QUOTE_STRING_MODE,
                        hljs.NUMBER_MODE
                    ]
                };
            }

            module.exports = abnf;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/accesslog.js":
        /*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/accesslog.js ***!
  \**************************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /**
             * Any of the passed expresssions may match
             *
             * Creates a huge this | this | that | that match
             * @param {(RegExp | string)[] } args
             * @returns {string}
             */
            function either(...args) {
                const joined = '(' + args.map((x) => source(x)).join("|") + ")";
                return joined;
            }

            /*
 Language: Apache Access Log
 Author: Oleg Efimov <efimovov@gmail.com>
 Description: Apache/Nginx Access Logs
 Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog
 Audit: 2020
 */

            /** @type LanguageFn */
            function accesslog(_hljs) {
                // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods
                const HTTP_VERBS = [
                    "GET",
                    "POST",
                    "HEAD",
                    "PUT",
                    "DELETE",
                    "CONNECT",
                    "OPTIONS",
                    "PATCH",
                    "TRACE"
                ];
                return {
                    name: 'Apache Access Log',
                    contains: [
                        // IP
                        {
                            className: 'number',
                            begin: /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?\b/,
                            relevance: 5
                        },
                        // Other numbers
                        {
                            className: 'number',
                            begin: /\b\d+\b/,
                            relevance: 0
                        },
                        // Requests
                        {
                            className: 'string',
                            begin: concat(/"/, either(...HTTP_VERBS)),
                            end: /"/,
                            keywords: HTTP_VERBS,
                            illegal: /\n/,
                            relevance: 5,
                            contains: [
                                {
                                    begin: /HTTP\/[12]\.\d'/,
                                    relevance: 5
                                }
                            ]
                        },
                        // Dates
                        {
                            className: 'string',
                            // dates must have a certain length, this prevents matching
                            // simple array accesses a[123] and [] and other common patterns
                            // found in other languages
                            begin: /\[\d[^\]\n]{8,}\]/,
                            illegal: /\n/,
                            relevance: 1
                        },
                        {
                            className: 'string',
                            begin: /\[/,
                            end: /\]/,
                            illegal: /\n/,
                            relevance: 0
                        },
                        // User agent / relevance boost
                        {
                            className: 'string',
                            begin: /"Mozilla\/\d\.\d \(/,
                            end: /"/,
                            illegal: /\n/,
                            relevance: 3
                        },
                        // Strings
                        {
                            className: 'string',
                            begin: /"/,
                            end: /"/,
                            illegal: /\n/,
                            relevance: 0
                        }
                    ]
                };
            }

            module.exports = accesslog;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/actionscript.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/actionscript.js ***!
  \*****************************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: ActionScript
Author: Alexander Myadzel <myadzel@gmail.com>
Category: scripting
Audit: 2020
*/

            /** @type LanguageFn */
            function actionscript(hljs) {
                const IDENT_RE = /[a-zA-Z_$][a-zA-Z0-9_$]*/;
                const IDENT_FUNC_RETURN_TYPE_RE = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/;

                const AS3_REST_ARG_MODE = {
                    className: 'rest_arg',
                    begin: /[.]{3}/,
                    end: IDENT_RE,
                    relevance: 10
                };

                return {
                    name: 'ActionScript',
                    aliases: [ 'as' ],
                    keywords: {
                        keyword: 'as break case catch class const continue default delete do dynamic each ' +
                            'else extends final finally for function get if implements import in include ' +
                            'instanceof interface internal is namespace native new override package private ' +
                            'protected public return set static super switch this throw try typeof use var void ' +
                            'while with',
                        literal: 'true false null undefined'
                    },
                    contains: [
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        hljs.C_NUMBER_MODE,
                        {
                            className: 'class',
                            beginKeywords: 'package',
                            end: /\{/,
                            contains: [ hljs.TITLE_MODE ]
                        },
                        {
                            className: 'class',
                            beginKeywords: 'class interface',
                            end: /\{/,
                            excludeEnd: true,
                            contains: [
                                { beginKeywords: 'extends implements' },
                                hljs.TITLE_MODE
                            ]
                        },
                        {
                            className: 'meta',
                            beginKeywords: 'import include',
                            end: /;/,
                            keywords: { 'meta-keyword': 'import include' }
                        },
                        {
                            className: 'function',
                            beginKeywords: 'function',
                            end: /[{;]/,
                            excludeEnd: true,
                            illegal: /\S/,
                            contains: [
                                hljs.TITLE_MODE,
                                {
                                    className: 'params',
                                    begin: /\(/,
                                    end: /\)/,
                                    contains: [
                                        hljs.APOS_STRING_MODE,
                                        hljs.QUOTE_STRING_MODE,
                                        hljs.C_LINE_COMMENT_MODE,
                                        hljs.C_BLOCK_COMMENT_MODE,
                                        AS3_REST_ARG_MODE
                                    ]
                                },
                                { begin: concat(/:\s*/, IDENT_FUNC_RETURN_TYPE_RE) }
                            ]
                        },
                        hljs.METHOD_GUARD
                    ],
                    illegal: /#/
                };
            }

            module.exports = actionscript;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/ada.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ada.js ***!
  \********************************************************/
        /***/ ((module) => {

            /*
Language: Ada
Author: Lars Schulna <kartoffelbrei.mit.muskatnuss@gmail.org>
Description: Ada is a general-purpose programming language that has great support for saftey critical and real-time applications.
             It has been developed by the DoD and thus has been used in military and safety-critical applications (like civil aviation).
             The first version appeared in the 80s, but it's still actively developed today with
             the newest standard being Ada2012.
*/

// We try to support full Ada2012
//
// We highlight all appearances of types, keywords, literals (string, char, number, bool)
// and titles (user defined function/procedure/package)
// CSS classes are set accordingly
//
// Languages causing problems for language detection:
// xml (broken by Foo : Bar type), elm (broken by Foo : Bar type), vbscript-html (broken by body keyword)
// sql (ada default.txt has a lot of sql keywords)

            /** @type LanguageFn */
            function ada(hljs) {
                // Regular expression for Ada numeric literals.
                // stolen form the VHDL highlighter

                // Decimal literal:
                const INTEGER_RE = '\\d(_|\\d)*';
                const EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;
                const DECIMAL_LITERAL_RE = INTEGER_RE + '(\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';

                // Based literal:
                const BASED_INTEGER_RE = '\\w+';
                const BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';

                const NUMBER_RE = '\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';

                // Identifier regex
                const ID_REGEX = '[A-Za-z](_?[A-Za-z0-9.])*';

                // bad chars, only allowed in literals
                const BAD_CHARS = `[]\\{\\}%#'"`;

                // Ada doesn't have block comments, only line comments
                const COMMENTS = hljs.COMMENT('--', '$');

                // variable declarations of the form
                // Foo : Bar := Baz;
                // where only Bar will be highlighted
                const VAR_DECLS = {
                    // TODO: These spaces are not required by the Ada syntax
                    // however, I have yet to see handwritten Ada code where
                    // someone does not put spaces around :
                    begin: '\\s+:\\s+',
                    end: '\\s*(:=|;|\\)|=>|$)',
                    // endsWithParent: true,
                    // returnBegin: true,
                    illegal: BAD_CHARS,
                    contains: [
                        {
                            // workaround to avoid highlighting
                            // named loops and declare blocks
                            beginKeywords: 'loop for declare others',
                            endsParent: true
                        },
                        {
                            // properly highlight all modifiers
                            className: 'keyword',
                            beginKeywords: 'not null constant access function procedure in out aliased exception'
                        },
                        {
                            className: 'type',
                            begin: ID_REGEX,
                            endsParent: true,
                            relevance: 0
                        }
                    ]
                };

                return {
                    name: 'Ada',
                    case_insensitive: true,
                    keywords: {
                        keyword:
                            'abort else new return abs elsif not reverse abstract end ' +
                            'accept entry select access exception of separate aliased exit or some ' +
                            'all others subtype and for out synchronized array function overriding ' +
                            'at tagged generic package task begin goto pragma terminate ' +
                            'body private then if procedure type case in protected constant interface ' +
                            'is raise use declare range delay limited record when delta loop rem while ' +
                            'digits renames with do mod requeue xor',
                        literal:
                            'True False'
                    },
                    contains: [
                        COMMENTS,
                        // strings "foobar"
                        {
                            className: 'string',
                            begin: /"/,
                            end: /"/,
                            contains: [{
                                begin: /""/,
                                relevance: 0
                            }]
                        },
                        // characters ''
                        {
                            // character literals always contain one char
                            className: 'string',
                            begin: /'.'/
                        },
                        {
                            // number literals
                            className: 'number',
                            begin: NUMBER_RE,
                            relevance: 0
                        },
                        {
                            // Attributes
                            className: 'symbol',
                            begin: "'" + ID_REGEX
                        },
                        {
                            // package definition, maybe inside generic
                            className: 'title',
                            begin: '(\\bwith\\s+)?(\\bprivate\\s+)?\\bpackage\\s+(\\bbody\\s+)?',
                            end: '(is|$)',
                            keywords: 'package body',
                            excludeBegin: true,
                            excludeEnd: true,
                            illegal: BAD_CHARS
                        },
                        {
                            // function/procedure declaration/definition
                            // maybe inside generic
                            begin: '(\\b(with|overriding)\\s+)?\\b(function|procedure)\\s+',
                            end: '(\\bis|\\bwith|\\brenames|\\)\\s*;)',
                            keywords: 'overriding function procedure with is renames return',
                            // we need to re-match the 'function' keyword, so that
                            // the title mode below matches only exactly once
                            returnBegin: true,
                            contains:
                                [
                                    COMMENTS,
                                    {
                                        // name of the function/procedure
                                        className: 'title',
                                        begin: '(\\bwith\\s+)?\\b(function|procedure)\\s+',
                                        end: '(\\(|\\s+|$)',
                                        excludeBegin: true,
                                        excludeEnd: true,
                                        illegal: BAD_CHARS
                                    },
                                    // 'self'
                                    // // parameter types
                                    VAR_DECLS,
                                    {
                                        // return type
                                        className: 'type',
                                        begin: '\\breturn\\s+',
                                        end: '(\\s+|;|$)',
                                        keywords: 'return',
                                        excludeBegin: true,
                                        excludeEnd: true,
                                        // we are done with functions
                                        endsParent: true,
                                        illegal: BAD_CHARS

                                    }
                                ]
                        },
                        {
                            // new type declarations
                            // maybe inside generic
                            className: 'type',
                            begin: '\\b(sub)?type\\s+',
                            end: '\\s+',
                            keywords: 'type',
                            excludeBegin: true,
                            illegal: BAD_CHARS
                        },

                        // see comment above the definition
                        VAR_DECLS

                        // no markup
                        // relevance boosters for small snippets
                        // {begin: '\\s*=>\\s*'},
                        // {begin: '\\s*:=\\s*'},
                        // {begin: '\\s+:=\\s+'},
                    ]
                };
            }

            module.exports = ada;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/angelscript.js":
        /*!****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/angelscript.js ***!
  \****************************************************************/
        /***/ ((module) => {

            /*
Language: AngelScript
Author: Melissa Geels <melissa@nimble.tools>
Category: scripting
Website: https://www.angelcode.com/angelscript/
*/

            /** @type LanguageFn */
            function angelscript(hljs) {
                var builtInTypeMode = {
                    className: 'built_in',
                    begin: '\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|string|ref|array|double|float|auto|dictionary)'
                };

                var objectHandleMode = {
                    className: 'symbol',
                    begin: '[a-zA-Z0-9_]+@'
                };

                var genericMode = {
                    className: 'keyword',
                    begin: '<', end: '>',
                    contains: [ builtInTypeMode, objectHandleMode ]
                };

                builtInTypeMode.contains = [ genericMode ];
                objectHandleMode.contains = [ genericMode ];

                return {
                    name: 'AngelScript',
                    aliases: ['asc'],

                    keywords:
                        'for in|0 break continue while do|0 return if else case switch namespace is cast ' +
                        'or and xor not get|0 in inout|10 out override set|0 private public const default|0 ' +
                        'final shared external mixin|10 enum typedef funcdef this super import from interface ' +
                        'abstract|0 try catch protected explicit property',

                    // avoid close detection with C# and JS
                    illegal: '(^using\\s+[A-Za-z0-9_\\.]+;$|\\bfunction\\s*[^\\(])',

                    contains: [
                        { // 'strings'
                            className: 'string',
                            begin: '\'', end: '\'',
                            illegal: '\\n',
                            contains: [ hljs.BACKSLASH_ESCAPE ],
                            relevance: 0
                        },

                        // """heredoc strings"""
                        {
                            className: 'string',
                            begin: '"""', end: '"""'
                        },

                        { // "strings"
                            className: 'string',
                            begin: '"', end: '"',
                            illegal: '\\n',
                            contains: [ hljs.BACKSLASH_ESCAPE ],
                            relevance: 0
                        },

                        hljs.C_LINE_COMMENT_MODE, // single-line comments
                        hljs.C_BLOCK_COMMENT_MODE, // comment blocks

                        { // metadata
                            className: 'string',
                            begin: '^\\s*\\[', end: '\\]',
                        },

                        { // interface or namespace declaration
                            beginKeywords: 'interface namespace', end: /\{/,
                            illegal: '[;.\\-]',
                            contains: [
                                { // interface or namespace name
                                    className: 'symbol',
                                    begin: '[a-zA-Z0-9_]+'
                                }
                            ]
                        },

                        { // class declaration
                            beginKeywords: 'class', end: /\{/,
                            illegal: '[;.\\-]',
                            contains: [
                                { // class name
                                    className: 'symbol',
                                    begin: '[a-zA-Z0-9_]+',
                                    contains: [
                                        {
                                            begin: '[:,]\\s*',
                                            contains: [
                                                {
                                                    className: 'symbol',
                                                    begin: '[a-zA-Z0-9_]+'
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },

                        builtInTypeMode, // built-in types
                        objectHandleMode, // object handles

                        { // literals
                            className: 'literal',
                            begin: '\\b(null|true|false)'
                        },

                        { // numbers
                            className: 'number',
                            relevance: 0,
                            begin: '(-?)(\\b0[xXbBoOdD][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?f?|\\.\\d+f?)([eE][-+]?\\d+f?)?)'
                        }
                    ]
                };
            }

            module.exports = angelscript;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/apache.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/apache.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
Language: Apache config
Author: Ruslan Keba <rukeba@gmail.com>
Contributors: Ivan Sagalaev <maniac@softwaremaniacs.org>
Website: https://httpd.apache.org
Description: language definition for Apache configuration files (httpd.conf & .htaccess)
Category: common, config
Audit: 2020
*/

            /** @type LanguageFn */
            function apache(hljs) {
                const NUMBER_REF = {
                    className: 'number',
                    begin: /[$%]\d+/
                };
                const NUMBER = {
                    className: 'number',
                    begin: /\d+/
                };
                const IP_ADDRESS = {
                    className: "number",
                    begin: /\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?/
                };
                const PORT_NUMBER = {
                    className: "number",
                    begin: /:\d{1,5}/
                };
                return {
                    name: 'Apache config',
                    aliases: [ 'apacheconf' ],
                    case_insensitive: true,
                    contains: [
                        hljs.HASH_COMMENT_MODE,
                        {
                            className: 'section',
                            begin: /<\/?/,
                            end: />/,
                            contains: [
                                IP_ADDRESS,
                                PORT_NUMBER,
                                // low relevance prevents us from claming XML/HTML where this rule would
                                // match strings inside of XML tags
                                hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 })
                            ]
                        },
                        {
                            className: 'attribute',
                            begin: /\w+/,
                            relevance: 0,
                            // keywords aren’t needed for highlighting per se, they only boost relevance
                            // for a very generally defined mode (starts with a word, ends with line-end
                            keywords: {
                                nomarkup:
                                    'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +
                                    'sethandler errordocument loadmodule options header listen serverroot ' +
                                    'servername'
                            },
                            starts: {
                                end: /$/,
                                relevance: 0,
                                keywords: { literal: 'on off all deny allow' },
                                contains: [
                                    {
                                        className: 'meta',
                                        begin: /\s\[/,
                                        end: /\]$/
                                    },
                                    {
                                        className: 'variable',
                                        begin: /[\$%]\{/,
                                        end: /\}/,
                                        contains: [
                                            'self',
                                            NUMBER_REF
                                        ]
                                    },
                                    IP_ADDRESS,
                                    NUMBER,
                                    hljs.QUOTE_STRING_MODE
                                ]
                            }
                        }
                    ],
                    illegal: /\S/
                };
            }

            module.exports = apache;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/applescript.js":
        /*!****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/applescript.js ***!
  \****************************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /**
             * Any of the passed expresssions may match
             *
             * Creates a huge this | this | that | that match
             * @param {(RegExp | string)[] } args
             * @returns {string}
             */
            function either(...args) {
                const joined = '(' + args.map((x) => source(x)).join("|") + ")";
                return joined;
            }

            /*
Language: AppleScript
Authors: Nathan Grigg <nathan@nathanamy.org>, Dr. Drang <drdrang@gmail.com>
Category: scripting
Website: https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html
Audit: 2020
*/

            /** @type LanguageFn */
            function applescript(hljs) {
                const STRING = hljs.inherit(
                    hljs.QUOTE_STRING_MODE, {
                        illegal: null
                    });
                const PARAMS = {
                    className: 'params',
                    begin: /\(/,
                    end: /\)/,
                    contains: [
                        'self',
                        hljs.C_NUMBER_MODE,
                        STRING
                    ]
                };
                const COMMENT_MODE_1 = hljs.COMMENT(/--/, /$/);
                const COMMENT_MODE_2 = hljs.COMMENT(
                    /\(\*/,
                    /\*\)/,
                    {
                        contains: [
                            'self', // allow nesting
                            COMMENT_MODE_1
                        ]
                    }
                );
                const COMMENTS = [
                    COMMENT_MODE_1,
                    COMMENT_MODE_2,
                    hljs.HASH_COMMENT_MODE
                ];

                const KEYWORD_PATTERNS = [
                    /apart from/,
                    /aside from/,
                    /instead of/,
                    /out of/,
                    /greater than/,
                    /isn't|(doesn't|does not) (equal|come before|come after|contain)/,
                    /(greater|less) than( or equal)?/,
                    /(starts?|ends|begins?) with/,
                    /contained by/,
                    /comes (before|after)/,
                    /a (ref|reference)/,
                    /POSIX (file|path)/,
                    /(date|time) string/,
                    /quoted form/
                ];

                const BUILT_IN_PATTERNS = [
                    /clipboard info/,
                    /the clipboard/,
                    /info for/,
                    /list (disks|folder)/,
                    /mount volume/,
                    /path to/,
                    /(close|open for) access/,
                    /(get|set) eof/,
                    /current date/,
                    /do shell script/,
                    /get volume settings/,
                    /random number/,
                    /set volume/,
                    /system attribute/,
                    /system info/,
                    /time to GMT/,
                    /(load|run|store) script/,
                    /scripting components/,
                    /ASCII (character|number)/,
                    /localized string/,
                    /choose (application|color|file|file name|folder|from list|remote application|URL)/,
                    /display (alert|dialog)/
                ];

                return {
                    name: 'AppleScript',
                    aliases: [ 'osascript' ],
                    keywords: {
                        keyword:
                            'about above after against and around as at back before beginning ' +
                            'behind below beneath beside between but by considering ' +
                            'contain contains continue copy div does eighth else end equal ' +
                            'equals error every exit fifth first for fourth from front ' +
                            'get given global if ignoring in into is it its last local me ' +
                            'middle mod my ninth not of on onto or over prop property put ref ' +
                            'reference repeat returning script second set seventh since ' +
                            'sixth some tell tenth that the|0 then third through thru ' +
                            'timeout times to transaction try until where while whose with ' +
                            'without',
                        literal:
                            'AppleScript false linefeed return pi quote result space tab true',
                        built_in:
                            'alias application boolean class constant date file integer list ' +
                            'number real record string text ' +
                            'activate beep count delay launch log offset read round ' +
                            'run say summarize write ' +
                            'character characters contents day frontmost id item length ' +
                            'month name paragraph paragraphs rest reverse running time version ' +
                            'weekday word words year'
                    },
                    contains: [
                        STRING,
                        hljs.C_NUMBER_MODE,
                        {
                            className: 'built_in',
                            begin: concat(
                                /\b/,
                                either(...BUILT_IN_PATTERNS),
                                /\b/
                            )
                        },
                        {
                            className: 'built_in',
                            begin: /^\s*return\b/
                        },
                        {
                            className: 'literal',
                            begin:
                                /\b(text item delimiters|current application|missing value)\b/
                        },
                        {
                            className: 'keyword',
                            begin: concat(
                                /\b/,
                                either(...KEYWORD_PATTERNS),
                                /\b/
                            )
                        },
                        {
                            beginKeywords: 'on',
                            illegal: /[${=;\n]/,
                            contains: [
                                hljs.UNDERSCORE_TITLE_MODE,
                                PARAMS
                            ]
                        },
                        ...COMMENTS
                    ],
                    illegal: /\/\/|->|=>|\[\[/
                };
            }

            module.exports = applescript;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/arcade.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/arcade.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
 Language: ArcGIS Arcade
 Category: scripting
 Author: John Foster <jfoster@esri.com>
 Website: https://developers.arcgis.com/arcade/
 Description: ArcGIS Arcade is an expression language used in many Esri ArcGIS products such as Pro, Online, Server, Runtime, JavaScript, and Python
*/

            /** @type LanguageFn */
            function arcade(hljs) {
                const IDENT_RE = '[A-Za-z_][0-9A-Za-z_]*';
                const KEYWORDS = {
                    keyword:
                        'if for while var new function do return void else break',
                    literal:
                        'BackSlash DoubleQuote false ForwardSlash Infinity NaN NewLine null PI SingleQuote Tab TextFormatting true undefined',
                    built_in:
                        'Abs Acos Angle Attachments Area AreaGeodetic Asin Atan Atan2 Average Bearing Boolean Buffer BufferGeodetic ' +
                        'Ceil Centroid Clip Console Constrain Contains Cos Count Crosses Cut Date DateAdd ' +
                        'DateDiff Day Decode DefaultValue Dictionary Difference Disjoint Distance DistanceGeodetic Distinct ' +
                        'DomainCode DomainName Equals Exp Extent Feature FeatureSet FeatureSetByAssociation FeatureSetById FeatureSetByPortalItem ' +
                        'FeatureSetByRelationshipName FeatureSetByTitle FeatureSetByUrl Filter First Floor Geometry GroupBy Guid HasKey Hour IIf IndexOf ' +
                        'Intersection Intersects IsEmpty IsNan IsSelfIntersecting Length LengthGeodetic Log Max Mean Millisecond Min Minute Month ' +
                        'MultiPartToSinglePart Multipoint NextSequenceValue Now Number OrderBy Overlaps Point Polygon ' +
                        'Polyline Portal Pow Random Relate Reverse RingIsClockWise Round Second SetGeometry Sin Sort Sqrt Stdev Sum ' +
                        'SymmetricDifference Tan Text Timestamp Today ToLocal Top Touches ToUTC TrackCurrentTime ' +
                        'TrackGeometryWindow TrackIndex TrackStartTime TrackWindow TypeOf Union UrlEncode Variance ' +
                        'Weekday When Within Year '
                };
                const SYMBOL = {
                    className: 'symbol',
                    begin: '\\$[datastore|feature|layer|map|measure|sourcefeature|sourcelayer|targetfeature|targetlayer|value|view]+'
                };
                const NUMBER = {
                    className: 'number',
                    variants: [
                        {
                            begin: '\\b(0[bB][01]+)'
                        },
                        {
                            begin: '\\b(0[oO][0-7]+)'
                        },
                        {
                            begin: hljs.C_NUMBER_RE
                        }
                    ],
                    relevance: 0
                };
                const SUBST = {
                    className: 'subst',
                    begin: '\\$\\{',
                    end: '\\}',
                    keywords: KEYWORDS,
                    contains: [] // defined later
                };
                const TEMPLATE_STRING = {
                    className: 'string',
                    begin: '`',
                    end: '`',
                    contains: [
                        hljs.BACKSLASH_ESCAPE,
                        SUBST
                    ]
                };
                SUBST.contains = [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    TEMPLATE_STRING,
                    NUMBER,
                    hljs.REGEXP_MODE
                ];
                const PARAMS_CONTAINS = SUBST.contains.concat([
                    hljs.C_BLOCK_COMMENT_MODE,
                    hljs.C_LINE_COMMENT_MODE
                ]);

                return {
                    name: 'ArcGIS Arcade',
                    keywords: KEYWORDS,
                    contains: [
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        TEMPLATE_STRING,
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        SYMBOL,
                        NUMBER,
                        { // object attr container
                            begin: /[{,]\s*/,
                            relevance: 0,
                            contains: [{
                                begin: IDENT_RE + '\\s*:',
                                returnBegin: true,
                                relevance: 0,
                                contains: [{
                                    className: 'attr',
                                    begin: IDENT_RE,
                                    relevance: 0
                                }]
                            }]
                        },
                        { // "value" container
                            begin: '(' + hljs.RE_STARTERS_RE + '|\\b(return)\\b)\\s*',
                            keywords: 'return',
                            contains: [
                                hljs.C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE,
                                hljs.REGEXP_MODE,
                                {
                                    className: 'function',
                                    begin: '(\\(.*?\\)|' + IDENT_RE + ')\\s*=>',
                                    returnBegin: true,
                                    end: '\\s*=>',
                                    contains: [{
                                        className: 'params',
                                        variants: [
                                            {
                                                begin: IDENT_RE
                                            },
                                            {
                                                begin: /\(\s*\)/
                                            },
                                            {
                                                begin: /\(/,
                                                end: /\)/,
                                                excludeBegin: true,
                                                excludeEnd: true,
                                                keywords: KEYWORDS,
                                                contains: PARAMS_CONTAINS
                                            }
                                        ]
                                    }]
                                }
                            ],
                            relevance: 0
                        },
                        {
                            className: 'function',
                            beginKeywords: 'function',
                            end: /\{/,
                            excludeEnd: true,
                            contains: [
                                hljs.inherit(hljs.TITLE_MODE, {
                                    begin: IDENT_RE
                                }),
                                {
                                    className: 'params',
                                    begin: /\(/,
                                    end: /\)/,
                                    excludeBegin: true,
                                    excludeEnd: true,
                                    contains: PARAMS_CONTAINS
                                }
                            ],
                            illegal: /\[|%/
                        },
                        {
                            begin: /\$[(.]/
                        }
                    ],
                    illegal: /#(?!!)/
                };
            }

            module.exports = arcade;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/arduino.js":
        /*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/arduino.js ***!
  \************************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function lookahead(re) {
                return concat('(?=', re, ')');
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function optional(re) {
                return concat('(', re, ')?');
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: C++
Category: common, system
Website: https://isocpp.org
*/

            /** @type LanguageFn */
            function cPlusPlus(hljs) {
                // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does
                // not include such support nor can we be sure all the grammars depending
                // on it would desire this behavior
                const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {
                    contains: [
                        {
                            begin: /\\\n/
                        }
                    ]
                });
                const DECLTYPE_AUTO_RE = 'decltype\\(auto\\)';
                const NAMESPACE_RE = '[a-zA-Z_]\\w*::';
                const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';
                const FUNCTION_TYPE_RE = '(' +
                    DECLTYPE_AUTO_RE + '|' +
                    optional(NAMESPACE_RE) +
                    '[a-zA-Z_]\\w*' + optional(TEMPLATE_ARGUMENT_RE) +
                    ')';
                const CPP_PRIMITIVE_TYPES = {
                    className: 'keyword',
                    begin: '\\b[a-z\\d_]*_t\\b'
                };

                // https://en.cppreference.com/w/cpp/language/escape
                // \\ \x \xFF \u2837 \u00323747 \374
                const CHARACTER_ESCAPES = '\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)';
                const STRINGS = {
                    className: 'string',
                    variants: [
                        {
                            begin: '(u8?|U|L)?"',
                            end: '"',
                            illegal: '\\n',
                            contains: [ hljs.BACKSLASH_ESCAPE ]
                        },
                        {
                            begin: '(u8?|U|L)?\'(' + CHARACTER_ESCAPES + "|.)",
                            end: '\'',
                            illegal: '.'
                        },
                        hljs.END_SAME_AS_BEGIN({
                            begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
                            end: /\)([^()\\ ]{0,16})"/
                        })
                    ]
                };

                const NUMBERS = {
                    className: 'number',
                    variants: [
                        {
                            begin: '\\b(0b[01\']+)'
                        },
                        {
                            begin: '(-?)\\b([\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'
                        },
                        {
                            begin: '(-?)(\\b0[xX][a-fA-F0-9\']+|(\\b[\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)([eE][-+]?[\\d\']+)?)'
                        }
                    ],
                    relevance: 0
                };

                const PREPROCESSOR = {
                    className: 'meta',
                    begin: /#\s*[a-z]+\b/,
                    end: /$/,
                    keywords: {
                        'meta-keyword':
                            'if else elif endif define undef warning error line ' +
                            'pragma _Pragma ifdef ifndef include'
                    },
                    contains: [
                        {
                            begin: /\\\n/,
                            relevance: 0
                        },
                        hljs.inherit(STRINGS, {
                            className: 'meta-string'
                        }),
                        {
                            className: 'meta-string',
                            begin: /<.*?>/
                        },
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE
                    ]
                };

                const TITLE_MODE = {
                    className: 'title',
                    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,
                    relevance: 0
                };

                const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\s*\\(';

                const COMMON_CPP_HINTS = [
                    'asin',
                    'atan2',
                    'atan',
                    'calloc',
                    'ceil',
                    'cosh',
                    'cos',
                    'exit',
                    'exp',
                    'fabs',
                    'floor',
                    'fmod',
                    'fprintf',
                    'fputs',
                    'free',
                    'frexp',
                    'auto_ptr',
                    'deque',
                    'list',
                    'queue',
                    'stack',
                    'vector',
                    'map',
                    'set',
                    'pair',
                    'bitset',
                    'multiset',
                    'multimap',
                    'unordered_set',
                    'fscanf',
                    'future',
                    'isalnum',
                    'isalpha',
                    'iscntrl',
                    'isdigit',
                    'isgraph',
                    'islower',
                    'isprint',
                    'ispunct',
                    'isspace',
                    'isupper',
                    'isxdigit',
                    'tolower',
                    'toupper',
                    'labs',
                    'ldexp',
                    'log10',
                    'log',
                    'malloc',
                    'realloc',
                    'memchr',
                    'memcmp',
                    'memcpy',
                    'memset',
                    'modf',
                    'pow',
                    'printf',
                    'putchar',
                    'puts',
                    'scanf',
                    'sinh',
                    'sin',
                    'snprintf',
                    'sprintf',
                    'sqrt',
                    'sscanf',
                    'strcat',
                    'strchr',
                    'strcmp',
                    'strcpy',
                    'strcspn',
                    'strlen',
                    'strncat',
                    'strncmp',
                    'strncpy',
                    'strpbrk',
                    'strrchr',
                    'strspn',
                    'strstr',
                    'tanh',
                    'tan',
                    'unordered_map',
                    'unordered_multiset',
                    'unordered_multimap',
                    'priority_queue',
                    'make_pair',
                    'array',
                    'shared_ptr',
                    'abort',
                    'terminate',
                    'abs',
                    'acos',
                    'vfprintf',
                    'vprintf',
                    'vsprintf',
                    'endl',
                    'initializer_list',
                    'unique_ptr',
                    'complex',
                    'imaginary',
                    'std',
                    'string',
                    'wstring',
                    'cin',
                    'cout',
                    'cerr',
                    'clog',
                    'stdin',
                    'stdout',
                    'stderr',
                    'stringstream',
                    'istringstream',
                    'ostringstream'
                ];

                const CPP_KEYWORDS = {
                    keyword: 'int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof ' +
                        'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +
                        'unsigned long volatile static protected bool template mutable if public friend ' +
                        'do goto auto void enum else break extern using asm case typeid wchar_t ' +
                        'short reinterpret_cast|10 default double register explicit signed typename try this ' +
                        'switch continue inline delete alignas alignof constexpr consteval constinit decltype ' +
                        'concept co_await co_return co_yield requires ' +
                        'noexcept static_assert thread_local restrict final override ' +
                        'atomic_bool atomic_char atomic_schar ' +
                        'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +
                        'atomic_ullong new throw return ' +
                        'and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq',
                    built_in: '_Bool _Complex _Imaginary',
                    _relevance_hints: COMMON_CPP_HINTS,
                    literal: 'true false nullptr NULL'
                };

                const FUNCTION_DISPATCH = {
                    className: "function.dispatch",
                    relevance: 0,
                    keywords: CPP_KEYWORDS,
                    begin: concat(
                        /\b/,
                        /(?!decltype)/,
                        /(?!if)/,
                        /(?!for)/,
                        /(?!while)/,
                        hljs.IDENT_RE,
                        lookahead(/\s*\(/))
                };

                const EXPRESSION_CONTAINS = [
                    FUNCTION_DISPATCH,
                    PREPROCESSOR,
                    CPP_PRIMITIVE_TYPES,
                    C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    NUMBERS,
                    STRINGS
                ];


                const EXPRESSION_CONTEXT = {
                    // This mode covers expression context where we can't expect a function
                    // definition and shouldn't highlight anything that looks like one:
                    // `return some()`, `else if()`, `(x*sum(1, 2))`
                    variants: [
                        {
                            begin: /=/,
                            end: /;/
                        },
                        {
                            begin: /\(/,
                            end: /\)/
                        },
                        {
                            beginKeywords: 'new throw return else',
                            end: /;/
                        }
                    ],
                    keywords: CPP_KEYWORDS,
                    contains: EXPRESSION_CONTAINS.concat([
                        {
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            contains: EXPRESSION_CONTAINS.concat([ 'self' ]),
                            relevance: 0
                        }
                    ]),
                    relevance: 0
                };

                const FUNCTION_DECLARATION = {
                    className: 'function',
                    begin: '(' + FUNCTION_TYPE_RE + '[\\*&\\s]+)+' + FUNCTION_TITLE,
                    returnBegin: true,
                    end: /[{;=]/,
                    excludeEnd: true,
                    keywords: CPP_KEYWORDS,
                    illegal: /[^\w\s\*&:<>.]/,
                    contains: [
                        { // to prevent it from being confused as the function title
                            begin: DECLTYPE_AUTO_RE,
                            keywords: CPP_KEYWORDS,
                            relevance: 0
                        },
                        {
                            begin: FUNCTION_TITLE,
                            returnBegin: true,
                            contains: [ TITLE_MODE ],
                            relevance: 0
                        },
                        // needed because we do not have look-behind on the below rule
                        // to prevent it from grabbing the final : in a :: pair
                        {
                            begin: /::/,
                            relevance: 0
                        },
                        // initializers
                        {
                            begin: /:/,
                            endsWithParent: true,
                            contains: [
                                STRINGS,
                                NUMBERS
                            ]
                        },
                        {
                            className: 'params',
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            relevance: 0,
                            contains: [
                                C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE,
                                STRINGS,
                                NUMBERS,
                                CPP_PRIMITIVE_TYPES,
                                // Count matching parentheses.
                                {
                                    begin: /\(/,
                                    end: /\)/,
                                    keywords: CPP_KEYWORDS,
                                    relevance: 0,
                                    contains: [
                                        'self',
                                        C_LINE_COMMENT_MODE,
                                        hljs.C_BLOCK_COMMENT_MODE,
                                        STRINGS,
                                        NUMBERS,
                                        CPP_PRIMITIVE_TYPES
                                    ]
                                }
                            ]
                        },
                        CPP_PRIMITIVE_TYPES,
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        PREPROCESSOR
                    ]
                };

                return {
                    name: 'C++',
                    aliases: [
                        'cc',
                        'c++',
                        'h++',
                        'hpp',
                        'hh',
                        'hxx',
                        'cxx'
                    ],
                    keywords: CPP_KEYWORDS,
                    illegal: '</',
                    classNameAliases: {
                        "function.dispatch": "built_in"
                    },
                    contains: [].concat(
                        EXPRESSION_CONTEXT,
                        FUNCTION_DECLARATION,
                        FUNCTION_DISPATCH,
                        EXPRESSION_CONTAINS,
                        [
                            PREPROCESSOR,
                            { // containers: ie, `vector <int> rooms (9);`
                                begin: '\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<',
                                end: '>',
                                keywords: CPP_KEYWORDS,
                                contains: [
                                    'self',
                                    CPP_PRIMITIVE_TYPES
                                ]
                            },
                            {
                                begin: hljs.IDENT_RE + '::',
                                keywords: CPP_KEYWORDS
                            },
                            {
                                className: 'class',
                                beginKeywords: 'enum class struct union',
                                end: /[{;:<>=]/,
                                contains: [
                                    {
                                        beginKeywords: "final class struct"
                                    },
                                    hljs.TITLE_MODE
                                ]
                            }
                        ]),
                    exports: {
                        preprocessor: PREPROCESSOR,
                        strings: STRINGS,
                        keywords: CPP_KEYWORDS
                    }
                };
            }

            /*
Language: Arduino
Author: Stefania Mellai <s.mellai@arduino.cc>
Description: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.
Website: https://www.arduino.cc
*/

            /** @type LanguageFn */
            function arduino(hljs) {
                const ARDUINO_KW = {
                    keyword:
                        'boolean byte word String',
                    built_in:
                        'KeyboardController MouseController SoftwareSerial ' +
                        'EthernetServer EthernetClient LiquidCrystal ' +
                        'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +
                        'HttpClient RobotMotor WiFiClient GSMScanner ' +
                        'FileSystem Scheduler GSMServer YunClient YunServer ' +
                        'IPAddress GSMClient GSMModem Keyboard Ethernet ' +
                        'Console GSMBand Esplora Stepper Process ' +
                        'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +
                        'Client Server GSMPIN FileIO Bridge Serial ' +
                        'EEPROM Stream Mouse Audio Servo File Task ' +
                        'GPRS WiFi Wire TFT GSM SPI SD ',
                    _:
                        'setup loop ' +
                        'runShellCommandAsynchronously analogWriteResolution ' +
                        'retrieveCallingNumber printFirmwareVersion ' +
                        'analogReadResolution sendDigitalPortPair ' +
                        'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +
                        'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +
                        'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +
                        'beginTransmission getSignalStrength runAsynchronously ' +
                        'getAsynchronously listenOnLocalhost getCurrentCarrier ' +
                        'readAccelerometer messageAvailable sendDigitalPorts ' +
                        'lineFollowConfig countryNameWrite runShellCommand ' +
                        'readStringUntil rewindDirectory readTemperature ' +
                        'setClockDivider readLightSensor endTransmission ' +
                        'analogReference detachInterrupt countryNameRead ' +
                        'attachInterrupt encryptionType readBytesUntil ' +
                        'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +
                        'userNameWrite readJoystickY readJoystickX mouseReleased ' +
                        'openNextFile scanNetworks noInterrupts digitalWrite ' +
                        'beginSpeaker mousePressed isActionDone mouseDragged ' +
                        'displayLogos noAutoscroll addParameter remoteNumber ' +
                        'getModifiers keyboardRead userNameRead waitContinue ' +
                        'processInput parseCommand printVersion readNetworks ' +
                        'writeMessage blinkVersion cityNameRead readMessage ' +
                        'setDataMode parsePacket isListening setBitOrder ' +
                        'beginPacket isDirectory motorsWrite drawCompass ' +
                        'digitalRead clearScreen serialEvent rightToLeft ' +
                        'setTextSize leftToRight requestFrom keyReleased ' +
                        'compassRead analogWrite interrupts WiFiServer ' +
                        'disconnect playMelody parseFloat autoscroll ' +
                        'getPINUsed setPINUsed setTimeout sendAnalog ' +
                        'readSlider analogRead beginWrite createChar ' +
                        'motorsStop keyPressed tempoWrite readButton ' +
                        'subnetMask debugPrint macAddress writeGreen ' +
                        'randomSeed attachGPRS readString sendString ' +
                        'remotePort releaseAll mouseMoved background ' +
                        'getXChange getYChange answerCall getResult ' +
                        'voiceCall endPacket constrain getSocket writeJSON ' +
                        'getButton available connected findUntil readBytes ' +
                        'exitValue readGreen writeBlue startLoop IPAddress ' +
                        'isPressed sendSysex pauseMode gatewayIP setCursor ' +
                        'getOemKey tuneWrite noDisplay loadImage switchPIN ' +
                        'onRequest onReceive changePIN playFile noBuffer ' +
                        'parseInt overflow checkPIN knobRead beginTFT ' +
                        'bitClear updateIR bitWrite position writeRGB ' +
                        'highByte writeRed setSpeed readBlue noStroke ' +
                        'remoteIP transfer shutdown hangCall beginSMS ' +
                        'endWrite attached maintain noCursor checkReg ' +
                        'checkPUK shiftOut isValid shiftIn pulseIn ' +
                        'connect println localIP pinMode getIMEI ' +
                        'display noBlink process getBand running beginSD ' +
                        'drawBMP lowByte setBand release bitRead prepare ' +
                        'pointTo readRed setMode noFill remove listen ' +
                        'stroke detach attach noTone exists buffer ' +
                        'height bitSet circle config cursor random ' +
                        'IRread setDNS endSMS getKey micros ' +
                        'millis begin print write ready flush width ' +
                        'isPIN blink clear press mkdir rmdir close ' +
                        'point yield image BSSID click delay ' +
                        'read text move peek beep rect line open ' +
                        'seek fill size turn stop home find ' +
                        'step tone sqrt RSSI SSID ' +
                        'end bit tan cos sin pow map abs max ' +
                        'min get run put',
                    literal:
                        'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +
                        'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +
                        'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +
                        'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +
                        'DEFAULT OUTPUT INPUT HIGH LOW'
                };

                const ARDUINO = cPlusPlus(hljs);

                const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);

                kws.keyword += ' ' + ARDUINO_KW.keyword;
                kws.literal += ' ' + ARDUINO_KW.literal;
                kws.built_in += ' ' + ARDUINO_KW.built_in;
                kws._ += ' ' + ARDUINO_KW._;

                ARDUINO.name = 'Arduino';
                ARDUINO.aliases = ['ino'];
                ARDUINO.supersetOf = "cpp";

                return ARDUINO;
            }

            module.exports = arduino;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/armasm.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/armasm.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
Language: ARM Assembly
Author: Dan Panzarella <alsoelp@gmail.com>
Description: ARM Assembly including Thumb and Thumb2 instructions
Category: assembler
*/

            /** @type LanguageFn */
            function armasm(hljs) {
                // local labels: %?[FB]?[AT]?\d{1,2}\w+

                const COMMENT = {
                    variants: [
                        hljs.COMMENT('^[ \\t]*(?=#)', '$', {
                            relevance: 0,
                            excludeBegin: true
                        }),
                        hljs.COMMENT('[;@]', '$', {
                            relevance: 0
                        }),
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE
                    ]
                };

                return {
                    name: 'ARM Assembly',
                    case_insensitive: true,
                    aliases: ['arm'],
                    keywords: {
                        $pattern: '\\.?' + hljs.IDENT_RE,
                        meta:
                        // GNU preprocs
                            '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ' +
                            // ARM directives
                            'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',
                        built_in:
                            'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 ' + // standard registers
                            'pc lr sp ip sl sb fp ' + // typical regs plus backward compatibility
                            'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 ' + // more regs and fp
                            'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 ' + // coprocessor regs
                            'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 ' + // more coproc
                            'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 ' + // advanced SIMD NEON regs

                            // program status registers
                            'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf ' +
                            'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf ' +

                            // NEON and VFP registers
                            's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 ' +
                            's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 ' +
                            'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 ' +
                            'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ' +

                            '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @'
                    },
                    contains: [
                        {
                            className: 'keyword',
                            begin: '\\b(' + // mnemonics
                                'adc|' +
                                '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|' +
                                'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|' +
                                'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|' +
                                'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|' +
                                'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|' +
                                'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|' +
                                'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|' +
                                'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|' +
                                'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|' +
                                'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|' +
                                '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|' +
                                'wfe|wfi|yield' +
                                ')' +
                                '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?' + // condition codes
                                '[sptrx]?' + // legal postfixes
                                '(?=\\s)' // followed by space
                        },
                        COMMENT,
                        hljs.QUOTE_STRING_MODE,
                        {
                            className: 'string',
                            begin: '\'',
                            end: '[^\\\\]\'',
                            relevance: 0
                        },
                        {
                            className: 'title',
                            begin: '\\|',
                            end: '\\|',
                            illegal: '\\n',
                            relevance: 0
                        },
                        {
                            className: 'number',
                            variants: [
                                { // hex
                                    begin: '[#$=]?0x[0-9a-f]+'
                                },
                                { // bin
                                    begin: '[#$=]?0b[01]+'
                                },
                                { // literal
                                    begin: '[#$=]\\d+'
                                },
                                { // bare number
                                    begin: '\\b\\d+'
                                }
                            ],
                            relevance: 0
                        },
                        {
                            className: 'symbol',
                            variants: [
                                { // GNU ARM syntax
                                    begin: '^[ \\t]*[a-z_\\.\\$][a-z0-9_\\.\\$]+:'
                                },
                                { // ARM syntax
                                    begin: '^[a-z_\\.\\$][a-z0-9_\\.\\$]+'
                                },
                                { // label reference
                                    begin: '[=#]\\w+'
                                }
                            ],
                            relevance: 0
                        }
                    ]
                };
            }

            module.exports = armasm;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/asciidoc.js":
        /*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/asciidoc.js ***!
  \*************************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: AsciiDoc
Requires: xml.js
Author: Dan Allen <dan.j.allen@gmail.com>
Website: http://asciidoc.org
Description: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.
Category: markup
*/

            /** @type LanguageFn */
            function asciidoc(hljs) {
                const HORIZONTAL_RULE = {
                    begin: '^\'{3,}[ \\t]*$',
                    relevance: 10
                };
                const ESCAPED_FORMATTING = [
                    // escaped constrained formatting marks (i.e., \* \_ or \`)
                    {
                        begin: /\\[*_`]/
                    },
                    // escaped unconstrained formatting marks (i.e., \\** \\__ or \\``)
                    // must ignore until the next formatting marks
                    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...
                    {
                        begin: /\\\\\*{2}[^\n]*?\*{2}/
                    },
                    {
                        begin: /\\\\_{2}[^\n]*_{2}/
                    },
                    {
                        begin: /\\\\`{2}[^\n]*`{2}/
                    },
                    // guard: constrained formatting mark may not be preceded by ":", ";" or
                    // "}". match these so the constrained rule doesn't see them
                    {
                        begin: /[:;}][*_`](?![*_`])/
                    }
                ];
                const STRONG = [
                    // inline unconstrained strong (single line)
                    {
                        className: 'strong',
                        begin: /\*{2}([^\n]+?)\*{2}/
                    },
                    // inline unconstrained strong (multi-line)
                    {
                        className: 'strong',
                        begin: concat(
                            /\*\*/,
                            /((\*(?!\*)|\\[^\n]|[^*\n\\])+\n)+/,
                            /(\*(?!\*)|\\[^\n]|[^*\n\\])*/,
                            /\*\*/
                        ),
                        relevance: 0
                    },
                    // inline constrained strong (single line)
                    {
                        className: 'strong',
                        // must not precede or follow a word character
                        begin: /\B\*(\S|\S[^\n]*?\S)\*(?!\w)/
                    },
                    // inline constrained strong (multi-line)
                    {
                        className: 'strong',
                        // must not precede or follow a word character
                        begin: /\*[^\s]([^\n]+\n)+([^\n]+)\*/
                    }
                ];
                const EMPHASIS = [
                    // inline unconstrained emphasis (single line)
                    {
                        className: 'emphasis',
                        begin: /_{2}([^\n]+?)_{2}/
                    },
                    // inline unconstrained emphasis (multi-line)
                    {
                        className: 'emphasis',
                        begin: concat(
                            /__/,
                            /((_(?!_)|\\[^\n]|[^_\n\\])+\n)+/,
                            /(_(?!_)|\\[^\n]|[^_\n\\])*/,
                            /__/
                        ),
                        relevance: 0
                    },
                    // inline constrained emphasis (single line)
                    {
                        className: 'emphasis',
                        // must not precede or follow a word character
                        begin: /\b_(\S|\S[^\n]*?\S)_(?!\w)/
                    },
                    // inline constrained emphasis (multi-line)
                    {
                        className: 'emphasis',
                        // must not precede or follow a word character
                        begin: /_[^\s]([^\n]+\n)+([^\n]+)_/
                    },
                    // inline constrained emphasis using single quote (legacy)
                    {
                        className: 'emphasis',
                        // must not follow a word character or be followed by a single quote or space
                        begin: '\\B\'(?![\'\\s])',
                        end: '(\\n{2}|\')',
                        // allow escaped single quote followed by word char
                        contains: [{
                            begin: '\\\\\'\\w',
                            relevance: 0
                        }],
                        relevance: 0
                    }
                ];
                const ADMONITION = {
                    className: 'symbol',
                    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s+',
                    relevance: 10
                };
                const BULLET_LIST = {
                    className: 'bullet',
                    begin: '^(\\*+|-+|\\.+|[^\\n]+?::)\\s+'
                };

                return {
                    name: 'AsciiDoc',
                    aliases: ['adoc'],
                    contains: [
                        // block comment
                        hljs.COMMENT(
                            '^/{4,}\\n',
                            '\\n/{4,}$',
                            // can also be done as...
                            // '^/{4,}$',
                            // '^/{4,}$',
                            {
                                relevance: 10
                            }
                        ),
                        // line comment
                        hljs.COMMENT(
                            '^//',
                            '$',
                            {
                                relevance: 0
                            }
                        ),
                        // title
                        {
                            className: 'title',
                            begin: '^\\.\\w.*$'
                        },
                        // example, admonition & sidebar blocks
                        {
                            begin: '^[=\\*]{4,}\\n',
                            end: '\\n^[=\\*]{4,}$',
                            relevance: 10
                        },
                        // headings
                        {
                            className: 'section',
                            relevance: 10,
                            variants: [
                                {
                                    begin: '^(={1,6})[ \t].+?([ \t]\\1)?$'
                                },
                                {
                                    begin: '^[^\\[\\]\\n]+?\\n[=\\-~\\^\\+]{2,}$'
                                }
                            ]
                        },
                        // document attributes
                        {
                            className: 'meta',
                            begin: '^:.+?:',
                            end: '\\s',
                            excludeEnd: true,
                            relevance: 10
                        },
                        // block attributes
                        {
                            className: 'meta',
                            begin: '^\\[.+?\\]$',
                            relevance: 0
                        },
                        // quoteblocks
                        {
                            className: 'quote',
                            begin: '^_{4,}\\n',
                            end: '\\n_{4,}$',
                            relevance: 10
                        },
                        // listing and literal blocks
                        {
                            className: 'code',
                            begin: '^[\\-\\.]{4,}\\n',
                            end: '\\n[\\-\\.]{4,}$',
                            relevance: 10
                        },
                        // passthrough blocks
                        {
                            begin: '^\\+{4,}\\n',
                            end: '\\n\\+{4,}$',
                            contains: [{
                                begin: '<',
                                end: '>',
                                subLanguage: 'xml',
                                relevance: 0
                            }],
                            relevance: 10
                        },

                        BULLET_LIST,
                        ADMONITION,
                        ...ESCAPED_FORMATTING,
                        ...STRONG,
                        ...EMPHASIS,

                        // inline smart quotes
                        {
                            className: 'string',
                            variants: [
                                {
                                    begin: "``.+?''"
                                },
                                {
                                    begin: "`.+?'"
                                }
                            ]
                        },
                        // inline unconstrained emphasis
                        {
                            className: 'code',
                            begin: /`{2}/,
                            end: /(\n{2}|`{2})/
                        },
                        // inline code snippets (TODO should get same treatment as strong and emphasis)
                        {
                            className: 'code',
                            begin: '(`.+?`|\\+.+?\\+)',
                            relevance: 0
                        },
                        // indented literal block
                        {
                            className: 'code',
                            begin: '^[ \\t]',
                            end: '$',
                            relevance: 0
                        },
                        HORIZONTAL_RULE,
                        // images and links
                        {
                            begin: '(link:)?(http|https|ftp|file|irc|image:?):\\S+?\\[[^[]*?\\]',
                            returnBegin: true,
                            contains: [
                                {
                                    begin: '(link|image:?):',
                                    relevance: 0
                                },
                                {
                                    className: 'link',
                                    begin: '\\w',
                                    end: '[^\\[]+',
                                    relevance: 0
                                },
                                {
                                    className: 'string',
                                    begin: '\\[',
                                    end: '\\]',
                                    excludeBegin: true,
                                    excludeEnd: true,
                                    relevance: 0
                                }
                            ],
                            relevance: 10
                        }
                    ]
                };
            }

            module.exports = asciidoc;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/aspectj.js":
        /*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/aspectj.js ***!
  \************************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: AspectJ
Author: Hakan Ozler <ozler.hakan@gmail.com>
Website: https://www.eclipse.org/aspectj/
Description: Syntax Highlighting for the AspectJ Language which is a general-purpose aspect-oriented extension to the Java programming language.
Audit: 2020
*/

            /** @type LanguageFn */
            function aspectj(hljs) {
                const KEYWORDS =
                    'false synchronized int abstract float private char boolean static null if const ' +
                    'for true while long throw strictfp finally protected import native final return void ' +
                    'enum else extends implements break transient new catch instanceof byte super volatile case ' +
                    'assert short package default double public try this switch continue throws privileged ' +
                    'aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization ' +
                    'staticinitialization withincode target within execution getWithinTypeName handler ' +
                    'thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents ' +
                    'warning error soft precedence thisAspectInstance';
                const SHORTKEYS = 'get set args call';

                return {
                    name: 'AspectJ',
                    keywords: KEYWORDS,
                    illegal: /<\/|#/,
                    contains: [
                        hljs.COMMENT(
                            /\/\*\*/,
                            /\*\//,
                            {
                                relevance: 0,
                                contains: [
                                    {
                                        // eat up @'s in emails to prevent them to be recognized as doctags
                                        begin: /\w+@/,
                                        relevance: 0
                                    },
                                    {
                                        className: 'doctag',
                                        begin: /@[A-Za-z]+/
                                    }
                                ]
                            }
                        ),
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        {
                            className: 'class',
                            beginKeywords: 'aspect',
                            end: /[{;=]/,
                            excludeEnd: true,
                            illegal: /[:;"\[\]]/,
                            contains: [
                                {
                                    beginKeywords: 'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'
                                },
                                hljs.UNDERSCORE_TITLE_MODE,
                                {
                                    begin: /\([^\)]*/,
                                    end: /[)]+/,
                                    keywords: KEYWORDS + ' ' + SHORTKEYS,
                                    excludeEnd: false
                                }
                            ]
                        },
                        {
                            className: 'class',
                            beginKeywords: 'class interface',
                            end: /[{;=]/,
                            excludeEnd: true,
                            relevance: 0,
                            keywords: 'class interface',
                            illegal: /[:"\[\]]/,
                            contains: [
                                {
                                    beginKeywords: 'extends implements'
                                },
                                hljs.UNDERSCORE_TITLE_MODE
                            ]
                        },
                        {
                            // AspectJ Constructs
                            beginKeywords: 'pointcut after before around throwing returning',
                            end: /[)]/,
                            excludeEnd: false,
                            illegal: /["\[\]]/,
                            contains: [
                                {
                                    begin: concat(hljs.UNDERSCORE_IDENT_RE, /\s*\(/),
                                    returnBegin: true,
                                    contains: [ hljs.UNDERSCORE_TITLE_MODE ]
                                }
                            ]
                        },
                        {
                            begin: /[:]/,
                            returnBegin: true,
                            end: /[{;]/,
                            relevance: 0,
                            excludeEnd: false,
                            keywords: KEYWORDS,
                            illegal: /["\[\]]/,
                            contains: [
                                {
                                    begin: concat(hljs.UNDERSCORE_IDENT_RE, /\s*\(/),
                                    keywords: KEYWORDS + ' ' + SHORTKEYS,
                                    relevance: 0
                                },
                                hljs.QUOTE_STRING_MODE
                            ]
                        },
                        {
                            // this prevents 'new Name(...), or throw ...' from being recognized as a function definition
                            beginKeywords: 'new throw',
                            relevance: 0
                        },
                        {
                            // the function class is a bit different for AspectJ compared to the Java language
                            className: 'function',
                            begin: /\w+ +\w+(\.\w+)?\s*\([^\)]*\)\s*((throws)[\w\s,]+)?[\{;]/,
                            returnBegin: true,
                            end: /[{;=]/,
                            keywords: KEYWORDS,
                            excludeEnd: true,
                            contains: [
                                {
                                    begin: concat(hljs.UNDERSCORE_IDENT_RE, /\s*\(/),
                                    returnBegin: true,
                                    relevance: 0,
                                    contains: [ hljs.UNDERSCORE_TITLE_MODE ]
                                },
                                {
                                    className: 'params',
                                    begin: /\(/,
                                    end: /\)/,
                                    relevance: 0,
                                    keywords: KEYWORDS,
                                    contains: [
                                        hljs.APOS_STRING_MODE,
                                        hljs.QUOTE_STRING_MODE,
                                        hljs.C_NUMBER_MODE,
                                        hljs.C_BLOCK_COMMENT_MODE
                                    ]
                                },
                                hljs.C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE
                            ]
                        },
                        hljs.C_NUMBER_MODE,
                        {
                            // annotation is also used in this language
                            className: 'meta',
                            begin: /@[A-Za-z]+/
                        }
                    ]
                };
            }

            module.exports = aspectj;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/autohotkey.js":
        /*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/autohotkey.js ***!
  \***************************************************************/
        /***/ ((module) => {

            /*
Language: AutoHotkey
Author: Seongwon Lee <dlimpid@gmail.com>
Description: AutoHotkey language definition
Category: scripting
*/

            /** @type LanguageFn */
            function autohotkey(hljs) {
                const BACKTICK_ESCAPE = {
                    begin: '`[\\s\\S]'
                };

                return {
                    name: 'AutoHotkey',
                    case_insensitive: true,
                    aliases: ['ahk'],
                    keywords: {
                        keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',
                        literal: 'true false NOT AND OR',
                        built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel'
                    },
                    contains: [
                        BACKTICK_ESCAPE,
                        hljs.inherit(hljs.QUOTE_STRING_MODE, {
                            contains: [BACKTICK_ESCAPE]
                        }),
                        hljs.COMMENT(';', '$', {
                            relevance: 0
                        }),
                        hljs.C_BLOCK_COMMENT_MODE,
                        {
                            className: 'number',
                            begin: hljs.NUMBER_RE,
                            relevance: 0
                        },
                        {
                            // subst would be the most accurate however fails the point of
                            // highlighting. variable is comparably the most accurate that actually
                            // has some effect
                            className: 'variable',
                            begin: '%[a-zA-Z0-9#_$@]+%'
                        },
                        {
                            className: 'built_in',
                            begin: '^\\s*\\w+\\s*(,|%)'
                            // I don't really know if this is totally relevant
                        },
                        {
                            // symbol would be most accurate however is highlighted just like
                            // built_in and that makes up a lot of AutoHotkey code meaning that it
                            // would fail to highlight anything
                            className: 'title',
                            variants: [
                                {
                                    begin: '^[^\\n";]+::(?!=)'
                                },
                                {
                                    begin: '^[^\\n";]+:(?!=)',
                                    // zero relevance as it catches a lot of things
                                    // followed by a single ':' in many languages
                                    relevance: 0
                                }
                            ]
                        },
                        {
                            className: 'meta',
                            begin: '^\\s*#\\w+',
                            end: '$',
                            relevance: 0
                        },
                        {
                            className: 'built_in',
                            begin: 'A_[a-zA-Z0-9]+'
                        },
                        {
                            // consecutive commas, not for highlighting but just for relevance
                            begin: ',\\s*,'
                        }
                    ]
                };
            }

            module.exports = autohotkey;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/autoit.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/autoit.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
Language: AutoIt
Author: Manh Tuan <junookyo@gmail.com>
Description: AutoIt language definition
Category: scripting
*/

            /** @type LanguageFn */
            function autoit(hljs) {
                const KEYWORDS = 'ByRef Case Const ContinueCase ContinueLoop ' +
                    'Dim Do Else ElseIf EndFunc EndIf EndSelect ' +
                    'EndSwitch EndWith Enum Exit ExitLoop For Func ' +
                    'Global If In Local Next ReDim Return Select Static ' +
                    'Step Switch Then To Until Volatile WEnd While With';

                const DIRECTIVES = [
                    "EndRegion",
                    "forcedef",
                    "forceref",
                    "ignorefunc",
                    "include",
                    "include-once",
                    "NoTrayIcon",
                    "OnAutoItStartRegister",
                    "pragma",
                    "Region",
                    "RequireAdmin",
                    "Tidy_Off",
                    "Tidy_On",
                    "Tidy_Parameters"
                ];

                const LITERAL = 'True False And Null Not Or Default';

                const BUILT_IN
                    = 'Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait WinWaitActive WinWaitClose WinWaitNotActive';

                const COMMENT = {
                    variants: [
                        hljs.COMMENT(';', '$', {
                            relevance: 0
                        }),
                        hljs.COMMENT('#cs', '#ce'),
                        hljs.COMMENT('#comments-start', '#comments-end')
                    ]
                };

                const VARIABLE = {
                    begin: '\\$[A-z0-9_]+'
                };

                const STRING = {
                    className: 'string',
                    variants: [
                        {
                            begin: /"/,
                            end: /"/,
                            contains: [{
                                begin: /""/,
                                relevance: 0
                            }]
                        },
                        {
                            begin: /'/,
                            end: /'/,
                            contains: [{
                                begin: /''/,
                                relevance: 0
                            }]
                        }
                    ]
                };

                const NUMBER = {
                    variants: [
                        hljs.BINARY_NUMBER_MODE,
                        hljs.C_NUMBER_MODE
                    ]
                };

                const PREPROCESSOR = {
                    className: 'meta',
                    begin: '#',
                    end: '$',
                    keywords: {
                        'meta-keyword': DIRECTIVES
                    },
                    contains: [
                        {
                            begin: /\\\n/,
                            relevance: 0
                        },
                        {
                            beginKeywords: 'include',
                            keywords: {
                                'meta-keyword': 'include'
                            },
                            end: '$',
                            contains: [
                                STRING,
                                {
                                    className: 'meta-string',
                                    variants: [
                                        {
                                            begin: '<',
                                            end: '>'
                                        },
                                        {
                                            begin: /"/,
                                            end: /"/,
                                            contains: [{
                                                begin: /""/,
                                                relevance: 0
                                            }]
                                        },
                                        {
                                            begin: /'/,
                                            end: /'/,
                                            contains: [{
                                                begin: /''/,
                                                relevance: 0
                                            }]
                                        }
                                    ]
                                }
                            ]
                        },
                        STRING,
                        COMMENT
                    ]
                };

                const CONSTANT = {
                    className: 'symbol',
                    // begin: '@',
                    // end: '$',
                    // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',
                    // relevance: 5
                    begin: '@[A-z0-9_]+'
                };

                const FUNCTION = {
                    className: 'function',
                    beginKeywords: 'Func',
                    end: '$',
                    illegal: '\\$|\\[|%',
                    contains: [
                        hljs.UNDERSCORE_TITLE_MODE,
                        {
                            className: 'params',
                            begin: '\\(',
                            end: '\\)',
                            contains: [
                                VARIABLE,
                                STRING,
                                NUMBER
                            ]
                        }
                    ]
                };

                return {
                    name: 'AutoIt',
                    case_insensitive: true,
                    illegal: /\/\*/,
                    keywords: {
                        keyword: KEYWORDS,
                        built_in: BUILT_IN,
                        literal: LITERAL
                    },
                    contains: [
                        COMMENT,
                        VARIABLE,
                        STRING,
                        NUMBER,
                        PREPROCESSOR,
                        CONSTANT,
                        FUNCTION
                    ]
                };
            }

            module.exports = autoit;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/avrasm.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/avrasm.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
Language: AVR Assembly
Author: Vladimir Ermakov <vooon341@gmail.com>
Category: assembler
Website: https://www.microchip.com/webdoc/avrassembler/avrassembler.wb_instruction_list.html
*/

            /** @type LanguageFn */
            function avrasm(hljs) {
                return {
                    name: 'AVR Assembly',
                    case_insensitive: true,
                    keywords: {
                        $pattern: '\\.?' + hljs.IDENT_RE,
                        keyword:
                        /* mnemonic */
                            'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs ' +
                            'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr ' +
                            'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor ' +
                            'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul ' +
                            'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs ' +
                            'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub ' +
                            'subi swap tst wdr',
                        built_in:
                        /* general purpose registers */
                            'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 ' +
                            'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ' +
                            /* IO Registers (ATMega128) */
                            'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h ' +
                            'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ' +
                            'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ' +
                            'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk ' +
                            'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ' +
                            'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr ' +
                            'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ' +
                            'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',
                        meta:
                            '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list ' +
                            '.listmac .macro .nolist .org .set'
                    },
                    contains: [
                        hljs.C_BLOCK_COMMENT_MODE,
                        hljs.COMMENT(
                            ';',
                            '$',
                            {
                                relevance: 0
                            }
                        ),
                        hljs.C_NUMBER_MODE, // 0x..., decimal, float
                        hljs.BINARY_NUMBER_MODE, // 0b...
                        {
                            className: 'number',
                            begin: '\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...
                        },
                        hljs.QUOTE_STRING_MODE,
                        {
                            className: 'string',
                            begin: '\'',
                            end: '[^\\\\]\'',
                            illegal: '[^\\\\][^\']'
                        },
                        {
                            className: 'symbol',
                            begin: '^[A-Za-z0-9_.$]+:'
                        },
                        {
                            className: 'meta',
                            begin: '#',
                            end: '$'
                        },
                        { // substitution within a macro
                            className: 'subst',
                            begin: '@[0-9]+'
                        }
                    ]
                };
            }

            module.exports = avrasm;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/awk.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/awk.js ***!
  \********************************************************/
        /***/ ((module) => {

            /*
Language: Awk
Author: Matthew Daly <matthewbdaly@gmail.com>
Website: https://www.gnu.org/software/gawk/manual/gawk.html
Description: language definition for Awk scripts
*/

            /** @type LanguageFn */
            function awk(hljs) {
                const VARIABLE = {
                    className: 'variable',
                    variants: [
                        {
                            begin: /\$[\w\d#@][\w\d_]*/
                        },
                        {
                            begin: /\$\{(.*?)\}/
                        }
                    ]
                };
                const KEYWORDS = 'BEGIN END if else while do for in break continue delete next nextfile function func exit|10';
                const STRING = {
                    className: 'string',
                    contains: [hljs.BACKSLASH_ESCAPE],
                    variants: [
                        {
                            begin: /(u|b)?r?'''/,
                            end: /'''/,
                            relevance: 10
                        },
                        {
                            begin: /(u|b)?r?"""/,
                            end: /"""/,
                            relevance: 10
                        },
                        {
                            begin: /(u|r|ur)'/,
                            end: /'/,
                            relevance: 10
                        },
                        {
                            begin: /(u|r|ur)"/,
                            end: /"/,
                            relevance: 10
                        },
                        {
                            begin: /(b|br)'/,
                            end: /'/
                        },
                        {
                            begin: /(b|br)"/,
                            end: /"/
                        },
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE
                    ]
                };
                return {
                    name: 'Awk',
                    keywords: {
                        keyword: KEYWORDS
                    },
                    contains: [
                        VARIABLE,
                        STRING,
                        hljs.REGEXP_MODE,
                        hljs.HASH_COMMENT_MODE,
                        hljs.NUMBER_MODE
                    ]
                };
            }

            module.exports = awk;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/axapta.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/axapta.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
Language: Microsoft X++
Description: X++ is a language used in Microsoft Dynamics 365, Dynamics AX, and Axapta.
Author: Dmitri Roudakov <dmitri@roudakov.ru>
Website: https://dynamics.microsoft.com/en-us/ax-overview/
Category: enterprise
*/

            /** @type LanguageFn */
            function axapta(hljs) {
                const BUILT_IN_KEYWORDS = [
                    'anytype',
                    'boolean',
                    'byte',
                    'char',
                    'container',
                    'date',
                    'double',
                    'enum',
                    'guid',
                    'int',
                    'int64',
                    'long',
                    'real',
                    'short',
                    'str',
                    'utcdatetime',
                    'var'
                ];

                const LITERAL_KEYWORDS = [
                    'default',
                    'false',
                    'null',
                    'true'
                ];

                const NORMAL_KEYWORDS = [
                    'abstract',
                    'as',
                    'asc',
                    'avg',
                    'break',
                    'breakpoint',
                    'by',
                    'byref',
                    'case',
                    'catch',
                    'changecompany',
                    'class',
                    'client',
                    'client',
                    'common',
                    'const',
                    'continue',
                    'count',
                    'crosscompany',
                    'delegate',
                    'delete_from',
                    'desc',
                    'display',
                    'div',
                    'do',
                    'edit',
                    'else',
                    'eventhandler',
                    'exists',
                    'extends',
                    'final',
                    'finally',
                    'firstfast',
                    'firstonly',
                    'firstonly1',
                    'firstonly10',
                    'firstonly100',
                    'firstonly1000',
                    'flush',
                    'for',
                    'forceliterals',
                    'forcenestedloop',
                    'forceplaceholders',
                    'forceselectorder',
                    'forupdate',
                    'from',
                    'generateonly',
                    'group',
                    'hint',
                    'if',
                    'implements',
                    'in',
                    'index',
                    'insert_recordset',
                    'interface',
                    'internal',
                    'is',
                    'join',
                    'like',
                    'maxof',
                    'minof',
                    'mod',
                    'namespace',
                    'new',
                    'next',
                    'nofetch',
                    'notexists',
                    'optimisticlock',
                    'order',
                    'outer',
                    'pessimisticlock',
                    'print',
                    'private',
                    'protected',
                    'public',
                    'readonly',
                    'repeatableread',
                    'retry',
                    'return',
                    'reverse',
                    'select',
                    'server',
                    'setting',
                    'static',
                    'sum',
                    'super',
                    'switch',
                    'this',
                    'throw',
                    'try',
                    'ttsabort',
                    'ttsbegin',
                    'ttscommit',
                    'unchecked',
                    'update_recordset',
                    'using',
                    'validtimestate',
                    'void',
                    'where',
                    'while'
                ];

                const KEYWORDS = {
                    keyword: NORMAL_KEYWORDS,
                    built_in: BUILT_IN_KEYWORDS,
                    literal: LITERAL_KEYWORDS
                };

                return {
                    name: 'X++',
                    aliases: ['x++'],
                    keywords: KEYWORDS,
                    contains: [
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        hljs.C_NUMBER_MODE,
                        {
                            className: 'meta',
                            begin: '#',
                            end: '$'
                        },
                        {
                            className: 'class',
                            beginKeywords: 'class interface',
                            end: /\{/,
                            excludeEnd: true,
                            illegal: ':',
                            contains: [
                                {
                                    beginKeywords: 'extends implements'
                                },
                                hljs.UNDERSCORE_TITLE_MODE
                            ]
                        }
                    ]
                };
            }

            module.exports = axapta;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/bash.js":
        /*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/bash.js ***!
  \*********************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: Bash
Author: vah <vahtenberg@gmail.com>
Contributrors: Benjamin Pannell <contact@sierrasoftworks.com>
Website: https://www.gnu.org/software/bash/
Category: common
*/

            /** @type LanguageFn */
            function bash(hljs) {
                const VAR = {};
                const BRACED_VAR = {
                    begin: /\$\{/,
                    end:/\}/,
                    contains: [
                        "self",
                        {
                            begin: /:-/,
                            contains: [ VAR ]
                        } // default values
                    ]
                };
                Object.assign(VAR,{
                    className: 'variable',
                    variants: [
                        {begin: concat(/\$[\w\d#@][\w\d_]*/,
                                // negative look-ahead tries to avoid matching patterns that are not
                                // Perl at all like $ident$, @ident@, etc.
                                `(?![\\w\\d])(?![$])`) },
                        BRACED_VAR
                    ]
                });

                const SUBST = {
                    className: 'subst',
                    begin: /\$\(/, end: /\)/,
                    contains: [hljs.BACKSLASH_ESCAPE]
                };
                const HERE_DOC = {
                    begin: /<<-?\s*(?=\w+)/,
                    starts: {
                        contains: [
                            hljs.END_SAME_AS_BEGIN({
                                begin: /(\w+)/,
                                end: /(\w+)/,
                                className: 'string'
                            })
                        ]
                    }
                };
                const QUOTE_STRING = {
                    className: 'string',
                    begin: /"/, end: /"/,
                    contains: [
                        hljs.BACKSLASH_ESCAPE,
                        VAR,
                        SUBST
                    ]
                };
                SUBST.contains.push(QUOTE_STRING);
                const ESCAPED_QUOTE = {
                    className: '',
                    begin: /\\"/

                };
                const APOS_STRING = {
                    className: 'string',
                    begin: /'/, end: /'/
                };
                const ARITHMETIC = {
                    begin: /\$\(\(/,
                    end: /\)\)/,
                    contains: [
                        { begin: /\d+#[0-9a-f]+/, className: "number" },
                        hljs.NUMBER_MODE,
                        VAR
                    ]
                };
                const SH_LIKE_SHELLS = [
                    "fish",
                    "bash",
                    "zsh",
                    "sh",
                    "csh",
                    "ksh",
                    "tcsh",
                    "dash",
                    "scsh",
                ];
                const KNOWN_SHEBANG = hljs.SHEBANG({
                    binary: `(${SH_LIKE_SHELLS.join("|")})`,
                    relevance: 10
                });
                const FUNCTION = {
                    className: 'function',
                    begin: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
                    returnBegin: true,
                    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\w[\w\d_]*/})],
                    relevance: 0
                };

                return {
                    name: 'Bash',
                    aliases: ['sh', 'zsh'],
                    keywords: {
                        $pattern: /\b[a-z._-]+\b/,
                        keyword:
                            'if then else elif fi for while in do done case esac function',
                        literal:
                            'true false',
                        built_in:
                        // Shell built-ins
                        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
                            'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +
                            'trap umask unset ' +
                            // Bash built-ins
                            'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +
                            'read readarray source type typeset ulimit unalias ' +
                            // Shell modifiers
                            'set shopt ' +
                            // Zsh built-ins
                            'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +
                            'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +
                            'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +
                            'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +
                            'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +
                            'zpty zregexparse zsocket zstyle ztcp'
                    },
                    contains: [
                        KNOWN_SHEBANG, // to catch known shells and boost relevancy
                        hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang
                        FUNCTION,
                        ARITHMETIC,
                        hljs.HASH_COMMENT_MODE,
                        HERE_DOC,
                        QUOTE_STRING,
                        ESCAPED_QUOTE,
                        APOS_STRING,
                        VAR
                    ]
                };
            }

            module.exports = bash;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/basic.js":
        /*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/basic.js ***!
  \**********************************************************/
        /***/ ((module) => {

            /*
Language: BASIC
Author: Raphaël Assénat <raph@raphnet.net>
Description: Based on the BASIC reference from the Tandy 1000 guide
Website: https://en.wikipedia.org/wiki/Tandy_1000
*/

            /** @type LanguageFn */
            function basic(hljs) {
                return {
                    name: 'BASIC',
                    case_insensitive: true,
                    illegal: '^\.',
                    // Support explicitly typed variables that end with $%! or #.
                    keywords: {
                        $pattern: '[a-zA-Z][a-zA-Z0-9_$%!#]*',
                        keyword:
                            'ABS ASC AND ATN AUTO|0 BEEP BLOAD|10 BSAVE|10 CALL CALLS CDBL CHAIN CHDIR CHR$|10 CINT CIRCLE ' +
                            'CLEAR CLOSE CLS COLOR COM COMMON CONT COS CSNG CSRLIN CVD CVI CVS DATA DATE$ ' +
                            'DEFDBL DEFINT DEFSNG DEFSTR DEF|0 SEG USR DELETE DIM DRAW EDIT END ENVIRON ENVIRON$ ' +
                            'EOF EQV ERASE ERDEV ERDEV$ ERL ERR ERROR EXP FIELD FILES FIX FOR|0 FRE GET GOSUB|10 GOTO ' +
                            'HEX$ IF THEN ELSE|0 INKEY$ INP INPUT INPUT# INPUT$ INSTR IMP INT IOCTL IOCTL$ KEY ON ' +
                            'OFF LIST KILL LEFT$ LEN LET LINE LLIST LOAD LOC LOCATE LOF LOG LPRINT USING LSET ' +
                            'MERGE MID$ MKDIR MKD$ MKI$ MKS$ MOD NAME NEW NEXT NOISE NOT OCT$ ON OR PEN PLAY STRIG OPEN OPTION ' +
                            'BASE OUT PAINT PALETTE PCOPY PEEK PMAP POINT POKE POS PRINT PRINT] PSET PRESET ' +
                            'PUT RANDOMIZE READ REM RENUM RESET|0 RESTORE RESUME RETURN|0 RIGHT$ RMDIR RND RSET ' +
                            'RUN SAVE SCREEN SGN SHELL SIN SOUND SPACE$ SPC SQR STEP STICK STOP STR$ STRING$ SWAP ' +
                            'SYSTEM TAB TAN TIME$ TIMER TROFF TRON TO USR VAL VARPTR VARPTR$ VIEW WAIT WHILE ' +
                            'WEND WIDTH WINDOW WRITE XOR'
                    },
                    contains: [
                        hljs.QUOTE_STRING_MODE,
                        hljs.COMMENT('REM', '$', {
                            relevance: 10
                        }),
                        hljs.COMMENT('\'', '$', {
                            relevance: 0
                        }),
                        {
                            // Match line numbers
                            className: 'symbol',
                            begin: '^[0-9]+ ',
                            relevance: 10
                        },
                        {
                            // Match typed numeric constants (1000, 12.34!, 1.2e5, 1.5#, 1.2D2)
                            className: 'number',
                            begin: '\\b\\d+(\\.\\d+)?([edED]\\d+)?[#\!]?',
                            relevance: 0
                        },
                        {
                            // Match hexadecimal numbers (&Hxxxx)
                            className: 'number',
                            begin: '(&[hH][0-9a-fA-F]{1,4})'
                        },
                        {
                            // Match octal numbers (&Oxxxxxx)
                            className: 'number',
                            begin: '(&[oO][0-7]{1,6})'
                        }
                    ]
                };
            }

            module.exports = basic;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/bnf.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/bnf.js ***!
  \********************************************************/
        /***/ ((module) => {

            /*
Language: Backus–Naur Form
Website: https://en.wikipedia.org/wiki/Backus–Naur_form
Author: Oleg Efimov <efimovov@gmail.com>
*/

            /** @type LanguageFn */
            function bnf(hljs) {
                return {
                    name: 'Backus–Naur Form',
                    contains: [
                        // Attribute
                        {
                            className: 'attribute',
                            begin: /</,
                            end: />/
                        },
                        // Specific
                        {
                            begin: /::=/,
                            end: /$/,
                            contains: [
                                {
                                    begin: /</,
                                    end: />/
                                },
                                // Common
                                hljs.C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE,
                                hljs.APOS_STRING_MODE,
                                hljs.QUOTE_STRING_MODE
                            ]
                        }
                    ]
                };
            }

            module.exports = bnf;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/brainfuck.js":
        /*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/brainfuck.js ***!
  \**************************************************************/
        /***/ ((module) => {

            /*
Language: Brainfuck
Author: Evgeny Stepanischev <imbolk@gmail.com>
Website: https://esolangs.org/wiki/Brainfuck
*/

            /** @type LanguageFn */
            function brainfuck(hljs) {
                const LITERAL = {
                    className: 'literal',
                    begin: /[+-]/,
                    relevance: 0
                };
                return {
                    name: 'Brainfuck',
                    aliases: ['bf'],
                    contains: [
                        hljs.COMMENT(
                            '[^\\[\\]\\.,\\+\\-<> \r\n]',
                            '[\\[\\]\\.,\\+\\-<> \r\n]',
                            {
                                returnEnd: true,
                                relevance: 0
                            }
                        ),
                        {
                            className: 'title',
                            begin: '[\\[\\]]',
                            relevance: 0
                        },
                        {
                            className: 'string',
                            begin: '[\\.,]',
                            relevance: 0
                        },
                        {
                            // this mode works as the only relevance counter
                            begin: /(?:\+\+|--)/,
                            contains: [LITERAL]
                        },
                        LITERAL
                    ]
                };
            }

            module.exports = brainfuck;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/c-like.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/c-like.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function lookahead(re) {
                return concat('(?=', re, ')');
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function optional(re) {
                return concat('(', re, ')?');
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: C++
Category: common, system
Website: https://isocpp.org
*/

            /** @type LanguageFn */
            function cPlusPlus(hljs) {
                // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does
                // not include such support nor can we be sure all the grammars depending
                // on it would desire this behavior
                const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {
                    contains: [
                        {
                            begin: /\\\n/
                        }
                    ]
                });
                const DECLTYPE_AUTO_RE = 'decltype\\(auto\\)';
                const NAMESPACE_RE = '[a-zA-Z_]\\w*::';
                const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';
                const FUNCTION_TYPE_RE = '(' +
                    DECLTYPE_AUTO_RE + '|' +
                    optional(NAMESPACE_RE) +
                    '[a-zA-Z_]\\w*' + optional(TEMPLATE_ARGUMENT_RE) +
                    ')';
                const CPP_PRIMITIVE_TYPES = {
                    className: 'keyword',
                    begin: '\\b[a-z\\d_]*_t\\b'
                };

                // https://en.cppreference.com/w/cpp/language/escape
                // \\ \x \xFF \u2837 \u00323747 \374
                const CHARACTER_ESCAPES = '\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)';
                const STRINGS = {
                    className: 'string',
                    variants: [
                        {
                            begin: '(u8?|U|L)?"',
                            end: '"',
                            illegal: '\\n',
                            contains: [ hljs.BACKSLASH_ESCAPE ]
                        },
                        {
                            begin: '(u8?|U|L)?\'(' + CHARACTER_ESCAPES + "|.)",
                            end: '\'',
                            illegal: '.'
                        },
                        hljs.END_SAME_AS_BEGIN({
                            begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
                            end: /\)([^()\\ ]{0,16})"/
                        })
                    ]
                };

                const NUMBERS = {
                    className: 'number',
                    variants: [
                        {
                            begin: '\\b(0b[01\']+)'
                        },
                        {
                            begin: '(-?)\\b([\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'
                        },
                        {
                            begin: '(-?)(\\b0[xX][a-fA-F0-9\']+|(\\b[\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)([eE][-+]?[\\d\']+)?)'
                        }
                    ],
                    relevance: 0
                };

                const PREPROCESSOR = {
                    className: 'meta',
                    begin: /#\s*[a-z]+\b/,
                    end: /$/,
                    keywords: {
                        'meta-keyword':
                            'if else elif endif define undef warning error line ' +
                            'pragma _Pragma ifdef ifndef include'
                    },
                    contains: [
                        {
                            begin: /\\\n/,
                            relevance: 0
                        },
                        hljs.inherit(STRINGS, {
                            className: 'meta-string'
                        }),
                        {
                            className: 'meta-string',
                            begin: /<.*?>/
                        },
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE
                    ]
                };

                const TITLE_MODE = {
                    className: 'title',
                    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,
                    relevance: 0
                };

                const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\s*\\(';

                const COMMON_CPP_HINTS = [
                    'asin',
                    'atan2',
                    'atan',
                    'calloc',
                    'ceil',
                    'cosh',
                    'cos',
                    'exit',
                    'exp',
                    'fabs',
                    'floor',
                    'fmod',
                    'fprintf',
                    'fputs',
                    'free',
                    'frexp',
                    'auto_ptr',
                    'deque',
                    'list',
                    'queue',
                    'stack',
                    'vector',
                    'map',
                    'set',
                    'pair',
                    'bitset',
                    'multiset',
                    'multimap',
                    'unordered_set',
                    'fscanf',
                    'future',
                    'isalnum',
                    'isalpha',
                    'iscntrl',
                    'isdigit',
                    'isgraph',
                    'islower',
                    'isprint',
                    'ispunct',
                    'isspace',
                    'isupper',
                    'isxdigit',
                    'tolower',
                    'toupper',
                    'labs',
                    'ldexp',
                    'log10',
                    'log',
                    'malloc',
                    'realloc',
                    'memchr',
                    'memcmp',
                    'memcpy',
                    'memset',
                    'modf',
                    'pow',
                    'printf',
                    'putchar',
                    'puts',
                    'scanf',
                    'sinh',
                    'sin',
                    'snprintf',
                    'sprintf',
                    'sqrt',
                    'sscanf',
                    'strcat',
                    'strchr',
                    'strcmp',
                    'strcpy',
                    'strcspn',
                    'strlen',
                    'strncat',
                    'strncmp',
                    'strncpy',
                    'strpbrk',
                    'strrchr',
                    'strspn',
                    'strstr',
                    'tanh',
                    'tan',
                    'unordered_map',
                    'unordered_multiset',
                    'unordered_multimap',
                    'priority_queue',
                    'make_pair',
                    'array',
                    'shared_ptr',
                    'abort',
                    'terminate',
                    'abs',
                    'acos',
                    'vfprintf',
                    'vprintf',
                    'vsprintf',
                    'endl',
                    'initializer_list',
                    'unique_ptr',
                    'complex',
                    'imaginary',
                    'std',
                    'string',
                    'wstring',
                    'cin',
                    'cout',
                    'cerr',
                    'clog',
                    'stdin',
                    'stdout',
                    'stderr',
                    'stringstream',
                    'istringstream',
                    'ostringstream'
                ];

                const CPP_KEYWORDS = {
                    keyword: 'int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof ' +
                        'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +
                        'unsigned long volatile static protected bool template mutable if public friend ' +
                        'do goto auto void enum else break extern using asm case typeid wchar_t ' +
                        'short reinterpret_cast|10 default double register explicit signed typename try this ' +
                        'switch continue inline delete alignas alignof constexpr consteval constinit decltype ' +
                        'concept co_await co_return co_yield requires ' +
                        'noexcept static_assert thread_local restrict final override ' +
                        'atomic_bool atomic_char atomic_schar ' +
                        'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +
                        'atomic_ullong new throw return ' +
                        'and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq',
                    built_in: '_Bool _Complex _Imaginary',
                    _relevance_hints: COMMON_CPP_HINTS,
                    literal: 'true false nullptr NULL'
                };

                const FUNCTION_DISPATCH = {
                    className: "function.dispatch",
                    relevance: 0,
                    keywords: CPP_KEYWORDS,
                    begin: concat(
                        /\b/,
                        /(?!decltype)/,
                        /(?!if)/,
                        /(?!for)/,
                        /(?!while)/,
                        hljs.IDENT_RE,
                        lookahead(/\s*\(/))
                };

                const EXPRESSION_CONTAINS = [
                    FUNCTION_DISPATCH,
                    PREPROCESSOR,
                    CPP_PRIMITIVE_TYPES,
                    C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    NUMBERS,
                    STRINGS
                ];


                const EXPRESSION_CONTEXT = {
                    // This mode covers expression context where we can't expect a function
                    // definition and shouldn't highlight anything that looks like one:
                    // `return some()`, `else if()`, `(x*sum(1, 2))`
                    variants: [
                        {
                            begin: /=/,
                            end: /;/
                        },
                        {
                            begin: /\(/,
                            end: /\)/
                        },
                        {
                            beginKeywords: 'new throw return else',
                            end: /;/
                        }
                    ],
                    keywords: CPP_KEYWORDS,
                    contains: EXPRESSION_CONTAINS.concat([
                        {
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            contains: EXPRESSION_CONTAINS.concat([ 'self' ]),
                            relevance: 0
                        }
                    ]),
                    relevance: 0
                };

                const FUNCTION_DECLARATION = {
                    className: 'function',
                    begin: '(' + FUNCTION_TYPE_RE + '[\\*&\\s]+)+' + FUNCTION_TITLE,
                    returnBegin: true,
                    end: /[{;=]/,
                    excludeEnd: true,
                    keywords: CPP_KEYWORDS,
                    illegal: /[^\w\s\*&:<>.]/,
                    contains: [
                        { // to prevent it from being confused as the function title
                            begin: DECLTYPE_AUTO_RE,
                            keywords: CPP_KEYWORDS,
                            relevance: 0
                        },
                        {
                            begin: FUNCTION_TITLE,
                            returnBegin: true,
                            contains: [ TITLE_MODE ],
                            relevance: 0
                        },
                        // needed because we do not have look-behind on the below rule
                        // to prevent it from grabbing the final : in a :: pair
                        {
                            begin: /::/,
                            relevance: 0
                        },
                        // initializers
                        {
                            begin: /:/,
                            endsWithParent: true,
                            contains: [
                                STRINGS,
                                NUMBERS
                            ]
                        },
                        {
                            className: 'params',
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            relevance: 0,
                            contains: [
                                C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE,
                                STRINGS,
                                NUMBERS,
                                CPP_PRIMITIVE_TYPES,
                                // Count matching parentheses.
                                {
                                    begin: /\(/,
                                    end: /\)/,
                                    keywords: CPP_KEYWORDS,
                                    relevance: 0,
                                    contains: [
                                        'self',
                                        C_LINE_COMMENT_MODE,
                                        hljs.C_BLOCK_COMMENT_MODE,
                                        STRINGS,
                                        NUMBERS,
                                        CPP_PRIMITIVE_TYPES
                                    ]
                                }
                            ]
                        },
                        CPP_PRIMITIVE_TYPES,
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        PREPROCESSOR
                    ]
                };

                return {
                    name: 'C++',
                    aliases: [
                        'cc',
                        'c++',
                        'h++',
                        'hpp',
                        'hh',
                        'hxx',
                        'cxx'
                    ],
                    keywords: CPP_KEYWORDS,
                    illegal: '</',
                    classNameAliases: {
                        "function.dispatch": "built_in"
                    },
                    contains: [].concat(
                        EXPRESSION_CONTEXT,
                        FUNCTION_DECLARATION,
                        FUNCTION_DISPATCH,
                        EXPRESSION_CONTAINS,
                        [
                            PREPROCESSOR,
                            { // containers: ie, `vector <int> rooms (9);`
                                begin: '\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<',
                                end: '>',
                                keywords: CPP_KEYWORDS,
                                contains: [
                                    'self',
                                    CPP_PRIMITIVE_TYPES
                                ]
                            },
                            {
                                begin: hljs.IDENT_RE + '::',
                                keywords: CPP_KEYWORDS
                            },
                            {
                                className: 'class',
                                beginKeywords: 'enum class struct union',
                                end: /[{;:<>=]/,
                                contains: [
                                    {
                                        beginKeywords: "final class struct"
                                    },
                                    hljs.TITLE_MODE
                                ]
                            }
                        ]),
                    exports: {
                        preprocessor: PREPROCESSOR,
                        strings: STRINGS,
                        keywords: CPP_KEYWORDS
                    }
                };
            }

            /*
Language: C-like (deprecated, use C and C++ instead)
Author: Ivan Sagalaev <maniac@softwaremaniacs.org>
Contributors: Evgeny Stepanischev <imbolk@gmail.com>, Zaven Muradyan <megalivoithos@gmail.com>, Roel Deckers <admin@codingcat.nl>, Sam Wu <samsam2310@gmail.com>, Jordi Petit <jordi.petit@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, Google Inc. (David Benjamin) <davidben@google.com>
*/

            /** @type LanguageFn */
            function cLike(hljs) {
                const lang = cPlusPlus(hljs);

                const C_ALIASES = [
                    "c",
                    "h"
                ];

                const CPP_ALIASES = [
                    'cc',
                    'c++',
                    'h++',
                    'hpp',
                    'hh',
                    'hxx',
                    'cxx'
                ];

                lang.disableAutodetect = true;
                lang.aliases = [];
                // support users only loading c-like (legacy)
                if (!hljs.getLanguage("c")) lang.aliases.push(...C_ALIASES);
                if (!hljs.getLanguage("cpp")) lang.aliases.push(...CPP_ALIASES);

                // if c and cpp are loaded after then they will reclaim these
                // aliases for themselves

                return lang;
            }

            module.exports = cLike;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/c.js":
        /*!******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/c.js ***!
  \******************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function optional(re) {
                return concat('(', re, ')?');
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: C
Category: common, system
Website: https://en.wikipedia.org/wiki/C_(programming_language)
*/

            /** @type LanguageFn */
            function c(hljs) {
                // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does
                // not include such support nor can we be sure all the grammars depending
                // on it would desire this behavior
                const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {
                    contains: [
                        {
                            begin: /\\\n/
                        }
                    ]
                });
                const DECLTYPE_AUTO_RE = 'decltype\\(auto\\)';
                const NAMESPACE_RE = '[a-zA-Z_]\\w*::';
                const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';
                const FUNCTION_TYPE_RE = '(' +
                    DECLTYPE_AUTO_RE + '|' +
                    optional(NAMESPACE_RE) +
                    '[a-zA-Z_]\\w*' + optional(TEMPLATE_ARGUMENT_RE) +
                    ')';
                const CPP_PRIMITIVE_TYPES = {
                    className: 'keyword',
                    begin: '\\b[a-z\\d_]*_t\\b'
                };

                // https://en.cppreference.com/w/cpp/language/escape
                // \\ \x \xFF \u2837 \u00323747 \374
                const CHARACTER_ESCAPES = '\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)';
                const STRINGS = {
                    className: 'string',
                    variants: [
                        {
                            begin: '(u8?|U|L)?"',
                            end: '"',
                            illegal: '\\n',
                            contains: [ hljs.BACKSLASH_ESCAPE ]
                        },
                        {
                            begin: '(u8?|U|L)?\'(' + CHARACTER_ESCAPES + "|.)",
                            end: '\'',
                            illegal: '.'
                        },
                        hljs.END_SAME_AS_BEGIN({
                            begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
                            end: /\)([^()\\ ]{0,16})"/
                        })
                    ]
                };

                const NUMBERS = {
                    className: 'number',
                    variants: [
                        {
                            begin: '\\b(0b[01\']+)'
                        },
                        {
                            begin: '(-?)\\b([\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'
                        },
                        {
                            begin: '(-?)(\\b0[xX][a-fA-F0-9\']+|(\\b[\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)([eE][-+]?[\\d\']+)?)'
                        }
                    ],
                    relevance: 0
                };

                const PREPROCESSOR = {
                    className: 'meta',
                    begin: /#\s*[a-z]+\b/,
                    end: /$/,
                    keywords: {
                        'meta-keyword':
                            'if else elif endif define undef warning error line ' +
                            'pragma _Pragma ifdef ifndef include'
                    },
                    contains: [
                        {
                            begin: /\\\n/,
                            relevance: 0
                        },
                        hljs.inherit(STRINGS, {
                            className: 'meta-string'
                        }),
                        {
                            className: 'meta-string',
                            begin: /<.*?>/
                        },
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE
                    ]
                };

                const TITLE_MODE = {
                    className: 'title',
                    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,
                    relevance: 0
                };

                const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\s*\\(';

                const CPP_KEYWORDS = {
                    keyword: 'int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof ' +
                        'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +
                        'unsigned long volatile static protected bool template mutable if public friend ' +
                        'do goto auto void enum else break extern using asm case typeid wchar_t ' +
                        'short reinterpret_cast|10 default double register explicit signed typename try this ' +
                        'switch continue inline delete alignas alignof constexpr consteval constinit decltype ' +
                        'concept co_await co_return co_yield requires ' +
                        'noexcept static_assert thread_local restrict final override ' +
                        'atomic_bool atomic_char atomic_schar ' +
                        'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +
                        'atomic_ullong new throw return ' +
                        'and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq',
                    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +
                        'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set ' +
                        'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos ' +
                        'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +
                        'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +
                        'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +
                        'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +
                        'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +
                        'vfprintf vprintf vsprintf endl initializer_list unique_ptr _Bool complex _Complex imaginary _Imaginary',
                    literal: 'true false nullptr NULL'
                };

                const EXPRESSION_CONTAINS = [
                    PREPROCESSOR,
                    CPP_PRIMITIVE_TYPES,
                    C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    NUMBERS,
                    STRINGS
                ];

                const EXPRESSION_CONTEXT = {
                    // This mode covers expression context where we can't expect a function
                    // definition and shouldn't highlight anything that looks like one:
                    // `return some()`, `else if()`, `(x*sum(1, 2))`
                    variants: [
                        {
                            begin: /=/,
                            end: /;/
                        },
                        {
                            begin: /\(/,
                            end: /\)/
                        },
                        {
                            beginKeywords: 'new throw return else',
                            end: /;/
                        }
                    ],
                    keywords: CPP_KEYWORDS,
                    contains: EXPRESSION_CONTAINS.concat([
                        {
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            contains: EXPRESSION_CONTAINS.concat([ 'self' ]),
                            relevance: 0
                        }
                    ]),
                    relevance: 0
                };

                const FUNCTION_DECLARATION = {
                    className: 'function',
                    begin: '(' + FUNCTION_TYPE_RE + '[\\*&\\s]+)+' + FUNCTION_TITLE,
                    returnBegin: true,
                    end: /[{;=]/,
                    excludeEnd: true,
                    keywords: CPP_KEYWORDS,
                    illegal: /[^\w\s\*&:<>.]/,
                    contains: [
                        { // to prevent it from being confused as the function title
                            begin: DECLTYPE_AUTO_RE,
                            keywords: CPP_KEYWORDS,
                            relevance: 0
                        },
                        {
                            begin: FUNCTION_TITLE,
                            returnBegin: true,
                            contains: [ TITLE_MODE ],
                            relevance: 0
                        },
                        {
                            className: 'params',
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            relevance: 0,
                            contains: [
                                C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE,
                                STRINGS,
                                NUMBERS,
                                CPP_PRIMITIVE_TYPES,
                                // Count matching parentheses.
                                {
                                    begin: /\(/,
                                    end: /\)/,
                                    keywords: CPP_KEYWORDS,
                                    relevance: 0,
                                    contains: [
                                        'self',
                                        C_LINE_COMMENT_MODE,
                                        hljs.C_BLOCK_COMMENT_MODE,
                                        STRINGS,
                                        NUMBERS,
                                        CPP_PRIMITIVE_TYPES
                                    ]
                                }
                            ]
                        },
                        CPP_PRIMITIVE_TYPES,
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        PREPROCESSOR
                    ]
                };

                return {
                    name: "C",
                    aliases: [
                        'h'
                    ],
                    keywords: CPP_KEYWORDS,
                    // Until differentiations are added between `c` and `cpp`, `c` will
                    // not be auto-detected to avoid auto-detect conflicts between C and C++
                    disableAutodetect: true,
                    illegal: '</',
                    contains: [].concat(
                        EXPRESSION_CONTEXT,
                        FUNCTION_DECLARATION,
                        EXPRESSION_CONTAINS,
                        [
                            PREPROCESSOR,
                            { // containers: ie, `vector <int> rooms (9);`
                                begin: '\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<',
                                end: '>',
                                keywords: CPP_KEYWORDS,
                                contains: [
                                    'self',
                                    CPP_PRIMITIVE_TYPES
                                ]
                            },
                            {
                                begin: hljs.IDENT_RE + '::',
                                keywords: CPP_KEYWORDS
                            },
                            {
                                className: 'class',
                                beginKeywords: 'enum class struct union',
                                end: /[{;:<>=]/,
                                contains: [
                                    {
                                        beginKeywords: "final class struct"
                                    },
                                    hljs.TITLE_MODE
                                ]
                            }
                        ]),
                    exports: {
                        preprocessor: PREPROCESSOR,
                        strings: STRINGS,
                        keywords: CPP_KEYWORDS
                    }
                };
            }

            module.exports = c;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/cal.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cal.js ***!
  \********************************************************/
        /***/ ((module) => {

            /*
Language: C/AL
Author: Kenneth Fuglsang Christensen <kfuglsang@gmail.com>
Description: Provides highlighting of Microsoft Dynamics NAV C/AL code files
Website: https://docs.microsoft.com/en-us/dynamics-nav/programming-in-c-al
*/

            /** @type LanguageFn */
            function cal(hljs) {
                const KEYWORDS =
                    'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +
                    'until while with var';
                const LITERALS = 'false true';
                const COMMENT_MODES = [
                    hljs.C_LINE_COMMENT_MODE,
                    hljs.COMMENT(
                        /\{/,
                        /\}/,
                        {
                            relevance: 0
                        }
                    ),
                    hljs.COMMENT(
                        /\(\*/,
                        /\*\)/,
                        {
                            relevance: 10
                        }
                    )
                ];
                const STRING = {
                    className: 'string',
                    begin: /'/,
                    end: /'/,
                    contains: [{
                        begin: /''/
                    }]
                };
                const CHAR_STRING = {
                    className: 'string',
                    begin: /(#\d+)+/
                };
                const DATE = {
                    className: 'number',
                    begin: '\\b\\d+(\\.\\d+)?(DT|D|T)',
                    relevance: 0
                };
                const DBL_QUOTED_VARIABLE = {
                    className: 'string', // not a string technically but makes sense to be highlighted in the same style
                    begin: '"',
                    end: '"'
                };

                const PROCEDURE = {
                    className: 'function',
                    beginKeywords: 'procedure',
                    end: /[:;]/,
                    keywords: 'procedure|10',
                    contains: [
                        hljs.TITLE_MODE,
                        {
                            className: 'params',
                            begin: /\(/,
                            end: /\)/,
                            keywords: KEYWORDS,
                            contains: [
                                STRING,
                                CHAR_STRING
                            ]
                        }
                    ].concat(COMMENT_MODES)
                };

                const OBJECT = {
                    className: 'class',
                    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\d+) ([^\\r\\n]+)',
                    returnBegin: true,
                    contains: [
                        hljs.TITLE_MODE,
                        PROCEDURE
                    ]
                };

                return {
                    name: 'C/AL',
                    case_insensitive: true,
                    keywords: {
                        keyword: KEYWORDS,
                        literal: LITERALS
                    },
                    illegal: /\/\*/,
                    contains: [
                        STRING,
                        CHAR_STRING,
                        DATE,
                        DBL_QUOTED_VARIABLE,
                        hljs.NUMBER_MODE,
                        OBJECT,
                        PROCEDURE
                    ]
                };
            }

            module.exports = cal;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/capnproto.js":
        /*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/capnproto.js ***!
  \**************************************************************/
        /***/ ((module) => {

            /*
Language: Cap’n Proto
Author: Oleg Efimov <efimovov@gmail.com>
Description: Cap’n Proto message definition format
Website: https://capnproto.org/capnp-tool.html
Category: protocols
*/

            /** @type LanguageFn */
            function capnproto(hljs) {
                return {
                    name: 'Cap’n Proto',
                    aliases: ['capnp'],
                    keywords: {
                        keyword:
                            'struct enum interface union group import using const annotation extends in of on as with from fixed',
                        built_in:
                            'Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 ' +
                            'Text Data AnyPointer AnyStruct Capability List',
                        literal:
                            'true false'
                    },
                    contains: [
                        hljs.QUOTE_STRING_MODE,
                        hljs.NUMBER_MODE,
                        hljs.HASH_COMMENT_MODE,
                        {
                            className: 'meta',
                            begin: /@0x[\w\d]{16};/,
                            illegal: /\n/
                        },
                        {
                            className: 'symbol',
                            begin: /@\d+\b/
                        },
                        {
                            className: 'class',
                            beginKeywords: 'struct enum',
                            end: /\{/,
                            illegal: /\n/,
                            contains: [hljs.inherit(hljs.TITLE_MODE, {
                                starts: {
                                    endsWithParent: true,
                                    excludeEnd: true
                                } // hack: eating everything after the first title
                            })]
                        },
                        {
                            className: 'class',
                            beginKeywords: 'interface',
                            end: /\{/,
                            illegal: /\n/,
                            contains: [hljs.inherit(hljs.TITLE_MODE, {
                                starts: {
                                    endsWithParent: true,
                                    excludeEnd: true
                                } // hack: eating everything after the first title
                            })]
                        }
                    ]
                };
            }

            module.exports = capnproto;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/ceylon.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ceylon.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
Language: Ceylon
Author: Lucas Werkmeister <mail@lucaswerkmeister.de>
Website: https://ceylon-lang.org
*/

            /** @type LanguageFn */
            function ceylon(hljs) {
                // 2.3. Identifiers and keywords
                const KEYWORDS =
                    'assembly module package import alias class interface object given value ' +
                    'assign void function new of extends satisfies abstracts in out return ' +
                    'break continue throw assert dynamic if else switch case for while try ' +
                    'catch finally then let this outer super is exists nonempty';
                // 7.4.1 Declaration Modifiers
                const DECLARATION_MODIFIERS =
                    'shared abstract formal default actual variable late native deprecated ' +
                    'final sealed annotation suppressWarnings small';
                // 7.4.2 Documentation
                const DOCUMENTATION =
                    'doc by license see throws tagged';
                const SUBST = {
                    className: 'subst',
                    excludeBegin: true,
                    excludeEnd: true,
                    begin: /``/,
                    end: /``/,
                    keywords: KEYWORDS,
                    relevance: 10
                };
                const EXPRESSIONS = [
                    {
                        // verbatim string
                        className: 'string',
                        begin: '"""',
                        end: '"""',
                        relevance: 10
                    },
                    {
                        // string literal or template
                        className: 'string',
                        begin: '"',
                        end: '"',
                        contains: [SUBST]
                    },
                    {
                        // character literal
                        className: 'string',
                        begin: "'",
                        end: "'"
                    },
                    {
                        // numeric literal
                        className: 'number',
                        begin: '#[0-9a-fA-F_]+|\\$[01_]+|[0-9_]+(?:\\.[0-9_](?:[eE][+-]?\\d+)?)?[kMGTPmunpf]?',
                        relevance: 0
                    }
                ];
                SUBST.contains = EXPRESSIONS;

                return {
                    name: 'Ceylon',
                    keywords: {
                        keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,
                        meta: DOCUMENTATION
                    },
                    illegal: '\\$[^01]|#[^0-9a-fA-F]',
                    contains: [
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.COMMENT('/\\*', '\\*/', {
                            contains: ['self']
                        }),
                        {
                            // compiler annotation
                            className: 'meta',
                            begin: '@[a-z]\\w*(?::"[^"]*")?'
                        }
                    ].concat(EXPRESSIONS)
                };
            }

            module.exports = ceylon;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/clean.js":
        /*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/clean.js ***!
  \**********************************************************/
        /***/ ((module) => {

            /*
Language: Clean
Author: Camil Staps <info@camilstaps.nl>
Category: functional
Website: http://clean.cs.ru.nl
*/

            /** @type LanguageFn */
            function clean(hljs) {
                return {
                    name: 'Clean',
                    aliases: [
                        'icl',
                        'dcl'
                    ],
                    keywords: {
                        keyword:
                            'if let in with where case of class instance otherwise ' +
                            'implementation definition system module from import qualified as ' +
                            'special code inline foreign export ccall stdcall generic derive ' +
                            'infix infixl infixr',
                        built_in:
                            'Int Real Char Bool',
                        literal:
                            'True False'
                    },
                    contains: [
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE,
                        hljs.C_NUMBER_MODE,
                        { // relevance booster
                            begin: '->|<-[|:]?|#!?|>>=|\\{\\||\\|\\}|:==|=:|<>'
                        }
                    ]
                };
            }

            module.exports = clean;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/clojure-repl.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/clojure-repl.js ***!
  \*****************************************************************/
        /***/ ((module) => {

            /*
Language: Clojure REPL
Description: Clojure REPL sessions
Author: Ivan Sagalaev <maniac@softwaremaniacs.org>
Requires: clojure.js
Website: https://clojure.org
Category: lisp
*/

            /** @type LanguageFn */
            function clojureRepl(hljs) {
                return {
                    name: 'Clojure REPL',
                    contains: [
                        {
                            className: 'meta',
                            begin: /^([\w.-]+|\s*#_)?=>/,
                            starts: {
                                end: /$/,
                                subLanguage: 'clojure'
                            }
                        }
                    ]
                };
            }

            module.exports = clojureRepl;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/clojure.js":
        /*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/clojure.js ***!
  \************************************************************/
        /***/ ((module) => {

            /*
Language: Clojure
Description: Clojure syntax (based on lisp.js)
Author: mfornos
Website: https://clojure.org
Category: lisp
*/

            /** @type LanguageFn */
            function clojure(hljs) {
                const SYMBOLSTART = 'a-zA-Z_\\-!.?+*=<>&#\'';
                const SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';
                const globals = 'def defonce defprotocol defstruct defmulti defmethod defn- defn defmacro deftype defrecord';
                const keywords = {
                    $pattern: SYMBOL_RE,
                    'builtin-name':
                    // Clojure keywords
                        globals + ' ' +
                        'cond apply if-not if-let if not not= =|0 <|0 >|0 <=|0 >=|0 ==|0 +|0 /|0 *|0 -|0 rem ' +
                        'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? ' +
                        'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? ' +
                        'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? ' +
                        'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . ' +
                        'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last ' +
                        'drop-while while intern condp case reduced cycle split-at split-with repeat replicate ' +
                        'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext ' +
                        'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends ' +
                        'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler ' +
                        'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter ' +
                        'monitor-exit macroexpand macroexpand-1 for dosync and or ' +
                        'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert ' +
                        'peek pop doto proxy first rest cons cast coll last butlast ' +
                        'sigs reify second ffirst fnext nfirst nnext meta with-meta ns in-ns create-ns import ' +
                        'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! ' +
                        'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger ' +
                        'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline ' +
                        'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking ' +
                        'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! ' +
                        'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! ' +
                        'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty ' +
                        'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list ' +
                        'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer ' +
                        'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate ' +
                        'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta ' +
                        'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'
                };

                const SIMPLE_NUMBER_RE = '[-+]?\\d+(\\.\\d+)?';

                const SYMBOL = {
                    begin: SYMBOL_RE,
                    relevance: 0
                };
                const NUMBER = {
                    className: 'number',
                    begin: SIMPLE_NUMBER_RE,
                    relevance: 0
                };
                const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {
                    illegal: null
                });
                const COMMENT = hljs.COMMENT(
                    ';',
                    '$',
                    {
                        relevance: 0
                    }
                );
                const LITERAL = {
                    className: 'literal',
                    begin: /\b(true|false|nil)\b/
                };
                const COLLECTION = {
                    begin: '[\\[\\{]',
                    end: '[\\]\\}]'
                };
                const HINT = {
                    className: 'comment',
                    begin: '\\^' + SYMBOL_RE
                };
                const HINT_COL = hljs.COMMENT('\\^\\{', '\\}');
                const KEY = {
                    className: 'symbol',
                    begin: '[:]{1,2}' + SYMBOL_RE
                };
                const LIST = {
                    begin: '\\(',
                    end: '\\)'
                };
                const BODY = {
                    endsWithParent: true,
                    relevance: 0
                };
                const NAME = {
                    keywords: keywords,
                    className: 'name',
                    begin: SYMBOL_RE,
                    relevance: 0,
                    starts: BODY
                };
                const DEFAULT_CONTAINS = [
                    LIST,
                    STRING,
                    HINT,
                    HINT_COL,
                    COMMENT,
                    KEY,
                    COLLECTION,
                    NUMBER,
                    LITERAL,
                    SYMBOL
                ];

                const GLOBAL = {
                    beginKeywords: globals,
                    lexemes: SYMBOL_RE,
                    end: '(\\[|#|\\d|"|:|\\{|\\)|\\(|$)',
                    contains: [
                        {
                            className: 'title',
                            begin: SYMBOL_RE,
                            relevance: 0,
                            excludeEnd: true,
                            // we can only have a single title
                            endsParent: true
                        }
                    ].concat(DEFAULT_CONTAINS)
                };

                LIST.contains = [
                    hljs.COMMENT('comment', ''),
                    GLOBAL,
                    NAME,
                    BODY
                ];
                BODY.contains = DEFAULT_CONTAINS;
                COLLECTION.contains = DEFAULT_CONTAINS;
                HINT_COL.contains = [ COLLECTION ];

                return {
                    name: 'Clojure',
                    aliases: [ 'clj' ],
                    illegal: /\S/,
                    contains: [
                        LIST,
                        STRING,
                        HINT,
                        HINT_COL,
                        COMMENT,
                        KEY,
                        COLLECTION,
                        NUMBER,
                        LITERAL
                    ]
                };
            }

            module.exports = clojure;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/cmake.js":
        /*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cmake.js ***!
  \**********************************************************/
        /***/ ((module) => {

            /*
Language: CMake
Description: CMake is an open-source cross-platform system for build automation.
Author: Igor Kalnitsky <igor@kalnitsky.org>
Website: https://cmake.org
*/

            /** @type LanguageFn */
            function cmake(hljs) {
                return {
                    name: 'CMake',
                    aliases: ['cmake.in'],
                    case_insensitive: true,
                    keywords: {
                        keyword:
                        // scripting commands
                            'break cmake_host_system_information cmake_minimum_required cmake_parse_arguments ' +
                            'cmake_policy configure_file continue elseif else endforeach endfunction endif endmacro ' +
                            'endwhile execute_process file find_file find_library find_package find_path ' +
                            'find_program foreach function get_cmake_property get_directory_property ' +
                            'get_filename_component get_property if include include_guard list macro ' +
                            'mark_as_advanced math message option return separate_arguments ' +
                            'set_directory_properties set_property set site_name string unset variable_watch while ' +
                            // project commands
                            'add_compile_definitions add_compile_options add_custom_command add_custom_target ' +
                            'add_definitions add_dependencies add_executable add_library add_link_options ' +
                            'add_subdirectory add_test aux_source_directory build_command create_test_sourcelist ' +
                            'define_property enable_language enable_testing export fltk_wrap_ui ' +
                            'get_source_file_property get_target_property get_test_property include_directories ' +
                            'include_external_msproject include_regular_expression install link_directories ' +
                            'link_libraries load_cache project qt_wrap_cpp qt_wrap_ui remove_definitions ' +
                            'set_source_files_properties set_target_properties set_tests_properties source_group ' +
                            'target_compile_definitions target_compile_features target_compile_options ' +
                            'target_include_directories target_link_directories target_link_libraries ' +
                            'target_link_options target_sources try_compile try_run ' +
                            // CTest commands
                            'ctest_build ctest_configure ctest_coverage ctest_empty_binary_directory ctest_memcheck ' +
                            'ctest_read_custom_files ctest_run_script ctest_sleep ctest_start ctest_submit ' +
                            'ctest_test ctest_update ctest_upload ' +
                            // deprecated commands
                            'build_name exec_program export_library_dependencies install_files install_programs ' +
                            'install_targets load_command make_directory output_required_files remove ' +
                            'subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file ' +
                            'qt5_use_modules qt5_use_package qt5_wrap_cpp ' +
                            // core keywords
                            'on off true false and or not command policy target test exists is_newer_than ' +
                            'is_directory is_symlink is_absolute matches less greater equal less_equal ' +
                            'greater_equal strless strgreater strequal strless_equal strgreater_equal version_less ' +
                            'version_greater version_equal version_less_equal version_greater_equal in_list defined'
                    },
                    contains: [
                        {
                            className: 'variable',
                            begin: /\$\{/,
                            end: /\}/
                        },
                        hljs.HASH_COMMENT_MODE,
                        hljs.QUOTE_STRING_MODE,
                        hljs.NUMBER_MODE
                    ]
                };
            }

            module.exports = cmake;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/coffeescript.js":
        /*!*****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/coffeescript.js ***!
  \*****************************************************************/
        /***/ ((module) => {

            const KEYWORDS = [
                "as", // for exports
                "in",
                "of",
                "if",
                "for",
                "while",
                "finally",
                "var",
                "new",
                "function",
                "do",
                "return",
                "void",
                "else",
                "break",
                "catch",
                "instanceof",
                "with",
                "throw",
                "case",
                "default",
                "try",
                "switch",
                "continue",
                "typeof",
                "delete",
                "let",
                "yield",
                "const",
                "class",
                // JS handles these with a special rule
                // "get",
                // "set",
                "debugger",
                "async",
                "await",
                "static",
                "import",
                "from",
                "export",
                "extends"
            ];
            const LITERALS = [
                "true",
                "false",
                "null",
                "undefined",
                "NaN",
                "Infinity"
            ];

            const TYPES = [
                "Intl",
                "DataView",
                "Number",
                "Math",
                "Date",
                "String",
                "RegExp",
                "Object",
                "Function",
                "Boolean",
                "Error",
                "Symbol",
                "Set",
                "Map",
                "WeakSet",
                "WeakMap",
                "Proxy",
                "Reflect",
                "JSON",
                "Promise",
                "Float64Array",
                "Int16Array",
                "Int32Array",
                "Int8Array",
                "Uint16Array",
                "Uint32Array",
                "Float32Array",
                "Array",
                "Uint8Array",
                "Uint8ClampedArray",
                "ArrayBuffer",
                "BigInt64Array",
                "BigUint64Array",
                "BigInt"
            ];

            const ERROR_TYPES = [
                "EvalError",
                "InternalError",
                "RangeError",
                "ReferenceError",
                "SyntaxError",
                "TypeError",
                "URIError"
            ];

            const BUILT_IN_GLOBALS = [
                "setInterval",
                "setTimeout",
                "clearInterval",
                "clearTimeout",

                "require",
                "exports",

                "eval",
                "isFinite",
                "isNaN",
                "parseFloat",
                "parseInt",
                "decodeURI",
                "decodeURIComponent",
                "encodeURI",
                "encodeURIComponent",
                "escape",
                "unescape"
            ];

            const BUILT_IN_VARIABLES = [
                "arguments",
                "this",
                "super",
                "console",
                "window",
                "document",
                "localStorage",
                "module",
                "global" // Node.js
            ];

            const BUILT_INS = [].concat(
                BUILT_IN_GLOBALS,
                BUILT_IN_VARIABLES,
                TYPES,
                ERROR_TYPES
            );

            /*
Language: CoffeeScript
Author: Dmytrii Nagirniak <dnagir@gmail.com>
Contributors: Oleg Efimov <efimovov@gmail.com>, Cédric Néhémie <cedric.nehemie@gmail.com>
Description: CoffeeScript is a programming language that transcompiles to JavaScript. For info about language see http://coffeescript.org/
Category: common, scripting
Website: https://coffeescript.org
*/

            /** @type LanguageFn */
            function coffeescript(hljs) {
                const COFFEE_BUILT_INS = [
                    'npm',
                    'print'
                ];
                const COFFEE_LITERALS = [
                    'yes',
                    'no',
                    'on',
                    'off'
                ];
                const COFFEE_KEYWORDS = [
                    'then',
                    'unless',
                    'until',
                    'loop',
                    'by',
                    'when',
                    'and',
                    'or',
                    'is',
                    'isnt',
                    'not'
                ];
                const NOT_VALID_KEYWORDS = [
                    "var",
                    "const",
                    "let",
                    "function",
                    "static"
                ];
                const excluding = (list) =>
                    (kw) => !list.includes(kw);
                const KEYWORDS$1 = {
                    keyword: KEYWORDS.concat(COFFEE_KEYWORDS).filter(excluding(NOT_VALID_KEYWORDS)),
                    literal: LITERALS.concat(COFFEE_LITERALS),
                    built_in: BUILT_INS.concat(COFFEE_BUILT_INS)
                };
                const JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';
                const SUBST = {
                    className: 'subst',
                    begin: /#\{/,
                    end: /\}/,
                    keywords: KEYWORDS$1
                };
                const EXPRESSIONS = [
                    hljs.BINARY_NUMBER_MODE,
                    hljs.inherit(hljs.C_NUMBER_MODE, {
                        starts: {
                            end: '(\\s*/)?',
                            relevance: 0
                        }
                    }), // a number tries to eat the following slash to prevent treating it as a regexp
                    {
                        className: 'string',
                        variants: [
                            {
                                begin: /'''/,
                                end: /'''/,
                                contains: [hljs.BACKSLASH_ESCAPE]
                            },
                            {
                                begin: /'/,
                                end: /'/,
                                contains: [hljs.BACKSLASH_ESCAPE]
                            },
                            {
                                begin: /"""/,
                                end: /"""/,
                                contains: [
                                    hljs.BACKSLASH_ESCAPE,
                                    SUBST
                                ]
                            },
                            {
                                begin: /"/,
                                end: /"/,
                                contains: [
                                    hljs.BACKSLASH_ESCAPE,
                                    SUBST
                                ]
                            }
                        ]
                    },
                    {
                        className: 'regexp',
                        variants: [
                            {
                                begin: '///',
                                end: '///',
                                contains: [
                                    SUBST,
                                    hljs.HASH_COMMENT_MODE
                                ]
                            },
                            {
                                begin: '//[gim]{0,3}(?=\\W)',
                                relevance: 0
                            },
                            {
                                // regex can't start with space to parse x / 2 / 3 as two divisions
                                // regex can't start with *, and it supports an "illegal" in the main mode
                                begin: /\/(?![ *]).*?(?![\\]).\/[gim]{0,3}(?=\W)/
                            }
                        ]
                    },
                    {
                        begin: '@' + JS_IDENT_RE // relevance booster
                    },
                    {
                        subLanguage: 'javascript',
                        excludeBegin: true,
                        excludeEnd: true,
                        variants: [
                            {
                                begin: '```',
                                end: '```'
                            },
                            {
                                begin: '`',
                                end: '`'
                            }
                        ]
                    }
                ];
                SUBST.contains = EXPRESSIONS;

                const TITLE = hljs.inherit(hljs.TITLE_MODE, {
                    begin: JS_IDENT_RE
                });
                const POSSIBLE_PARAMS_RE = '(\\(.*\\)\\s*)?\\B[-=]>';
                const PARAMS = {
                    className: 'params',
                    begin: '\\([^\\(]',
                    returnBegin: true,
                    /* We need another contained nameless mode to not have every nested
    pair of parens to be called "params" */
                    contains: [{
                        begin: /\(/,
                        end: /\)/,
                        keywords: KEYWORDS$1,
                        contains: ['self'].concat(EXPRESSIONS)
                    }]
                };

                return {
                    name: 'CoffeeScript',
                    aliases: [
                        'coffee',
                        'cson',
                        'iced'
                    ],
                    keywords: KEYWORDS$1,
                    illegal: /\/\*/,
                    contains: EXPRESSIONS.concat([
                        hljs.COMMENT('###', '###'),
                        hljs.HASH_COMMENT_MODE,
                        {
                            className: 'function',
                            begin: '^\\s*' + JS_IDENT_RE + '\\s*=\\s*' + POSSIBLE_PARAMS_RE,
                            end: '[-=]>',
                            returnBegin: true,
                            contains: [
                                TITLE,
                                PARAMS
                            ]
                        },
                        {
                            // anonymous function start
                            begin: /[:\(,=]\s*/,
                            relevance: 0,
                            contains: [{
                                className: 'function',
                                begin: POSSIBLE_PARAMS_RE,
                                end: '[-=]>',
                                returnBegin: true,
                                contains: [PARAMS]
                            }]
                        },
                        {
                            className: 'class',
                            beginKeywords: 'class',
                            end: '$',
                            illegal: /[:="\[\]]/,
                            contains: [
                                {
                                    beginKeywords: 'extends',
                                    endsWithParent: true,
                                    illegal: /[:="\[\]]/,
                                    contains: [TITLE]
                                },
                                TITLE
                            ]
                        },
                        {
                            begin: JS_IDENT_RE + ':',
                            end: ':',
                            returnBegin: true,
                            returnEnd: true,
                            relevance: 0
                        }
                    ])
                };
            }

            module.exports = coffeescript;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/coq.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/coq.js ***!
  \********************************************************/
        /***/ ((module) => {

            /*
Language: Coq
Author: Stephan Boyer <stephan@stephanboyer.com>
Category: functional
Website: https://coq.inria.fr
*/

            /** @type LanguageFn */
            function coq(hljs) {
                return {
                    name: 'Coq',
                    keywords: {
                        keyword:
                            '_|0 as at cofix else end exists exists2 fix for forall fun if IF in let ' +
                            'match mod Prop return Set then Type using where with ' +
                            'Abort About Add Admit Admitted All Arguments Assumptions Axiom Back BackTo ' +
                            'Backtrack Bind Blacklist Canonical Cd Check Class Classes Close Coercion ' +
                            'Coercions CoFixpoint CoInductive Collection Combined Compute Conjecture ' +
                            'Conjectures Constant constr Constraint Constructors Context Corollary ' +
                            'CreateHintDb Cut Declare Defined Definition Delimit Dependencies Dependent ' +
                            'Derive Drop eauto End Equality Eval Example Existential Existentials ' +
                            'Existing Export exporting Extern Extract Extraction Fact Field Fields File ' +
                            'Fixpoint Focus for From Function Functional Generalizable Global Goal Grab ' +
                            'Grammar Graph Guarded Heap Hint HintDb Hints Hypotheses Hypothesis ident ' +
                            'Identity If Immediate Implicit Import Include Inductive Infix Info Initial ' +
                            'Inline Inspect Instance Instances Intro Intros Inversion Inversion_clear ' +
                            'Language Left Lemma Let Libraries Library Load LoadPath Local Locate Ltac ML ' +
                            'Mode Module Modules Monomorphic Morphism Next NoInline Notation Obligation ' +
                            'Obligations Opaque Open Optimize Options Parameter Parameters Parametric ' +
                            'Path Paths pattern Polymorphic Preterm Print Printing Program Projections ' +
                            'Proof Proposition Pwd Qed Quit Rec Record Recursive Redirect Relation Remark ' +
                            'Remove Require Reserved Reset Resolve Restart Rewrite Right Ring Rings Save ' +
                            'Scheme Scope Scopes Script Search SearchAbout SearchHead SearchPattern ' +
                            'SearchRewrite Section Separate Set Setoid Show Solve Sorted Step Strategies ' +
                            'Strategy Structure SubClass Table Tables Tactic Term Test Theorem Time ' +
                            'Timeout Transparent Type Typeclasses Types Undelimit Undo Unfocus Unfocused ' +
                            'Unfold Universe Universes Unset Unshelve using Variable Variables Variant ' +
                            'Verbose Visibility where with',
                        built_in:
                            'abstract absurd admit after apply as assert assumption at auto autorewrite ' +
                            'autounfold before bottom btauto by case case_eq cbn cbv change ' +
                            'classical_left classical_right clear clearbody cofix compare compute ' +
                            'congruence constr_eq constructor contradict contradiction cut cutrewrite ' +
                            'cycle decide decompose dependent destruct destruction dintuition ' +
                            'discriminate discrR do double dtauto eapply eassumption eauto ecase ' +
                            'econstructor edestruct ediscriminate eelim eexact eexists einduction ' +
                            'einjection eleft elim elimtype enough equality erewrite eright ' +
                            'esimplify_eq esplit evar exact exactly_once exfalso exists f_equal fail ' +
                            'field field_simplify field_simplify_eq first firstorder fix fold fourier ' +
                            'functional generalize generalizing gfail give_up has_evar hnf idtac in ' +
                            'induction injection instantiate intro intro_pattern intros intuition ' +
                            'inversion inversion_clear is_evar is_var lapply lazy left lia lra move ' +
                            'native_compute nia nsatz omega once pattern pose progress proof psatz quote ' +
                            'record red refine reflexivity remember rename repeat replace revert ' +
                            'revgoals rewrite rewrite_strat right ring ring_simplify rtauto set ' +
                            'setoid_reflexivity setoid_replace setoid_rewrite setoid_symmetry ' +
                            'setoid_transitivity shelve shelve_unifiable simpl simple simplify_eq solve ' +
                            'specialize split split_Rabs split_Rmult stepl stepr subst sum swap ' +
                            'symmetry tactic tauto time timeout top transitivity trivial try tryif ' +
                            'unfold unify until using vm_compute with'
                    },
                    contains: [
                        hljs.QUOTE_STRING_MODE,
                        hljs.COMMENT('\\(\\*', '\\*\\)'),
                        hljs.C_NUMBER_MODE,
                        {
                            className: 'type',
                            excludeBegin: true,
                            begin: '\\|\\s*',
                            end: '\\w+'
                        },
                        { // relevance booster
                            begin: /[-=]>/
                        }
                    ]
                };
            }

            module.exports = coq;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/cos.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cos.js ***!
  \********************************************************/
        /***/ ((module) => {

            /*
Language: Caché Object Script
Author: Nikita Savchenko <zitros.lab@gmail.com>
Category: enterprise, scripting
Website: https://cedocs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls
*/

            /** @type LanguageFn */
            function cos(hljs) {
                const STRINGS = {
                    className: 'string',
                    variants: [{
                        begin: '"',
                        end: '"',
                        contains: [{ // escaped
                            begin: "\"\"",
                            relevance: 0
                        }]
                    }]
                };

                const NUMBERS = {
                    className: "number",
                    begin: "\\b(\\d+(\\.\\d*)?|\\.\\d+)",
                    relevance: 0
                };

                const COS_KEYWORDS =
                    'property parameter class classmethod clientmethod extends as break ' +
                    'catch close continue do d|0 else elseif for goto halt hang h|0 if job ' +
                    'j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 ' +
                    'tcommit throw trollback try tstart use view while write w|0 xecute x|0 ' +
                    'zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert ' +
                    'zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit ' +
                    'zsync ascii';

                // registered function - no need in them due to all functions are highlighted,
                // but I'll just leave this here.

                // "$bit", "$bitcount",
                // "$bitfind", "$bitlogic", "$case", "$char", "$classmethod", "$classname",
                // "$compile", "$data", "$decimal", "$double", "$extract", "$factor",
                // "$find", "$fnumber", "$get", "$increment", "$inumber", "$isobject",
                // "$isvaliddouble", "$isvalidnum", "$justify", "$length", "$list",
                // "$listbuild", "$listdata", "$listfind", "$listfromstring", "$listget",
                // "$listlength", "$listnext", "$listsame", "$listtostring", "$listvalid",
                // "$locate", "$match", "$method", "$name", "$nconvert", "$next",
                // "$normalize", "$now", "$number", "$order", "$parameter", "$piece",
                // "$prefetchoff", "$prefetchon", "$property", "$qlength", "$qsubscript",
                // "$query", "$random", "$replace", "$reverse", "$sconvert", "$select",
                // "$sortbegin", "$sortend", "$stack", "$text", "$translate", "$view",
                // "$wascii", "$wchar", "$wextract", "$wfind", "$wiswide", "$wlength",
                // "$wreverse", "$xecute", "$zabs", "$zarccos", "$zarcsin", "$zarctan",
                // "$zcos", "$zcot", "$zcsc", "$zdate", "$zdateh", "$zdatetime",
                // "$zdatetimeh", "$zexp", "$zhex", "$zln", "$zlog", "$zpower", "$zsec",
                // "$zsin", "$zsqr", "$ztan", "$ztime", "$ztimeh", "$zboolean",
                // "$zconvert", "$zcrc", "$zcyc", "$zdascii", "$zdchar", "$zf",
                // "$ziswide", "$zlascii", "$zlchar", "$zname", "$zposition", "$zqascii",
                // "$zqchar", "$zsearch", "$zseek", "$zstrip", "$zwascii", "$zwchar",
                // "$zwidth", "$zwpack", "$zwbpack", "$zwunpack", "$zwbunpack", "$zzenkaku",
                // "$change", "$mv", "$mvat", "$mvfmt", "$mvfmts", "$mviconv",
                // "$mviconvs", "$mvinmat", "$mvlover", "$mvoconv", "$mvoconvs", "$mvraise",
                // "$mvtrans", "$mvv", "$mvname", "$zbitand", "$zbitcount", "$zbitfind",
                // "$zbitget", "$zbitlen", "$zbitnot", "$zbitor", "$zbitset", "$zbitstr",
                // "$zbitxor", "$zincrement", "$znext", "$zorder", "$zprevious", "$zsort",
                // "device", "$ecode", "$estack", "$etrap", "$halt", "$horolog",
                // "$io", "$job", "$key", "$namespace", "$principal", "$quit", "$roles",
                // "$storage", "$system", "$test", "$this", "$tlevel", "$username",
                // "$x", "$y", "$za", "$zb", "$zchild", "$zeof", "$zeos", "$zerror",
                // "$zhorolog", "$zio", "$zjob", "$zmode", "$znspace", "$zparent", "$zpi",
                // "$zpos", "$zreference", "$zstorage", "$ztimestamp", "$ztimezone",
                // "$ztrap", "$zversion"

                return {
                    name: 'Caché Object Script',
                    case_insensitive: true,
                    aliases: [
                        "cls"
                    ],
                    keywords: COS_KEYWORDS,
                    contains: [
                        NUMBERS,
                        STRINGS,
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        {
                            className: "comment",
                            begin: /;/,
                            end: "$",
                            relevance: 0
                        },
                        { // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)
                            className: "built_in",
                            begin: /(?:\$\$?|\.\.)\^?[a-zA-Z]+/
                        },
                        { // Macro command: quit $$$OK
                            className: "built_in",
                            begin: /\$\$\$[a-zA-Z]+/
                        },
                        { // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer
                            className: "built_in",
                            begin: /%[a-z]+(?:\.[a-z]+)*/
                        },
                        { // Global variable: set ^globalName = 12 write ^globalName
                            className: "symbol",
                            begin: /\^%?[a-zA-Z][\w]*/
                        },
                        { // Some control constructions: do ##class(Package.ClassName).Method(), ##super()
                            className: "keyword",
                            begin: /##class|##super|#define|#dim/
                        },
                        // sub-languages: are not fully supported by hljs by 11/15/2015
                        // left for the future implementation.
                        {
                            begin: /&sql\(/,
                            end: /\)/,
                            excludeBegin: true,
                            excludeEnd: true,
                            subLanguage: "sql"
                        },
                        {
                            begin: /&(js|jscript|javascript)</,
                            end: />/,
                            excludeBegin: true,
                            excludeEnd: true,
                            subLanguage: "javascript"
                        },
                        {
                            // this brakes first and last tag, but this is the only way to embed a valid html
                            begin: /&html<\s*</,
                            end: />\s*>/,
                            subLanguage: "xml"
                        }
                    ]
                };
            }

            module.exports = cos;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/cpp.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cpp.js ***!
  \********************************************************/
        /***/ ((module) => {

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function lookahead(re) {
                return concat('(?=', re, ')');
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function optional(re) {
                return concat('(', re, ')?');
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: C++
Category: common, system
Website: https://isocpp.org
*/

            /** @type LanguageFn */
            function cpp(hljs) {
                // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does
                // not include such support nor can we be sure all the grammars depending
                // on it would desire this behavior
                const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {
                    contains: [
                        {
                            begin: /\\\n/
                        }
                    ]
                });
                const DECLTYPE_AUTO_RE = 'decltype\\(auto\\)';
                const NAMESPACE_RE = '[a-zA-Z_]\\w*::';
                const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';
                const FUNCTION_TYPE_RE = '(' +
                    DECLTYPE_AUTO_RE + '|' +
                    optional(NAMESPACE_RE) +
                    '[a-zA-Z_]\\w*' + optional(TEMPLATE_ARGUMENT_RE) +
                    ')';
                const CPP_PRIMITIVE_TYPES = {
                    className: 'keyword',
                    begin: '\\b[a-z\\d_]*_t\\b'
                };

                // https://en.cppreference.com/w/cpp/language/escape
                // \\ \x \xFF \u2837 \u00323747 \374
                const CHARACTER_ESCAPES = '\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)';
                const STRINGS = {
                    className: 'string',
                    variants: [
                        {
                            begin: '(u8?|U|L)?"',
                            end: '"',
                            illegal: '\\n',
                            contains: [ hljs.BACKSLASH_ESCAPE ]
                        },
                        {
                            begin: '(u8?|U|L)?\'(' + CHARACTER_ESCAPES + "|.)",
                            end: '\'',
                            illegal: '.'
                        },
                        hljs.END_SAME_AS_BEGIN({
                            begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
                            end: /\)([^()\\ ]{0,16})"/
                        })
                    ]
                };

                const NUMBERS = {
                    className: 'number',
                    variants: [
                        {
                            begin: '\\b(0b[01\']+)'
                        },
                        {
                            begin: '(-?)\\b([\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'
                        },
                        {
                            begin: '(-?)(\\b0[xX][a-fA-F0-9\']+|(\\b[\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)([eE][-+]?[\\d\']+)?)'
                        }
                    ],
                    relevance: 0
                };

                const PREPROCESSOR = {
                    className: 'meta',
                    begin: /#\s*[a-z]+\b/,
                    end: /$/,
                    keywords: {
                        'meta-keyword':
                            'if else elif endif define undef warning error line ' +
                            'pragma _Pragma ifdef ifndef include'
                    },
                    contains: [
                        {
                            begin: /\\\n/,
                            relevance: 0
                        },
                        hljs.inherit(STRINGS, {
                            className: 'meta-string'
                        }),
                        {
                            className: 'meta-string',
                            begin: /<.*?>/
                        },
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE
                    ]
                };

                const TITLE_MODE = {
                    className: 'title',
                    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,
                    relevance: 0
                };

                const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\s*\\(';

                const COMMON_CPP_HINTS = [
                    'asin',
                    'atan2',
                    'atan',
                    'calloc',
                    'ceil',
                    'cosh',
                    'cos',
                    'exit',
                    'exp',
                    'fabs',
                    'floor',
                    'fmod',
                    'fprintf',
                    'fputs',
                    'free',
                    'frexp',
                    'auto_ptr',
                    'deque',
                    'list',
                    'queue',
                    'stack',
                    'vector',
                    'map',
                    'set',
                    'pair',
                    'bitset',
                    'multiset',
                    'multimap',
                    'unordered_set',
                    'fscanf',
                    'future',
                    'isalnum',
                    'isalpha',
                    'iscntrl',
                    'isdigit',
                    'isgraph',
                    'islower',
                    'isprint',
                    'ispunct',
                    'isspace',
                    'isupper',
                    'isxdigit',
                    'tolower',
                    'toupper',
                    'labs',
                    'ldexp',
                    'log10',
                    'log',
                    'malloc',
                    'realloc',
                    'memchr',
                    'memcmp',
                    'memcpy',
                    'memset',
                    'modf',
                    'pow',
                    'printf',
                    'putchar',
                    'puts',
                    'scanf',
                    'sinh',
                    'sin',
                    'snprintf',
                    'sprintf',
                    'sqrt',
                    'sscanf',
                    'strcat',
                    'strchr',
                    'strcmp',
                    'strcpy',
                    'strcspn',
                    'strlen',
                    'strncat',
                    'strncmp',
                    'strncpy',
                    'strpbrk',
                    'strrchr',
                    'strspn',
                    'strstr',
                    'tanh',
                    'tan',
                    'unordered_map',
                    'unordered_multiset',
                    'unordered_multimap',
                    'priority_queue',
                    'make_pair',
                    'array',
                    'shared_ptr',
                    'abort',
                    'terminate',
                    'abs',
                    'acos',
                    'vfprintf',
                    'vprintf',
                    'vsprintf',
                    'endl',
                    'initializer_list',
                    'unique_ptr',
                    'complex',
                    'imaginary',
                    'std',
                    'string',
                    'wstring',
                    'cin',
                    'cout',
                    'cerr',
                    'clog',
                    'stdin',
                    'stdout',
                    'stderr',
                    'stringstream',
                    'istringstream',
                    'ostringstream'
                ];

                const CPP_KEYWORDS = {
                    keyword: 'int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof ' +
                        'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +
                        'unsigned long volatile static protected bool template mutable if public friend ' +
                        'do goto auto void enum else break extern using asm case typeid wchar_t ' +
                        'short reinterpret_cast|10 default double register explicit signed typename try this ' +
                        'switch continue inline delete alignas alignof constexpr consteval constinit decltype ' +
                        'concept co_await co_return co_yield requires ' +
                        'noexcept static_assert thread_local restrict final override ' +
                        'atomic_bool atomic_char atomic_schar ' +
                        'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +
                        'atomic_ullong new throw return ' +
                        'and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq',
                    built_in: '_Bool _Complex _Imaginary',
                    _relevance_hints: COMMON_CPP_HINTS,
                    literal: 'true false nullptr NULL'
                };

                const FUNCTION_DISPATCH = {
                    className: "function.dispatch",
                    relevance: 0,
                    keywords: CPP_KEYWORDS,
                    begin: concat(
                        /\b/,
                        /(?!decltype)/,
                        /(?!if)/,
                        /(?!for)/,
                        /(?!while)/,
                        hljs.IDENT_RE,
                        lookahead(/\s*\(/))
                };

                const EXPRESSION_CONTAINS = [
                    FUNCTION_DISPATCH,
                    PREPROCESSOR,
                    CPP_PRIMITIVE_TYPES,
                    C_LINE_COMMENT_MODE,
                    hljs.C_BLOCK_COMMENT_MODE,
                    NUMBERS,
                    STRINGS
                ];


                const EXPRESSION_CONTEXT = {
                    // This mode covers expression context where we can't expect a function
                    // definition and shouldn't highlight anything that looks like one:
                    // `return some()`, `else if()`, `(x*sum(1, 2))`
                    variants: [
                        {
                            begin: /=/,
                            end: /;/
                        },
                        {
                            begin: /\(/,
                            end: /\)/
                        },
                        {
                            beginKeywords: 'new throw return else',
                            end: /;/
                        }
                    ],
                    keywords: CPP_KEYWORDS,
                    contains: EXPRESSION_CONTAINS.concat([
                        {
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            contains: EXPRESSION_CONTAINS.concat([ 'self' ]),
                            relevance: 0
                        }
                    ]),
                    relevance: 0
                };

                const FUNCTION_DECLARATION = {
                    className: 'function',
                    begin: '(' + FUNCTION_TYPE_RE + '[\\*&\\s]+)+' + FUNCTION_TITLE,
                    returnBegin: true,
                    end: /[{;=]/,
                    excludeEnd: true,
                    keywords: CPP_KEYWORDS,
                    illegal: /[^\w\s\*&:<>.]/,
                    contains: [
                        { // to prevent it from being confused as the function title
                            begin: DECLTYPE_AUTO_RE,
                            keywords: CPP_KEYWORDS,
                            relevance: 0
                        },
                        {
                            begin: FUNCTION_TITLE,
                            returnBegin: true,
                            contains: [ TITLE_MODE ],
                            relevance: 0
                        },
                        // needed because we do not have look-behind on the below rule
                        // to prevent it from grabbing the final : in a :: pair
                        {
                            begin: /::/,
                            relevance: 0
                        },
                        // initializers
                        {
                            begin: /:/,
                            endsWithParent: true,
                            contains: [
                                STRINGS,
                                NUMBERS
                            ]
                        },
                        {
                            className: 'params',
                            begin: /\(/,
                            end: /\)/,
                            keywords: CPP_KEYWORDS,
                            relevance: 0,
                            contains: [
                                C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE,
                                STRINGS,
                                NUMBERS,
                                CPP_PRIMITIVE_TYPES,
                                // Count matching parentheses.
                                {
                                    begin: /\(/,
                                    end: /\)/,
                                    keywords: CPP_KEYWORDS,
                                    relevance: 0,
                                    contains: [
                                        'self',
                                        C_LINE_COMMENT_MODE,
                                        hljs.C_BLOCK_COMMENT_MODE,
                                        STRINGS,
                                        NUMBERS,
                                        CPP_PRIMITIVE_TYPES
                                    ]
                                }
                            ]
                        },
                        CPP_PRIMITIVE_TYPES,
                        C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        PREPROCESSOR
                    ]
                };

                return {
                    name: 'C++',
                    aliases: [
                        'cc',
                        'c++',
                        'h++',
                        'hpp',
                        'hh',
                        'hxx',
                        'cxx'
                    ],
                    keywords: CPP_KEYWORDS,
                    illegal: '</',
                    classNameAliases: {
                        "function.dispatch": "built_in"
                    },
                    contains: [].concat(
                        EXPRESSION_CONTEXT,
                        FUNCTION_DECLARATION,
                        FUNCTION_DISPATCH,
                        EXPRESSION_CONTAINS,
                        [
                            PREPROCESSOR,
                            { // containers: ie, `vector <int> rooms (9);`
                                begin: '\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<',
                                end: '>',
                                keywords: CPP_KEYWORDS,
                                contains: [
                                    'self',
                                    CPP_PRIMITIVE_TYPES
                                ]
                            },
                            {
                                begin: hljs.IDENT_RE + '::',
                                keywords: CPP_KEYWORDS
                            },
                            {
                                className: 'class',
                                beginKeywords: 'enum class struct union',
                                end: /[{;:<>=]/,
                                contains: [
                                    {
                                        beginKeywords: "final class struct"
                                    },
                                    hljs.TITLE_MODE
                                ]
                            }
                        ]),
                    exports: {
                        preprocessor: PREPROCESSOR,
                        strings: STRINGS,
                        keywords: CPP_KEYWORDS
                    }
                };
            }

            module.exports = cpp;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/crmsh.js":
        /*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/crmsh.js ***!
  \**********************************************************/
        /***/ ((module) => {

            /*
Language: crmsh
Author: Kristoffer Gronlund <kgronlund@suse.com>
Website: http://crmsh.github.io
Description: Syntax Highlighting for the crmsh DSL
Category: config
*/

            /** @type LanguageFn */
            function crmsh(hljs) {
                const RESOURCES = 'primitive rsc_template';
                const COMMANDS = 'group clone ms master location colocation order fencing_topology ' +
                    'rsc_ticket acl_target acl_group user role ' +
                    'tag xml';
                const PROPERTY_SETS = 'property rsc_defaults op_defaults';
                const KEYWORDS = 'params meta operations op rule attributes utilization';
                const OPERATORS = 'read write deny defined not_defined in_range date spec in ' +
                    'ref reference attribute type xpath version and or lt gt tag ' +
                    'lte gte eq ne \\';
                const TYPES = 'number string';
                const LITERALS = 'Master Started Slave Stopped start promote demote stop monitor true false';

                return {
                    name: 'crmsh',
                    aliases: [
                        'crm',
                        'pcmk'
                    ],
                    case_insensitive: true,
                    keywords: {
                        keyword: KEYWORDS + ' ' + OPERATORS + ' ' + TYPES,
                        literal: LITERALS
                    },
                    contains: [
                        hljs.HASH_COMMENT_MODE,
                        {
                            beginKeywords: 'node',
                            starts: {
                                end: '\\s*([\\w_-]+:)?',
                                starts: {
                                    className: 'title',
                                    end: '\\s*[\\$\\w_][\\w_-]*'
                                }
                            }
                        },
                        {
                            beginKeywords: RESOURCES,
                            starts: {
                                className: 'title',
                                end: '\\s*[\\$\\w_][\\w_-]*',
                                starts: {
                                    end: '\\s*@?[\\w_][\\w_\\.:-]*'
                                }
                            }
                        },
                        {
                            begin: '\\b(' + COMMANDS.split(' ').join('|') + ')\\s+',
                            keywords: COMMANDS,
                            starts: {
                                className: 'title',
                                end: '[\\$\\w_][\\w_-]*'
                            }
                        },
                        {
                            beginKeywords: PROPERTY_SETS,
                            starts: {
                                className: 'title',
                                end: '\\s*([\\w_-]+:)?'
                            }
                        },
                        hljs.QUOTE_STRING_MODE,
                        {
                            className: 'meta',
                            begin: '(ocf|systemd|service|lsb):[\\w_:-]+',
                            relevance: 0
                        },
                        {
                            className: 'number',
                            begin: '\\b\\d+(\\.\\d+)?(ms|s|h|m)?',
                            relevance: 0
                        },
                        {
                            className: 'literal',
                            begin: '[-]?(infinity|inf)',
                            relevance: 0
                        },
                        {
                            className: 'attr',
                            begin: /([A-Za-z$_#][\w_-]+)=/,
                            relevance: 0
                        },
                        {
                            className: 'tag',
                            begin: '</?',
                            end: '/?>',
                            relevance: 0
                        }
                    ]
                };
            }

            module.exports = crmsh;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/crystal.js":
        /*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/crystal.js ***!
  \************************************************************/
        /***/ ((module) => {

            /*
Language: Crystal
Author: TSUYUSATO Kitsune <make.just.on@gmail.com>
Website: https://crystal-lang.org
*/

            /** @type LanguageFn */
            function crystal(hljs) {
                const INT_SUFFIX = '(_?[ui](8|16|32|64|128))?';
                const FLOAT_SUFFIX = '(_?f(32|64))?';
                const CRYSTAL_IDENT_RE = '[a-zA-Z_]\\w*[!?=]?';
                const CRYSTAL_METHOD_RE = '[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\*\\*|\\[\\][=?]?';
                const CRYSTAL_PATH_RE = '[A-Za-z_]\\w*(::\\w+)*(\\?|!)?';
                const CRYSTAL_KEYWORDS = {
                    $pattern: CRYSTAL_IDENT_RE,
                    keyword:
                        'abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' +
                        'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' +
                        'return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield ' +
                        '__DIR__ __END_LINE__ __FILE__ __LINE__',
                    literal: 'false nil true'
                };
                const SUBST = {
                    className: 'subst',
                    begin: /#\{/,
                    end: /\}/,
                    keywords: CRYSTAL_KEYWORDS
                };
                const EXPANSION = {
                    className: 'template-variable',
                    variants: [
                        {
                            begin: '\\{\\{',
                            end: '\\}\\}'
                        },
                        {
                            begin: '\\{%',
                            end: '%\\}'
                        }
                    ],
                    keywords: CRYSTAL_KEYWORDS
                };

                function recursiveParen(begin, end) {
                    const
                        contains = [
                            {
                                begin: begin,
                                end: end
                            }
                        ];
                    contains[0].contains = contains;
                    return contains;
                }
                const STRING = {
                    className: 'string',
                    contains: [
                        hljs.BACKSLASH_ESCAPE,
                        SUBST
                    ],
                    variants: [
                        {
                            begin: /'/,
                            end: /'/
                        },
                        {
                            begin: /"/,
                            end: /"/
                        },
                        {
                            begin: /`/,
                            end: /`/
                        },
                        {
                            begin: '%[Qwi]?\\(',
                            end: '\\)',
                            contains: recursiveParen('\\(', '\\)')
                        },
                        {
                            begin: '%[Qwi]?\\[',
                            end: '\\]',
                            contains: recursiveParen('\\[', '\\]')
                        },
                        {
                            begin: '%[Qwi]?\\{',
                            end: /\}/,
                            contains: recursiveParen(/\{/, /\}/)
                        },
                        {
                            begin: '%[Qwi]?<',
                            end: '>',
                            contains: recursiveParen('<', '>')
                        },
                        {
                            begin: '%[Qwi]?\\|',
                            end: '\\|'
                        },
                        {
                            begin: /<<-\w+$/,
                            end: /^\s*\w+$/
                        }
                    ],
                    relevance: 0
                };
                const Q_STRING = {
                    className: 'string',
                    variants: [
                        {
                            begin: '%q\\(',
                            end: '\\)',
                            contains: recursiveParen('\\(', '\\)')
                        },
                        {
                            begin: '%q\\[',
                            end: '\\]',
                            contains: recursiveParen('\\[', '\\]')
                        },
                        {
                            begin: '%q\\{',
                            end: /\}/,
                            contains: recursiveParen(/\{/, /\}/)
                        },
                        {
                            begin: '%q<',
                            end: '>',
                            contains: recursiveParen('<', '>')
                        },
                        {
                            begin: '%q\\|',
                            end: '\\|'
                        },
                        {
                            begin: /<<-'\w+'$/,
                            end: /^\s*\w+$/
                        }
                    ],
                    relevance: 0
                };
                const REGEXP = {
                    begin: '(?!%\\})(' + hljs.RE_STARTERS_RE + '|\\n|\\b(case|if|select|unless|until|when|while)\\b)\\s*',
                    keywords: 'case if select unless until when while',
                    contains: [
                        {
                            className: 'regexp',
                            contains: [
                                hljs.BACKSLASH_ESCAPE,
                                SUBST
                            ],
                            variants: [
                                {
                                    begin: '//[a-z]*',
                                    relevance: 0
                                },
                                {
                                    begin: '/(?!\\/)',
                                    end: '/[a-z]*'
                                }
                            ]
                        }
                    ],
                    relevance: 0
                };
                const REGEXP2 = {
                    className: 'regexp',
                    contains: [
                        hljs.BACKSLASH_ESCAPE,
                        SUBST
                    ],
                    variants: [
                        {
                            begin: '%r\\(',
                            end: '\\)',
                            contains: recursiveParen('\\(', '\\)')
                        },
                        {
                            begin: '%r\\[',
                            end: '\\]',
                            contains: recursiveParen('\\[', '\\]')
                        },
                        {
                            begin: '%r\\{',
                            end: /\}/,
                            contains: recursiveParen(/\{/, /\}/)
                        },
                        {
                            begin: '%r<',
                            end: '>',
                            contains: recursiveParen('<', '>')
                        },
                        {
                            begin: '%r\\|',
                            end: '\\|'
                        }
                    ],
                    relevance: 0
                };
                const ATTRIBUTE = {
                    className: 'meta',
                    begin: '@\\[',
                    end: '\\]',
                    contains: [
                        hljs.inherit(hljs.QUOTE_STRING_MODE, {
                            className: 'meta-string'
                        })
                    ]
                };
                const CRYSTAL_DEFAULT_CONTAINS = [
                    EXPANSION,
                    STRING,
                    Q_STRING,
                    REGEXP2,
                    REGEXP,
                    ATTRIBUTE,
                    hljs.HASH_COMMENT_MODE,
                    {
                        className: 'class',
                        beginKeywords: 'class module struct',
                        end: '$|;',
                        illegal: /=/,
                        contains: [
                            hljs.HASH_COMMENT_MODE,
                            hljs.inherit(hljs.TITLE_MODE, {
                                begin: CRYSTAL_PATH_RE
                            }),
                            { // relevance booster for inheritance
                                begin: '<'
                            }
                        ]
                    },
                    {
                        className: 'class',
                        beginKeywords: 'lib enum union',
                        end: '$|;',
                        illegal: /=/,
                        contains: [
                            hljs.HASH_COMMENT_MODE,
                            hljs.inherit(hljs.TITLE_MODE, {
                                begin: CRYSTAL_PATH_RE
                            })
                        ]
                    },
                    {
                        beginKeywords: 'annotation',
                        end: '$|;',
                        illegal: /=/,
                        contains: [
                            hljs.HASH_COMMENT_MODE,
                            hljs.inherit(hljs.TITLE_MODE, {
                                begin: CRYSTAL_PATH_RE
                            })
                        ],
                        relevance: 2
                    },
                    {
                        className: 'function',
                        beginKeywords: 'def',
                        end: /\B\b/,
                        contains: [
                            hljs.inherit(hljs.TITLE_MODE, {
                                begin: CRYSTAL_METHOD_RE,
                                endsParent: true
                            })
                        ]
                    },
                    {
                        className: 'function',
                        beginKeywords: 'fun macro',
                        end: /\B\b/,
                        contains: [
                            hljs.inherit(hljs.TITLE_MODE, {
                                begin: CRYSTAL_METHOD_RE,
                                endsParent: true
                            })
                        ],
                        relevance: 2
                    },
                    {
                        className: 'symbol',
                        begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\?)?:',
                        relevance: 0
                    },
                    {
                        className: 'symbol',
                        begin: ':',
                        contains: [
                            STRING,
                            {
                                begin: CRYSTAL_METHOD_RE
                            }
                        ],
                        relevance: 0
                    },
                    {
                        className: 'number',
                        variants: [
                            {
                                begin: '\\b0b([01_]+)' + INT_SUFFIX
                            },
                            {
                                begin: '\\b0o([0-7_]+)' + INT_SUFFIX
                            },
                            {
                                begin: '\\b0x([A-Fa-f0-9_]+)' + INT_SUFFIX
                            },
                            {
                                begin: '\\b([1-9][0-9_]*[0-9]|[0-9])(\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?' + FLOAT_SUFFIX + '(?!_)'
                            },
                            {
                                begin: '\\b([1-9][0-9_]*|0)' + INT_SUFFIX
                            }
                        ],
                        relevance: 0
                    }
                ];
                SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;
                EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION

                return {
                    name: 'Crystal',
                    aliases: [ 'cr' ],
                    keywords: CRYSTAL_KEYWORDS,
                    contains: CRYSTAL_DEFAULT_CONTAINS
                };
            }

            module.exports = crystal;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/csharp.js":
        /*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/csharp.js ***!
  \***********************************************************/
        /***/ ((module) => {

            /*
Language: C#
Author: Jason Diamond <jason@diamond.name>
Contributor: Nicolas LLOBERA <nllobera@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, David Pine <david.pine@microsoft.com>
Website: https://docs.microsoft.com/en-us/dotnet/csharp/
Category: common
*/

            /** @type LanguageFn */
            function csharp(hljs) {
                const BUILT_IN_KEYWORDS = [
                    'bool',
                    'byte',
                    'char',
                    'decimal',
                    'delegate',
                    'double',
                    'dynamic',
                    'enum',
                    'float',
                    'int',
                    'long',
                    'nint',
                    'nuint',
                    'object',
                    'sbyte',
                    'short',
                    'string',
                    'ulong',
                    'uint',
                    'ushort'
                ];
                const FUNCTION_MODIFIERS = [
                    'public',
                    'private',
                    'protected',
                    'static',
                    'internal',
                    'protected',
                    'abstract',
                    'async',
                    'extern',
                    'override',
                    'unsafe',
                    'virtual',
                    'new',
                    'sealed',
                    'partial'
                ];
                const LITERAL_KEYWORDS = [
                    'default',
                    'false',
                    'null',
                    'true'
                ];
                const NORMAL_KEYWORDS = [
                    'abstract',
                    'as',
                    'base',
                    'break',
                    'case',
                    'class',
                    'const',
                    'continue',
                    'do',
                    'else',
                    'event',
                    'explicit',
                    'extern',
                    'finally',
                    'fixed',
                    'for',
                    'foreach',
                    'goto',
                    'if',
                    'implicit',
                    'in',
                    'interface',
                    'internal',
                    'is',
                    'lock',
                    'namespace',
                    'new',
                    'operator',
                    'out',
                    'override',
                    'params',
                    'private',
                    'protected',
                    'public',
                    'readonly',
                    'record',
                    'ref',
                    'return',
                    'sealed',
                    'sizeof',
                    'stackalloc',
                    'static',
                    'struct',
                    'switch',
                    'this',
                    'throw',
                    'try',
                    'typeof',
                    'unchecked',
                    'unsafe',
                    'using',
                    'virtual',
                    'void',
                    'volatile',
                    'while'
                ];
                const CONTEXTUAL_KEYWORDS = [
                    'add',
                    'alias',
                    'and',
                    'ascending',
                    'async',
                    'await',
                    'by',
                    'descending',
                    'equals',
                    'from',
                    'get',
                    'global',
                    'group',
                    'init',
                    'into',
                    'join',
                    'let',
                    'nameof',
                    'not',
                    'notnull',
                    'on',
                    'or',
                    'orderby',
                    'partial',
                    'remove',
                    'select',
                    'set',
                    'unmanaged',
                    'value|0',
                    'var',
                    'when',
                    'where',
                    'with',
                    'yield'
                ];

                const KEYWORDS = {
                    keyword: NORMAL_KEYWORDS.concat(CONTEXTUAL_KEYWORDS),
                    built_in: BUILT_IN_KEYWORDS,
                    literal: LITERAL_KEYWORDS
                };
                const TITLE_MODE = hljs.inherit(hljs.TITLE_MODE, {
                    begin: '[a-zA-Z](\\.?\\w)*'
                });
                const NUMBERS = {
                    className: 'number',
                    variants: [
                        {
                            begin: '\\b(0b[01\']+)'
                        },
                        {
                            begin: '(-?)\\b([\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)(u|U|l|L|ul|UL|f|F|b|B)'
                        },
                        {
                            begin: '(-?)(\\b0[xX][a-fA-F0-9\']+|(\\b[\\d\']+(\\.[\\d\']*)?|\\.[\\d\']+)([eE][-+]?[\\d\']+)?)'
                        }
                    ],
                    relevance: 0
                };
                const VERBATIM_STRING = {
                    className: 'string',
                    begin: '@"',
                    end: '"',
                    contains: [
                        {
                            begin: '""'
                        }
                    ]
                };
                const VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, {
                    illegal: /\n/
                });
                const SUBST = {
                    className: 'subst',
                    begin: /\{/,
                    end: /\}/,
                    keywords: KEYWORDS
                };
                const SUBST_NO_LF = hljs.inherit(SUBST, {
                    illegal: /\n/
                });
                const INTERPOLATED_STRING = {
                    className: 'string',
                    begin: /\$"/,
                    end: '"',
                    illegal: /\n/,
                    contains: [
                        {
                            begin: /\{\{/
                        },
                        {
                            begin: /\}\}/
                        },
                        hljs.BACKSLASH_ESCAPE,
                        SUBST_NO_LF
                    ]
                };
                const INTERPOLATED_VERBATIM_STRING = {
                    className: 'string',
                    begin: /\$@"/,
                    end: '"',
                    contains: [
                        {
                            begin: /\{\{/
                        },
                        {
                            begin: /\}\}/
                        },
                        {
                            begin: '""'
                        },
                        SUBST
                    ]
                };
                const INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {
                    illegal: /\n/,
                    contains: [
                        {
                            begin: /\{\{/
                        },
                        {
                            begin: /\}\}/
                        },
                        {
                            begin: '""'
                        },
                        SUBST_NO_LF
                    ]
                });
                SUBST.contains = [
                    INTERPOLATED_VERBATIM_STRING,
                    INTERPOLATED_STRING,
                    VERBATIM_STRING,
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    NUMBERS,
                    hljs.C_BLOCK_COMMENT_MODE
                ];
                SUBST_NO_LF.contains = [
                    INTERPOLATED_VERBATIM_STRING_NO_LF,
                    INTERPOLATED_STRING,
                    VERBATIM_STRING_NO_LF,
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE,
                    NUMBERS,
                    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, {
                        illegal: /\n/
                    })
                ];
                const STRING = {
                    variants: [
                        INTERPOLATED_VERBATIM_STRING,
                        INTERPOLATED_STRING,
                        VERBATIM_STRING,
                        hljs.APOS_STRING_MODE,
                        hljs.QUOTE_STRING_MODE
                    ]
                };

                const GENERIC_MODIFIER = {
                    begin: "<",
                    end: ">",
                    contains: [
                        {
                            beginKeywords: "in out"
                        },
                        TITLE_MODE
                    ]
                };
                const TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\s*,\\s*' + hljs.IDENT_RE + ')*>)?(\\[\\])?';
                const AT_IDENTIFIER = {
                    // prevents expressions like `@class` from incorrect flagging
                    // `class` as a keyword
                    begin: "@" + hljs.IDENT_RE,
                    relevance: 0
                };

                return {
                    name: 'C#',
                    aliases: [
                        'cs',
                        'c#'
                    ],
                    keywords: KEYWORDS,
                    illegal: /::/,
                    contains: [
                        hljs.COMMENT(
                            '///',
                            '$',
                            {
                                returnBegin: true,
                                contains: [
                                    {
                                        className: 'doctag',
                                        variants: [
                                            {
                                                begin: '///',
                                                relevance: 0
                                            },
                                            {
                                                begin: '<!--|-->'
                                            },
                                            {
                                                begin: '</?',
                                                end: '>'
                                            }
                                        ]
                                    }
                                ]
                            }
                        ),
                        hljs.C_LINE_COMMENT_MODE,
                        hljs.C_BLOCK_COMMENT_MODE,
                        {
                            className: 'meta',
                            begin: '#',
                            end: '$',
                            keywords: {
                                'meta-keyword': 'if else elif endif define undef warning error line region endregion pragma checksum'
                            }
                        },
                        STRING,
                        NUMBERS,
                        {
                            beginKeywords: 'class interface',
                            relevance: 0,
                            end: /[{;=]/,
                            illegal: /[^\s:,]/,
                            contains: [
                                {
                                    beginKeywords: "where class"
                                },
                                TITLE_MODE,
                                GENERIC_MODIFIER,
                                hljs.C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE
                            ]
                        },
                        {
                            beginKeywords: 'namespace',
                            relevance: 0,
                            end: /[{;=]/,
                            illegal: /[^\s:]/,
                            contains: [
                                TITLE_MODE,
                                hljs.C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE
                            ]
                        },
                        {
                            beginKeywords: 'record',
                            relevance: 0,
                            end: /[{;=]/,
                            illegal: /[^\s:]/,
                            contains: [
                                TITLE_MODE,
                                GENERIC_MODIFIER,
                                hljs.C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE
                            ]
                        },
                        {
                            // [Attributes("")]
                            className: 'meta',
                            begin: '^\\s*\\[',
                            excludeBegin: true,
                            end: '\\]',
                            excludeEnd: true,
                            contains: [
                                {
                                    className: 'meta-string',
                                    begin: /"/,
                                    end: /"/
                                }
                            ]
                        },
                        {
                            // Expression keywords prevent 'keyword Name(...)' from being
                            // recognized as a function definition
                            beginKeywords: 'new return throw await else',
                            relevance: 0
                        },
                        {
                            className: 'function',
                            begin: '(' + TYPE_IDENT_RE + '\\s+)+' + hljs.IDENT_RE + '\\s*(<.+>\\s*)?\\(',
                            returnBegin: true,
                            end: /\s*[{;=]/,
                            excludeEnd: true,
                            keywords: KEYWORDS,
                            contains: [
                                // prevents these from being highlighted `title`
                                {
                                    beginKeywords: FUNCTION_MODIFIERS.join(" "),
                                    relevance: 0
                                },
                                {
                                    begin: hljs.IDENT_RE + '\\s*(<.+>\\s*)?\\(',
                                    returnBegin: true,
                                    contains: [
                                        hljs.TITLE_MODE,
                                        GENERIC_MODIFIER
                                    ],
                                    relevance: 0
                                },
                                {
                                    className: 'params',
                                    begin: /\(/,
                                    end: /\)/,
                                    excludeBegin: true,
                                    excludeEnd: true,
                                    keywords: KEYWORDS,
                                    relevance: 0,
                                    contains: [
                                        STRING,
                                        NUMBERS,
                                        hljs.C_BLOCK_COMMENT_MODE
                                    ]
                                },
                                hljs.C_LINE_COMMENT_MODE,
                                hljs.C_BLOCK_COMMENT_MODE
                            ]
                        },
                        AT_IDENTIFIER
                    ]
                };
            }

            module.exports = csharp;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/csp.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/csp.js ***!
  \********************************************************/
        /***/ ((module) => {

            /*
Language: CSP
Description: Content Security Policy definition highlighting
Author: Taras <oxdef@oxdef.info>
Website: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP

vim: ts=2 sw=2 st=2
*/

            /** @type LanguageFn */
            function csp(hljs) {
                return {
                    name: 'CSP',
                    case_insensitive: false,
                    keywords: {
                        $pattern: '[a-zA-Z][a-zA-Z0-9_-]*',
                        keyword: 'base-uri child-src connect-src default-src font-src form-action ' +
                            'frame-ancestors frame-src img-src media-src object-src plugin-types ' +
                            'report-uri sandbox script-src style-src'
                    },
                    contains: [
                        {
                            className: 'string',
                            begin: "'",
                            end: "'"
                        },
                        {
                            className: 'attribute',
                            begin: '^Content',
                            end: ':',
                            excludeEnd: true
                        }
                    ]
                };
            }

            module.exports = csp;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/css.js":
        /*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/css.js ***!
  \********************************************************/
        /***/ ((module) => {

            const MODES = (hljs) => {
                return {
                    IMPORTANT: {
                        className: 'meta',
                        begin: '!important'
                    },
                    HEXCOLOR: {
                        className: 'number',
                        begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})'
                    },
                    ATTRIBUTE_SELECTOR_MODE: {
                        className: 'selector-attr',
                        begin: /\[/,
                        end: /\]/,
                        illegal: '$',
                        contains: [
                            hljs.APOS_STRING_MODE,
                            hljs.QUOTE_STRING_MODE
                        ]
                    }
                };
            };

            const TAGS = [
                'a',
                'abbr',
                'address',
                'article',
                'aside',
                'audio',
                'b',
                'blockquote',
                'body',
                'button',
                'canvas',
                'caption',
                'cite',
                'code',
                'dd',
                'del',
                'details',
                'dfn',
                'div',
                'dl',
                'dt',
                'em',
                'fieldset',
                'figcaption',
                'figure',
                'footer',
                'form',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'header',
                'hgroup',
                'html',
                'i',
                'iframe',
                'img',
                'input',
                'ins',
                'kbd',
                'label',
                'legend',
                'li',
                'main',
                'mark',
                'menu',
                'nav',
                'object',
                'ol',
                'p',
                'q',
                'quote',
                'samp',
                'section',
                'span',
                'strong',
                'summary',
                'sup',
                'table',
                'tbody',
                'td',
                'textarea',
                'tfoot',
                'th',
                'thead',
                'time',
                'tr',
                'ul',
                'var',
                'video'
            ];

            const MEDIA_FEATURES = [
                'any-hover',
                'any-pointer',
                'aspect-ratio',
                'color',
                'color-gamut',
                'color-index',
                'device-aspect-ratio',
                'device-height',
                'device-width',
                'display-mode',
                'forced-colors',
                'grid',
                'height',
                'hover',
                'inverted-colors',
                'monochrome',
                'orientation',
                'overflow-block',
                'overflow-inline',
                'pointer',
                'prefers-color-scheme',
                'prefers-contrast',
                'prefers-reduced-motion',
                'prefers-reduced-transparency',
                'resolution',
                'scan',
                'scripting',
                'update',
                'width',
                // TODO: find a better solution?
                'min-width',
                'max-width',
                'min-height',
                'max-height'
            ];

// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes
            const PSEUDO_CLASSES = [
                'active',
                'any-link',
                'blank',
                'checked',
                'current',
                'default',
                'defined',
                'dir', // dir()
                'disabled',
                'drop',
                'empty',
                'enabled',
                'first',
                'first-child',
                'first-of-type',
                'fullscreen',
                'future',
                'focus',
                'focus-visible',
                'focus-within',
                'has', // has()
                'host', // host or host()
                'host-context', // host-context()
                'hover',
                'indeterminate',
                'in-range',
                'invalid',
                'is', // is()
                'lang', // lang()
                'last-child',
                'last-of-type',
                'left',
                'link',
                'local-link',
                'not', // not()
                'nth-child', // nth-child()
                'nth-col', // nth-col()
                'nth-last-child', // nth-last-child()
                'nth-last-col', // nth-last-col()
                'nth-last-of-type', //nth-last-of-type()
                'nth-of-type', //nth-of-type()
                'only-child',
                'only-of-type',
                'optional',
                'out-of-range',
                'past',
                'placeholder-shown',
                'read-only',
                'read-write',
                'required',
                'right',
                'root',
                'scope',
                'target',
                'target-within',
                'user-invalid',
                'valid',
                'visited',
                'where' // where()
            ];

// https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements
            const PSEUDO_ELEMENTS = [
                'after',
                'backdrop',
                'before',
                'cue',
                'cue-region',
                'first-letter',
                'first-line',
                'grammar-error',
                'marker',
                'part',
                'placeholder',
                'selection',
                'slotted',
                'spelling-error'
            ];

            const ATTRIBUTES = [
                'align-content',
                'align-items',
                'align-self',
                'animation',
                'animation-delay',
                'animation-direction',
                'animation-duration',
                'animation-fill-mode',
                'animation-iteration-count',
                'animation-name',
                'animation-play-state',
                'animation-timing-function',
                'auto',
                'backface-visibility',
                'background',
                'background-attachment',
                'background-clip',
                'background-color',
                'background-image',
                'background-origin',
                'background-position',
                'background-repeat',
                'background-size',
                'border',
                'border-bottom',
                'border-bottom-color',
                'border-bottom-left-radius',
                'border-bottom-right-radius',
                'border-bottom-style',
                'border-bottom-width',
                'border-collapse',
                'border-color',
                'border-image',
                'border-image-outset',
                'border-image-repeat',
                'border-image-slice',
                'border-image-source',
                'border-image-width',
                'border-left',
                'border-left-color',
                'border-left-style',
                'border-left-width',
                'border-radius',
                'border-right',
                'border-right-color',
                'border-right-style',
                'border-right-width',
                'border-spacing',
                'border-style',
                'border-top',
                'border-top-color',
                'border-top-left-radius',
                'border-top-right-radius',
                'border-top-style',
                'border-top-width',
                'border-width',
                'bottom',
                'box-decoration-break',
                'box-shadow',
                'box-sizing',
                'break-after',
                'break-before',
                'break-inside',
                'caption-side',
                'clear',
                'clip',
                'clip-path',
                'color',
                'column-count',
                'column-fill',
                'column-gap',
                'column-rule',
                'column-rule-color',
                'column-rule-style',
                'column-rule-width',
                'column-span',
                'column-width',
                'columns',
                'content',
                'counter-increment',
                'counter-reset',
                'cursor',
                'direction',
                'display',
                'empty-cells',
                'filter',
                'flex',
                'flex-basis',
                'flex-direction',
                'flex-flow',
                'flex-grow',
                'flex-shrink',
                'flex-wrap',
                'float',
                'font',
                'font-display',
                'font-family',
                'font-feature-settings',
                'font-kerning',
                'font-language-override',
                'font-size',
                'font-size-adjust',
                'font-smoothing',
                'font-stretch',
                'font-style',
                'font-variant',
                'font-variant-ligatures',
                'font-variation-settings',
                'font-weight',
                'height',
                'hyphens',
                'icon',
                'image-orientation',
                'image-rendering',
                'image-resolution',
                'ime-mode',
                'inherit',
                'initial',
                'justify-content',
                'left',
                'letter-spacing',
                'line-height',
                'list-style',
                'list-style-image',
                'list-style-position',
                'list-style-type',
                'margin',
                'margin-bottom',
                'margin-left',
                'margin-right',
                'margin-top',
                'marks',
                'mask',
                'max-height',
                'max-width',
                'min-height',
                'min-width',
                'nav-down',
                'nav-index',
                'nav-left',
                'nav-right',
                'nav-up',
                'none',
                'normal',
                'object-fit',
                'object-position',
                'opacity',
                'order',
                'orphans',
                'outline',
                'outline-color',
                'outline-offset',
                'outline-style',
                'outline-width',
                'overflow',
                'overflow-wrap',
                'overflow-x',
                'overflow-y',
                'padding',
                'padding-bottom',
                'padding-left',
                'padding-right',
                'padding-top',
                'page-break-after',
                'page-break-before',
                'page-break-inside',
                'perspective',
                'perspective-origin',
                'pointer-events',
                'position',
                'quotes',
                'resize',
                'right',
                'src', // @font-face
                'tab-size',
                'table-layout',
                'text-align',
                'text-align-last',
                'text-decoration',
                'text-decoration-color',
                'text-decoration-line',
                'text-decoration-style',
                'text-indent',
                'text-overflow',
                'text-rendering',
                'text-shadow',
                'text-transform',
                'text-underline-position',
                'top',
                'transform',
                'transform-origin',
                'transform-style',
                'transition',
                'transition-delay',
                'transition-duration',
                'transition-property',
                'transition-timing-function',
                'unicode-bidi',
                'vertical-align',
                'visibility',
                'white-space',
                'widows',
                'width',
                'word-break',
                'word-spacing',
                'word-wrap',
                'z-index'
                // reverse makes sure longer attributes `font-weight` are matched fully
                // instead of getting false positives on say `font`
            ].reverse();

            /**
             * @param {string} value
             * @returns {RegExp}
             * */

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function source(re) {
                if (!re) return null;
                if (typeof re === "string") return re;

                return re.source;
            }

            /**
             * @param {RegExp | string } re
             * @returns {string}
             */
            function lookahead(re) {
                return concat('(?=', re, ')');
            }

            /**
             * @param {...(RegExp | string) } args
             * @returns {string}
             */
            function concat(...args) {
                const joined = args.map((x) => source(x)).join("");
                return joined;
            }

            /*
Language: CSS
Category: common, css
Website: https://developer.mozilla.org/en-US/docs/Web/CSS
*/

            /** @type LanguageFn */
            function css(hljs) {
                const modes = MODES(hljs);
                const FUNCTION_DISPATCH = {
                    className: "built_in",
                    begin: /[\w-]+(?=\()/
                };
                const VENDOR_PREFIX = {
                    begin: /-(webkit|moz|ms|o)-(?=[a-z])/
                };
                const AT_MODIFIERS = "and or not only";
                const AT_PROPERTY_RE = /@-?\w[\w]*(-\w+)*/; // @-webkit-keyframes
                const IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';
                const STRINGS = [
                    hljs.APOS_STRING_MODE,
                    hljs.QUOTE_STRING_MODE
                ];

                return {
                    name: 'CSS',
                    case_insensitive: true,
                    illegal: /[=|'\$]/,
                    keywords: {
                        keyframePosition: "from to"
                    },
                    classNameAliases: {
                        // for visual continuity with `tag {}` and because we
                        // don't have a great class for this?
                        keyframePosition: "selector-tag"
                    },
                    contains: [
                        hljs.C_BLOCK_COMMENT_MODE,
                        VENDOR_PREFIX,
                        // to recognize keyframe 40% etc which are outside the scope of our
                        // attribute value mode
                        hljs.CSS_NUMBER_MODE,
                        {
                            className: 'selector-id',
                            begin: /#[A-Za-z0-9_-]+/,
                            relevance: 0
                        },
                        {
                            className: 'selector-class',
                            begin: '\\.' + IDENT_RE,
                            relevance: 0
                        },
                        modes.ATTRIBUTE_SELECTOR_MODE,
                        {
                            className: 'selector-pseudo',
                            variants: [
                                {
                                    begin: ':(' + PSEUDO_CLASSES.join('|') + ')'
                                },
                                {
                                    begin: '::(' + PSEUDO_ELEMENTS.join('|') + ')'
                                }
                            ]
                        },
                        // we may actually need this (12/2020)
                        // { // pseudo-selector params
                        //   begin: /\(/,
                        //   end: /\)/,
                        //   contains: [ hljs.CSS_NUMBER_MODE ]
                        // },
                        {
                            className: 'attribute',
                            begin: '\\b(' + ATTRIBUTES.join('|') + ')\\b'
                        },
                        // attribute values
                        {
                            begin: ':',
                            end: '[;}]',
                            contains: [
                                modes.HEXCOLOR,
                                modes.IMPORTANT,
                                hljs.CSS_NUMBER_MODE,
                                ...STRINGS,
                                // needed to highlight these as strings and to avoid issues with
                                // illegal characters that might be inside urls that would tigger the
                                // languages illegal stack
                                {
                                    begin: /(url|data-uri)\(/,
                                    end: /\)/,
                                    relevance: 0, // from keywords
                                    keywords: {
                                        built_in: "url data-uri"
                                    },
                                    contains: [
                                        {
                                            className: "string",
                                            // any character other than `)` as in `url()` will be the start
                                            // of a string, which ends with `)` (from the parent mode)
                                            begin: /[^)]/,
                                            endsWithParent: true,
                                            excludeEnd: true
                                        }
                                    ]
                                },
                                FUNCTION_DISPATCH
                            ]
                        },
                        {
                            begin: lookahead(/@/),
                            end: '[{;]',
                            relevance: 0,
                            illegal: /:/, // break on Less variables @var: ...
                            contains: [
                                {
                                    className: 'keyword',
                                    begin: AT_PROPERTY_RE
                                },
                                {
                                    begin: /\s/,
                                    endsWithParent: true,
                                    excludeEnd: true,
                                    relevance: 0,
                                    keywords: {
                                        $pattern: /[a-z-]+/,
                                        keyword: AT_MODIFIERS,
                                        attribute: MEDIA_FEATURES.join(" ")
                                    },
                                    contains: [
                                        {
                                            begin: /[a-z-]+(?=:)/,
                                            className: "attribute"
                                        },
                                        ...STRINGS,
                                        hljs.CSS_NUMBER_MODE
                                    ]
                                }
                            ]
                        },
                        {
                            className: 'selector-tag',
                            begin: '\\b(' + TAGS.join('|') + ')\\b'
                        }
                    ]
                };
            }

            module.exports = css;


            /***/ }),

        /***/ "./node_modules/highlight.js/lib/languages/d.js":
        /*!******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/d.js ***!
  \******************************************************/
        /***/ ((module) => {

            /*
Language: D
Author: Aleksandar Ruzicic <aleksandar@ruzicic.info>
Description: D is a language with C-like syntax and static typing. It pragmatically combines efficiency, control, and modeling power, with safety and programmer productivity.
Version: 1.0a
Website: https://dlang.org
Date: 2012-04-08
*/

            /**
             * Known issues:
             *
             * - invalid hex string literals will be recognized as a double quoted strings
             *   but 'x' at the beginning of string will not be matched
             *
             * - delimited string literals are not checked for matching end delimiter
             *   (not possible to do with js regexp)
             *
             * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)
             *   also, content of token string is not validated to contain only valid D tokens
             *
             * - special token sequence rule is not strictly following D grammar (anything following #line
             *   up to the end of line is matched as special token sequence)
             */

            /** @type LanguageFn */
            function d(hljs) {
                /**
                 * Language keywords
                 *
                 * @type {Object}
                 */
                const D_KEYWORDS = {
                    $pattern: hljs.UNDERSCORE_IDENT_RE,
                    keyword:
                        'abstract alias align asm assert auto body break byte case cast catch class ' +
                        'const continue debug default delete deprecated do else enum export extern final ' +
                        'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' +
                        'interface invariant is lazy macro mixin module new nothrow out override package ' +
                        'pragma private protected public pure ref return scope shared static struct ' +
                        'super switch synchronized template this throw try typedef typeid typeof union ' +
                        'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' +
                        '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',
                    built_in:
                        'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' +
                        'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' +
                        'wstring',
                    literal:
                        'false null true'
                };

                /**
                 * Number literal regexps
                 *
                 * @type {String}
                 */
                const decimal_integer_re = '(0|[1-9][\\d_]*)';
                const decimal_integer_nosus_re = '(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)';
                const binary_integer_re = '0[bB][01_]+';
                const hexadecimal_digits_re = '([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)';
                const hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re;

                const decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')';
                const decimal_float_re = '(' + decimal_integer_nosus_re + '(\\.\\d*|' + decimal_exponent_re + ')|' +
                    '\\d+\\.' + decimal_integer_nosus_re + '|' +
                    '\\.' + decimal_integer_re + decimal_exponent_re + '?' +
                    ')';
                const hexadecimal_float_re = '(0[xX](' +
                    hexadecimal_digits_re + '\\.' + hexadecimal_digits_re + '|' +
                    '\\.?' + hexadecimal_digits_re +
                    ')[pP][+-]?' + decimal_integer_nosus_re + ')';

                const integer_re = '('
